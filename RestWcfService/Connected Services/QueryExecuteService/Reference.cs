//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestWcfService.QueryExecuteService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QueryExecuteService.IQueryExecuteService")]
    public interface IQueryExecuteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetText", ReplyAction="http://tempuri.org/IQueryExecuteService/GetTextResponse")]
        string GetText(string TextId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetText", ReplyAction="http://tempuri.org/IQueryExecuteService/GetTextResponse")]
        System.Threading.Tasks.Task<string> GetTextAsync(string TextId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetUserToken", ReplyAction="http://tempuri.org/IQueryExecuteService/GetUserTokenResponse")]
        string GetUserToken(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetUserToken", ReplyAction="http://tempuri.org/IQueryExecuteService/GetUserTokenResponse")]
        System.Threading.Tasks.Task<string> GetUserTokenAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/GetAttrValueResponse")]
        string GetAttrValue(string attrName, string entityId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/GetAttrValueResponse")]
        System.Threading.Tasks.Task<string> GetAttrValueAsync(string attrName, string entityId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/SetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/SetAttrValueResponse")]
        string SetAttrValue(string attr_name, string entity_id, string attr_value, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/SetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/SetAttrValueResponse")]
        System.Threading.Tasks.Task<string> SetAttrValueAsync(string attr_name, string entity_id, string attr_value, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQueryExecuteServiceChannel : RestWcfService.QueryExecuteService.IQueryExecuteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryExecuteServiceClient : System.ServiceModel.ClientBase<RestWcfService.QueryExecuteService.IQueryExecuteService>, RestWcfService.QueryExecuteService.IQueryExecuteService {
        
        public QueryExecuteServiceClient() {
        }
        
        public QueryExecuteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueryExecuteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryExecuteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryExecuteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetText(string TextId, string token) {
            return base.Channel.GetText(TextId, token);
        }
        
        public System.Threading.Tasks.Task<string> GetTextAsync(string TextId, string token) {
            return base.Channel.GetTextAsync(TextId, token);
        }
        
        public string GetUserToken(string name, string password) {
            return base.Channel.GetUserToken(name, password);
        }
        
        public System.Threading.Tasks.Task<string> GetUserTokenAsync(string name, string password) {
            return base.Channel.GetUserTokenAsync(name, password);
        }
        
        public string GetAttrValue(string attrName, string entityId, string userToken) {
            return base.Channel.GetAttrValue(attrName, entityId, userToken);
        }
        
        public System.Threading.Tasks.Task<string> GetAttrValueAsync(string attrName, string entityId, string userToken) {
            return base.Channel.GetAttrValueAsync(attrName, entityId, userToken);
        }
        
        public string SetAttrValue(string attr_name, string entity_id, string attr_value, string token) {
            return base.Channel.SetAttrValue(attr_name, entity_id, attr_value, token);
        }
        
        public System.Threading.Tasks.Task<string> SetAttrValueAsync(string attr_name, string entity_id, string attr_value, string token) {
            return base.Channel.SetAttrValueAsync(attr_name, entity_id, attr_value, token);
        }
    }
}
