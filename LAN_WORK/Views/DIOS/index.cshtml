@using System.Web.Optimization;

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta charset="utf-8" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    @Styles.Render("https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css")
    @Styles.Render("~/guriddo/css/trirand/ui.jqgrid-bootstrap.css")
    @Styles.Render("~/jqwidgets/styles/jqx.base.css")
    @Styles.Render("~/Content/jquery-ui.css")
    

</head>
<body onload="InitModuleTree();">

    @Scripts.Render("~/dist/main_layout.js")
    <script>
        function InitModuleTree() {
            $('#jqxLayout').jqxDockingLayout({ width: $(document).width(), height: $(document).outerHeight(true), layout: layout });
            $('#jqxLayout').on('dock', function (event) {
                console.log(event.args);
                event.args.item.items.forEach(function (it, i) {
                    it.selected = i == event.args.item.items.length - 1;
                });
                $('#jqxLayout').jqxDockingLayout('render');
            });
            $('#jqxLayout').on('floatGroupClosed', function (event) {
                var args = event.args;
                element = args.element; // the jqxWindow that represents the float group
                floatGroup = args.floatGroup; // the layout object of the float group
                var class_name = floatGroup.items[0].title;
                loadedClasses[class_name].destroy();
                loadedClasses[class_name] = null;
            });
        }

        function initBrowser(className) {
            var exDiv = document.getElementById('f_spl' + className);
            if (exDiv)
                exDiv.parentNode.removeChild(exDiv);
            $('#jqxLayout').jqxDockingLayout('addFloatGroup', 1000, 800, { x: 500, y: 200 }, 'layoutPanel', className, '<div id="f_spl' + className + '"><div id="filterForm' + className + '" class="f-form"></div><div><div id="d_spl' + className + '"><div id="' + className + 'Browser"></div><div id="editForm' + className + '" class="f-form"></div></div></div></div>', function () {
                $('#' + className + 'Browser').clientObj(className);
            });
            $('#f_spl' + className).jqxSplitter({ width: '100%', height: '100%', orientation: 'horizontal', splitBarSize: 1, panels: [{ size: 100, min: 60 }, { size: 800, min: 200 }] });
            $('#d_spl' + className).jqxSplitter({ width: '100%', height: '100%', orientation: 'horizontal', splitBarSize: 1, panels: [{ size: 450, min: 100, collapsible: false }, { min: 100, collapsible: true }] });
            dockPanel(className);
        }


        //////////////////////////////////////////////////////////////////////////////////////////////////////////  helpers  /////////////////////////////////////////////////////////////////////
        function splitterDemo() {
            $('#jqxLayout').jqxDockingLayout('addFloatGroup', 300, 200, { x: 500, y: 200 }, 'layoutPanel', 'Server Explorer', '<div id="mainSplitter"><div></div><div><div id="contentSplitter"><div></div><div></div></div></div></div>');
            $('#mainSplitter').jqxSplitter({ width: 850, height: 800, orientation: 'horizontal', panels: [{ size: 200, min: 100 }, { size: 600, min: 200 }] });
            $('#contentSplitter').jqxSplitter({ width: '100%', height: '100%', orientation: 'horizontal', panels: [{ size: 500, min: 100, collapsible: false }, { size: 100, min: 100, collapsible: true }] });
        }

        function dockPanel(moduleName) {
            var result = false;
            var floatWindow = null;
            var mainLayout = $('#jqxLayout').jqxDockingLayout('layout');
            for (i = 1; i < mainLayout.length; i++) {
                var flgroup = mainLayout[i];
                if (flgroup.items[0].title == moduleName) {
                    floatWindow = flgroup.widget;
                    mainLayout.splice(i, 1);
                    flgroup.type = 'tabbedGroup';
                    delete flgroup.items[0].content;
                    delete flgroup.items[0].initContent;
                    flgroup.items[0].detachedContent = [$('#f_spl' + moduleName)];
                    //flgroup.items[0].docked = true;
                    flgroup.items[0].prevent = true;
                    mainLayout[0].items[1].items.push(flgroup.items[0]);
                    result = true;
                    break;
                }
            }
            if (result)
                showPanel(moduleName);
            //$('#jqxLayout').jqxDockingLayout('render');
            if (floatWindow)
                floatWindow.remove();
            return result;
        }


        function showPanel(moduleName) {
            var result = false;
            var mainLayout = $('#jqxLayout').jqxDockingLayout('layout');
            for (i = 0; i < mainLayout.length; i++) {
                var lgroup = mainLayout[i];
                lgroup.items.forEach(function (item) {
                    function processItem(it) {
                        if (it.type == 'layoutPanel') {
                            if (it.selected)
                                it.selected = false;
                            if (it.title == moduleName) {
                                it.selected = true;
                                result = true;
                            }
                        }
                        if (it.items) {
                            it.items.forEach(function (item) {
                                processItem(item);
                            });
                        }
                    }
                    processItem(item);
                });
            }
            if (result)
                $('#jqxLayout').jqxDockingLayout('render');
            return result;
        }

    </script>



    <style>
        .f-form {
            background: #e8e8e8;
            width: 600px;
            height: 100%;
        }
    </style>

    <div  style="position:absolute;top:0px;left:0px">
        <div id="jqxLayout">
            <div data-container="ModulesTree">
                <div id="modulesTree" style="border: none;">
                </div>
            </div>
            <div data-container="HelpPanel">
                <div id="helpText" style="position:absolute;left:60px;top:100px; "></div>

                <!--button onclick="var moduleName = prompt('module name?');dockPanel(moduleName)">dock panel</button>
            <button onclick="alert(objFilter.GetFilter())">Get filter</button>
            <input type="button" id="saveState" value="Save State" />
            <input type="button" id="loadState" value="Load State" />
            <button onclick="splitterDemo()">Add float panel</button>
            <button onclick="var L = $('#jqxLayout').jqxDockingLayout('saveLayout'); console.log(L);">See layout</button>
            <button onclick="showPanel('MODULE')">show panel</button>
            <button onclick="alert(GlId());">get ID</button>

            <div style="margin-top: 20px" id="jqxlistbox"></div-->

            </div>
        </div>
    </div>

    <div style="position:absolute;top:5px;right:200px">
        <a href="/Home/Index">Home</a>
    </div>

    <div id="window" style="display:none">
        <div>
            jqxEditor
        </div>
        <div>
            <div id="editor"></div>
            <div>
                <input type="button" id="ok" value="OK" style="margin-right: 10px" />
                <input type="button" id="cancel" value="Cancel" />
            </div>
        </div>
    </div>


    @section Scripts {
        @Scripts.Render("~/dist/util.js")
        @Scripts.Render("~/dist/vue.js")
        @Scripts.Render("~/dist/jstree.js")
        @Scripts.Render("~/dist/lantree.js")
        @Scripts.Render("~/dist/vue_filter.js")
        @Scripts.Render("~/dist/vue_edit.js")
        @Scripts.Render("~/dist/vue_obj.js")
        @Scripts.Render("~/jqwidgets/jqxcore.js")
        @Scripts.Render("~/jqwidgets/jqxribbon.js")
        @Scripts.Render("~/jqwidgets/jqxlayout.js")
        @Scripts.Render("~/jqwidgets/jqxdockinglayout.js")
        @Scripts.Render("~/jqwidgets/jqxdata.js")
        @Scripts.Render("~/jqwidgets/jqxbuttons.js")
        @Scripts.Render("~/jqwidgets/jqxscrollbar.js")
        @Scripts.Render("~/jqwidgets/jqxlistbox.js")
        @Scripts.Render("~/jqwidgets/jqxdropdownlist.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.pager.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.edit.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.selection.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.columnsresize.js")
        @Scripts.Render("~/jqwidgets/jqxmenu.js")
        @Scripts.Render("~/scripts/demos.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.sort.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.filter.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.storage.js")
        @Scripts.Render("~/jqwidgets/jqxgrid.columnsreorder.js")
        @Scripts.Render("~/jqwidgets/jqxpanel.js")
        @Scripts.Render("~/jqwidgets/jqxcheckbox.js")
        @Scripts.Render("~/jqwidgets/jqxwindow.js")
        @Scripts.Render("~/jqwidgets/jqxscrollbar.js")
        @Scripts.Render("~/jqwidgets/jqxsplitter.js")
        @Scripts.Render("~/jqwidgets/jqxeditor.js")
        @*@Scripts.Render("~/jqwidgets/jqxtree.js")*@
        @Scripts.Render("~/jqwidgets/jqxtextarea.js")

    }

</body>
</html>