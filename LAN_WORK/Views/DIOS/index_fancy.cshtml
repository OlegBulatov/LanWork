@using System.Web.Optimization;
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta charset="utf-8" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    @*<link rel="stylesheet" type="text/css" href="app-cshtml5/libs/cshtml5.css?2019681146" />
    <link rel="stylesheet" type="text/css" href="app-cshtml5/libs/flatpickr.css" />
    <script type="application/javascript" src="app-cshtml5/libs/cshtml5.js?2019681146"></script>
    <script type="application/javascript" src="app-cshtml5/libs/fastclick.js"></script>
    <script type="application/javascript" src="app-cshtml5/libs/getStackTrace.js"></script>
    <script type="application/javascript" src="app-cshtml5/libs/velocity.js"></script>
    <script type="application/javascript" src="app-cshtml5/libs/flatpickr.js"></script>
    <script type="application/javascript">jsilConfig["libraryRoot"] = "app-cshtml5/libs/";</script>
    <script type="application/javascript">jsilConfig["manifests"] = ["app-cshtml5/app/index"];</script>
    <script type="application/javascript" src="app-cshtml5/libs/JSIL.js?2019681146"></script>
    <script type="application/javascript" src="app-cshtml5\res\GridOrganizer\app.config.g.js"></script>*@
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>

</head>
<body onload="InitModuleTree()">
    <script>

        function InitModuleTree() {
            var $tree = $('#dersa');

            $tree.jstree({
                'core': {
                    "check_callback": true,
                    'data': {
                        'multiple': false,
                        "url": "/demotree.json",
                        "dataType": "json",
                        "data": function (node) {
                            return { "id": node.id };
                        }
                    }
                },
                'plugins': ["state", "contextmenu"]
            });

            $tree.on("changed.jstree", function (e, data) {
                if (data.selected.length) {
                    selected = data.instance.get_node(data.selected[0]);
                    console.log(selected);
                    var p = document.getElementById('pict');
                    if (selected.data) {
                        $('#presenter').show();
                        $('#loader').hide();
                        p.src = selected.data.src;
                        p.style = selected.data.style;
                    }
                    else {
                        p.src = "";
                        if (selected.children.length) {
                            $('#presenter').show();
                            $('#loader').hide();
                        }
                        else {
                            clearImage();
                            $('#presenter').hide();
                            $('#loader').show();
                        }
                    }
                }
            });
        }

    </script>


    <!-- Note: "onLoad" is defined in "JSIL.Browser.js" -->
    <div id="dersa" style="position:absolute;left:0px;overflow-x:hidden"></div>

    <script src="/fancygrid/fancy.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', "/Object/List?class_name=MODULE&limit=50&offset=0", false);
            xhr.send();
            var resp = JSON.parse(xhr.responseText);
            var data = JSON.parse(resp.response_body);
            var grid = new FancyGrid({
                title: 'Modules',
                renderTo: 'grid',
                width: 500,
                height: 500,
                data: data,
                selModel: 'row',
                trackOver: true,
                defaults: {
                    type: 'string',
                    width: 100,
                    sortable: true,
                    resizable: true,
                    editable: true,
                    vtype: 'notempty',
                    ellipsis: true
                },
                events: [{
                    cellclick: function (grid, o) {
                        form.set(o.data);
                    }
                }],
                columns: [{
                    index: 'module',
                    width: 40,
                    type: 'number',
                    filter: false
                }, {
                    index: 'title',
                    width: 120,
                    title: 'Name',
                }, {
                    title: 'type',
                    index: 'form_type_name',
                    width: 300
                }]
            });


            var form = new FancyForm({
                renderTo: 'form',
                title: 'Module Data',
                width: 290,
                height: 500,
                defaults: {
                    type: 'string'
                },
                items: [{
                    name: 'module',
                    type: 'hidden'
                }, {
                    label: 'Name',
                    emptyText: 'Name',
                    name: 'title'
                }],
                buttons: ['side', {
                    text: 'Clear',
                    handler: function () {
                        form.clear();
                    }
                }, {
                        text: 'Save',
                        handler: function () {
                            var values = form.get();

                            if (!values.id) {
                                return;
                            }

                            grid.getById(values.id).set(values);
                            grid.update();
                        }
                    }]
            });

        });


    </script>


    <div style="position:relative;height: 500px;">
        <div id="grid" style="position:absolute; left: 300px; width: 500px;"></div>
        <div id="form" style="position:absolute; left: 800px; margin-left: 10px;"></div>
    </div>

    @*<div id="presenter" style="position:absolute;left:300px;top:0px;overflow-x:hidden">
            <img id="pict" src="">
        </div>
        <div id="loader" style="position:absolute;left:300px;top:0px;overflow-x:hidden;display:none">
            <button id="bnSave" onclick='saveImage()' style="display:none">Save</button>
            <button id="bnClear" onclick='clearImage()' style="display:none">Clear</button>
            <button id="bnLeft" onclick="imageToLeft()" style="display:none">&lt;</button>
            <button id="bnRight" onclick="imageToRight()" style="display:none">&gt;</button>
            <br>
            <div id="paste_catcher" contenteditable="" style="display:none"></div>
            <img id="pasted_pict" src="" style="margin-top:100px">
        </div>

        <script>
            var pasteCatcher = document.getElementById("paste_catcher");

            document.addEventListener("click", function () { pasteCatcher.focus(); });
            window.addEventListener("paste", pasteHandler);

            function pasteHandler(e) {
                $('#bnSave').show();
                $('#bnClear').show();
                $('#bnLeft').show();
                $('#bnRight').show();
                if (e.clipboardData) {
                    var items = e.clipboardData.items;
                    if (items) {
                        for (var i = 0; i < items.length; i++) {
                            if (items[i].type.indexOf("text") !== -1) {
                                pasteCatcher.innerHTML = items[i].getAsString();
                            }
                            else if (items[i].type.indexOf("image") !== -1) {
                                var blob = items[i].getAsFile();

                                var URLObj = window.URL || window.webkitURL;
                                var source = URLObj.createObjectURL(blob);
                                var pp = document.getElementById('pasted_pict');
                                pp.src = source;
                            }
                        }
                    }
                }
            }

            function clearImage() {
                var pp = document.getElementById('pasted_pict');
                pp.src = "";
            }

            var pictMarginLeft = 0;

            function imageToLeft() {
                var pp = document.getElementById('pasted_pict');
                pictMarginLeft -= 10;
                pp.style.marginLeft = pictMarginLeft + 'px';
            }

            function imageToRight() {
                var pp = document.getElementById('pasted_pict');
                pictMarginLeft += 10;
                pp.style.marginLeft = pictMarginLeft + 'px';
            }

            //function createImage(source) {
            //    var pastedImage = new Image();
            //    pastedImage.onload = function () {
            //        document.body.appendChild(pastedImage);
            //    }
            //    pastedImage.src = source;
            //}

            function saveImage() {
                var pp = document.getElementById('pasted_pict');
                var instance = $("#dersa").jstree(true);
                sel = instance.get_selected()[0];
                var dataObj = new Object();
                dataObj.src = pp.src;
                dataObj.style = "margin-top:100px;margin-left:" + pictMarginLeft + "px;";
                instance.get_node(sel).data = dataObj;
                pp.src = "";
            }

        </script>*@

    @section Scripts {
        @Scripts.Render("~/dist/jstree.js")
        @Scripts.Render("~/dist/lantree.js")
    }

</body>
</html>