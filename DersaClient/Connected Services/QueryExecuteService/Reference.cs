//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DersaClientService.QueryExecuteService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QueryExecuteService.IQueryExecuteService")]
    public interface IQueryExecuteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetText", ReplyAction="http://tempuri.org/IQueryExecuteService/GetTextResponse")]
        string GetText(string textId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetText", ReplyAction="http://tempuri.org/IQueryExecuteService/GetTextResponse")]
        System.Threading.Tasks.Task<string> GetTextAsync(string textId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetUserToken", ReplyAction="http://tempuri.org/IQueryExecuteService/GetUserTokenResponse")]
        string GetUserToken(string userLogin, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetUserToken", ReplyAction="http://tempuri.org/IQueryExecuteService/GetUserTokenResponse")]
        System.Threading.Tasks.Task<string> GetUserTokenAsync(string userLogin, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/GetAttrValueResponse")]
        string GetAttrValue(string attrName, string entityId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/GetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/GetAttrValueResponse")]
        System.Threading.Tasks.Task<string> GetAttrValueAsync(string attrName, string entityId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/SetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/SetAttrValueResponse")]
        string SetAttrValue(string attrName, string entityId, string attrValue, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/SetAttrValue", ReplyAction="http://tempuri.org/IQueryExecuteService/SetAttrValueResponse")]
        System.Threading.Tasks.Task<string> SetAttrValueAsync(string attrName, string entityId, string attrValue, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/SendResponse", ReplyAction="http://tempuri.org/IQueryExecuteService/SendResponseResponse")]
        void SendResponse(string userLogin, string responseText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryExecuteService/SendResponse", ReplyAction="http://tempuri.org/IQueryExecuteService/SendResponseResponse")]
        System.Threading.Tasks.Task SendResponseAsync(string userLogin, string responseText);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQueryExecuteServiceChannel : DersaClientService.QueryExecuteService.IQueryExecuteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryExecuteServiceClient : System.ServiceModel.ClientBase<DersaClientService.QueryExecuteService.IQueryExecuteService>, DersaClientService.QueryExecuteService.IQueryExecuteService {
        
        public QueryExecuteServiceClient() {
        }
        
        public QueryExecuteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueryExecuteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryExecuteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryExecuteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetText(string textId, string userToken) {
            return base.Channel.GetText(textId, userToken);
        }
        
        public System.Threading.Tasks.Task<string> GetTextAsync(string textId, string userToken) {
            return base.Channel.GetTextAsync(textId, userToken);
        }
        
        public string GetUserToken(string userLogin, string userPassword) {
            return base.Channel.GetUserToken(userLogin, userPassword);
        }
        
        public System.Threading.Tasks.Task<string> GetUserTokenAsync(string userLogin, string userPassword) {
            return base.Channel.GetUserTokenAsync(userLogin, userPassword);
        }
        
        public string GetAttrValue(string attrName, string entityId, string userToken) {
            return base.Channel.GetAttrValue(attrName, entityId, userToken);
        }
        
        public System.Threading.Tasks.Task<string> GetAttrValueAsync(string attrName, string entityId, string userToken) {
            return base.Channel.GetAttrValueAsync(attrName, entityId, userToken);
        }
        
        public string SetAttrValue(string attrName, string entityId, string attrValue, string userToken) {
            return base.Channel.SetAttrValue(attrName, entityId, attrValue, userToken);
        }
        
        public System.Threading.Tasks.Task<string> SetAttrValueAsync(string attrName, string entityId, string attrValue, string userToken) {
            return base.Channel.SetAttrValueAsync(attrName, entityId, attrValue, userToken);
        }
        
        public void SendResponse(string userLogin, string responseText) {
            base.Channel.SendResponse(userLogin, responseText);
        }
        
        public System.Threading.Tasks.Task SendResponseAsync(string userLogin, string responseText) {
            return base.Channel.SendResponseAsync(userLogin, responseText);
        }
    }
}
