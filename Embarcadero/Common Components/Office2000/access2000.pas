unit Access2000;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : $Revision:   1.0.1.0.1.2  $
// File generated on 12/03/99 10:54:07 AM from Type Library described below.

// *************************************************************************//
// NOTE:                                                                      
// Items guarded by $IFDEF_LIVE_SERVER_AT_DESIGN_TIME are used by properties  
// which return objects that may need to be explicitly created via a function 
// call prior to any access via the property. These items have been disabled  
// in order to prevent accidental use from within the object inspector. You   
// may enable them by defining LIVE_SERVER_AT_DESIGN_TIME or by selectively   
// removing them from the $IFDEF blocks. However, such items must still be    
// programmatically created via a method of the appropriate CoClass before    
// they can be used.                                                          
// ************************************************************************ //
// Type Lib: d:\rampage\typelib\typelibraries\msacc9.olb (1)
// IID\LCID: {4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}\0
// Helpfile: d:\rampage\typelib\typelibraries\acmain9.chm
// DepndLst: 
//   (1) v2.0 stdole, (D:\WINNT\System32\stdole2.tlb)
//   (2) v2.1 ADODB, (D:\Program Files\Common Files\System\ado\msado21.tlb)
//   (3) v5.0 DAO, (D:\Program Files\Common Files\Microsoft Shared\DAO\dao360.dll)
//   (4) v2.1 Office, (D:\MSOF2K\Office\MSO9.DLL)
//   (5) v5.3 VBIDE, (D:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
//   (6) v4.0 StdVCL, (D:\RAMPAGE\BIN\STDVCL40.DLL)
// Errors:
//   Hint: Symbol 'Hyperlink' renamed to 'AccessHyperlink'
//   Hint: Symbol 'Page' renamed to 'AccessPage'
//   Hint: Symbol 'Control' renamed to 'AccessControl'
//   Hint: Symbol 'Label' renamed to 'AccessLabel'
//   Hint: Symbol 'Rectangle' renamed to 'AccessRectangle'
//   Hint: Symbol 'Line' renamed to 'AccessLine'
//   Hint: Symbol 'Image' renamed to 'AccessImage'
//   Hint: Symbol 'CommandButton' renamed to 'AccessCommandButton'
//   Hint: Symbol 'OptionButton' renamed to 'AccessOptionButton'
//   Hint: Symbol 'CheckBox' renamed to 'AccessCheckBox'
//   Hint: Symbol 'OptionGroup' renamed to 'AccessOptionGroup'
//   Hint: Symbol 'BoundObjectFrame' renamed to 'AccessBoundObjectFrame'
//   Hint: Symbol 'TextBox' renamed to 'AccessTextBox'
//   Hint: Symbol 'ListBox' renamed to 'AccessListBox'
//   Hint: Symbol 'ComboBox' renamed to 'AccessComboBox'
//   Hint: Symbol 'ObjectFrame' renamed to 'AccessObjectFrame'
//   Hint: Symbol 'PageBreak' renamed to 'AccessPageBreak'
//   Hint: Symbol 'ToggleButton' renamed to 'AccessToggleButton'
//   Hint: Symbol 'PaletteButton' renamed to 'AccessPaletteButton'
//   Hint: Symbol 'SubForm' renamed to 'AccessSubForm'
//   Hint: Symbol 'SubReport' renamed to 'AccessSubReport'
//   Hint: Symbol 'CustomControl' renamed to 'AccessCustomControl'
//   Hint: Symbol 'TabControl' renamed to 'AccessTabControl'
//   Hint: Symbol 'Section' renamed to 'AccessSection'
//   Hint: Symbol 'GroupLevel' renamed to 'AccessGroupLevel'
//   Hint: Symbol 'Form' renamed to 'AccessForm'
//   Hint: Symbol 'Report' renamed to 'AccessReport'
//   Hint: Symbol 'Application' renamed to 'AccessApplication'
//   Hint: Symbol 'References' renamed to 'AccessReferences'
//   Hint: Symbol 'WebOptions' renamed to 'AccessWebOptions'
//   Hint: TypeInfo 'Class' changed to 'Class_'
//   Hint: Parameter 'Record' of DoCmd.GoToRecord changed to 'Record_'
//   Hint: Parameter 'To' of DoCmd.SendObject changed to 'To_'
//   Hint: Member 'Type' of '_FormatCondition' changed to 'Type_'
//   Hint: Parameter 'Type' of _FormatCondition.Modify changed to 'Type_'
//   Hint: Parameter 'Type' of FormatConditions.Add changed to 'Type_'
//   Hint: Member 'Object' of '_Control' changed to 'Object_'
//   Hint: Member 'Goto' of '_Control' changed to 'Goto_'
//   Hint: Member 'Goto' of '_Image' changed to 'Goto_'
//   Hint: Member 'Goto' of '_CommandButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_OptionButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_Checkbox' changed to 'Goto_'
//   Hint: Member 'Goto' of '_OptionGroup' changed to 'Goto_'
//   Hint: Member 'Object' of '_BoundObjectFrame' changed to 'Object_'
//   Hint: Member 'Goto' of '_BoundObjectFrame' changed to 'Goto_'
//   Hint: Member 'Class' of '_BoundObjectFrame' changed to 'Class_'
//   Hint: Member 'Goto' of '_Textbox' changed to 'Goto_'
//   Hint: Member 'Goto' of '_ListBox' changed to 'Goto_'
//   Hint: Member 'Goto' of '_Combobox' changed to 'Goto_'
//   Hint: Member 'Object' of '_ObjectFrame' changed to 'Object_'
//   Hint: Member 'Goto' of '_ObjectFrame' changed to 'Goto_'
//   Hint: Member 'Class' of '_ObjectFrame' changed to 'Class_'
//   Hint: Member 'Goto' of '_ToggleButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_PaletteButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_SubForm' changed to 'Goto_'
//   Hint: Member 'Object' of '_CustomControl' changed to 'Object_'
//   Hint: Member 'Goto' of '_CustomControl' changed to 'Goto_'
//   Hint: Member 'Class' of '_CustomControl' changed to 'Class_'
//   Hint: Member 'Goto' of '_Page' changed to 'Goto_'
//   Hint: Enum Member 'Set' of 'ProcKind' changed to 'Set_'
//   Hint: Parameter 'String' of Module.AddFromString changed to 'String_'
//   Hint: Parameter 'String' of Module.Lines changed to 'String_'
//   Hint: Parameter 'String' of Module.InsertLines changed to 'String_'
//   Hint: Parameter 'String' of Module.ReplaceLine changed to 'String_'
//   Hint: Member 'Type' of 'Module' changed to 'Type_'
//   Hint: Parameter 'end' of _Report.Circle changed to 'end_'
//   Hint: Parameter 'Procedure' of _Application.Run changed to 'Procedure_'
//   Hint: Parameter 'String' of _Application.GUIDFromString changed to 'String_'
//   Hint: Parameter 'var' of _References.Item changed to 'var_'
//   Hint: Parameter 'var' of DataAccessPages.Item changed to 'var_'
//   Hint: Parameter 'var' of AllObjects.Item changed to 'var_'
//   Hint: Member 'Type' of 'AccessObject' changed to 'Type_'
//   Hint: Parameter 'Label' of _WizHook.OpenScript changed to 'Label_'
//   Hint: Parameter 'String' of _WizHook.BracketString changed to 'String_'
//   Hint: Parameter 'File' of _WizHook.OpenPictureFile changed to 'File_'
//   Hint: Parameter 'In' of _WizHook.EnglishPictToLocal changed to 'In_'
//   Hint: Parameter 'In' of _WizHook.TranslateExpression changed to 'In_'
//   Hint: Parameter 'File' of _WizHook.FileExists changed to 'File_'
//   Hint: Parameter 'File' of _WizHook.SplitPath changed to 'File_'
//   Hint: Parameter 'Array' of _WizHook.SortStringArray changed to 'Array_'
//   Hint: Parameter 'File' of _WizHook.GetFileName changed to 'File_'
//   Hint: Symbol 'Hyperlink' renamed to 'AccessHyperlink'
//   Hint: Symbol 'Page' renamed to 'AccessPage'
//   Hint: Symbol 'Control' renamed to 'AccessControl'
//   Hint: Symbol 'Label' renamed to 'AccessLabel'
//   Hint: Symbol 'Rectangle' renamed to 'AccessRectangle'
//   Hint: Symbol 'Line' renamed to 'AccessLine'
//   Hint: Symbol 'Image' renamed to 'AccessImage'
//   Hint: Symbol 'CommandButton' renamed to 'AccessCommandButton'
//   Hint: Symbol 'OptionButton' renamed to 'AccessOptionButton'
//   Hint: Symbol 'CheckBox' renamed to 'AccessCheckBox'
//   Hint: Symbol 'OptionGroup' renamed to 'AccessOptionGroup'
//   Hint: Symbol 'BoundObjectFrame' renamed to 'AccessBoundObjectFrame'
//   Hint: Symbol 'TextBox' renamed to 'AccessTextBox'
//   Hint: Symbol 'ListBox' renamed to 'AccessListBox'
//   Hint: Symbol 'ComboBox' renamed to 'AccessComboBox'
//   Hint: Symbol 'ObjectFrame' renamed to 'AccessObjectFrame'
//   Hint: Symbol 'PageBreak' renamed to 'AccessPageBreak'
//   Hint: Symbol 'ToggleButton' renamed to 'AccessToggleButton'
//   Hint: Symbol 'PaletteButton' renamed to 'AccessPaletteButton'
//   Hint: Symbol 'SubForm' renamed to 'AccessSubForm'
//   Hint: Symbol 'SubReport' renamed to 'AccessSubReport'
//   Hint: Symbol 'CustomControl' renamed to 'AccessCustomControl'
//   Hint: Symbol 'TabControl' renamed to 'AccessTabControl'
//   Hint: Symbol 'Section' renamed to 'AccessSection'
//   Hint: Symbol 'GroupLevel' renamed to 'AccessGroupLevel'
//   Hint: Symbol 'Form' renamed to 'AccessForm'
//   Hint: Symbol 'Report' renamed to 'AccessReport'
//   Hint: Symbol 'Application' renamed to 'AccessApplication'
//   Hint: Symbol 'References' renamed to 'AccessReferences'
//   Hint: Symbol 'WebOptions' renamed to 'AccessWebOptions'
//   Hint: TypeInfo 'Class' changed to 'Class_'
//   Hint: Member 'Type' of '_FormatCondition' changed to 'Type_'
//   Hint: Member 'Object' of '_Control' changed to 'Object_'
//   Hint: Member 'Goto' of '_Control' changed to 'Goto_'
//   Hint: Member 'Goto' of '_Image' changed to 'Goto_'
//   Hint: Member 'Goto' of '_CommandButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_OptionButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_Checkbox' changed to 'Goto_'
//   Hint: Member 'Goto' of '_OptionGroup' changed to 'Goto_'
//   Hint: Member 'Object' of '_BoundObjectFrame' changed to 'Object_'
//   Hint: Member 'Goto' of '_BoundObjectFrame' changed to 'Goto_'
//   Hint: Member 'Class' of '_BoundObjectFrame' changed to 'Class_'
//   Hint: Member 'Goto' of '_Textbox' changed to 'Goto_'
//   Hint: Member 'Goto' of '_ListBox' changed to 'Goto_'
//   Hint: Member 'Goto' of '_Combobox' changed to 'Goto_'
//   Hint: Member 'Object' of '_ObjectFrame' changed to 'Object_'
//   Hint: Member 'Goto' of '_ObjectFrame' changed to 'Goto_'
//   Hint: Member 'Class' of '_ObjectFrame' changed to 'Class_'
//   Hint: Member 'Goto' of '_ToggleButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_PaletteButton' changed to 'Goto_'
//   Hint: Member 'Goto' of '_SubForm' changed to 'Goto_'
//   Hint: Member 'Object' of '_CustomControl' changed to 'Object_'
//   Hint: Member 'Goto' of '_CustomControl' changed to 'Goto_'
//   Hint: Member 'Class' of '_CustomControl' changed to 'Class_'
//   Hint: Member 'Goto' of '_Page' changed to 'Goto_'
//   Hint: Enum Member 'Set' of 'ProcKind' changed to 'Set_'
//   Hint: Member 'Type' of 'Module' changed to 'Type_'
//   Hint: Member 'Type' of 'AccessObject' changed to 'Type_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
interface

uses Windows, ActiveX, Classes, Graphics, OleServer, OleCtrls, StdVCL, 
  ADODB2000, DAO2000, Office2000, VBIDE2000;

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  AccessMajorVersion = 9;
  AccessMinorVersion = 0;

  LIBID_Access: TGUID = '{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}';

  IID_DoCmd: TGUID = '{C547E760-9658-101B-81EE-00AA004750E2}';
  IID__RecordsetEvents: TGUID = '{45165490-EF32-11D0-86FB-006097C9818C}';
  IID__AccessProperty: TGUID = '{331FDD00-CF31-11CD-8701-00AA003F0F07}';
  IID_Properties: TGUID = '{331FDD02-CF31-11CD-8701-00AA003F0F07}';
  IID__FormatCondition: TGUID = '{E27A992C-A330-11D0-81DD-00C04FC2F51B}';
  CLASS_FormatCondition: TGUID = '{E27A992D-A330-11D0-81DD-00C04FC2F51B}';
  IID_FormatConditions: TGUID = '{E27A992E-A330-11D0-81DD-00C04FC2F51B}';
  IID__ItemsSelected: TGUID = '{31B09710-EADC-11CD-B9F7-00AA004753B5}';
  IID_Children: TGUID = '{3B06E977-E47C-11CD-8701-00AA003F0F07}';
  IID__AccessField: TGUID = '{B1C1EAC1-486F-11CE-A65D-00AA003F0F07}';
  CLASS_AccessField: TGUID = '{044E54C5-B19B-11CE-A689-00AA003F0F07}';
  IID___Help: TGUID = '{9CD4A761-A6A9-11CE-A686-00AA003F0F07}';
  IID__Hyperlink: TGUID = '{50D56611-60AC-11CF-82C9-00AA004B9FE6}';
  CLASS_AccessHyperlink: TGUID = '{50D56610-60AC-11CF-82C9-00AA004B9FE6}';
  IID__Page: TGUID = '{3B06E974-E47C-11CD-8701-00AA003F0F07}';
  IID_Pages: TGUID = '{3B06E978-E47C-11CD-8701-00AA003F0F07}';
  IID__Control: TGUID = '{26B96540-8F8E-101B-AF4E-00AA003F0F07}';
  CLASS_AccessControl: TGUID = '{02F92C80-8F8E-101B-AF4E-00AA003F0F07}';
  IID___ControlInReportEvents: TGUID = '{90B322A5-F1D9-11CD-8701-00AA003F0F07}';
  CLASS__ControlInReportEvents: TGUID = '{90B322A4-F1D9-11CD-8701-00AA003F0F07}';
  IID_Controls: TGUID = '{5970C574-EB8C-11CD-8701-00AA003F0F07}';
  IID__Label: TGUID = '{3B06E948-E47C-11CD-8701-00AA003F0F07}';
  IID__LabelEvents: TGUID = '{BC9E4341-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessLabel: TGUID = '{3B06E947-E47C-11CD-8701-00AA003F0F07}';
  IID__ChildLabelEvents: TGUID = '{BC9E4358-F037-11CD-8701-00AA003F0F07}';
  CLASS__ChildLabel: TGUID = '{BC9E4359-F037-11CD-8701-00AA003F0F07}';
  IID__Rectangle: TGUID = '{3B06E94A-E47C-11CD-8701-00AA003F0F07}';
  IID__RectangleEvents: TGUID = '{BC9E4342-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessRectangle: TGUID = '{3B06E949-E47C-11CD-8701-00AA003F0F07}';
  IID__Line: TGUID = '{3B06E94C-E47C-11CD-8701-00AA003F0F07}';
  IID__LineEvents: TGUID = '{BC9E4343-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessLine: TGUID = '{3B06E94B-E47C-11CD-8701-00AA003F0F07}';
  IID__Image: TGUID = '{3B06E94E-E47C-11CD-8701-00AA003F0F07}';
  IID__ImageEvents: TGUID = '{BC9E4344-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessImage: TGUID = '{3B06E94D-E47C-11CD-8701-00AA003F0F07}';
  IID__CommandButton: TGUID = '{3B06E950-E47C-11CD-8701-00AA003F0F07}';
  IID__CommandButtonEvents: TGUID = '{BC9E4345-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessCommandButton: TGUID = '{3B06E94F-E47C-11CD-8701-00AA003F0F07}';
  IID__OptionButton: TGUID = '{3B06E952-E47C-11CD-8701-00AA003F0F07}';
  IID__OptionButtonEvents: TGUID = '{BC9E4346-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessOptionButton: TGUID = '{3B06E951-E47C-11CD-8701-00AA003F0F07}';
  IID__OptionButtonInOptionEvents: TGUID = '{BC9E435B-F037-11CD-8701-00AA003F0F07}';
  CLASS__OptionButtonInOption: TGUID = '{BC9E435A-F037-11CD-8701-00AA003F0F07}';
  IID__Checkbox: TGUID = '{3B06E954-E47C-11CD-8701-00AA003F0F07}';
  IID__CheckBoxEvents: TGUID = '{BC9E4347-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessCheckBox: TGUID = '{3B06E953-E47C-11CD-8701-00AA003F0F07}';
  IID__CheckBoxInOptionEvents: TGUID = '{BC9E435D-F037-11CD-8701-00AA003F0F07}';
  CLASS__CheckBoxInOption: TGUID = '{BC9E435C-F037-11CD-8701-00AA003F0F07}';
  IID__OptionGroup: TGUID = '{3B06E956-E47C-11CD-8701-00AA003F0F07}';
  IID__OptionGroupEvents: TGUID = '{BC9E4348-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessOptionGroup: TGUID = '{3B06E955-E47C-11CD-8701-00AA003F0F07}';
  IID__BoundObjectFrame: TGUID = '{3B06E958-E47C-11CD-8701-00AA003F0F07}';
  IID__BoundObjectFrameEvents: TGUID = '{BC9E4349-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessBoundObjectFrame: TGUID = '{3B06E957-E47C-11CD-8701-00AA003F0F07}';
  IID__Textbox: TGUID = '{3B06E946-E47C-11CD-8701-00AA003F0F07}';
  IID__TextBoxEvents: TGUID = '{BC9E4340-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessTextBox: TGUID = '{3B06E945-E47C-11CD-8701-00AA003F0F07}';
  IID__ListBox: TGUID = '{3B06E95A-E47C-11CD-8701-00AA003F0F07}';
  IID__ListBoxEvents: TGUID = '{BC9E434B-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessListBox: TGUID = '{3B06E959-E47C-11CD-8701-00AA003F0F07}';
  IID__Combobox: TGUID = '{3B06E95C-E47C-11CD-8701-00AA003F0F07}';
  IID__ComboBoxEvents: TGUID = '{BC9E434C-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessComboBox: TGUID = '{3B06E95B-E47C-11CD-8701-00AA003F0F07}';
  IID__ObjectFrame: TGUID = '{3B06E95E-E47C-11CD-8701-00AA003F0F07}';
  IID__ObjectFrameEvents: TGUID = '{BC9E434D-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessObjectFrame: TGUID = '{3B06E95D-E47C-11CD-8701-00AA003F0F07}';
  IID__PageBreak: TGUID = '{3B06E960-E47C-11CD-8701-00AA003F0F07}';
  IID__PageBreakEvents: TGUID = '{BC9E434E-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessPageBreak: TGUID = '{3B06E95F-E47C-11CD-8701-00AA003F0F07}';
  IID__ToggleButton: TGUID = '{3B06E962-E47C-11CD-8701-00AA003F0F07}';
  IID__ToggleButtonEvents: TGUID = '{BC9E434F-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessToggleButton: TGUID = '{3B06E961-E47C-11CD-8701-00AA003F0F07}';
  IID__ToggleButtonInOptionEvents: TGUID = '{BC9E435F-F037-11CD-8701-00AA003F0F07}';
  CLASS__ToggleButtonInOption: TGUID = '{BC9E435E-F037-11CD-8701-00AA003F0F07}';
  IID__PaletteButton: TGUID = '{9CD4A760-A6A9-11CE-A686-00AA003F0F07}';
  IID__PaletteButtonEvents: TGUID = '{A843CCD0-6E2C-11CF-A219-00A0C90542FF}';
  CLASS_AccessPaletteButton: TGUID = '{9CD4A762-A6A9-11CE-A686-00AA003F0F07}';
  IID__SubForm: TGUID = '{3B06E964-E47C-11CD-8701-00AA003F0F07}';
  IID__SubFormEvents: TGUID = '{BC9E4350-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessSubForm: TGUID = '{3B06E963-E47C-11CD-8701-00AA003F0F07}';
  IID__SubReport: TGUID = '{3B06E966-E47C-11CD-8701-00AA003F0F07}';
  IID__SubReportEvents: TGUID = '{BC9E4351-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessSubReport: TGUID = '{3B06E965-E47C-11CD-8701-00AA003F0F07}';
  IID__CustomControl: TGUID = '{3B06E968-E47C-11CD-8701-00AA003F0F07}';
  IID__CustomControlEvents: TGUID = '{BC9E4352-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessCustomControl: TGUID = '{3B06E967-E47C-11CD-8701-00AA003F0F07}';
  IID__CustomControlInReportEvents: TGUID = '{300471E2-7426-11CE-AB64-00AA0042B7CE}';
  CLASS__CustomControlInReport: TGUID = '{300471E0-7426-11CE-AB63-00AA0042B7CE}';
  IID__TabControl: TGUID = '{3B06E971-E47C-11CD-8701-00AA003F0F07}';
  IID__TabControlEvents: TGUID = '{3B06E972-E47C-11CD-8701-00AA003F0F07}';
  CLASS_AccessTabControl: TGUID = '{3B06E970-E47C-11CD-8701-00AA003F0F07}';
  IID__PageEvents: TGUID = '{3B06E975-E47C-11CD-8701-00AA003F0F07}';
  CLASS_AccessPage: TGUID = '{3B06E973-E47C-11CD-8701-00AA003F0F07}';
  IID__Section: TGUID = '{331FDCFC-CF31-11CD-8701-00AA003F0F07}';
  IID__SectionEvents: TGUID = '{BC9E4353-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessSection: TGUID = '{BC9E4355-F037-11CD-8701-00AA003F0F07}';
  IID__GroupLevel: TGUID = '{331FDD27-CF31-11CD-8701-00AA003F0F07}';
  CLASS_AccessGroupLevel: TGUID = '{BC9E4356-F037-11CD-8701-00AA003F0F07}';
  IID__SectionInReportEvents: TGUID = '{BC9E4361-F037-11CD-8701-00AA003F0F07}';
  CLASS__SectionInReport: TGUID = '{BC9E4360-F037-11CD-8701-00AA003F0F07}';
  IID__PageHdrFtrInReportEvents: TGUID = '{7AD9E905-BAF8-11CE-A68A-00AA003F0F07}';
  CLASS__PageHdrFtrInReport: TGUID = '{7AD9E906-BAF8-11CE-A68A-00AA003F0F07}';
  IID_Module: TGUID = '{331FDCFE-CF31-11CD-8701-00AA003F0F07}';
  IID_Modules: TGUID = '{9DD0AF42-6E28-11CF-9008-00AA0042B7CE}';
  IID__Form: TGUID = '{E5135D80-8F8D-101B-AF4E-00AA003F0F07}';
  IID__FormEvents: TGUID = '{331FDCFB-CF31-11CD-8701-00AA003F0F07}';
  CLASS_AccessForm: TGUID = '{483615A0-74BE-101B-AF4E-00AA003F0F07}';
  IID_Forms: TGUID = '{B1BB0E80-6128-101B-AF4E-00AA003F0F07}';
  IID__Report: TGUID = '{3E8B6B00-91FF-101B-AF4E-00AA003F0F07}';
  IID__ReportEvents: TGUID = '{BC9E4357-F037-11CD-8701-00AA003F0F07}';
  CLASS_AccessReport: TGUID = '{27CE30A0-91FF-101B-AF4E-00AA003F0F07}';
  IID_Reports: TGUID = '{D1523700-6128-101B-AF4E-00AA003F0F07}';
  IID_Screen: TGUID = '{DC6B66C0-6128-101B-AF4E-00AA003F0F07}';
  IID__Application: TGUID = '{68CCE6C0-6129-101B-AF4E-00AA003F0F07}';
  CLASS_AccessApplication: TGUID = '{73A4C9C1-D68D-11D0-98BF-00A0C90DC8D9}';
  IID_Reference: TGUID = '{EB106212-9C89-11CF-A2B3-00A0C90542FF}';
  IID__References: TGUID = '{EB106213-9C89-11CF-A2B3-00A0C90542FF}';
  DIID__References_Events: TGUID = '{F163F201-ADA2-11CF-89A9-00A0C9054129}';
  CLASS_AccessReferences: TGUID = '{EB106214-9C89-11CF-A2B3-00A0C90542FF}';
  IID__Dummy: TGUID = '{8B06E320-B23C-11CF-89A8-00A0C9054129}';
  IID__DataAccessPage: TGUID = '{493D8A72-1DB1-11D1-98A2-006008197D41}';
  CLASS_DataAccessPage: TGUID = '{493D8A73-1DB1-11D1-98A2-006008197D41}';
  IID_DataAccessPages: TGUID = '{493D8A71-1DB1-11D1-98A2-006008197D41}';
  IID_AllObjects: TGUID = '{DDBD4001-44D5-11D1-98C0-006008197D41}';
  CLASS_AllForms: TGUID = '{08F6C813-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllReports: TGUID = '{08F6C814-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllMacros: TGUID = '{08F6C815-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllModules: TGUID = '{08F6C816-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllDataAccessPages: TGUID = '{08F6C818-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllTables: TGUID = '{08F6C81B-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllQueries: TGUID = '{08F6C81C-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllViews: TGUID = '{08F6C81E-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllStoredProcedures: TGUID = '{08F6C820-3CFD-11D1-98BC-006008197D41}';
  CLASS_AllDatabaseDiagrams: TGUID = '{08F6C821-3CFD-11D1-98BC-006008197D41}';
  IID_AccessObjectProperty: TGUID = '{1FE3E471-A7D0-11D1-9944-006008197D41}';
  IID_AccessObjectProperties: TGUID = '{0921F331-A7C9-11D1-9944-006008197D41}';
  IID__CurrentProject: TGUID = '{9212BA71-3E79-11D1-98BD-006008197D41}';
  IID__CurrentData: TGUID = '{9212BA73-3E79-11D1-98BD-006008197D41}';
  CLASS_CurrentProject: TGUID = '{08F6C811-3CFD-11D1-98BC-006008197D41}';
  CLASS_CurrentData: TGUID = '{08F6C819-3CFD-11D1-98BC-006008197D41}';
  CLASS_CodeProject: TGUID = '{9212BA72-3E79-11D1-98BD-006008197D41}';
  CLASS_CodeData: TGUID = '{08F6C81A-3CFD-11D1-98BC-006008197D41}';
  IID_AccessObject: TGUID = '{ABE316B1-3FF6-11D1-98BD-006008197D41}';
  IID__WizHook: TGUID = '{CB9D3171-4728-11D1-8334-006008197CC8}';
  CLASS_WizHook: TGUID = '{CB9D3172-4728-11D1-8334-006008197CC8}';
  IID__DefaultWebOptions: TGUID = '{416ED4F0-AB31-11D1-BF72-0060083E43CF}';
  CLASS_DefaultWebOptions: TGUID = '{416ED4F1-AB31-11D1-BF72-0060083E43CF}';
  IID__WebOptions: TGUID = '{416ED4F6-AB31-11D1-BF72-0060083E43CF}';
  CLASS_AccessWebOptions: TGUID = '{416ED4F7-AB31-11D1-BF72-0060083E43CF}';
  IID__DummyEvents: TGUID = '{58BF3100-B580-11CF-89A8-00A0C9054129}';
  CLASS_Class_: TGUID = '{8B06E321-B23C-11CF-89A8-00A0C9054129}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum AcModuleType
type
  AcModuleType = TOleEnum;
const
  acStandardModule = $00000000;
  acClassModule = $00000001;

// Constants for enum AcCloseSave
type
  AcCloseSave = TOleEnum;
const
  acSavePrompt = $00000000;
  acSaveYes = $00000001;
  acSaveNo = $00000002;

// Constants for enum AcQuitOption
type
  AcQuitOption = TOleEnum;
const
  acQuitPrompt = $00000000;
  acQuitSaveAll = $00000001;
  acQuitSaveNone = $00000002;

// Constants for enum AcSection
type
  AcSection = TOleEnum;
const
  acDetail = $00000000;
  acHeader = $00000001;
  acFooter = $00000002;
  acPageHeader = $00000003;
  acPageFooter = $00000004;
  acGroupLevel1Header = $00000005;
  acGroupLevel1Footer = $00000006;
  acGroupLevel2Header = $00000007;
  acGroupLevel2Footer = $00000008;

// Constants for enum AcControlType
type
  AcControlType = TOleEnum;
const
  acLabel = $00000064;
  acRectangle = $00000065;
  acLine = $00000066;
  acImage = $00000067;
  acCommandButton = $00000068;
  acOptionButton = $00000069;
  acCheckBox = $0000006A;
  acOptionGroup = $0000006B;
  acBoundObjectFrame = $0000006C;
  acTextBox = $0000006D;
  acListBox = $0000006E;
  acComboBox = $0000006F;
  acSubform = $00000070;
  acObjectFrame = $00000072;
  acPageBreak = $00000076;
  acCustomControl = $00000077;
  acToggleButton = $0000007A;
  acTabCtl = $0000007B;
  acPage = $0000007C;

// Constants for enum AcDataObjectType
type
  AcDataObjectType = TOleEnum;
const
  acActiveDataObject = $FFFFFFFF;
  acDataTable = $00000000;
  acDataQuery = $00000001;
  acDataForm = $00000002;
  acDataServerView = $00000007;
  acDataStoredProcedure = $00000009;

// Constants for enum AcDataTransferType
type
  AcDataTransferType = TOleEnum;
const
  acImport = $00000000;
  acExport = $00000001;
  acLink = $00000002;

// Constants for enum AcSendObjectType
type
  AcSendObjectType = TOleEnum;
const
  acSendNoObject = $FFFFFFFF;
  acSendTable = $00000000;
  acSendQuery = $00000001;
  acSendForm = $00000002;
  acSendReport = $00000003;
  acSendModule = $00000005;
  acSendDataAccessPage = $00000006;

// Constants for enum AcObjectType
type
  AcObjectType = TOleEnum;
const
  acDefault = $FFFFFFFF;
  acTable = $00000000;
  acQuery = $00000001;
  acForm = $00000002;
  acReport = $00000003;
  acMacro = $00000004;
  acModule = $00000005;
  acDataAccessPage = $00000006;
  acServerView = $00000007;
  acDiagram = $00000008;
  acStoredProcedure = $00000009;

// Constants for enum AcFindField
type
  AcFindField = TOleEnum;
const
  acCurrent = $FFFFFFFF;
  acAll = $00000000;

// Constants for enum AcFindMatch
type
  AcFindMatch = TOleEnum;
const
  acAnywhere = $00000000;
  acEntire = $00000001;
  acStart = $00000002;

// Constants for enum AcFormView
type
  AcFormView = TOleEnum;
const
  acNormal = $00000000;
  acDesign = $00000001;
  acPreview = $00000002;
  acFormDS = $00000003;

// Constants for enum AcDataAccessPageView
type
  AcDataAccessPageView = TOleEnum;
const
  acDataAccessPageBrowse = $00000000;
  acDataAccessPageDesign = $00000001;

// Constants for enum AcOpenDataMode
type
  AcOpenDataMode = TOleEnum;
const
  acAdd = $00000000;
  acEdit = $00000001;
  acReadOnly = $00000002;

// Constants for enum AcFormOpenDataMode
type
  AcFormOpenDataMode = TOleEnum;
const
  acFormPropertySettings = $FFFFFFFF;
  acFormAdd = $00000000;
  acFormEdit = $00000001;
  acFormReadOnly = $00000002;

// Constants for enum AcOutputObjectType
type
  AcOutputObjectType = TOleEnum;
const
  acOutputTable = $00000000;
  acOutputQuery = $00000001;
  acOutputForm = $00000002;
  acOutputReport = $00000003;
  acOutputModule = $00000005;
  acOutputDataAccessPage = $00000006;
  acOutputServerView = $00000007;
  acOutputStoredProcedure = $00000009;

// Constants for enum AcPrintQuality
type
  AcPrintQuality = TOleEnum;
const
  acHigh = $00000000;
  acMedium = $00000001;
  acLow = $00000002;
  acDraft = $00000003;

// Constants for enum AcPrintRange
type
  AcPrintRange = TOleEnum;
const
  acPrintAll = $00000000;
  acSelection = $00000001;
  acPages = $00000002;

// Constants for enum AcRecord
type
  AcRecord = TOleEnum;
const
  acPrevious = $00000000;
  acNext = $00000001;
  acFirst = $00000002;
  acLast = $00000003;
  acGoTo = $00000004;
  acNewRec = $00000005;

// Constants for enum AcSearchDirection
type
  AcSearchDirection = TOleEnum;
const
  acUp = $00000000;
  acDown = $00000001;
  acSearchAll = $00000002;

// Constants for enum AcSysCmdAction
type
  AcSysCmdAction = TOleEnum;
const
  acSysCmdInitMeter = $00000001;
  acSysCmdUpdateMeter = $00000002;
  acSysCmdRemoveMeter = $00000003;
  acSysCmdSetStatus = $00000004;
  acSysCmdClearStatus = $00000005;
  acSysCmdRuntime = $00000006;
  acSysCmdAccessVer = $00000007;
  acSysCmdIniFile = $00000008;
  acSysCmdAccessDir = $00000009;
  acSysCmdGetObjectState = $0000000A;
  acSysCmdClearHelpTopic = $0000000B;
  acSysCmdProfile = $0000000C;
  acSysCmdGetWorkgroupFile = $0000000D;

// Constants for enum AcTextTransferType
type
  AcTextTransferType = TOleEnum;
const
  acImportDelim = $00000000;
  acImportFixed = $00000001;
  acExportDelim = $00000002;
  acExportFixed = $00000003;
  acExportMerge = $00000004;
  acLinkDelim = $00000005;
  acLinkFixed = $00000006;
  acImportHTML = $00000007;
  acExportHTML = $00000008;
  acLinkHTML = $00000009;

// Constants for enum AcView
type
  AcView = TOleEnum;
const
  acViewNormal = $00000000;
  acViewDesign = $00000001;
  acViewPreview = $00000002;

// Constants for enum AcWindowMode
type
  AcWindowMode = TOleEnum;
const
  acWindowNormal = $00000000;
  acHidden = $00000001;
  acIcon = $00000002;
  acDialog = $00000003;

// Constants for enum AcFilterType
type
  AcFilterType = TOleEnum;
const
  acFilterNormal = $00000000;
  acServerFilter = $00000001;

// Constants for enum AcSpreadSheetType
type
  AcSpreadSheetType = TOleEnum;
const
  acSpreadsheetTypeExcel3 = $00000000;
  acSpreadsheetTypeLotusWK1 = $00000002;
  acSpreadsheetTypeLotusWK3 = $00000003;
  acSpreadsheetTypeLotusWJ2 = $00000004;
  acSpreadsheetTypeExcel5 = $00000005;
  acSpreadsheetTypeExcel7 = $00000005;
  acSpreadsheetTypeExcel4 = $00000006;
  acSpreadsheetTypeLotusWK4 = $00000007;
  acSpreadsheetTypeExcel97 = $00000008;
  acSpreadsheetTypeExcel8 = $00000008;
  acSpreadsheetTypeExcel9 = $00000008;

// Constants for enum AcImeMode
type
  AcImeMode = TOleEnum;
const
  acImeModeNoControl = $00000000;
  acImeModeOn = $00000001;
  acImeModeOff = $00000002;
  acImeModeDisable = $00000003;
  acImeModeHiragana = $00000004;
  acImeModeKatakana = $00000005;
  acImeModeKatakanaHalf = $00000006;
  acImeModeAlphaFull = $00000007;
  acImeModeAlpha = $00000008;
  acImeModeHangulFull = $00000009;
  acImeModeHangul = $0000000A;

// Constants for enum AcImeSentenceMode
type
  AcImeSentenceMode = TOleEnum;
const
  acImeSentenceModePhrasePredict = $00000000;
  acImeSentenceModePluralClause = $00000001;
  acImeSentenceModeConversation = $00000002;
  acImeSentenceModeNone = $00000003;

// Constants for enum AcHyperlinkPart
type
  AcHyperlinkPart = TOleEnum;
const
  acDisplayedValue = $00000000;
  acDisplayText = $00000001;
  acAddress = $00000002;
  acSubAddress = $00000003;
  acScreenTip = $00000004;
  acFullAddress = $00000005;

// Constants for enum AcProjectType
type
  AcProjectType = TOleEnum;
const
  acNull = $00000000;
  acADP = $00000001;
  acMDB = $00000002;

// Constants for enum AcCommand
type
  AcCommand = TOleEnum;
const
  acCmdWindowUnhide = $00000001;
  acCmdWindowHide = $00000002;
  acCmdExit = $00000003;
  acCmdCompactDatabase = $00000004;
  acCmdEncryptDecryptDatabase = $00000005;
  acCmdRepairDatabase = $00000006;
  acCmdMakeMDEFile = $00000007;
  acCmdMoreWindows = $00000008;
  acCmdAppRestore = $00000009;
  acCmdAppMaximize = $0000000A;
  acCmdAppMinimize = $0000000B;
  acCmdAppMove = $0000000C;
  acCmdAppSize = $0000000D;
  acCmdDocRestore = $0000000E;
  acCmdDocMaximize = $0000000F;
  acCmdDocMove = $00000010;
  acCmdDocSize = $00000011;
  acCmdRefresh = $00000012;
  acCmdFont = $00000013;
  acCmdSave = $00000014;
  acCmdSaveAs = $00000015;
  acCmdWindowCascade = $00000016;
  acCmdTileVertically = $00000017;
  acCmdWindowArrangeIcons = $00000018;
  acCmdOpenDatabase = $00000019;
  acCmdNewDatabase = $0000001A;
  acCmdOLEDDELinks = $0000001B;
  acCmdRecordsGoToNew = $0000001C;
  acCmdReplace = $0000001D;
  acCmdFind = $0000001E;
  acCmdRunMacro = $0000001F;
  acCmdPageSetup = $00000020;
  acCmdInsertObject = $00000021;
  acCmdDuplicate = $00000022;
  acCmdAboutMicrosoftAccess = $00000023;
  acCmdFormHdrFtr = $00000024;
  acCmdReportHdrFtr = $00000025;
  acCmdPasteAppend = $00000026;
  acCmdInsertFile = $00000027;
  acCmdSelectForm = $00000028;
  acCmdTabOrder = $00000029;
  acCmdFieldList = $0000002A;
  acCmdAlignLeft = $0000002B;
  acCmdAlignRight = $0000002C;
  acCmdAlignTop = $0000002D;
  acCmdAlignBottom = $0000002E;
  acCmdAlignToGrid = $0000002F;
  acCmdSizeToGrid = $00000030;
  acCmdOptions = $00000031;
  acCmdSelectRecord = $00000032;
  acCmdSortingAndGrouping = $00000033;
  acCmdBringToFront = $00000034;
  acCmdSendToBack = $00000035;
  acCmdPrintPreview = $00000036;
  acCmdApplyDefault = $00000037;
  acCmdSetControlDefaults = $00000038;
  acCmdOLEObjectDefaultVerb = $00000039;
  acCmdClose = $0000003A;
  acCmdSizeToFit = $0000003B;
  acCmdDocMinimize = $0000003C;
  acCmdViewRuler = $0000003D;
  acCmdSnapToGrid = $0000003E;
  acCmdViewGrid = $0000003F;
  acCmdPasteSpecial = $00000040;
  acCmdRecordsGoToNext = $00000041;
  acCmdRecordsGoToPrevious = $00000042;
  acCmdRecordsGoToFirst = $00000043;
  acCmdRecordsGoToLast = $00000044;
  acCmdSizeToFitForm = $00000045;
  acCmdEditingAllowed = $00000046;
  acCmdClearGrid = $00000047;
  acCmdJoinProperties = $00000048;
  acCmdQueryTotals = $00000049;
  acCmdQueryTypeCrosstab = $0000004A;
  acCmdTableNames = $0000004B;
  acCmdQueryParameters = $0000004C;
  acCmdFormatCells = $0000004D;
  acCmdDataEntry = $0000004E;
  acCmdHideColumns = $0000004F;
  acCmdUnhideColumns = $00000050;
  acCmdDeleteQueryColumn = $00000051;
  acCmdInsertQueryColumn = $00000052;
  acCmdRemoveTable = $00000054;
  acCmdViewToolbox = $00000055;
  acCmdMacroNames = $00000056;
  acCmdMacroConditions = $00000057;
  acCmdSingleStep = $00000058;
  acCmdQueryTypeSelect = $00000059;
  acCmdQueryTypeUpdate = $0000005A;
  acCmdQueryTypeAppend = $0000005B;
  acCmdQueryTypeDelete = $0000005C;
  acCmdApplyFilterSort = $0000005D;
  acCmdQueryTypeMakeTable = $0000005E;
  acCmdLoadFromQuery = $0000005F;
  acCmdSaveAsQuery = $00000060;
  acCmdSaveRecord = $00000061;
  acCmdAdvancedFilterSort = $00000063;
  acCmdMicrosoftAccessHelpTopics = $00000064;
  acCmdLinkTables = $00000066;
  acCmdUserAndGroupPermissions = $00000067;
  acCmdUserAndGroupAccounts = $00000068;
  acCmdFreezeColumn = $00000069;
  acCmdUnfreezeAllColumns = $0000006A;
  acCmdPrimaryKey = $0000006B;
  acCmdSubformDatasheet = $0000006C;
  acCmdSelectAllRecords = $0000006D;
  acCmdViewTables = $0000006E;
  acCmdViewQueries = $0000006F;
  acCmdViewForms = $00000070;
  acCmdViewReports = $00000071;
  acCmdViewMacros = $00000072;
  acCmdViewModules = $00000073;
  acCmdRowHeight = $00000074;
  acCmdColumnWidth = $00000075;
  acCmdInsertFileIntoModule = $00000076;
  acCmdSaveModuleAsText = $00000077;
  acCmdFindPrevious = $00000078;
  acCmdWindowSplit = $00000079;
  acCmdProcedureDefinition = $0000007A;
  acCmdDebugWindow = $0000007B;
  acCmdReset = $0000007C;
  acCmdCompileAllModules = $0000007D;
  acCmdCompileAndSaveAllModules = $0000007E;
  acCmdGoContinue = $0000007F;
  acCmdStepOver = $00000080;
  acCmdSetNextStatement = $00000081;
  acCmdShowNextStatement = $00000082;
  acCmdToggleBreakpoint = $00000083;
  acCmdClearAllBreakpoints = $00000084;
  acCmdRelationships = $00000085;
  acCmdNewObjectTable = $00000086;
  acCmdNewObjectQuery = $00000087;
  acCmdNewObjectForm = $00000088;
  acCmdNewObjectReport = $00000089;
  acCmdNewObjectMacro = $0000008A;
  acCmdNewObjectModule = $0000008B;
  acCmdNewObjectClassModule = $0000008C;
  acCmdLayoutPreview = $0000008D;
  acCmdSaveAsReport = $0000008E;
  acCmdRename = $0000008F;
  acCmdRemoveFilterSort = $00000090;
  acCmdSaveLayout = $00000091;
  acCmdClearAll = $00000092;
  acCmdHideTable = $00000093;
  acCmdShowDirectRelationships = $00000094;
  acCmdShowAllRelationships = $00000095;
  acCmdCreateRelationship = $00000096;
  acCmdEditRelationship = $00000097;
  acCmdIndexes = $00000098;
  acCmdAlignToShortest = $00000099;
  acCmdAlignToTallest = $0000009A;
  acCmdSizeToNarrowest = $0000009B;
  acCmdSizeToWidest = $0000009C;
  acCmdHorizontalSpacingMakeEqual = $0000009D;
  acCmdHorizontalSpacingDecrease = $0000009E;
  acCmdHorizontalSpacingIncrease = $0000009F;
  acCmdVerticalSpacingMakeEqual = $000000A0;
  acCmdVerticalSpacingDecrease = $000000A1;
  acCmdVerticalSpacingIncrease = $000000A2;
  acCmdSortAscending = $000000A3;
  acCmdSortDescending = $000000A4;
  acCmdToolbarsCustomize = $000000A5;
  acCmdOLEObjectConvert = $000000A7;
  acCmdQueryTypeSQLDataDefinition = $000000A8;
  acCmdQueryTypeSQLPassThrough = $000000A9;
  acCmdViewCode = $000000AA;
  acCmdConvertDatabase = $000000AB;
  acCmdCallStack = $000000AC;
  acCmdSend = $000000AD;
  acCmdOutputToExcel = $000000AF;
  acCmdOutputToRTF = $000000B0;
  acCmdOutputToText = $000000B1;
  acCmdInvokeBuilder = $000000B2;
  acCmdZoomBox = $000000B3;
  acCmdQueryTypeSQLUnion = $000000B4;
  acCmdRun = $000000B5;
  acCmdPageHdrFtr = $000000B6;
  acCmdDesignView = $000000B7;
  acCmdSQLView = $000000B8;
  acCmdShowTable = $000000B9;
  acCmdCloseWindow = $000000BA;
  acCmdInsertRows = $000000BB;
  acCmdDeleteRows = $000000BC;
  acCmdCut = $000000BD;
  acCmdCopy = $000000BE;
  acCmdPaste = $000000BF;
  acCmdAutoDial = $000000C0;
  acCmdNewObjectAutoForm = $000000C1;
  acCmdNewObjectAutoReport = $000000C2;
  acCmdWordMailMerge = $000000C3;
  acCmdTestValidationRules = $000000C4;
  acCmdControlWizardsToggle = $000000C5;
  acCmdEnd = $000000C6;
  acCmdRedo = $000000C7;
  acCmdObjectBrowser = $000000C8;
  acCmdAddWatch = $000000C9;
  acCmdEditWatch = $000000CA;
  acCmdQuickWatch = $000000CB;
  acCmdStepToCursor = $000000CC;
  acCmdIndent = $000000CD;
  acCmdOutdent = $000000CE;
  acCmdFilterByForm = $000000CF;
  acCmdFilterBySelection = $000000D0;
  acCmdViewLargeIcons = $000000D1;
  acCmdViewDetails = $000000D2;
  acCmdViewSmallIcons = $000000D3;
  acCmdViewList = $000000D4;
  acCmdLineUpIcons = $000000D5;
  acCmdArrangeIconsByName = $000000D6;
  acCmdArrangeIconsByType = $000000D7;
  acCmdArrangeIconsByCreated = $000000D8;
  acCmdArrangeIconsByModified = $000000D9;
  acCmdArrangeIconsAuto = $000000DA;
  acCmdCreateShortcut = $000000DB;
  acCmdToggleFilter = $000000DC;
  acCmdOpenTable = $000000DD;
  acCmdInsertPicture = $000000DE;
  acCmdDeleteRecord = $000000DF;
  acCmdStartupProperties = $000000E0;
  acCmdPageNumber = $000000E1;
  acCmdDateAndTime = $000000E2;
  acCmdChangeToTextBox = $000000E3;
  acCmdChangeToLabel = $000000E4;
  acCmdChangeToListBox = $000000E5;
  acCmdChangeToComboBox = $000000E6;
  acCmdChangeToCheckBox = $000000E7;
  acCmdChangeToToggleButton = $000000E8;
  acCmdChangeToOptionButton = $000000E9;
  acCmdChangeToImage = $000000EA;
  acCmdAnswerWizard = $000000EB;
  acCmdMicrosoftOnTheWeb = $000000EC;
  acCmdClearItemDefaults = $000000ED;
  acCmdZoom200 = $000000EE;
  acCmdZoom150 = $000000EF;
  acCmdZoom100 = $000000F0;
  acCmdZoom75 = $000000F1;
  acCmdZoom50 = $000000F2;
  acCmdZoom25 = $000000F3;
  acCmdZoom10 = $000000F4;
  acCmdFitToWindow = $000000F5;
  acCmdPreviewOnePage = $000000F6;
  acCmdPreviewTwoPages = $000000F7;
  acCmdPreviewFourPages = $000000F8;
  acCmdPreviewEightPages = $000000F9;
  acCmdPreviewTwelvePages = $000000FA;
  acCmdOpenURL = $000000FB;
  acCmdOpenStartPage = $000000FC;
  acCmdOpenSearchPage = $000000FD;
  acCmdRegisterActiveXControls = $000000FE;
  acCmdDeleteTab = $000000FF;
  acCmdDatabaseProperties = $00000100;
  acCmdImport = $00000101;
  acCmdInsertActiveXControl = $00000102;
  acCmdInsertHyperlink = $00000103;
  acCmdReferences = $00000104;
  acCmdAutoCorrect = $00000105;
  acCmdInsertProcedure = $00000106;
  acCmdCreateReplica = $00000107;
  acCmdSynchronizeNow = $00000108;
  acCmdRecoverDesignMaster = $00000109;
  acCmdResolveConflicts = $0000010A;
  acCmdDeleteWatch = $0000010B;
  acCmdSpelling = $0000010D;
  acCmdAutoFormat = $0000010E;
  acCmdDeleteTableColumn = $0000010F;
  acCmdInsertTableColumn = $00000110;
  acCmdInsertLookupColumn = $00000111;
  acCmdRenameColumn = $00000112;
  acCmdSetDatabasePassword = $00000113;
  acCmdUserLevelSecurityWizard = $00000114;
  acCmdFilterExcludingSelection = $00000115;
  acCmdQuickPrint = $00000116;
  acCmdConvertMacrosToVisualBasic = $00000117;
  acCmdSaveAllModules = $00000118;
  acCmdFormView = $00000119;
  acCmdDatasheetView = $0000011A;
  acCmdAnalyzePerformance = $0000011B;
  acCmdAnalyzeTable = $0000011C;
  acCmdDocumenter = $0000011D;
  acCmdTileHorizontally = $0000011E;
  acCmdProperties = $0000011F;
  acCmdTransparentBackground = $00000120;
  acCmdTransparentBorder = $00000121;
  acCmdCompileLoadedModules = $00000122;
  acCmdInsertLookupField = $00000123;
  acCmdUndo = $00000124;
  acCmdInsertChart = $00000125;
  acCmdGoBack = $00000126;
  acCmdGoForward = $00000127;
  acCmdStopLoadingPage = $00000128;
  acCmdRefreshPage = $00000129;
  acCmdFavoritesOpen = $0000012A;
  acCmdFavoritesAddTo = $0000012B;
  acCmdShowOnlyWebToolbar = $0000012C;
  acCmdToolbarControlProperties = $0000012D;
  acCmdShowMembers = $0000012E;
  acCmdListConstants = $0000012F;
  acCmdQuickInfo = $00000130;
  acCmdParameterInfo = $00000131;
  acCmdCompleteWord = $00000132;
  acCmdBookmarksToggle = $00000133;
  acCmdBookmarksNext = $00000134;
  acCmdBookmarksPrevious = $00000135;
  acCmdBookmarksClearAll = $00000136;
  acCmdStepOut = $00000137;
  acCmdFindPrevWordUnderCursor = $00000138;
  acCmdFindNextWordUnderCursor = $00000139;
  acCmdObjBrwFindWholeWordOnly = $0000013A;
  acCmdObjBrwShowHiddenMembers = $0000013B;
  acCmdObjBrwHelp = $0000013C;
  acCmdObjBrwViewDefinition = $0000013D;
  acCmdObjBrwGroupMembers = $0000013E;
  acCmdSelectReport = $0000013F;
  acCmdPublish = $00000140;
  acCmdSaveAsHTML = $00000141;
  acCmdSaveAsIDC = $00000142;
  acCmdSaveAsASP = $00000143;
  acCmdPublishDefaults = $00000144;
  acCmdEditHyperlink = $00000145;
  acCmdOpenHyperlink = $00000146;
  acCmdOpenNewHyperlink = $00000147;
  acCmdCopyHyperlink = $00000148;
  acCmdHyperlinkDisplayText = $00000149;
  acCmdTabControlPageOrder = $0000014A;
  acCmdInsertPage = $0000014B;
  acCmdDeletePage = $0000014C;
  acCmdSelectAll = $0000014D;
  acCmdCreateMenuFromMacro = $0000014E;
  acCmdCreateToolbarFromMacro = $0000014F;
  acCmdCreateShortcutMenuFromMacro = $00000150;
  acCmdDelete = $00000151;
  acCmdRunOpenMacro = $00000152;
  acCmdLastPosition = $00000153;
  acCmdPrint = $00000154;
  acCmdFindNext = $00000155;
  acCmdStepInto = $00000156;
  acCmdClearHyperlink = $00000157;
  acCmdDataAccessPageBrowse = $00000158;
  acCmdNewObjectDataAccessPage = $0000015A;
  acCmdSelectDataAccessPage = $0000015B;
  acCmdViewDataAccessPages = $0000015D;
  acCmdNewObjectView = $0000015E;
  acCmdNewObjectStoredProcedure = $0000015F;
  acCmdNewObjectDiagram = $00000160;
  acCmdViewFieldList = $00000161;
  acCmdViewDiagrams = $00000162;
  acCmdViewStoredProcedures = $00000163;
  acCmdViewViews = $00000164;
  acCmdViewShowPaneSQL = $00000165;
  acCmdViewShowPaneDiagram = $00000166;
  acCmdViewShowPaneGrid = $00000167;
  acCmdViewVerifySQL = $00000168;
  acCmdQueryGroupBy = $00000169;
  acCmdQueryAddToOutput = $0000016A;
  acCmdViewTableColumnNames = $0000016B;
  acCmdViewTableNameOnly = $0000016C;
  acCmdHidePane = $0000016D;
  acCmdRemove = $0000016E;
  acCmdViewTableColumnProperties = $00000170;
  acCmdViewTableKeys = $00000171;
  acCmdViewTableUserView = $00000172;
  acCmdZoomSelection = $00000173;
  acCmdDiagramNewLabel = $00000174;
  acCmdDiagramAddRelatedTables = $00000175;
  acCmdDiagramShowRelationshipLabels = $00000176;
  acCmdDiagramModifyUserDefinedView = $00000177;
  acCmdDiagramViewPageBreaks = $00000178;
  acCmdDiagramRecalculatePageBreaks = $00000179;
  acCmdDiagramAutosizeSelectedTables = $0000017A;
  acCmdDiagramLayoutSelection = $0000017B;
  acCmdDiagramLayoutDiagram = $0000017C;
  acCmdDiagramNewTable = $0000017D;
  acCmdDiagramDeleteRelationship = $0000017E;
  acCmdConnection = $0000017F;
  acCmdEditTriggers = $00000180;
  acCmdDataAccessPageDesignView = $00000181;
  acCmdPromote = $00000182;
  acCmdGroupByTable = $00000183;
  acCmdDemote = $00000184;
  acCmdSaveAsDataAccessPage = $00000185;
  acCmdMicrosoftScriptEditor = $00000186;

// Constants for enum AcShowToolbar
type
  AcShowToolbar = TOleEnum;
const
  acToolbarYes = $00000000;
  acToolbarWhereApprop = $00000001;
  acToolbarNo = $00000002;

// Constants for enum AcFormatConditionType
type
  AcFormatConditionType = TOleEnum;
const
  acFieldValue = $00000000;
  acExpression = $00000001;
  acFieldHasFocus = $00000002;

// Constants for enum AcFormatConditionOperator
type
  AcFormatConditionOperator = TOleEnum;
const
  acBetween = $00000000;
  acNotBetween = $00000001;
  acEqual = $00000002;
  acNotEqual = $00000003;
  acGreaterThan = $00000004;
  acLessThan = $00000005;
  acGreaterThanOrEqual = $00000006;
  acLessThanOrEqual = $00000007;

// Constants for enum AcColorIndex
type
  AcColorIndex = TOleEnum;
const
  acColorIndexBlack = $00000000;
  acColorIndexMaroon = $00000001;
  acColorIndexGreen = $00000002;
  acColorIndexOlive = $00000003;
  acColorIndexDarkBlue = $00000004;
  acColorIndexViolet = $00000005;
  acColorIndexTeal = $00000006;
  acColorIndexGray = $00000007;
  acColorIndexSilver = $00000008;
  acColorIndexRed = $00000009;
  acColorIndexBrightGreen = $0000000A;
  acColorIndexYellow = $0000000B;
  acColorIndexBlue = $0000000C;
  acColorIndexFuschia = $0000000D;
  acColorIndexAqua = $0000000E;
  acColorIndexWhite = $0000000F;

// Constants for enum RefKind
type
  RefKind = TOleEnum;
const
  TypeLib = $00000000;
  Project = $00000001;

// Constants for enum ProcKind
type
  ProcKind = TOleEnum;
const
  Proc = $00000000;
  Let = $00000001;
  Set_ = $00000002;
  Get = $00000003;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  DoCmd = interface;
  DoCmdDisp = dispinterface;
  _RecordsetEvents = interface;
  _RecordsetEventsDisp = dispinterface;
  _AccessProperty = interface;
  _AccessPropertyDisp = dispinterface;
  Properties = interface;
  PropertiesDisp = dispinterface;
  _FormatCondition = interface;
  _FormatConditionDisp = dispinterface;
  FormatConditions = interface;
  FormatConditionsDisp = dispinterface;
  _ItemsSelected = interface;
  _ItemsSelectedDisp = dispinterface;
  Children = interface;
  ChildrenDisp = dispinterface;
  _AccessField = interface;
  _AccessFieldDisp = dispinterface;
  __Help = interface;
  _Hyperlink = interface;
  _HyperlinkDisp = dispinterface;
  _Page = interface;
  _PageDisp = dispinterface;
  Pages = interface;
  PagesDisp = dispinterface;
  _Control = interface;
  _ControlDisp = dispinterface;
  __ControlInReportEvents = interface;
  Controls = interface;
  ControlsDisp = dispinterface;
  _Label = interface;
  _LabelDisp = dispinterface;
  _LabelEvents = interface;
  _ChildLabelEvents = interface;
  _Rectangle = interface;
  _RectangleDisp = dispinterface;
  _RectangleEvents = interface;
  _Line = interface;
  _LineDisp = dispinterface;
  _LineEvents = interface;
  _Image = interface;
  _ImageDisp = dispinterface;
  _ImageEvents = interface;
  _CommandButton = interface;
  _CommandButtonDisp = dispinterface;
  _CommandButtonEvents = interface;
  _OptionButton = interface;
  _OptionButtonDisp = dispinterface;
  _OptionButtonEvents = interface;
  _OptionButtonInOptionEvents = interface;
  _Checkbox = interface;
  _CheckboxDisp = dispinterface;
  _CheckBoxEvents = interface;
  _CheckBoxInOptionEvents = interface;
  _OptionGroup = interface;
  _OptionGroupDisp = dispinterface;
  _OptionGroupEvents = interface;
  _BoundObjectFrame = interface;
  _BoundObjectFrameDisp = dispinterface;
  _BoundObjectFrameEvents = interface;
  _Textbox = interface;
  _TextboxDisp = dispinterface;
  _TextBoxEvents = interface;
  _ListBox = interface;
  _ListBoxDisp = dispinterface;
  _ListBoxEvents = interface;
  _Combobox = interface;
  _ComboboxDisp = dispinterface;
  _ComboBoxEvents = interface;
  _ObjectFrame = interface;
  _ObjectFrameDisp = dispinterface;
  _ObjectFrameEvents = interface;
  _PageBreak = interface;
  _PageBreakDisp = dispinterface;
  _PageBreakEvents = interface;
  _ToggleButton = interface;
  _ToggleButtonDisp = dispinterface;
  _ToggleButtonEvents = interface;
  _ToggleButtonInOptionEvents = interface;
  _PaletteButton = interface;
  _PaletteButtonDisp = dispinterface;
  _PaletteButtonEvents = interface;
  _SubForm = interface;
  _SubFormDisp = dispinterface;
  _SubFormEvents = interface;
  _SubReport = interface;
  _SubReportDisp = dispinterface;
  _SubReportEvents = interface;
  _CustomControl = interface;
  _CustomControlDisp = dispinterface;
  _CustomControlEvents = interface;
  _CustomControlInReportEvents = interface;
  _TabControl = interface;
  _TabControlDisp = dispinterface;
  _TabControlEvents = interface;
  _PageEvents = interface;
  _Section = interface;
  _SectionDisp = dispinterface;
  _SectionEvents = interface;
  _GroupLevel = interface;
  _GroupLevelDisp = dispinterface;
  _SectionInReportEvents = interface;
  _PageHdrFtrInReportEvents = interface;
  Module = interface;
  ModuleDisp = dispinterface;
  Modules = interface;
  ModulesDisp = dispinterface;
  _Form = interface;
  _FormDisp = dispinterface;
  _FormEvents = interface;
  Forms = interface;
  FormsDisp = dispinterface;
  _Report = interface;
  _ReportDisp = dispinterface;
  _ReportEvents = interface;
  Reports = interface;
  ReportsDisp = dispinterface;
  Screen = interface;
  ScreenDisp = dispinterface;
  _Application = interface;
  _ApplicationDisp = dispinterface;
  Reference = interface;
  ReferenceDisp = dispinterface;
  _References = interface;
  _ReferencesDisp = dispinterface;
  _References_Events = dispinterface;
  _Dummy = interface;
  _DummyDisp = dispinterface;
  _DataAccessPage = interface;
  _DataAccessPageDisp = dispinterface;
  DataAccessPages = interface;
  DataAccessPagesDisp = dispinterface;
  AllObjects = interface;
  AllObjectsDisp = dispinterface;
  AccessObjectProperty = interface;
  AccessObjectPropertyDisp = dispinterface;
  AccessObjectProperties = interface;
  AccessObjectPropertiesDisp = dispinterface;
  _CurrentProject = interface;
  _CurrentProjectDisp = dispinterface;
  _CurrentData = interface;
  _CurrentDataDisp = dispinterface;
  AccessObject = interface;
  AccessObjectDisp = dispinterface;
  _WizHook = interface;
  _WizHookDisp = dispinterface;
  _DefaultWebOptions = interface;
  _DefaultWebOptionsDisp = dispinterface;
  _WebOptions = interface;
  _WebOptionsDisp = dispinterface;
  _DummyEvents = interface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  FormatCondition = _FormatCondition;
  AccessField = _AccessField;
  AccessHyperlink = _Hyperlink;
  AccessControl = _Control;
  _ControlInReportEvents = _Control;
  AccessLabel = _Label;
  _ChildLabel = _Label;
  AccessRectangle = _Rectangle;
  AccessLine = _Line;
  AccessImage = _Image;
  AccessCommandButton = _CommandButton;
  AccessOptionButton = _OptionButton;
  _OptionButtonInOption = _OptionButton;
  AccessCheckBox = _Checkbox;
  _CheckBoxInOption = _Checkbox;
  AccessOptionGroup = _OptionGroup;
  AccessBoundObjectFrame = _BoundObjectFrame;
  AccessTextBox = _Textbox;
  AccessListBox = _ListBox;
  AccessComboBox = _Combobox;
  AccessObjectFrame = _ObjectFrame;
  AccessPageBreak = _PageBreak;
  AccessToggleButton = _ToggleButton;
  _ToggleButtonInOption = _ToggleButton;
  AccessPaletteButton = _PaletteButton;
  AccessSubForm = _SubForm;
  AccessSubReport = _SubReport;
  AccessCustomControl = _CustomControl;
  _CustomControlInReport = _CustomControl;
  AccessTabControl = _TabControl;
  AccessPage = _Page;
  AccessSection = _Section;
  AccessGroupLevel = _GroupLevel;
  _SectionInReport = _Section;
  _PageHdrFtrInReport = _Section;
  AccessForm = _Form;
  AccessReport = _Report;
  AccessApplication = _Application;
  AccessReferences = _References;
  DataAccessPage = _DataAccessPage;
  AllForms = AllObjects;
  AllReports = AllObjects;
  AllMacros = AllObjects;
  AllModules = AllObjects;
  AllDataAccessPages = AllObjects;
  AllTables = AllObjects;
  AllQueries = AllObjects;
  AllViews = AllObjects;
  AllStoredProcedures = AllObjects;
  AllDatabaseDiagrams = AllObjects;
  CurrentProject = _CurrentProject;
  CurrentData = _CurrentData;
  CodeProject = _CurrentProject;
  CodeData = _CurrentData;
  WizHook = _WizHook;
  DefaultWebOptions = _DefaultWebOptions;
  AccessWebOptions = _WebOptions;
  Class_ = _Dummy;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  POleVariant1 = ^OleVariant; {*}
  PPSafeArray1 = ^PSafeArray; {*}


// *********************************************************************//
// Interface: DoCmd
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C547E760-9658-101B-81EE-00AA004750E2}
// *********************************************************************//
  DoCmd = interface(IDispatch)
    ['{C547E760-9658-101B-81EE-00AA004750E2}']
    procedure AddMenu {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}MenuName: OleVariant; 
                                                           {VT_12:0}MenuMacroName: OleVariant; 
                                                           {VT_12:0}StatusBarText: OleVariant); safecall;
    procedure ApplyFilter {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}FilterName: OleVariant; 
                                                               {VT_12:0}WhereCondition: OleVariant); safecall;
    procedure Beep {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CancelEvent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Close {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                         {VT_12:0}ObjectName: OleVariant; 
                                                         {VT_29:0}Save: AcCloseSave); safecall;
    procedure CopyObject {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:0}DestinationDatabase: OleVariant; 
                                                              {VT_12:0}NewName: OleVariant; 
                                                              {VT_29:0}SourceObjectType: AcObjectType; 
                                                              {VT_12:0}SourceObjectName: OleVariant); safecall;
    procedure DoMenuItem {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:0}MenuBar: OleVariant; 
                                                              {VT_12:0}MenuName: OleVariant; 
                                                              {VT_12:0}Command: OleVariant; 
                                                              {VT_12:0}Subcommand: OleVariant; 
                                                              {VT_12:0}Version: OleVariant); safecall;
    procedure Echo {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}EchoOn: OleVariant; 
                                                        {VT_12:0}StatusBarText: OleVariant); safecall;
    procedure FindNext {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure FindRecord {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_12:0}FindWhat: OleVariant; 
                                                              {VT_29:0}Match: AcFindMatch; 
                                                              {VT_12:0}MatchCase: OleVariant; 
                                                              {VT_29:0}Search: AcSearchDirection; 
                                                              {VT_12:0}SearchAsFormatted: OleVariant; 
                                                              {VT_29:0}OnlyCurrentField: AcFindField; 
                                                              {VT_12:0}FindFirst: OleVariant); safecall;
    procedure GoToControl {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}ControlName: OleVariant); safecall;
    procedure GoToPage {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}PageNumber: OleVariant; 
                                                            {VT_12:0}Right: OleVariant; 
                                                            {VT_12:0}Down: OleVariant); safecall;
    procedure GoToRecord {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcDataObjectType; 
                                                              {VT_12:0}ObjectName: OleVariant; 
                                                              {VT_29:0}Record_: AcRecord; 
                                                              {VT_12:0}Offset: OleVariant); safecall;
    procedure Hourglass {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}HourglassOn: OleVariant); safecall;
    procedure Maximize {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Minimize {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure MoveSize {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:0}Right: OleVariant; 
                                                            {VT_12:0}Down: OleVariant; 
                                                            {VT_12:0}Width: OleVariant; 
                                                            {VT_12:0}Height: OleVariant); safecall;
    procedure OpenForm {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_12:0}FormName: OleVariant; 
                                                            {VT_29:0}View: AcFormView; 
                                                            {VT_12:0}FilterName: OleVariant; 
                                                            {VT_12:0}WhereCondition: OleVariant; 
                                                            {VT_29:0}DataMode: AcFormOpenDataMode; 
                                                            {VT_29:0}WindowMode: AcWindowMode; 
                                                            {VT_12:0}OpenArgs: OleVariant); safecall;
    procedure OpenQuery {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}QueryName: OleVariant; 
                                                             {VT_29:0}View: AcView; 
                                                             {VT_29:0}DataMode: AcOpenDataMode); safecall;
    procedure OpenTable {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}TableName: OleVariant; 
                                                             {VT_29:0}View: AcView; 
                                                             {VT_29:0}DataMode: AcOpenDataMode); safecall;
    procedure PrintOut {Flags(1), (6/6) CC:0, INV:1, DBG:6}({VT_29:0}PrintRange: AcPrintRange; 
                                                            {VT_12:0}PageFrom: OleVariant; 
                                                            {VT_12:0}PageTo: OleVariant; 
                                                            {VT_29:0}PrintQuality: AcPrintQuality; 
                                                            {VT_12:0}Copies: OleVariant; 
                                                            {VT_12:0}CollateCopies: OleVariant); safecall;
    procedure Quit {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Options: AcQuitOption); safecall;
    procedure Requery {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}ControlName: OleVariant); safecall;
    procedure RepaintObject {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                                 {VT_12:0}ObjectName: OleVariant); safecall;
    procedure Rename {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}NewName: OleVariant; 
                                                          {VT_29:0}ObjectType: AcObjectType; 
                                                          {VT_12:0}OldName: OleVariant); safecall;
    procedure Restore {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure RunMacro {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}MacroName: OleVariant; 
                                                            {VT_12:0}RepeatCount: OleVariant; 
                                                            {VT_12:0}RepeatExpression: OleVariant); safecall;
    procedure RunSQL {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}SQLStatement: OleVariant; 
                                                          {VT_12:0}UseTransaction: OleVariant); safecall;
    procedure SelectObject {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_12:0}ObjectName: OleVariant; 
                                                                {VT_12:0}InDatabaseWindow: OleVariant); safecall;
    procedure SetWarnings {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}WarningsOn: OleVariant); safecall;
    procedure ShowAllRecords {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenReport {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:0}ReportName: OleVariant; 
                                                              {VT_29:0}View: AcView; 
                                                              {VT_12:0}FilterName: OleVariant; 
                                                              {VT_12:0}WhereCondition: OleVariant); safecall;
    procedure TransferDatabase {Flags(1), (8/8) CC:0, INV:1, DBG:6}({VT_29:0}TransferType: AcDataTransferType; 
                                                                    {VT_12:0}DatabaseType: OleVariant; 
                                                                    {VT_12:0}DatabaseName: OleVariant; 
                                                                    {VT_29:0}ObjectType: AcObjectType; 
                                                                    {VT_12:0}Source: OleVariant; 
                                                                    {VT_12:0}Destination: OleVariant; 
                                                                    {VT_12:0}StructureOnly: OleVariant; 
                                                                    {VT_12:0}StoreLogin: OleVariant); safecall;
    procedure TransferSpreadsheet {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_29:0}TransferType: AcDataTransferType; 
                                                                       {VT_29:0}SpreadsheetType: AcSpreadSheetType; 
                                                                       {VT_12:0}TableName: OleVariant; 
                                                                       {VT_12:0}FileName: OleVariant; 
                                                                       {VT_12:0}HasFieldNames: OleVariant; 
                                                                       {VT_12:0}Range: OleVariant; 
                                                                       {VT_12:0}UseOA: OleVariant); safecall;
    procedure TransferText {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_29:0}TransferType: AcTextTransferType; 
                                                                {VT_12:0}SpecificationName: OleVariant; 
                                                                {VT_12:0}TableName: OleVariant; 
                                                                {VT_12:0}FileName: OleVariant; 
                                                                {VT_12:0}HasFieldNames: OleVariant; 
                                                                {VT_12:0}HTMLTableName: OleVariant; 
                                                                {VT_12:0}CodePage: OleVariant); safecall;
    procedure OutputTo {Flags(1), (6/6) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcOutputObjectType; 
                                                            {VT_12:0}ObjectName: OleVariant; 
                                                            {VT_12:0}OutputFormat: OleVariant; 
                                                            {VT_12:0}OutputFile: OleVariant; 
                                                            {VT_12:0}AutoStart: OleVariant; 
                                                            {VT_12:0}TemplateFile: OleVariant); safecall;
    procedure DeleteObject {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_12:0}ObjectName: OleVariant); safecall;
    procedure OpenModule {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}ModuleName: OleVariant; 
                                                              {VT_12:0}ProcedureName: OleVariant); safecall;
    procedure SendObject {Flags(1), (10/10) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcSendObjectType; 
                                                                {VT_12:0}ObjectName: OleVariant; 
                                                                {VT_12:0}OutputFormat: OleVariant; 
                                                                {VT_12:0}To_: OleVariant; 
                                                                {VT_12:0}Cc: OleVariant; 
                                                                {VT_12:0}Bcc: OleVariant; 
                                                                {VT_12:0}Subject: OleVariant; 
                                                                {VT_12:0}MessageText: OleVariant; 
                                                                {VT_12:0}EditMessage: OleVariant; 
                                                                {VT_12:0}TemplateFile: OleVariant); safecall;
    procedure ShowToolbar {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}ToolbarName: OleVariant; 
                                                               {VT_29:0}Show: AcShowToolbar); safecall;
    procedure Save {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                        {VT_12:0}ObjectName: OleVariant); safecall;
    procedure SetMenuItem {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:0}MenuIndex: OleVariant; 
                                                               {VT_12:0}CommandIndex: OleVariant; 
                                                               {VT_12:0}SubcommandIndex: OleVariant; 
                                                               {VT_12:0}Flag: OleVariant); safecall;
    procedure RunCommand {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Command: AcCommand); safecall;
    procedure OpenDataAccessPage {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}DataAccessPageName: OleVariant; 
                                                                      {VT_29:0}View: AcDataAccessPageView); safecall;
    procedure OpenView {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}ViewName: OleVariant; 
                                                            {VT_29:0}View: AcView; 
                                                            {VT_29:0}DataMode: AcOpenDataMode); safecall;
    procedure OpenDiagram {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}DiagramName: OleVariant); safecall;
    procedure OpenStoredProcedure {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}ProcedureName: OleVariant; 
                                                                       {VT_29:0}View: AcView; 
                                                                       {VT_29:0}DataMode: AcOpenDataMode); safecall;
  end;

// *********************************************************************//
// DispIntf:  DoCmdDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C547E760-9658-101B-81EE-00AA004750E2}
// *********************************************************************//
  DoCmdDisp = dispinterface
    ['{C547E760-9658-101B-81EE-00AA004750E2}']
    procedure AddMenu {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}MenuName: OleVariant; 
                                                           {VT_12:0}MenuMacroName: OleVariant; 
                                                           {VT_12:0}StatusBarText: OleVariant); dispid 1001;
    procedure ApplyFilter {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}FilterName: OleVariant; 
                                                               {VT_12:0}WhereCondition: OleVariant); dispid 1002;
    procedure Beep {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1003;
    procedure CancelEvent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1004;
    procedure Close {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                         {VT_12:0}ObjectName: OleVariant; 
                                                         {VT_29:0}Save: AcCloseSave); dispid 1005;
    procedure CopyObject {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:0}DestinationDatabase: OleVariant; 
                                                              {VT_12:0}NewName: OleVariant; 
                                                              {VT_29:0}SourceObjectType: AcObjectType; 
                                                              {VT_12:0}SourceObjectName: OleVariant); dispid 1006;
    procedure DoMenuItem {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:0}MenuBar: OleVariant; 
                                                              {VT_12:0}MenuName: OleVariant; 
                                                              {VT_12:0}Command: OleVariant; 
                                                              {VT_12:0}Subcommand: OleVariant; 
                                                              {VT_12:0}Version: OleVariant); dispid 1007;
    procedure Echo {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}EchoOn: OleVariant; 
                                                        {VT_12:0}StatusBarText: OleVariant); dispid 1008;
    procedure FindNext {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1009;
    procedure FindRecord {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_12:0}FindWhat: OleVariant; 
                                                              {VT_29:0}Match: AcFindMatch; 
                                                              {VT_12:0}MatchCase: OleVariant; 
                                                              {VT_29:0}Search: AcSearchDirection; 
                                                              {VT_12:0}SearchAsFormatted: OleVariant; 
                                                              {VT_29:0}OnlyCurrentField: AcFindField; 
                                                              {VT_12:0}FindFirst: OleVariant); dispid 1010;
    procedure GoToControl {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}ControlName: OleVariant); dispid 1011;
    procedure GoToPage {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}PageNumber: OleVariant; 
                                                            {VT_12:0}Right: OleVariant; 
                                                            {VT_12:0}Down: OleVariant); dispid 1012;
    procedure GoToRecord {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcDataObjectType; 
                                                              {VT_12:0}ObjectName: OleVariant; 
                                                              {VT_29:0}Record_: AcRecord; 
                                                              {VT_12:0}Offset: OleVariant); dispid 1013;
    procedure Hourglass {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}HourglassOn: OleVariant); dispid 1014;
    procedure Maximize {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1015;
    procedure Minimize {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1016;
    procedure MoveSize {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:0}Right: OleVariant; 
                                                            {VT_12:0}Down: OleVariant; 
                                                            {VT_12:0}Width: OleVariant; 
                                                            {VT_12:0}Height: OleVariant); dispid 1017;
    procedure OpenForm {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_12:0}FormName: OleVariant; 
                                                            {VT_29:0}View: AcFormView; 
                                                            {VT_12:0}FilterName: OleVariant; 
                                                            {VT_12:0}WhereCondition: OleVariant; 
                                                            {VT_29:0}DataMode: AcFormOpenDataMode; 
                                                            {VT_29:0}WindowMode: AcWindowMode; 
                                                            {VT_12:0}OpenArgs: OleVariant); dispid 1019;
    procedure OpenQuery {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}QueryName: OleVariant; 
                                                             {VT_29:0}View: AcView; 
                                                             {VT_29:0}DataMode: AcOpenDataMode); dispid 1020;
    procedure OpenTable {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}TableName: OleVariant; 
                                                             {VT_29:0}View: AcView; 
                                                             {VT_29:0}DataMode: AcOpenDataMode); dispid 1021;
    procedure PrintOut {Flags(2), (6/6) CC:0, INV:1, DBG:4}({VT_29:0}PrintRange: AcPrintRange; 
                                                            {VT_12:0}PageFrom: OleVariant; 
                                                            {VT_12:0}PageTo: OleVariant; 
                                                            {VT_29:0}PrintQuality: AcPrintQuality; 
                                                            {VT_12:0}Copies: OleVariant; 
                                                            {VT_12:0}CollateCopies: OleVariant); dispid 1022;
    procedure Quit {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Options: AcQuitOption); dispid 1023;
    procedure Requery {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}ControlName: OleVariant); dispid 1024;
    procedure RepaintObject {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                                 {VT_12:0}ObjectName: OleVariant); dispid 1025;
    procedure Rename {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}NewName: OleVariant; 
                                                          {VT_29:0}ObjectType: AcObjectType; 
                                                          {VT_12:0}OldName: OleVariant); dispid 1026;
    procedure Restore {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1027;
    procedure RunMacro {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}MacroName: OleVariant; 
                                                            {VT_12:0}RepeatCount: OleVariant; 
                                                            {VT_12:0}RepeatExpression: OleVariant); dispid 1030;
    procedure RunSQL {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}SQLStatement: OleVariant; 
                                                          {VT_12:0}UseTransaction: OleVariant); dispid 1031;
    procedure SelectObject {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_12:0}ObjectName: OleVariant; 
                                                                {VT_12:0}InDatabaseWindow: OleVariant); dispid 1032;
    procedure SetWarnings {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}WarningsOn: OleVariant); dispid 1035;
    procedure ShowAllRecords {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1036;
    procedure OpenReport {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:0}ReportName: OleVariant; 
                                                              {VT_29:0}View: AcView; 
                                                              {VT_12:0}FilterName: OleVariant; 
                                                              {VT_12:0}WhereCondition: OleVariant); dispid 1039;
    procedure TransferDatabase {Flags(2), (8/8) CC:0, INV:1, DBG:4}({VT_29:0}TransferType: AcDataTransferType; 
                                                                    {VT_12:0}DatabaseType: OleVariant; 
                                                                    {VT_12:0}DatabaseName: OleVariant; 
                                                                    {VT_29:0}ObjectType: AcObjectType; 
                                                                    {VT_12:0}Source: OleVariant; 
                                                                    {VT_12:0}Destination: OleVariant; 
                                                                    {VT_12:0}StructureOnly: OleVariant; 
                                                                    {VT_12:0}StoreLogin: OleVariant); dispid 1040;
    procedure TransferSpreadsheet {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_29:0}TransferType: AcDataTransferType; 
                                                                       {VT_29:0}SpreadsheetType: AcSpreadSheetType; 
                                                                       {VT_12:0}TableName: OleVariant; 
                                                                       {VT_12:0}FileName: OleVariant; 
                                                                       {VT_12:0}HasFieldNames: OleVariant; 
                                                                       {VT_12:0}Range: OleVariant; 
                                                                       {VT_12:0}UseOA: OleVariant); dispid 1041;
    procedure TransferText {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_29:0}TransferType: AcTextTransferType; 
                                                                {VT_12:0}SpecificationName: OleVariant; 
                                                                {VT_12:0}TableName: OleVariant; 
                                                                {VT_12:0}FileName: OleVariant; 
                                                                {VT_12:0}HasFieldNames: OleVariant; 
                                                                {VT_12:0}HTMLTableName: OleVariant; 
                                                                {VT_12:0}CodePage: OleVariant); dispid 1042;
    procedure OutputTo {Flags(2), (6/6) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcOutputObjectType; 
                                                            {VT_12:0}ObjectName: OleVariant; 
                                                            {VT_12:0}OutputFormat: OleVariant; 
                                                            {VT_12:0}OutputFile: OleVariant; 
                                                            {VT_12:0}AutoStart: OleVariant; 
                                                            {VT_12:0}TemplateFile: OleVariant); dispid 1341;
    procedure DeleteObject {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_12:0}ObjectName: OleVariant); dispid 1372;
    procedure OpenModule {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}ModuleName: OleVariant; 
                                                              {VT_12:0}ProcedureName: OleVariant); dispid 1374;
    procedure SendObject {Flags(2), (10/10) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcSendObjectType; 
                                                                {VT_12:0}ObjectName: OleVariant; 
                                                                {VT_12:0}OutputFormat: OleVariant; 
                                                                {VT_12:0}To_: OleVariant; 
                                                                {VT_12:0}Cc: OleVariant; 
                                                                {VT_12:0}Bcc: OleVariant; 
                                                                {VT_12:0}Subject: OleVariant; 
                                                                {VT_12:0}MessageText: OleVariant; 
                                                                {VT_12:0}EditMessage: OleVariant; 
                                                                {VT_12:0}TemplateFile: OleVariant); dispid 1377;
    procedure ShowToolbar {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}ToolbarName: OleVariant; 
                                                               {VT_29:0}Show: AcShowToolbar); dispid 1394;
    procedure Save {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                        {VT_12:0}ObjectName: OleVariant); dispid 1453;
    procedure SetMenuItem {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:0}MenuIndex: OleVariant; 
                                                               {VT_12:0}CommandIndex: OleVariant; 
                                                               {VT_12:0}SubcommandIndex: OleVariant; 
                                                               {VT_12:0}Flag: OleVariant); dispid 1454;
    procedure RunCommand {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Command: AcCommand); dispid 1602;
    procedure OpenDataAccessPage {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}DataAccessPageName: OleVariant; 
                                                                      {VT_29:0}View: AcDataAccessPageView); dispid 1771;
    procedure OpenView {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}ViewName: OleVariant; 
                                                            {VT_29:0}View: AcView; 
                                                            {VT_29:0}DataMode: AcOpenDataMode); dispid 1793;
    procedure OpenDiagram {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}DiagramName: OleVariant); dispid 1794;
    procedure OpenStoredProcedure {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}ProcedureName: OleVariant; 
                                                                       {VT_29:0}View: AcView; 
                                                                       {VT_29:0}DataMode: AcOpenDataMode); dispid 1795;
  end;

// *********************************************************************//
// Interface: _RecordsetEvents
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {45165490-EF32-11D0-86FB-006097C9818C}
// *********************************************************************//
  _RecordsetEvents = interface(IDispatch)
    ['{45165490-EF32-11D0-86FB-006097C9818C}']
    procedure WillChangeField {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_3:0}cFields: Integer; 
                                                                   {VT_12:0}Fields: OleVariant; 
                                                                   {VT_29:1}var adStatus: EventStatusEnum; 
                                                                   {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure FieldChangeComplete {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_3:0}cFields: Integer; 
                                                                       {VT_12:0}Fields: OleVariant; 
                                                                       {VT_13:0}const pError: IUnknown; 
                                                                       {VT_29:1}var adStatus: EventStatusEnum; 
                                                                       {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure WillChangeRecord {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}adReason: EventReasonEnum; 
                                                                    {VT_3:0}cRecords: Integer; 
                                                                    {VT_29:1}var adStatus: EventStatusEnum; 
                                                                    {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure RecordChangeComplete {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_29:0}adReason: EventReasonEnum; 
                                                                        {VT_3:0}cRecords: Integer; 
                                                                        {VT_13:0}const pError: IUnknown; 
                                                                        {VT_29:1}var adStatus: EventStatusEnum; 
                                                                        {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure WillChangeRecordset {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}adReason: EventReasonEnum; 
                                                                       {VT_29:1}var adStatus: EventStatusEnum; 
                                                                       {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure RecordsetChangeComplete {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}adReason: EventReasonEnum; 
                                                                           {VT_13:0}const pError: IUnknown; 
                                                                           {VT_29:1}var adStatus: EventStatusEnum; 
                                                                           {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure WillMove {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}adReason: EventReasonEnum; 
                                                            {VT_29:1}var adStatus: EventStatusEnum; 
                                                            {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure MoveComplete {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}adReason: EventReasonEnum; 
                                                                {VT_13:0}const pError: IUnknown; 
                                                                {VT_29:1}var adStatus: EventStatusEnum; 
                                                                {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure EndOfRecordset {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_2:1}var fMoreData: Smallint; 
                                                                  {VT_29:1}var adStatus: EventStatusEnum; 
                                                                  {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure FetchProgress {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_3:0}Progress: Integer; 
                                                                 {VT_3:0}MaxProgress: Integer; 
                                                                 {VT_29:1}var adStatus: EventStatusEnum; 
                                                                 {VT_13:0}const pRecordset: IUnknown); safecall;
    procedure FetchComplete {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_13:0}const pError: IUnknown; 
                                                                 {VT_29:1}var adStatus: EventStatusEnum; 
                                                                 {VT_13:0}const pRecordset: IUnknown); safecall;
  end;

// *********************************************************************//
// DispIntf:  _RecordsetEventsDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {45165490-EF32-11D0-86FB-006097C9818C}
// *********************************************************************//
  _RecordsetEventsDisp = dispinterface
    ['{45165490-EF32-11D0-86FB-006097C9818C}']
    procedure WillChangeField {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_3:0}cFields: Integer; 
                                                                   {VT_12:0}Fields: OleVariant; 
                                                                   {VT_29:1}var adStatus: EventStatusEnum; 
                                                                   {VT_13:0}const pRecordset: IUnknown); dispid 9;
    procedure FieldChangeComplete {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:0}cFields: Integer; 
                                                                       {VT_12:0}Fields: OleVariant; 
                                                                       {VT_13:0}const pError: IUnknown; 
                                                                       {VT_29:1}var adStatus: EventStatusEnum; 
                                                                       {VT_13:0}const pRecordset: IUnknown); dispid 10;
    procedure WillChangeRecord {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}adReason: EventReasonEnum; 
                                                                    {VT_3:0}cRecords: Integer; 
                                                                    {VT_29:1}var adStatus: EventStatusEnum; 
                                                                    {VT_13:0}const pRecordset: IUnknown); dispid 11;
    procedure RecordChangeComplete {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_29:0}adReason: EventReasonEnum; 
                                                                        {VT_3:0}cRecords: Integer; 
                                                                        {VT_13:0}const pError: IUnknown; 
                                                                        {VT_29:1}var adStatus: EventStatusEnum; 
                                                                        {VT_13:0}const pRecordset: IUnknown); dispid 12;
    procedure WillChangeRecordset {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}adReason: EventReasonEnum; 
                                                                       {VT_29:1}var adStatus: EventStatusEnum; 
                                                                       {VT_13:0}const pRecordset: IUnknown); dispid 13;
    procedure RecordsetChangeComplete {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}adReason: EventReasonEnum; 
                                                                           {VT_13:0}const pError: IUnknown; 
                                                                           {VT_29:1}var adStatus: EventStatusEnum; 
                                                                           {VT_13:0}const pRecordset: IUnknown); dispid 14;
    procedure WillMove {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}adReason: EventReasonEnum; 
                                                            {VT_29:1}var adStatus: EventStatusEnum; 
                                                            {VT_13:0}const pRecordset: IUnknown); dispid 15;
    procedure MoveComplete {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}adReason: EventReasonEnum; 
                                                                {VT_13:0}const pError: IUnknown; 
                                                                {VT_29:1}var adStatus: EventStatusEnum; 
                                                                {VT_13:0}const pRecordset: IUnknown); dispid 16;
    procedure EndOfRecordset {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_2:1}var fMoreData: Smallint; 
                                                                  {VT_29:1}var adStatus: EventStatusEnum; 
                                                                  {VT_13:0}const pRecordset: IUnknown); dispid 17;
    procedure FetchProgress {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_3:0}Progress: Integer; 
                                                                 {VT_3:0}MaxProgress: Integer; 
                                                                 {VT_29:1}var adStatus: EventStatusEnum; 
                                                                 {VT_13:0}const pRecordset: IUnknown); dispid 18;
    procedure FetchComplete {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_13:0}const pError: IUnknown; 
                                                                 {VT_29:1}var adStatus: EventStatusEnum; 
                                                                 {VT_13:0}const pRecordset: IUnknown); dispid 19;
  end;

// *********************************************************************//
// Interface: _AccessProperty
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDD00-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _AccessProperty = interface(Property_)
    ['{331FDD00-CF31-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Category {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Category: Smallint read Get_Category;
  end;

// *********************************************************************//
// DispIntf:  _AccessPropertyDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDD00-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _AccessPropertyDisp = dispinterface
    ['{331FDD00-CF31-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Category {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint readonly dispid 2096;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1610809346;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint readonly dispid 1610809348;
    property Inherited_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 1610809350;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 10;
  end;

// *********************************************************************//
// Interface: Properties
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDD02-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  Properties = interface(IDispatch)
    ['{331FDD02-CF31-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: IDispatch read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  PropertiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDD02-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  PropertiesDisp = dispinterface
    ['{331FDD02-CF31-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: IDispatch readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: _FormatCondition
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E27A992C-A330-11D0-81DD-00C04FC2F51B}
// *********************************************************************//
  _FormatCondition = interface(IDispatch)
    ['{E27A992C-A330-11D0-81DD-00C04FC2F51B}']
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}plResult: Integer); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}plResult: Integer); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pfResult: WordBool); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pfResult: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pfResult: WordBool); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pfResult: WordBool); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcFormatConditionType; safecall;
    function  Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcFormatConditionOperator; safecall;
    function  Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Modify {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}Type_: AcFormatConditionType; 
                                                          {VT_29:0}Operator: AcFormatConditionOperator; 
                                                          {VT_12:0}Expression1: OleVariant; 
                                                          {VT_12:0}Expression2: OleVariant); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property FontBold: WordBool read Get_FontBold write Set_FontBold;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Type_: AcFormatConditionType read Get_Type_;
    property Operator: AcFormatConditionOperator read Get_Operator;
    property Expression1: WideString read Get_Expression1;
    property Expression2: WideString read Get_Expression2;
  end;

// *********************************************************************//
// DispIntf:  _FormatConditionDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E27A992C-A330-11D0-81DD-00C04FC2F51B}
// *********************************************************************//
  _FormatConditionDisp = dispinterface
    ['{E27A992C-A330-11D0-81DD-00C04FC2F51B}']
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid -513;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid -501;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2127;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2128;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2131;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid -514;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcFormatConditionType readonly dispid 2095;
    property Operator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcFormatConditionOperator readonly dispid 2199;
    property Expression1 {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2200;
    property Expression2 {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2201;
    procedure Modify {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}Type_: AcFormatConditionType; 
                                                          {VT_29:0}Operator: AcFormatConditionOperator; 
                                                          {VT_12:0}Expression1: OleVariant; 
                                                          {VT_12:0}Expression2: OleVariant); dispid 2202;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2063;
  end;

// *********************************************************************//
// Interface: FormatConditions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E27A992E-A330-11D0-81DD-00C04FC2F51B}
// *********************************************************************//
  FormatConditions = interface(IDispatch)
    ['{E27A992E-A330-11D0-81DD-00C04FC2F51B}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): _FormatCondition; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Add {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:0}Type_: AcFormatConditionType; 
                                                       {VT_29:0}Operator: AcFormatConditionOperator; 
                                                       {VT_12:0}Expression1: OleVariant; 
                                                       {VT_12:0}Expression2: OleVariant): _FormatCondition; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: _FormatCondition read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  FormatConditionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E27A992E-A330-11D0-81DD-00C04FC2F51B}
// *********************************************************************//
  FormatConditionsDisp = dispinterface
    ['{E27A992E-A330-11D0-81DD-00C04FC2F51B}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: _FormatCondition readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  Add {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:0}Type_: AcFormatConditionType; 
                                                       {VT_29:0}Operator: AcFormatConditionOperator; 
                                                       {VT_12:0}Expression1: OleVariant; 
                                                       {VT_12:0}Expression2: OleVariant): _FormatCondition; dispid 2191;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2063;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: _ItemsSelected
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {31B09710-EADC-11CD-B9F7-00AA004753B5}
// *********************************************************************//
  _ItemsSelected = interface(IDispatch)
    ['{31B09710-EADC-11CD-B9F7-00AA004753B5}']
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): Integer; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: Integer read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  _ItemsSelectedDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {31B09710-EADC-11CD-B9F7-00AA004753B5}
// *********************************************************************//
  _ItemsSelectedDisp = dispinterface
    ['{31B09710-EADC-11CD-B9F7-00AA004753B5}']
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: Integer readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: Children
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E977-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  Children = interface(IDispatch)
    ['{3B06E977-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: IDispatch read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ChildrenDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E977-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  ChildrenDisp = dispinterface
    ['{3B06E977-E47C-11CD-8701-00AA003F0F07}']
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: IDispatch readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: _AccessField
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B1C1EAC1-486F-11CE-A65D-00AA003F0F07}
// *********************************************************************//
  _AccessField = interface(IDispatch)
    ['{B1C1EAC1-486F-11CE-A65D-00AA003F0F07}']
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    property Value: OleVariant read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  _AccessFieldDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B1C1EAC1-486F-11CE-A65D-00AA003F0F07}
// *********************************************************************//
  _AccessFieldDisp = dispinterface
    ['{B1C1EAC1-486F-11CE-A65D-00AA003F0F07}']
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
  end;

// *********************************************************************//
// Interface: __Help
// Flags:     (16) Hidden
// GUID:      {9CD4A761-A6A9-11CE-A686-00AA003F0F07}
// *********************************************************************//
  __Help = interface(IUnknown)
    ['{9CD4A761-A6A9-11CE-A686-00AA003F0F07}']
    function  Get_FieldName {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_FieldName {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_DataType {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_DataType {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_Description {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_Description {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_FieldSize {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_FieldSize {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_NewValues {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_NewValues {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_Required {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_Required {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AllowZeroLength {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowZeroLength {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_Indexed {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_Indexed {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_DisplayControl {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_DisplayControl {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_ReplicationConflictFunction {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_ReplicationConflictFunction {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:1}pRet: POleVariant1): HResult; stdcall;
    function  Get_ProjectName {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_ProjectName {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:1}pRet: POleVariant1): HResult; stdcall;
    function  Get_MDE {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_MDE {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:1}pRet: POleVariant1): HResult; stdcall;
    function  Get_AllowBreakIntoCode {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowBreakIntoCode {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AllowBuiltInToolbars {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowBuiltInToolbars {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AllowBypassKey {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowBypassKey {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AllowFullMenus {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowFullMenus {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AllowSpecialKeys {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowSpecialKeys {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AllowToolbarChanges {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AllowToolbarChanges {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_StartUpForm {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_StartUpForm {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_StartUpMenuBar {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_StartUpMenuBar {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_StartUpShortcutMenuBar {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_StartUpShortcutMenuBar {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_StartUpShowDBWindow {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_StartUpShowDBWindow {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_StartUpShowStatusBar {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_StartUpShowStatusBar {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AppIcon {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AppIcon {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_AppTitle {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_AppTitle {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_ODBCConnectStr {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_ODBCConnectStr {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:0}pRet: OleVariant): HResult; stdcall;
    function  Get_LogMessages {Flags(1), (1/1) CC:4, INV:2, DBG:6}({VT_12:1}out pRet: OleVariant): HResult; stdcall;
    function  Set_LogMessages {Flags(1), (1/1) CC:4, INV:4, DBG:6}({VT_12:1}var pRet: OleVariant): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _Hyperlink
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {50D56611-60AC-11CF-82C9-00AA004B9FE6}
// *********************************************************************//
  _Hyperlink = interface(IDispatch)
    ['{50D56611-60AC-11CF-82C9-00AA004B9FE6}']
    function  Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pbstrResult: OleVariant); safecall;
    function  Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pbstrResult: OleVariant); safecall;
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Follow {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_11:0}NewWindow: WordBool; 
                                                          {VT_11:0}AddHistory: WordBool; 
                                                          {VT_12:0}ExtraInfo: OleVariant; 
                                                          {VT_29:0}Method: MsoExtraInfoMethod; 
                                                          {VT_8:0}const HeaderInfo: WideString); safecall;
    function  Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pbstrResult: OleVariant); safecall;
    function  Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pbstrResult: OleVariant); safecall;
    function  Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pbstrResult: OleVariant); safecall;
    procedure CreateNewDocument {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                                     {VT_11:0}EditNow: WordBool; 
                                                                     {VT_11:0}Overwrite: WordBool); safecall;
  end;

// *********************************************************************//
// DispIntf:  _HyperlinkDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {50D56611-60AC-11CF-82C9-00AA004B9FE6}
// *********************************************************************//
  _HyperlinkDisp = dispinterface
    ['{50D56611-60AC-11CF-82C9-00AA004B9FE6}']
    function  SubAddress {Flags(2), (1/0) CC:0, INV:2, DBG:4}: WideString; dispid 2182;
    function  Address {Flags(2), (1/0) CC:0, INV:2, DBG:4}: WideString; dispid 2183;
    procedure AddToFavorites {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2184;
    procedure Follow {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_11:0}NewWindow: WordBool; 
                                                          {VT_11:0}AddHistory: WordBool; 
                                                          {VT_12:0}ExtraInfo: OleVariant; 
                                                          {VT_29:0}Method: MsoExtraInfoMethod; 
                                                          {VT_8:0}const HeaderInfo: WideString); dispid 2185;
    function  EmailSubject {Flags(2), (1/0) CC:0, INV:2, DBG:4}: WideString; dispid 2209;
    function  ScreenTip {Flags(2), (1/0) CC:0, INV:2, DBG:4}: WideString; dispid 2211;
    function  TextToDisplay {Flags(2), (1/0) CC:0, INV:2, DBG:4}: WideString; dispid 2231;
    procedure CreateNewDocument {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                                     {VT_11:0}EditNow: WordBool; 
                                                                     {VT_11:0}Overwrite: WordBool); dispid 2232;
  end;

// *********************************************************************//
// Interface: _Page
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E974-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Page = interface(IAccessible)
    ['{3B06E974-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PageIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_PageIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Picture: WideString read Get_Picture write Set_Picture;
    property PictureType: Byte read Get_PictureType write Set_PictureType;
    property PageIndex: Smallint read Get_PageIndex write Set_PageIndex;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property PictureData: OleVariant read Get_PictureData write Set_PictureData;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _PageDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E974-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _PageDisp = dispinterface
    ['{3B06E974-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 341;
    property PageIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 352;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 188;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: Pages
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E978-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  Pages = interface(IDispatch)
    ['{3B06E978-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): AccessPage; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:0}Before: OleVariant): AccessPage; safecall;
    procedure Remove {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}Item: OleVariant); safecall;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: AccessPage read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  PagesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E978-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  PagesDisp = dispinterface
    ['{3B06E978-E47C-11CD-8701-00AA003F0F07}']
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: AccessPage readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:0}Before: OleVariant): AccessPage; dispid 2191;
    procedure Remove {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}Item: OleVariant); dispid 2192;
  end;

// *********************************************************************//
// Interface: _Control
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {26B96540-8F8E-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _Control = interface(IDispatch)
    ['{26B96540-8F8E-101B-AF4E-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Dropdown {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Column {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer; 
                                                              {VT_12:0}Row: OleVariant): OleVariant; safecall;
    function  Get_Selected {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}lRow: Integer): Integer; safecall;
    procedure Set_Selected {Flags(1), (2/2) CC:0, INV:4, DBG:6}({VT_3:0}lRow: Integer; 
                                                                {VT_3:0}pRet: Integer); safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessForm; safecall;
    function  Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReport; safecall;
    function  Get_ItemData {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): OleVariant; safecall;
    function  Get_Object_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ObjectVerbs {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): WideString; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_ItemsSelected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _ItemsSelected; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Pages; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Column {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer; 
                                                         {VT_12:0}Row: OleVariant]: OleVariant read Get_Column;
    property Selected {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}lRow: Integer]: Integer read Get_Selected write Set_Selected;
    property OldValue: OleVariant read Get_OldValue;
    property Form: AccessForm read Get_Form;
    property Report: AccessReport read Get_Report;
    property ItemData {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: OleVariant read Get_ItemData;
    property Object_: IDispatch read Get_Object_;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: WideString read Get_ObjectVerbs;
    property Properties: Properties read Get_Properties;
    property ItemsSelected: _ItemsSelected read Get_ItemsSelected;
    property Pages: Pages read Get_Pages;
    property Controls: Children read Get_Controls;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
  end;

// *********************************************************************//
// DispIntf:  _ControlDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {26B96540-8F8E-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _ControlDisp = dispinterface
    ['{26B96540-8F8E-101B-AF4E-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    procedure Dropdown {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2143;
    property Column {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer; 
                                                         {VT_12:0}Row: OleVariant]: OleVariant readonly dispid 2101;
    property Selected {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}lRow: Integer]: Integer dispid 2113;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Form {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessForm readonly dispid 2089;
    property Report {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReport readonly dispid 2097;
    property ItemData {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: OleVariant readonly dispid 2103;
    property Object_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2104;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: WideString readonly dispid 2105;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    property ItemsSelected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _ItemsSelected readonly dispid 2137;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Pages readonly dispid 2180;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
  end;

// *********************************************************************//
// Interface: __ControlInReportEvents
// Flags:     (16) Hidden
// GUID:      {90B322A5-F1D9-11CD-8701-00AA003F0F07}
// *********************************************************************//
  __ControlInReportEvents = interface(IUnknown)
    ['{90B322A5-F1D9-11CD-8701-00AA003F0F07}']
  end;

// *********************************************************************//
// Interface: Controls
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5970C574-EB8C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  Controls = interface(IDispatch)
    ['{5970C574-EB8C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: IDispatch read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ControlsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5970C574-EB8C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  ControlsDisp = dispinterface
    ['{5970C574-EB8C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: IDispatch readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: _Label
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E948-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Label = interface(IAccessible)
    ['{3B06E948-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HyperlinkAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HyperlinkAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HyperlinkSubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HyperlinkSubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Vertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Vertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_TextAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_NumeralShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_NumeralShapes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    function  Get_LeftMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LeftMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_TopMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TopMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_RightMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_RightMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BottomMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_BottomMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property Caption: WideString read Get_Caption write Set_Caption;
    property HyperlinkAddress: WideString read Get_HyperlinkAddress write Set_HyperlinkAddress;
    property HyperlinkSubAddress: WideString read Get_HyperlinkSubAddress write Set_HyperlinkSubAddress;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Vertical: WordBool read Get_Vertical write Set_Vertical;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property TextAlign: Byte read Get_TextAlign write Set_TextAlign;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property NumeralShapes: Byte read Get_NumeralShapes write Set_NumeralShapes;
    property Name: WideString read Get_Name write Set_Name;
    property LeftMargin: Smallint read Get_LeftMargin write Set_LeftMargin;
    property TopMargin: Smallint read Get_TopMargin write Set_TopMargin;
    property LineSpacing: Smallint read Get_LineSpacing write Set_LineSpacing;
    property RightMargin: Smallint read Get_RightMargin write Set_RightMargin;
    property BottomMargin: Smallint read Get_BottomMargin write Set_BottomMargin;
  end;

// *********************************************************************//
// DispIntf:  _LabelDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E948-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _LabelDisp = dispinterface
    ['{3B06E948-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property HyperlinkAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 343;
    property HyperlinkSubAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 347;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Vertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 355;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property TextAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 136;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property NumeralShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 372;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property LeftMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 384;
    property TopMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 385;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 386;
    property RightMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 388;
    property BottomMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 389;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _LabelEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4341-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _LabelEvents = interface(IUnknown)
    ['{BC9E4341-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _ChildLabelEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4358-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ChildLabelEvents = interface(IUnknown)
    ['{BC9E4358-F037-11CD-8701-00AA003F0F07}']
  end;

// *********************************************************************//
// Interface: _Rectangle
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E94A-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Rectangle = interface(IDispatch)
    ['{3B06E94A-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _RectangleDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E94A-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _RectangleDisp = dispinterface
    ['{3B06E94A-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _RectangleEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4342-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _RectangleEvents = interface(IUnknown)
    ['{BC9E4342-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _Line
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E94C-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Line = interface(IDispatch)
    ['{3B06E94C-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_LineSlant {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LineSlant {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property LineSlant: WordBool read Get_LineSlant write Set_LineSlant;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _LineDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E94C-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _LineDisp = dispinterface
    ['{3B06E94C-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property LineSlant {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 55;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _LineEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4343-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _LineEvents = interface(IUnknown)
    ['{BC9E4343-F037-11CD-8701-00AA003F0F07}']
  end;

// *********************************************************************//
// Interface: _Image
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E94E-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Image = interface(IDispatch)
    ['{3B06E94E-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_SizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_HyperlinkAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HyperlinkAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HyperlinkSubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HyperlinkSubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ObjectPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ObjectPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ImageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ImageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ImageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ImageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property Picture: WideString read Get_Picture write Set_Picture;
    property PictureType: Byte read Get_PictureType write Set_PictureType;
    property PictureData: OleVariant read Get_PictureData write Set_PictureData;
    property SizeMode: Byte read Get_SizeMode write Set_SizeMode;
    property PictureAlignment: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling: WordBool read Get_PictureTiling write Set_PictureTiling;
    property HyperlinkAddress: WideString read Get_HyperlinkAddress write Set_HyperlinkAddress;
    property HyperlinkSubAddress: WideString read Get_HyperlinkSubAddress write Set_HyperlinkSubAddress;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property ObjectPalette: OleVariant read Get_ObjectPalette write Set_ObjectPalette;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ImageHeight: Integer read Get_ImageHeight write Set_ImageHeight;
    property ImageWidth: Integer read Get_ImageWidth write Set_ImageWidth;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property Tag: WideString read Get_Tag write Set_Tag;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _ImageDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E94E-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ImageDisp = dispinterface
    ['{3B06E94E-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 341;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 188;
    property SizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 89;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 309;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 313;
    property HyperlinkAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 343;
    property HyperlinkSubAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 347;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property ObjectPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 99;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ImageHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 307;
    property ImageWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 308;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _ImageEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4344-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ImageEvents = interface(IUnknown)
    ['{BC9E4344-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _CommandButton
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E950-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CommandButton = interface(IAccessible)
    ['{3B06E950-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_Transparent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Transparent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Default {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Default {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Cancel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Cancel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoRepeat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoRepeat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnPush {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnPush {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HyperlinkAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HyperlinkAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HyperlinkSubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HyperlinkSubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ObjectPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ObjectPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Picture: WideString read Get_Picture write Set_Picture;
    property PictureType: Byte read Get_PictureType write Set_PictureType;
    property PictureData: OleVariant read Get_PictureData write Set_PictureData;
    property Transparent: WordBool read Get_Transparent write Set_Transparent;
    property Default: WordBool read Get_Default write Set_Default;
    property Cancel: WordBool read Get_Cancel write Set_Cancel;
    property AutoRepeat: WordBool read Get_AutoRepeat write Set_AutoRepeat;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property OnPush: WideString read Get_OnPush write Set_OnPush;
    property HyperlinkAddress: WideString read Get_HyperlinkAddress write Set_HyperlinkAddress;
    property HyperlinkSubAddress: WideString read Get_HyperlinkSubAddress write Set_HyperlinkSubAddress;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ObjectPalette: OleVariant read Get_ObjectPalette write Set_ObjectPalette;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _CommandButtonDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E950-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CommandButtonDisp = dispinterface
    ['{3B06E950-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 341;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 188;
    property Transparent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 46;
    property Default {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 220;
    property Cancel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 221;
    property AutoRepeat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property OnPush {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 155;
    property HyperlinkAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 343;
    property HyperlinkSubAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 347;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ObjectPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 99;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _CommandButtonEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4345-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CommandButtonEvents = interface(IUnknown)
    ['{BC9E4345-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _OptionButton
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E952-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionButton = interface(IAccessible)
    ['{3B06E952-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OptionValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_OptionValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TripleState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TripleState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property OptionValue: Integer read Get_OptionValue write Set_OptionValue;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TripleState: WordBool read Get_TripleState write Set_TripleState;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _OptionButtonDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E952-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionButtonDisp = dispinterface
    ['{3B06E952-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property OptionValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 58;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TripleState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 294;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _OptionButtonEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4346-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionButtonEvents = interface(IUnknown)
    ['{BC9E4346-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _OptionButtonInOptionEvents
// Flags:     (16) Hidden
// GUID:      {BC9E435B-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionButtonInOptionEvents = interface(IUnknown)
    ['{BC9E435B-F037-11CD-8701-00AA003F0F07}']
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _Checkbox
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E954-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Checkbox = interface(IAccessible)
    ['{3B06E954-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OptionValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_OptionValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TripleState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TripleState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property OptionValue: Integer read Get_OptionValue write Set_OptionValue;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TripleState: WordBool read Get_TripleState write Set_TripleState;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _CheckboxDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E954-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CheckboxDisp = dispinterface
    ['{3B06E954-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property OptionValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 58;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TripleState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 294;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _CheckBoxEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4347-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CheckBoxEvents = interface(IUnknown)
    ['{BC9E4347-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _CheckBoxInOptionEvents
// Flags:     (16) Hidden
// GUID:      {BC9E435D-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CheckBoxInOptionEvents = interface(IUnknown)
    ['{BC9E435D-F037-11CD-8701-00AA003F0F07}']
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _OptionGroup
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E956-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionGroup = interface(IAccessible)
    ['{3B06E956-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _OptionGroupDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E956-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionGroupDisp = dispinterface
    ['{3B06E956-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _OptionGroupEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4348-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _OptionGroupEvents = interface(IUnknown)
    ['{BC9E4348-F037-11CD-8701-00AA003F0F07}']
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _BoundObjectFrame
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E958-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _BoundObjectFrame = interface(IAccessible)
    ['{3B06E958-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Object_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ObjectVerbs {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): WideString; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Class_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Class_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SourceDoc {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceDoc {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SourceItem {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceItem {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AutoActivate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_AutoActivate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DisplayType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_UpdateOptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_UpdateOptions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Verb {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Verb {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_OLETypeAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OLETypeAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ObjectPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ObjectPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_LpOleObject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LpOleObject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ObjectVerbsCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ObjectVerbsCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Action {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Action {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OLEType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OLEType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnUpdated {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnUpdated {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Object_: IDispatch read Get_Object_;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: WideString read Get_ObjectVerbs;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property SizeMode: Byte read Get_SizeMode write Set_SizeMode;
    property Class_: WideString read Get_Class_ write Set_Class_;
    property SourceDoc: WideString read Get_SourceDoc write Set_SourceDoc;
    property SourceItem: WideString read Get_SourceItem write Set_SourceItem;
    property AutoActivate: Smallint read Get_AutoActivate write Set_AutoActivate;
    property DisplayType: WordBool read Get_DisplayType write Set_DisplayType;
    property UpdateOptions: Smallint read Get_UpdateOptions write Set_UpdateOptions;
    property Verb: Integer read Get_Verb write Set_Verb;
    property OLETypeAllowed: Byte read Get_OLETypeAllowed write Set_OLETypeAllowed;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ObjectPalette: OleVariant read Get_ObjectPalette write Set_ObjectPalette;
    property LpOleObject: Integer read Get_LpOleObject write Set_LpOleObject;
    property ObjectVerbsCount: Integer read Get_ObjectVerbsCount write Set_ObjectVerbsCount;
    property Action: Smallint read Get_Action write Set_Action;
    property Scaling: Byte read Get_Scaling write Set_Scaling;
    property OLEType: Byte read Get_OLEType write Set_OLEType;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnUpdated: WideString read Get_OnUpdated write Set_OnUpdated;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _BoundObjectFrameDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E958-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _BoundObjectFrameDisp = dispinterface
    ['{3B06E958-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Object_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2104;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: WideString readonly dispid 2105;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property SizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 89;
    property Class_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 274;
    property SourceDoc {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 133;
    property SourceItem {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 48;
    property AutoActivate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 101;
    property DisplayType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 272;
    property UpdateOptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 103;
    property Verb {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property OLETypeAllowed {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 275;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ObjectPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 99;
    property LpOleObject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 172;
    property ObjectVerbsCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 173;
    property Action {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 273;
    property Scaling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 88;
    property OLEType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 276;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnUpdated {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 118;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _BoundObjectFrameEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4349-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _BoundObjectFrameEvents = interface(IUnknown)
    ['{BC9E4349-F037-11CD-8701-00AA003F0F07}']
    function  Updated {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var Code: Smallint): HResult; stdcall;
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _Textbox
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E946-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Textbox = interface(IAccessible)
    ['{3B06E946-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    function  Get_FormatConditions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormatConditions; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DecimalPlaces {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DecimalPlaces {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_InputMask {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_InputMask {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IMEHold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IMEHold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FuriganaControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FuriganaControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PostalAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PostalAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_EnterKeyBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnterKeyBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AllowAutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowAutoCorrect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Vertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Vertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FELineBreak {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FELineBreak {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FilterLookup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_FilterLookup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_AutoTab {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoTab {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_CanGrow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CanGrow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_CanShrink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CanShrink {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_RunningSum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_RunningSum {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_TextAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SelText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SelText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SelStart {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_SelStart {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SelLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_SelLength {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_TextAlignGeneral {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TextAlignGeneral {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Coltyp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Coltyp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FormatPictureText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FormatPictureText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnChange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnChange {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_KeyboardLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_KeyboardLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_AllowedText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_AllowedText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ScrollBarAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ScrollBarAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_NumeralShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_NumeralShapes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_IMEMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcImeMode; safecall;
    procedure Set_IMEMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pRet: AcImeMode); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    function  Get_IMESentenceMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcImeSentenceMode; safecall;
    procedure Set_IMESentenceMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pRet: AcImeSentenceMode); safecall;
    function  Get_LeftMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LeftMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_TopMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TopMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_RightMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_RightMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BottomMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_BottomMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_IsHyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsHyperlink {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
    property FormatConditions: FormatConditions read Get_FormatConditions;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property Format: WideString read Get_Format write Set_Format;
    property DecimalPlaces: Byte read Get_DecimalPlaces write Set_DecimalPlaces;
    property InputMask: WideString read Get_InputMask write Set_InputMask;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property IMEHold: WordBool read Get_IMEHold write Set_IMEHold;
    property FuriganaControl: WideString read Get_FuriganaControl write Set_FuriganaControl;
    property PostalAddress: WideString read Get_PostalAddress write Set_PostalAddress;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property EnterKeyBehavior: WordBool read Get_EnterKeyBehavior write Set_EnterKeyBehavior;
    property AllowAutoCorrect: WordBool read Get_AllowAutoCorrect write Set_AllowAutoCorrect;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Vertical: WordBool read Get_Vertical write Set_Vertical;
    property FELineBreak: WordBool read Get_FELineBreak write Set_FELineBreak;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property FilterLookup: Byte read Get_FilterLookup write Set_FilterLookup;
    property AutoTab: WordBool read Get_AutoTab write Set_AutoTab;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property ScrollBars: Byte read Get_ScrollBars write Set_ScrollBars;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property CanGrow: WordBool read Get_CanGrow write Set_CanGrow;
    property CanShrink: WordBool read Get_CanShrink write Set_CanShrink;
    property RunningSum: Byte read Get_RunningSum write Set_RunningSum;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property TextAlign: Byte read Get_TextAlign write Set_TextAlign;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property Text: WideString read Get_Text write Set_Text;
    property SelText: WideString read Get_SelText write Set_SelText;
    property SelStart: Smallint read Get_SelStart write Set_SelStart;
    property SelLength: Smallint read Get_SelLength write Set_SelLength;
    property TextAlignGeneral: Smallint read Get_TextAlignGeneral write Set_TextAlignGeneral;
    property Coltyp: Integer read Get_Coltyp write Set_Coltyp;
    property FormatPictureText: WideString read Get_FormatPictureText write Set_FormatPictureText;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnChange: WideString read Get_OnChange write Set_OnChange;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property KeyboardLanguage: Byte read Get_KeyboardLanguage write Set_KeyboardLanguage;
    property AllowedText: Byte read Get_AllowedText write Set_AllowedText;
    property ScrollBarAlign: Byte read Get_ScrollBarAlign write Set_ScrollBarAlign;
    property NumeralShapes: Byte read Get_NumeralShapes write Set_NumeralShapes;
    property IMEMode: AcImeMode read Get_IMEMode write Set_IMEMode;
    property Name: WideString read Get_Name write Set_Name;
    property IMESentenceMode: AcImeSentenceMode read Get_IMESentenceMode write Set_IMESentenceMode;
    property LeftMargin: Smallint read Get_LeftMargin write Set_LeftMargin;
    property TopMargin: Smallint read Get_TopMargin write Set_TopMargin;
    property LineSpacing: Smallint read Get_LineSpacing write Set_LineSpacing;
    property RightMargin: Smallint read Get_RightMargin write Set_RightMargin;
    property BottomMargin: Smallint read Get_BottomMargin write Set_BottomMargin;
    property IsHyperlink: WordBool read Get_IsHyperlink write Set_IsHyperlink;
  end;

// *********************************************************************//
// DispIntf:  _TextboxDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E946-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _TextboxDisp = dispinterface
    ['{3B06E946-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
    property FormatConditions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormatConditions readonly dispid 2203;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 38;
    property DecimalPlaces {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 71;
    property InputMask {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 72;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property IMEHold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 357;
    property FuriganaControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 359;
    property PostalAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 360;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property EnterKeyBehavior {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 74;
    property AllowAutoCorrect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 340;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Vertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 355;
    property FELineBreak {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 358;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property FilterLookup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 305;
    property AutoTab {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 73;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property ScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 152;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property CanGrow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property CanShrink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property RunningSum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 130;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property TextAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 136;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 267;
    property SelText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 271;
    property SelStart {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 270;
    property SelLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 269;
    property TextAlignGeneral {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 137;
    property Coltyp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 139;
    property FormatPictureText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 138;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnChange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 114;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property KeyboardLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 368;
    property AllowedText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 369;
    property ScrollBarAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 371;
    property NumeralShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 372;
    property IMEMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcImeMode dispid 356;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property IMESentenceMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcImeSentenceMode dispid 379;
    property LeftMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 384;
    property TopMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 385;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 386;
    property RightMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 388;
    property BottomMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 389;
    property IsHyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 396;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _TextBoxEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4340-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _TextBoxEvents = interface(IUnknown)
    ['{BC9E4340-F037-11CD-8701-00AA003F0F07}']
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Change {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _ListBox
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E95A-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ListBox = interface(IAccessible)
    ['{3B06E95A-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Column {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer; 
                                                              {VT_12:0}Row: OleVariant): OleVariant; safecall;
    function  Get_Selected {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}lRow: Integer): Integer; safecall;
    procedure Set_Selected {Flags(1), (2/2) CC:0, INV:4, DBG:6}({VT_3:0}lRow: Integer; 
                                                                {VT_3:0}pRet: Integer); safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_ItemData {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  Get_ItemsSelected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _ItemsSelected; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RowSourceType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RowSourceType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RowSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RowSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ColumnCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHeads {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHeads {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ColumnWidths {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ColumnWidths {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_BoundColumn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BoundColumn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IMEHold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IMEHold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MultiSelect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_MultiSelect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ListCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ListCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ListIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ListIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ScrollBarAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ScrollBarAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_TextAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_NumeralShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_NumeralShapes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_IMEMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcImeMode; safecall;
    procedure Set_IMEMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pRet: AcImeMode); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    function  Get_IMESentenceMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcImeSentenceMode; safecall;
    procedure Set_IMESentenceMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pRet: AcImeSentenceMode); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Column {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer; 
                                                         {VT_12:0}Row: OleVariant]: OleVariant read Get_Column;
    property Selected {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}lRow: Integer]: Integer read Get_Selected write Set_Selected;
    property OldValue: OleVariant read Get_OldValue;
    property ItemData {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: OleVariant read Get_ItemData;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property ItemsSelected: _ItemsSelected read Get_ItemsSelected;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property RowSourceType: WideString read Get_RowSourceType write Set_RowSourceType;
    property RowSource: WideString read Get_RowSource write Set_RowSource;
    property ColumnCount: Smallint read Get_ColumnCount write Set_ColumnCount;
    property ColumnHeads: WordBool read Get_ColumnHeads write Set_ColumnHeads;
    property ColumnWidths: WideString read Get_ColumnWidths write Set_ColumnWidths;
    property BoundColumn: Integer read Get_BoundColumn write Set_BoundColumn;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property IMEHold: WordBool read Get_IMEHold write Set_IMEHold;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property MultiSelect: Byte read Get_MultiSelect write Set_MultiSelect;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ListCount: Integer read Get_ListCount write Set_ListCount;
    property ListIndex: Integer read Get_ListIndex write Set_ListIndex;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property ScrollBarAlign: Byte read Get_ScrollBarAlign write Set_ScrollBarAlign;
    property TextAlign: Byte read Get_TextAlign write Set_TextAlign;
    property NumeralShapes: Byte read Get_NumeralShapes write Set_NumeralShapes;
    property IMEMode: AcImeMode read Get_IMEMode write Set_IMEMode;
    property Name: WideString read Get_Name write Set_Name;
    property IMESentenceMode: AcImeSentenceMode read Get_IMESentenceMode write Set_IMESentenceMode;
  end;

// *********************************************************************//
// DispIntf:  _ListBoxDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E95A-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ListBoxDisp = dispinterface
    ['{3B06E95A-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    property Column {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer; 
                                                         {VT_12:0}Row: OleVariant]: OleVariant readonly dispid 2101;
    property Selected {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}lRow: Integer]: Integer dispid 2113;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property ItemData {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: OleVariant readonly dispid 2103;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    property ItemsSelected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _ItemsSelected readonly dispid 2137;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property RowSourceType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 93;
    property RowSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 91;
    property ColumnCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 70;
    property ColumnHeads {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 131;
    property ColumnWidths {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 18;
    property BoundColumn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 13;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property IMEHold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 357;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property MultiSelect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 293;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ListCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 238;
    property ListIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 239;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property ScrollBarAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 371;
    property TextAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 136;
    property NumeralShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 372;
    property IMEMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcImeMode dispid 356;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property IMESentenceMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcImeSentenceMode dispid 379;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _ListBoxEvents
// Flags:     (16) Hidden
// GUID:      {BC9E434B-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ListBoxEvents = interface(IUnknown)
    ['{BC9E434B-F037-11CD-8701-00AA003F0F07}']
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _Combobox
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E95C-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Combobox = interface(IAccessible)
    ['{3B06E95C-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Dropdown {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Column {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer; 
                                                              {VT_12:0}Row: OleVariant): OleVariant; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_ItemData {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink; safecall;
    function  Get_FormatConditions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormatConditions; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DecimalPlaces {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DecimalPlaces {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_InputMask {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_InputMask {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RowSourceType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RowSourceType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RowSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RowSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ColumnCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHeads {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHeads {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ColumnWidths {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ColumnWidths {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_BoundColumn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BoundColumn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ListRows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ListRows {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ListWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ListWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_LimitToList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LimitToList {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoExpand {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoExpand {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IMEHold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IMEHold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AllowAutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowAutoCorrect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_TextAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SelText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SelText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SelStart {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_SelStart {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SelLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_SelLength {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_TextAlignGeneral {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TextAlignGeneral {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FormatPictureText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FormatPictureText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Coltyp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Coltyp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ListCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ListCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ListIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ListIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnChange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnChange {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnNotInList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnNotInList {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_KeyboardLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_KeyboardLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_AllowedText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_AllowedText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ScrollBarAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ScrollBarAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_NumeralShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_NumeralShapes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_IMEMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcImeMode; safecall;
    procedure Set_IMEMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pRet: AcImeMode); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    function  Get_IMESentenceMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcImeSentenceMode; safecall;
    procedure Set_IMESentenceMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pRet: AcImeSentenceMode); safecall;
    function  Get_IsHyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsHyperlink {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Column {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer; 
                                                         {VT_12:0}Row: OleVariant]: OleVariant read Get_Column;
    property OldValue: OleVariant read Get_OldValue;
    property ItemData {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: OleVariant read Get_ItemData;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Hyperlink: _Hyperlink read Get_Hyperlink;
    property FormatConditions: FormatConditions read Get_FormatConditions;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property Format: WideString read Get_Format write Set_Format;
    property DecimalPlaces: Byte read Get_DecimalPlaces write Set_DecimalPlaces;
    property InputMask: WideString read Get_InputMask write Set_InputMask;
    property RowSourceType: WideString read Get_RowSourceType write Set_RowSourceType;
    property RowSource: WideString read Get_RowSource write Set_RowSource;
    property ColumnCount: Smallint read Get_ColumnCount write Set_ColumnCount;
    property ColumnHeads: WordBool read Get_ColumnHeads write Set_ColumnHeads;
    property ColumnWidths: WideString read Get_ColumnWidths write Set_ColumnWidths;
    property BoundColumn: Integer read Get_BoundColumn write Set_BoundColumn;
    property ListRows: Smallint read Get_ListRows write Set_ListRows;
    property ListWidth: WideString read Get_ListWidth write Set_ListWidth;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property LimitToList: WordBool read Get_LimitToList write Set_LimitToList;
    property AutoExpand: WordBool read Get_AutoExpand write Set_AutoExpand;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property IMEHold: WordBool read Get_IMEHold write Set_IMEHold;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property AllowAutoCorrect: WordBool read Get_AllowAutoCorrect write Set_AllowAutoCorrect;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property TextAlign: Byte read Get_TextAlign write Set_TextAlign;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property Text: WideString read Get_Text write Set_Text;
    property SelText: WideString read Get_SelText write Set_SelText;
    property SelStart: Smallint read Get_SelStart write Set_SelStart;
    property SelLength: Smallint read Get_SelLength write Set_SelLength;
    property TextAlignGeneral: Smallint read Get_TextAlignGeneral write Set_TextAlignGeneral;
    property FormatPictureText: WideString read Get_FormatPictureText write Set_FormatPictureText;
    property Coltyp: Integer read Get_Coltyp write Set_Coltyp;
    property ListCount: Integer read Get_ListCount write Set_ListCount;
    property ListIndex: Integer read Get_ListIndex write Set_ListIndex;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnChange: WideString read Get_OnChange write Set_OnChange;
    property OnNotInList: WideString read Get_OnNotInList write Set_OnNotInList;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property KeyboardLanguage: Byte read Get_KeyboardLanguage write Set_KeyboardLanguage;
    property AllowedText: Byte read Get_AllowedText write Set_AllowedText;
    property ScrollBarAlign: Byte read Get_ScrollBarAlign write Set_ScrollBarAlign;
    property NumeralShapes: Byte read Get_NumeralShapes write Set_NumeralShapes;
    property IMEMode: AcImeMode read Get_IMEMode write Set_IMEMode;
    property Name: WideString read Get_Name write Set_Name;
    property IMESentenceMode: AcImeSentenceMode read Get_IMESentenceMode write Set_IMESentenceMode;
    property IsHyperlink: WordBool read Get_IsHyperlink write Set_IsHyperlink;
  end;

// *********************************************************************//
// DispIntf:  _ComboboxDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E95C-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ComboboxDisp = dispinterface
    ['{3B06E95C-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    procedure Dropdown {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2143;
    property Column {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer; 
                                                         {VT_12:0}Row: OleVariant]: OleVariant readonly dispid 2101;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property ItemData {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: OleVariant readonly dispid 2103;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _Hyperlink readonly dispid 2181;
    property FormatConditions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormatConditions readonly dispid 2203;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 38;
    property DecimalPlaces {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 71;
    property InputMask {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 72;
    property RowSourceType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 93;
    property RowSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 91;
    property ColumnCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 70;
    property ColumnHeads {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 131;
    property ColumnWidths {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 18;
    property BoundColumn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 13;
    property ListRows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 153;
    property ListWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 154;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property LimitToList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 67;
    property AutoExpand {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 68;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property IMEHold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 357;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property AllowAutoCorrect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 340;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property TextAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 136;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 267;
    property SelText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 271;
    property SelStart {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 270;
    property SelLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 269;
    property TextAlignGeneral {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 137;
    property FormatPictureText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 138;
    property Coltyp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 139;
    property ListCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 238;
    property ListIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 239;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnChange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 114;
    property OnNotInList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 120;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property KeyboardLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 368;
    property AllowedText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 369;
    property ScrollBarAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 371;
    property NumeralShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 372;
    property IMEMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcImeMode dispid 356;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property IMESentenceMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcImeSentenceMode dispid 379;
    property IsHyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 396;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _ComboBoxEvents
// Flags:     (16) Hidden
// GUID:      {BC9E434C-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ComboBoxEvents = interface(IUnknown)
    ['{BC9E434C-F037-11CD-8701-00AA003F0F07}']
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Change {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  NotInList {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_8:1}var NewData: WideString; 
                                                             {VT_2:1}out Response: Smallint): HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _ObjectFrame
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E95E-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ObjectFrame = interface(IAccessible)
    ['{3B06E95E-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Object_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ObjectVerbs {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): WideString; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_SizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OLEClass {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OLEClass {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Item {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Item {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RowSourceType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RowSourceType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RowSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RowSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_LinkChildFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LinkChildFields {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_LinkMasterFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LinkMasterFields {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AutoActivate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_AutoActivate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DisplayType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_UpdateOptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_UpdateOptions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Verb {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Verb {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_OLEType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OLEType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OLETypeAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OLETypeAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_SourceObject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceObject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Class_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Class_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SourceDoc {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceDoc {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SourceItem {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceItem {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ColumnCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHeads {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHeads {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OleData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_OleData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_UpdateMethod {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_UpdateMethod {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Data {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Data {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ObjectPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ObjectPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_LpOleObject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LpOleObject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ObjectVerbsCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ObjectVerbsCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Action {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Action {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnUpdated {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnUpdated {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Object_: IDispatch read Get_Object_;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: WideString read Get_ObjectVerbs;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property SizeMode: Byte read Get_SizeMode write Set_SizeMode;
    property OLEClass: WideString read Get_OLEClass write Set_OLEClass;
    property Item: WideString read Get_Item write Set_Item;
    property RowSourceType: WideString read Get_RowSourceType write Set_RowSourceType;
    property RowSource: WideString read Get_RowSource write Set_RowSource;
    property LinkChildFields: WideString read Get_LinkChildFields write Set_LinkChildFields;
    property LinkMasterFields: WideString read Get_LinkMasterFields write Set_LinkMasterFields;
    property AutoActivate: Smallint read Get_AutoActivate write Set_AutoActivate;
    property DisplayType: WordBool read Get_DisplayType write Set_DisplayType;
    property UpdateOptions: Smallint read Get_UpdateOptions write Set_UpdateOptions;
    property Verb: Integer read Get_Verb write Set_Verb;
    property OLEType: Byte read Get_OLEType write Set_OLEType;
    property OLETypeAllowed: Byte read Get_OLETypeAllowed write Set_OLETypeAllowed;
    property SourceObject: WideString read Get_SourceObject write Set_SourceObject;
    property Class_: WideString read Get_Class_ write Set_Class_;
    property SourceDoc: WideString read Get_SourceDoc write Set_SourceDoc;
    property SourceItem: WideString read Get_SourceItem write Set_SourceItem;
    property ColumnCount: Smallint read Get_ColumnCount write Set_ColumnCount;
    property ColumnHeads: WordBool read Get_ColumnHeads write Set_ColumnHeads;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property OleData: OleVariant read Get_OleData write Set_OleData;
    property UpdateMethod: Smallint read Get_UpdateMethod write Set_UpdateMethod;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Data: Smallint read Get_Data write Set_Data;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ObjectPalette: OleVariant read Get_ObjectPalette write Set_ObjectPalette;
    property LpOleObject: Integer read Get_LpOleObject write Set_LpOleObject;
    property ObjectVerbsCount: Integer read Get_ObjectVerbsCount write Set_ObjectVerbsCount;
    property Action: Smallint read Get_Action write Set_Action;
    property Scaling: Byte read Get_Scaling write Set_Scaling;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnUpdated: WideString read Get_OnUpdated write Set_OnUpdated;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _ObjectFrameDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E95E-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ObjectFrameDisp = dispinterface
    ['{3B06E95E-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Object_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2104;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: WideString readonly dispid 2105;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property SizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 89;
    property OLEClass {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 76;
    property Item {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 47;
    property RowSourceType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 93;
    property RowSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 91;
    property LinkChildFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 49;
    property LinkMasterFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 50;
    property AutoActivate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 101;
    property DisplayType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 272;
    property UpdateOptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 103;
    property Verb {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property OLEType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 276;
    property OLETypeAllowed {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 275;
    property SourceObject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 132;
    property Class_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 274;
    property SourceDoc {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 133;
    property SourceItem {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 48;
    property ColumnCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 70;
    property ColumnHeads {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 131;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property OleData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 171;
    property UpdateMethod {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 142;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Data {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 242;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ObjectPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 99;
    property LpOleObject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 172;
    property ObjectVerbsCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 173;
    property Action {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 273;
    property Scaling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 88;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnUpdated {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 118;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _ObjectFrameEvents
// Flags:     (16) Hidden
// GUID:      {BC9E434D-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ObjectFrameEvents = interface(IUnknown)
    ['{BC9E434D-F037-11CD-8701-00AA003F0F07}']
    function  Updated {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var Code: Smallint): HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _PageBreak
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E960-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _PageBreak = interface(IDispatch)
    ['{3B06E960-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Tag: WideString read Get_Tag write Set_Tag;
    property Section: Smallint read Get_Section write Set_Section;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _PageBreakDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E960-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _PageBreakDisp = dispinterface
    ['{3B06E960-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _PageBreakEvents
// Flags:     (16) Hidden
// GUID:      {BC9E434E-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _PageBreakEvents = interface(IUnknown)
    ['{BC9E434E-F037-11CD-8701-00AA003F0F07}']
  end;

// *********************************************************************//
// Interface: _ToggleButton
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E962-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ToggleButton = interface(IAccessible)
    ['{3B06E962-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_OptionValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_OptionValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TripleState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TripleState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ObjectPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ObjectPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Picture: WideString read Get_Picture write Set_Picture;
    property PictureType: Byte read Get_PictureType write Set_PictureType;
    property PictureData: OleVariant read Get_PictureData write Set_PictureData;
    property OptionValue: Integer read Get_OptionValue write Set_OptionValue;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TripleState: WordBool read Get_TripleState write Set_TripleState;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ObjectPalette: OleVariant read Get_ObjectPalette write Set_ObjectPalette;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property ReadingOrder: Byte read Get_ReadingOrder write Set_ReadingOrder;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _ToggleButtonDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E962-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ToggleButtonDisp = dispinterface
    ['{3B06E962-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2144;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 341;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 188;
    property OptionValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 58;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TripleState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 294;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ObjectPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 99;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 367;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _ToggleButtonEvents
// Flags:     (16) Hidden
// GUID:      {BC9E434F-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ToggleButtonEvents = interface(IUnknown)
    ['{BC9E434F-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _ToggleButtonInOptionEvents
// Flags:     (16) Hidden
// GUID:      {BC9E435F-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ToggleButtonInOptionEvents = interface(IUnknown)
    ['{BC9E435F-F037-11CD-8701-00AA003F0F07}']
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _PaletteButton
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {9CD4A760-A6A9-11CE-A686-00AA003F0F07}
// *********************************************************************//
  _PaletteButton = interface(IDispatch)
    ['{9CD4A760-A6A9-11CE-A686-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OptionValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_OptionValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DefaultValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultValue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ValidationText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ValidationText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TripleState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TripleState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_HideDuplicates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HideDuplicates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ColumnWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ColumnOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ColumnHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property OptionValue: Integer read Get_OptionValue write Set_OptionValue;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property ValidationRule: WideString read Get_ValidationRule write Set_ValidationRule;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TripleState: WordBool read Get_TripleState write Set_TripleState;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property HideDuplicates: WordBool read Get_HideDuplicates write Set_HideDuplicates;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property ColumnWidth: Smallint read Get_ColumnWidth write Set_ColumnWidth;
    property ColumnOrder: Smallint read Get_ColumnOrder write Set_ColumnOrder;
    property ColumnHidden: WordBool read Get_ColumnHidden write Set_ColumnHidden;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _PaletteButtonDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {9CD4A760-A6A9-11CE-A686-00AA003F0F07}
// *********************************************************************//
  _PaletteButtonDisp = dispinterface
    ['{9CD4A760-A6A9-11CE-A686-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property OptionValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 58;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property DefaultValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 23;
    property ValidationRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 145;
    property ValidationText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 61;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TripleState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 294;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property HideDuplicates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property ColumnWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 166;
    property ColumnOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 165;
    property ColumnHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 167;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _PaletteButtonEvents
// Flags:     (16) Hidden
// GUID:      {A843CCD0-6E2C-11CF-A219-00A0C90542FF}
// *********************************************************************//
  _PaletteButtonEvents = interface(IUnknown)
    ['{A843CCD0-6E2C-11CF-A219-00A0C90542FF}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _SubForm
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E964-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SubForm = interface(IAccessible)
    ['{3B06E964-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessForm; safecall;
    function  Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReport; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Controls; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_SourceObject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceObject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_LinkChildFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LinkChildFields {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_LinkMasterFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LinkMasterFields {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_CanGrow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CanGrow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_CanShrink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CanShrink {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_AutoLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AddColon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddColon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_LabelX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_LabelY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LabelAlign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_LabelAlign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Form: AccessForm read Get_Form;
    property Report: AccessReport read Get_Report;
    property Properties: Properties read Get_Properties;
    property Controls: Controls read Get_Controls;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property SourceObject: WideString read Get_SourceObject write Set_SourceObject;
    property LinkChildFields: WideString read Get_LinkChildFields write Set_LinkChildFields;
    property LinkMasterFields: WideString read Get_LinkMasterFields write Set_LinkMasterFields;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property CanGrow: WordBool read Get_CanGrow write Set_CanGrow;
    property CanShrink: WordBool read Get_CanShrink write Set_CanShrink;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property AutoLabel: WordBool read Get_AutoLabel write Set_AutoLabel;
    property AddColon: WordBool read Get_AddColon write Set_AddColon;
    property LabelX: Smallint read Get_LabelX write Set_LabelX;
    property LabelY: Smallint read Get_LabelY write Set_LabelY;
    property LabelAlign: Byte read Get_LabelAlign write Set_LabelAlign;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _SubFormDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E964-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SubFormDisp = dispinterface
    ['{3B06E964-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Form {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessForm readonly dispid 2089;
    property Report {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReport readonly dispid 2097;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Controls readonly dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property SourceObject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 132;
    property LinkChildFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 49;
    property LinkMasterFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 50;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property CanGrow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property CanShrink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property AutoLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 57;
    property AddColon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property LabelX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 52;
    property LabelY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 53;
    property LabelAlign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 51;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _SubFormEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4350-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SubFormEvents = interface(IUnknown)
    ['{BC9E4350-F037-11CD-8701-00AA003F0F07}']
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _SubReport
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E966-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SubReport = interface(IDispatch)
    ['{3B06E966-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessForm; safecall;
    function  Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReport; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Form: AccessForm read Get_Form;
    property Report: AccessReport read Get_Report;
  end;

// *********************************************************************//
// DispIntf:  _SubReportDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E966-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SubReportDisp = dispinterface
    ['{3B06E966-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Form {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessForm readonly dispid 2089;
    property Report {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReport readonly dispid 2097;
  end;

// *********************************************************************//
// Interface: _SubReportEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4351-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SubReportEvents = interface(IUnknown)
    ['{BC9E4351-F037-11CD-8701-00AA003F0F07}']
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _CustomControl
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E968-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CustomControl = interface(IAccessible)
    ['{3B06E968-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Object_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ObjectVerbs {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): WideString; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Goto_ {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OLEClass {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OLEClass {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Verb {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Verb {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Class_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Class_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OleData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_OleData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_OldBorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_OldBorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_BorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_BorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlTipText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlTipText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ObjectPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ObjectPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_LpOleObject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LpOleObject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ObjectVerbsCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ObjectVerbsCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnUpdated {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnUpdated {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnEnter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnEnter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Default {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Default {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Cancel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Cancel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Custom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Custom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_About {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_About {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Object_: IDispatch read Get_Object_;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: WideString read Get_ObjectVerbs;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property OLEClass: WideString read Get_OLEClass write Set_OLEClass;
    property Verb: Integer read Get_Verb write Set_Verb;
    property Class_: WideString read Get_Class_ write Set_Class_;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property OleData: OleVariant read Get_OleData write Set_OleData;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property OldBorderStyle: Byte read Get_OldBorderStyle write Set_OldBorderStyle;
    property BorderColor: Integer read Get_BorderColor write Set_BorderColor;
    property BorderWidth: Byte read Get_BorderWidth write Set_BorderWidth;
    property BorderLineStyle: Byte read Get_BorderLineStyle write Set_BorderLineStyle;
    property ControlTipText: WideString read Get_ControlTipText write Set_ControlTipText;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property ObjectPalette: OleVariant read Get_ObjectPalette write Set_ObjectPalette;
    property LpOleObject: Integer read Get_LpOleObject write Set_LpOleObject;
    property ObjectVerbsCount: Integer read Get_ObjectVerbsCount write Set_ObjectVerbsCount;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnUpdated: WideString read Get_OnUpdated write Set_OnUpdated;
    property OnEnter: WideString read Get_OnEnter write Set_OnEnter;
    property OnExit: WideString read Get_OnExit write Set_OnExit;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property Default: WordBool read Get_Default write Set_Default;
    property Cancel: WordBool read Get_Cancel write Set_Cancel;
    property Custom: WideString read Get_Custom write Set_Custom;
    property About: WideString read Get_About write Set_About;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _CustomControlDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3B06E968-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CustomControlDisp = dispinterface
    ['{3B06E968-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Object_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2104;
    property ObjectVerbs {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: WideString readonly dispid 2105;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Goto_ {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2023;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property OLEClass {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 76;
    property Verb {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property Class_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 274;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property OleData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 171;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property OldBorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 329;
    property BorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property BorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 10;
    property BorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 11;
    property ControlTipText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 317;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property ObjectPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 99;
    property LpOleObject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 172;
    property ObjectVerbsCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 173;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnUpdated {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 118;
    property OnEnter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 222;
    property OnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 223;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property Default {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 220;
    property Cancel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 221;
    property Custom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 296;
    property About {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 297;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _CustomControlEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4352-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _CustomControlEvents = interface(IUnknown)
    ['{BC9E4352-F037-11CD-8701-00AA003F0F07}']
    function  Updated {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var Code: Smallint): HResult; stdcall;
    function  Enter {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Exit {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _CustomControlInReportEvents
// Flags:     (16) Hidden
// GUID:      {300471E2-7426-11CE-AB64-00AA0042B7CE}
// *********************************************************************//
  _CustomControlInReportEvents = interface(IUnknown)
    ['{300471E2-7426-11CE-AB64-00AA0042B7CE}']
  end;

// *********************************************************************//
// Interface: _TabControl
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E971-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _TabControl = interface(IAccessible)
    ['{3B06E971-E47C-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OldValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    procedure SizeToFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Pages; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ControlType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ControlType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_StatusBarText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBarText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BackStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_MultiRow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MultiRow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_TabFixedHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabFixedHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_TabFixedWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_TabFixedWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TextFontCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TextFontCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Section {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Section {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ControlName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_IsVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IsVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnChange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnChange {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OldValue: OleVariant read Get_OldValue;
    property Properties: Properties read Get_Properties;
    property Pages: Pages read Get_Pages;
    property Value: OleVariant read Get_Value write Set_Value;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ControlType: Byte read Get_ControlType write Set_ControlType;
    property StatusBarText: WideString read Get_StatusBarText write Set_StatusBarText;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property TabStop: WordBool read Get_TabStop write Set_TabStop;
    property TabIndex: Smallint read Get_TabIndex write Set_TabIndex;
    property Left: Smallint read Get_Left write Set_Left;
    property Top: Smallint read Get_Top write Set_Top;
    property Width: Smallint read Get_Width write Set_Width;
    property Height: Smallint read Get_Height write Set_Height;
    property BackStyle: Byte read Get_BackStyle write Set_BackStyle;
    property MultiRow: WordBool read Get_MultiRow write Set_MultiRow;
    property Style: Byte read Get_Style write Set_Style;
    property TabFixedHeight: Smallint read Get_TabFixedHeight write Set_TabFixedHeight;
    property TabFixedWidth: Smallint read Get_TabFixedWidth write Set_TabFixedWidth;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontWeight: Smallint read Get_FontWeight write Set_FontWeight;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline: WordBool read Get_FontUnderline write Set_FontUnderline;
    property TextFontCharSet: Byte read Get_TextFontCharSet write Set_TextFontCharSet;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Section: Smallint read Get_Section write Set_Section;
    property ControlName: WideString read Get_ControlName write Set_ControlName;
    property Tag: WideString read Get_Tag write Set_Tag;
    property IsVisible: WordBool read Get_IsVisible write Set_IsVisible;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property OnChange: WideString read Get_OnChange write Set_OnChange;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _TabControlDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3B06E971-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _TabControlDisp = dispinterface
    ['{3B06E971-E47C-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OldValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2102;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    procedure SizeToFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2151;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Pages readonly dispid 2180;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ControlType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 21;
    property StatusBarText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 135;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property TabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property TabIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 261;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 141;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 29;
    property MultiRow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 348;
    property Style {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 349;
    property TabFixedHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 350;
    property TabFixedWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 351;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 37;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property TextFontCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 193;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Section {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 237;
    property ControlName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 265;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property IsVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 140;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property OnChange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 114;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _TabControlEvents
// Flags:     (16) Hidden
// GUID:      {3B06E972-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _TabControlEvents = interface(IUnknown)
    ['{3B06E972-E47C-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  Change {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _PageEvents
// Flags:     (16) Hidden
// GUID:      {3B06E975-E47C-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _PageEvents = interface(IUnknown)
    ['{3B06E975-E47C-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _Section
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDCFC-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _Section = interface(IDispatch)
    ['{331FDCFC-CF31-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Children; safecall;
    function  Get_EventProcPrefix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EventProcPrefix {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ForceNewPage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ForceNewPage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_NewRowOrCol {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_NewRowOrCol {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DisplayWhen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DisplayWhen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_CanGrow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CanGrow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_CanShrink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CanShrink {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_RepeatSection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RepeatSection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SpecialEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_SpecialEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnPrint {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnPrint {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnRetreat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnRetreat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HasContinued {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HasContinued {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_WillContinue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_WillContinue {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_InSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property Controls: Children read Get_Controls;
    property EventProcPrefix: WideString read Get_EventProcPrefix write Set_EventProcPrefix;
    property _Name: WideString read Get__Name write Set__Name;
    property ForceNewPage: Byte read Get_ForceNewPage write Set_ForceNewPage;
    property NewRowOrCol: Byte read Get_NewRowOrCol write Set_NewRowOrCol;
    property KeepTogether: WordBool read Get_KeepTogether write Set_KeepTogether;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property DisplayWhen: Byte read Get_DisplayWhen write Set_DisplayWhen;
    property CanGrow: WordBool read Get_CanGrow write Set_CanGrow;
    property CanShrink: WordBool read Get_CanShrink write Set_CanShrink;
    property RepeatSection: WordBool read Get_RepeatSection write Set_RepeatSection;
    property Height: Smallint read Get_Height write Set_Height;
    property BackColor: Integer read Get_BackColor write Set_BackColor;
    property SpecialEffect: Byte read Get_SpecialEffect write Set_SpecialEffect;
    property Tag: WideString read Get_Tag write Set_Tag;
    property OnFormat: WideString read Get_OnFormat write Set_OnFormat;
    property OnPrint: WideString read Get_OnPrint write Set_OnPrint;
    property OnRetreat: WideString read Get_OnRetreat write Set_OnRetreat;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property HasContinued: WordBool read Get_HasContinued write Set_HasContinued;
    property WillContinue: WordBool read Get_WillContinue write Set_WillContinue;
    property InSelection: WordBool read Get_InSelection write Set_InSelection;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _SectionDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDCFC-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SectionDisp = dispinterface
    ['{331FDCFC-CF31-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Children readonly dispid 2190;
    property EventProcPrefix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property ForceNewPage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 151;
    property NewRowOrCol {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 231;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 75;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property DisplayWhen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 149;
    property CanGrow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property CanShrink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property RepeatSection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 15;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 44;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 28;
    property SpecialEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 4;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property OnFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 80;
    property OnPrint {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 82;
    property OnRetreat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 84;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property HasContinued {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 200;
    property WillContinue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 201;
    property InSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _SectionEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4353-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SectionEvents = interface(IUnknown)
    ['{BC9E4353-F037-11CD-8701-00AA003F0F07}']
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _GroupLevel
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDD27-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _GroupLevel = interface(IDispatch)
    ['{331FDD27-CF31-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    function  Get_ControlSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ControlSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_SortOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SortOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_GroupHeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_GroupHeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_GroupFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_GroupFooter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_GroupOn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_GroupOn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_GroupInterval {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_GroupInterval {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Properties: Properties read Get_Properties;
    property ControlSource: WideString read Get_ControlSource write Set_ControlSource;
    property SortOrder: WordBool read Get_SortOrder write Set_SortOrder;
    property GroupHeader: WordBool read Get_GroupHeader write Set_GroupHeader;
    property GroupFooter: WordBool read Get_GroupFooter write Set_GroupFooter;
    property GroupOn: Smallint read Get_GroupOn write Set_GroupOn;
    property GroupInterval: Integer read Get_GroupInterval write Set_GroupInterval;
    property KeepTogether: Byte read Get_KeepTogether write Set_KeepTogether;
  end;

// *********************************************************************//
// DispIntf:  _GroupLevelDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDD27-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _GroupLevelDisp = dispinterface
    ['{331FDD27-CF31-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    property ControlSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 27;
    property SortOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 174;
    property GroupHeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 175;
    property GroupFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 176;
    property GroupOn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 177;
    property GroupInterval {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 178;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 75;
  end;

// *********************************************************************//
// Interface: _SectionInReportEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4361-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _SectionInReportEvents = interface(IUnknown)
    ['{BC9E4361-F037-11CD-8701-00AA003F0F07}']
    function  Format {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                          {VT_2:1}var FormatCount: Smallint): HResult; stdcall;
    function  Print {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                         {VT_2:1}var PrintCount: Smallint): HResult; stdcall;
    function  Retreat {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: _PageHdrFtrInReportEvents
// Flags:     (16) Hidden
// GUID:      {7AD9E905-BAF8-11CE-A68A-00AA003F0F07}
// *********************************************************************//
  _PageHdrFtrInReportEvents = interface(IUnknown)
    ['{7AD9E905-BAF8-11CE-A68A-00AA003F0F07}']
    function  Format {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                          {VT_2:1}var FormatCount: Smallint): HResult; stdcall;
    function  Print {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                         {VT_2:1}var PrintCount: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: Module
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDCFE-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  Module = interface(IDispatch)
    ['{331FDCFE-CF31-11CD-8701-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure InsertText {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    procedure AddFromString {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const String_: WideString); safecall;
    procedure AddFromFile {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString); safecall;
    function  Get_Lines {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}Line: Integer; 
                                                             {VT_3:0}NumLines: Integer): WideString; safecall;
    function  Get_CountOfLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure InsertLines {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Line: Integer; 
                                                               {VT_8:0}const String_: WideString); safecall;
    procedure DeleteLines {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}StartLine: Integer; 
                                                               {VT_3:0}Count: Integer); safecall;
    procedure ReplaceLine {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Line: Integer; 
                                                               {VT_8:0}const String_: WideString); safecall;
    function  Get_ProcStartLine {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_8:0}const ProcName: WideString; 
                                                                     {VT_29:0}ProcKind: vbext_ProcKind): Integer; safecall;
    function  Get_ProcCountLines {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_8:0}const ProcName: WideString; 
                                                                      {VT_29:0}ProcKind: vbext_ProcKind): Integer; safecall;
    function  Get_ProcBodyLine {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_8:0}const ProcName: WideString; 
                                                                    {VT_29:0}ProcKind: vbext_ProcKind): Integer; safecall;
    function  Get_ProcOfLine {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}Line: Integer; 
                                                                  {VT_29:1}out pprockind: vbext_ProcKind): WideString; safecall;
    function  Get_CountOfDeclarationLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  CreateEventProc {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const EventName: WideString; 
                                                                   {VT_8:0}const ObjectName: WideString): Integer; safecall;
    function  Find {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_8:0}const Target: WideString; 
                                                        {VT_3:1}var StartLine: Integer; 
                                                        {VT_3:1}var StartColumn: Integer; 
                                                        {VT_3:1}var EndLine: Integer; 
                                                        {VT_3:1}var EndColumn: Integer; 
                                                        {VT_11:0}WholeWord: WordBool; 
                                                        {VT_11:0}MatchCase: WordBool; 
                                                        {VT_11:0}PatternSearch: WordBool): WordBool; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcModuleType; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name write Set_Name;
    property Lines {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}Line: Integer; 
                                                        {VT_3:0}NumLines: Integer]: WideString read Get_Lines;
    property CountOfLines: Integer read Get_CountOfLines;
    property ProcStartLine {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_8:0}const ProcName: WideString; 
                                                                {VT_29:0}ProcKind: vbext_ProcKind]: Integer read Get_ProcStartLine;
    property ProcCountLines {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_8:0}const ProcName: WideString; 
                                                                 {VT_29:0}ProcKind: vbext_ProcKind]: Integer read Get_ProcCountLines;
    property ProcBodyLine {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_8:0}const ProcName: WideString; 
                                                               {VT_29:0}ProcKind: vbext_ProcKind]: Integer read Get_ProcBodyLine;
    property ProcOfLine {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}Line: Integer; 
                                                             {VT_29:1}out pprockind: vbext_ProcKind]: WideString read Get_ProcOfLine;
    property CountOfDeclarationLines: Integer read Get_CountOfDeclarationLines;
    property Type_: AcModuleType read Get_Type_;
  end;

// *********************************************************************//
// DispIntf:  ModuleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {331FDCFE-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  ModuleDisp = dispinterface
    ['{331FDCFE-CF31-11CD-8701-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    procedure InsertText {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString); dispid 2093;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    procedure AddFromString {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const String_: WideString); dispid 1610743813;
    procedure AddFromFile {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString); dispid 1610743814;
    property Lines {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}Line: Integer; 
                                                        {VT_3:0}NumLines: Integer]: WideString readonly dispid 1610743815;
    property CountOfLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1610743816;
    procedure InsertLines {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Line: Integer; 
                                                               {VT_8:0}const String_: WideString); dispid 1610743817;
    procedure DeleteLines {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}StartLine: Integer; 
                                                               {VT_3:0}Count: Integer); dispid 1610743818;
    procedure ReplaceLine {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Line: Integer; 
                                                               {VT_8:0}const String_: WideString); dispid 1610743819;
    property ProcStartLine {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:0}const ProcName: WideString; 
                                                                {VT_29:0}ProcKind: vbext_ProcKind]: Integer readonly dispid 1610743820;
    property ProcCountLines {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:0}const ProcName: WideString; 
                                                                 {VT_29:0}ProcKind: vbext_ProcKind]: Integer readonly dispid 1610743821;
    property ProcBodyLine {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:0}const ProcName: WideString; 
                                                               {VT_29:0}ProcKind: vbext_ProcKind]: Integer readonly dispid 1610743822;
    property ProcOfLine {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}Line: Integer; 
                                                             {VT_29:1}out pprockind: vbext_ProcKind]: WideString readonly dispid 1610743823;
    property CountOfDeclarationLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1610743824;
    function  CreateEventProc {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const EventName: WideString; 
                                                                   {VT_8:0}const ObjectName: WideString): Integer; dispid 1610743825;
    function  Find {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_8:0}const Target: WideString; 
                                                        {VT_3:1}var StartLine: Integer; 
                                                        {VT_3:1}var StartColumn: Integer; 
                                                        {VT_3:1}var EndLine: Integer; 
                                                        {VT_3:1}var EndColumn: Integer; 
                                                        {VT_11:0}WholeWord: WordBool; 
                                                        {VT_11:0}MatchCase: WordBool; 
                                                        {VT_11:0}PatternSearch: WordBool): WordBool; dispid 1610743826;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcModuleType readonly dispid 1610743827;
  end;

// *********************************************************************//
// Interface: Modules
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9DD0AF42-6E28-11CF-9008-00AA0042B7CE}
// *********************************************************************//
  Modules = interface(IDispatch)
    ['{9DD0AF42-6E28-11CF-9008-00AA0042B7CE}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): Module; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: Module read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ModulesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9DD0AF42-6E28-11CF-9008-00AA0042B7CE}
// *********************************************************************//
  ModulesDisp = dispinterface
    ['{9DD0AF42-6E28-11CF-9008-00AA0042B7CE}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: Module readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: _Form
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E5135D80-8F8D-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _Form = interface(IAccessible)
    ['{E5135D80-8F8D-101B-AF4E-00AA003F0F07}']
    function  Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessControl; safecall;
    function  Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}ControlType: Integer): AccessControl; safecall;
    function  Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:6}({VT_9:0}const pRet: IDispatch); safecall;
    function  Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): AccessSection; safecall;
    function  Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessForm; safecall;
    function  Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Module; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    function  Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessControl; safecall;
    procedure Recalc {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Refresh {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Repaint {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure GoToPage {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_3:0}PageNumber: Integer; 
                                                            {VT_3:0}Right: Integer; 
                                                            {VT_3:0}Down: Integer); safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Controls; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    function  Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    property FormName: WideString read Get_FormName write Set_FormName;
    property RecordSource: WideString read Get_RecordSource write Set_RecordSource;
    property Filter: WideString read Get_Filter write Set_Filter;
    property FilterOn: WordBool read Get_FilterOn write Set_FilterOn;
    property OrderBy: WideString read Get_OrderBy write Set_OrderBy;
    property OrderByOn: WordBool read Get_OrderByOn write Set_OrderByOn;
    property AllowFilters: WordBool read Get_AllowFilters write Set_AllowFilters;
    property Caption: WideString read Get_Caption write Set_Caption;
    property DefaultView: Byte read Get_DefaultView write Set_DefaultView;
    property ViewsAllowed: Byte read Get_ViewsAllowed write Set_ViewsAllowed;
    property AllowEditing: WordBool read Get_AllowEditing write Set_AllowEditing;
    property DefaultEditing: Smallint read Get_DefaultEditing write Set_DefaultEditing;
    property AllowEdits: WordBool read Get_AllowEdits write Set_AllowEdits;
    property AllowDeletions: WordBool read Get_AllowDeletions write Set_AllowDeletions;
    property AllowAdditions: WordBool read Get_AllowAdditions write Set_AllowAdditions;
    property DataEntry: WordBool read Get_DataEntry write Set_DataEntry;
    property AllowUpdating: Byte read Get_AllowUpdating write Set_AllowUpdating;
    property RecordsetType: Byte read Get_RecordsetType write Set_RecordsetType;
    property RecordLocks: Byte read Get_RecordLocks write Set_RecordLocks;
    property ScrollBars: Byte read Get_ScrollBars write Set_ScrollBars;
    property RecordSelectors: WordBool read Get_RecordSelectors write Set_RecordSelectors;
    property NavigationButtons: WordBool read Get_NavigationButtons write Set_NavigationButtons;
    property DividingLines: WordBool read Get_DividingLines write Set_DividingLines;
    property AutoResize: WordBool read Get_AutoResize write Set_AutoResize;
    property AutoCenter: WordBool read Get_AutoCenter write Set_AutoCenter;
    property PopUp: WordBool read Get_PopUp write Set_PopUp;
    property Modal: WordBool read Get_Modal write Set_Modal;
    property BorderStyle: Byte read Get_BorderStyle write Set_BorderStyle;
    property ControlBox: WordBool read Get_ControlBox write Set_ControlBox;
    property MinButton: WordBool read Get_MinButton write Set_MinButton;
    property MaxButton: WordBool read Get_MaxButton write Set_MaxButton;
    property MinMaxButtons: Byte read Get_MinMaxButtons write Set_MinMaxButtons;
    property CloseButton: WordBool read Get_CloseButton write Set_CloseButton;
    property WhatsThisButton: WordBool read Get_WhatsThisButton write Set_WhatsThisButton;
    property Width: Smallint read Get_Width write Set_Width;
    property Picture: WideString read Get_Picture write Set_Picture;
    property PictureType: Byte read Get_PictureType write Set_PictureType;
    property PictureSizeMode: Byte read Get_PictureSizeMode write Set_PictureSizeMode;
    property PictureAlignment: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling: WordBool read Get_PictureTiling write Set_PictureTiling;
    property Cycle: Byte read Get_Cycle write Set_Cycle;
    property MenuBar: WideString read Get_MenuBar write Set_MenuBar;
    property Toolbar: WideString read Get_Toolbar write Set_Toolbar;
    property ShortcutMenu: WordBool read Get_ShortcutMenu write Set_ShortcutMenu;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property GridX: Smallint read Get_GridX write Set_GridX;
    property GridY: Smallint read Get_GridY write Set_GridY;
    property LayoutForPrint: WordBool read Get_LayoutForPrint write Set_LayoutForPrint;
    property FastLaserPrinting: WordBool read Get_FastLaserPrinting write Set_FastLaserPrinting;
    property HelpFile: WideString read Get_HelpFile write Set_HelpFile;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property RowHeight: Smallint read Get_RowHeight write Set_RowHeight;
    property DatasheetFontName: WideString read Get_DatasheetFontName write Set_DatasheetFontName;
    property DatasheetFontHeight: Smallint read Get_DatasheetFontHeight write Set_DatasheetFontHeight;
    property DatasheetFontWeight: Smallint read Get_DatasheetFontWeight write Set_DatasheetFontWeight;
    property DatasheetFontItalic: WordBool read Get_DatasheetFontItalic write Set_DatasheetFontItalic;
    property DatasheetFontUnderline: WordBool read Get_DatasheetFontUnderline write Set_DatasheetFontUnderline;
    property TabularCharSet: Byte read Get_TabularCharSet write Set_TabularCharSet;
    property DatasheetGridlinesBehavior: Byte read Get_DatasheetGridlinesBehavior write Set_DatasheetGridlinesBehavior;
    property DatasheetGridlinesColor: Integer read Get_DatasheetGridlinesColor write Set_DatasheetGridlinesColor;
    property DatasheetCellsEffect: Byte read Get_DatasheetCellsEffect write Set_DatasheetCellsEffect;
    property DatasheetForeColor: Integer read Get_DatasheetForeColor write Set_DatasheetForeColor;
    property ShowGrid: WordBool read Get_ShowGrid write Set_ShowGrid;
    property DatasheetBackColor: Integer read Get_DatasheetBackColor write Set_DatasheetBackColor;
    property Hwnd: Integer read Get_Hwnd write Set_Hwnd;
    property Count: Smallint read Get_Count write Set_Count;
    property Page: Integer read Get_Page write Set_Page;
    property Pages: Smallint read Get_Pages write Set_Pages;
    property LogicalPageWidth: Integer read Get_LogicalPageWidth write Set_LogicalPageWidth;
    property LogicalPageHeight: Integer read Get_LogicalPageHeight write Set_LogicalPageHeight;
    property ZoomControl: Integer read Get_ZoomControl write Set_ZoomControl;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Painting: WordBool read Get_Painting write Set_Painting;
    property PrtMip: OleVariant read Get_PrtMip write Set_PrtMip;
    property PrtDevMode: OleVariant read Get_PrtDevMode write Set_PrtDevMode;
    property PrtDevNames: OleVariant read Get_PrtDevNames write Set_PrtDevNames;
    property FrozenColumns: Smallint read Get_FrozenColumns write Set_FrozenColumns;
    property Bookmark: OleVariant read Get_Bookmark write Set_Bookmark;
    property TabularFamily: Byte read Get_TabularFamily write Set_TabularFamily;
    property _Name: WideString read Get__Name write Set__Name;
    property PaletteSource: WideString read Get_PaletteSource write Set_PaletteSource;
    property Tag: WideString read Get_Tag write Set_Tag;
    property PaintPalette: OleVariant read Get_PaintPalette write Set_PaintPalette;
    property OnMenu: WideString read Get_OnMenu write Set_OnMenu;
    property OpenArgs: OleVariant read Get_OpenArgs write Set_OpenArgs;
    property ConnectSynch: Smallint read Get_ConnectSynch write Set_ConnectSynch;
    property OnCurrent: WideString read Get_OnCurrent write Set_OnCurrent;
    property OnInsert: WideString read Get_OnInsert write Set_OnInsert;
    property BeforeInsert: WideString read Get_BeforeInsert write Set_BeforeInsert;
    property AfterInsert: WideString read Get_AfterInsert write Set_AfterInsert;
    property BeforeUpdate: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnDirty: WideString read Get_OnDirty write Set_OnDirty;
    property OnDelete: WideString read Get_OnDelete write Set_OnDelete;
    property BeforeDelConfirm: WideString read Get_BeforeDelConfirm write Set_BeforeDelConfirm;
    property AfterDelConfirm: WideString read Get_AfterDelConfirm write Set_AfterDelConfirm;
    property OnOpen: WideString read Get_OnOpen write Set_OnOpen;
    property OnLoad: WideString read Get_OnLoad write Set_OnLoad;
    property OnResize: WideString read Get_OnResize write Set_OnResize;
    property OnUnload: WideString read Get_OnUnload write Set_OnUnload;
    property OnClose: WideString read Get_OnClose write Set_OnClose;
    property OnActivate: WideString read Get_OnActivate write Set_OnActivate;
    property OnDeactivate: WideString read Get_OnDeactivate write Set_OnDeactivate;
    property OnGotFocus: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property KeyPreview: WordBool read Get_KeyPreview write Set_KeyPreview;
    property OnError: WideString read Get_OnError write Set_OnError;
    property OnFilter: WideString read Get_OnFilter write Set_OnFilter;
    property OnApplyFilter: WideString read Get_OnApplyFilter write Set_OnApplyFilter;
    property OnTimer: WideString read Get_OnTimer write Set_OnTimer;
    property TimerInterval: Integer read Get_TimerInterval write Set_TimerInterval;
    property Dirty: WordBool read Get_Dirty write Set_Dirty;
    property WindowWidth: Smallint read Get_WindowWidth write Set_WindowWidth;
    property WindowHeight: Smallint read Get_WindowHeight write Set_WindowHeight;
    property CurrentView: Smallint read Get_CurrentView write Set_CurrentView;
    property CurrentSectionTop: Smallint read Get_CurrentSectionTop write Set_CurrentSectionTop;
    property CurrentSectionLeft: Smallint read Get_CurrentSectionLeft write Set_CurrentSectionLeft;
    property SelLeft: Integer read Get_SelLeft write Set_SelLeft;
    property SelTop: Integer read Get_SelTop write Set_SelTop;
    property SelWidth: Integer read Get_SelWidth write Set_SelWidth;
    property SelHeight: Integer read Get_SelHeight write Set_SelHeight;
    property CurrentRecord: Integer read Get_CurrentRecord write Set_CurrentRecord;
    property PictureData: OleVariant read Get_PictureData write Set_PictureData;
    property InsideHeight: Integer read Get_InsideHeight write Set_InsideHeight;
    property InsideWidth: Integer read Get_InsideWidth write Set_InsideWidth;
    property PicturePalette: OleVariant read Get_PicturePalette write Set_PicturePalette;
    property HasModule: WordBool read Get_HasModule write Set_HasModule;
    property acHiddenCurrentPage: Integer read Get_acHiddenCurrentPage write Set_acHiddenCurrentPage;
    property Orientation: Byte read Get_Orientation write Set_Orientation;
    property AllowDesignChanges: WordBool read Get_AllowDesignChanges write Set_AllowDesignChanges;
    property ServerFilter: WideString read Get_ServerFilter write Set_ServerFilter;
    property ServerFilterByForm: WordBool read Get_ServerFilterByForm write Set_ServerFilterByForm;
    property MaxRecords: Integer read Get_MaxRecords write Set_MaxRecords;
    property UniqueTable: WideString read Get_UniqueTable write Set_UniqueTable;
    property ResyncCommand: WideString read Get_ResyncCommand write Set_ResyncCommand;
    property InputParameters: WideString read Get_InputParameters write Set_InputParameters;
    property MaxRecButton: WordBool read Get_MaxRecButton write Set_MaxRecButton;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property NewRecord: Smallint read Get_NewRecord;
    property ActiveControl: AccessControl read Get_ActiveControl;
    property DefaultControl {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}ControlType: Integer]: AccessControl read Get_DefaultControl;
    property Dynaset: IDispatch read Get_Dynaset;
    property RecordsetClone: IDispatch read Get_RecordsetClone;
    property Recordset: IDispatch read Get_Recordset write Set_Recordset;
    property Section {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: AccessSection read Get_Section;
    property Form: AccessForm read Get_Form;
    property Module: Module read Get_Module;
    property Properties: Properties read Get_Properties;
    property ConnectControl: AccessControl read Get_ConnectControl;
    property Controls: Controls read Get_Controls;
    property Name: WideString read Get_Name write Set_Name;
    property SubdatasheetHeight: Smallint read Get_SubdatasheetHeight write Set_SubdatasheetHeight;
    property SubdatasheetExpanded: WordBool read Get_SubdatasheetExpanded write Set_SubdatasheetExpanded;
  end;

// *********************************************************************//
// DispIntf:  _FormDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E5135D80-8F8D-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _FormDisp = dispinterface
    ['{E5135D80-8F8D-101B-AF4E-00AA003F0F07}']
    property FormName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 39;
    property RecordSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 156;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 245;
    property FilterOn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 332;
    property OrderBy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 331;
    property OrderByOn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 336;
    property AllowFilters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 30;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property DefaultView {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 147;
    property ViewsAllowed {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 146;
    property AllowEditing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 24;
    property DefaultEditing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 134;
    property AllowEdits {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 339;
    property AllowDeletions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 292;
    property AllowAdditions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 326;
    property DataEntry {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 338;
    property AllowUpdating {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 45;
    property RecordsetType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 337;
    property RecordLocks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 26;
    property ScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 152;
    property RecordSelectors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 19;
    property NavigationButtons {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 279;
    property DividingLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 314;
    property AutoResize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property AutoCenter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 278;
    property PopUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 90;
    property Modal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 62;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 9;
    property ControlBox {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 97;
    property MinButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 95;
    property MaxButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 94;
    property MinMaxButtons {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 328;
    property CloseButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 303;
    property WhatsThisButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 96;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 341;
    property PictureSizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 312;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 309;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 313;
    property Cycle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 330;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 240;
    property Toolbar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 353;
    property ShortcutMenu {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 31;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property GridX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 41;
    property GridY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 42;
    property LayoutForPrint {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 143;
    property FastLaserPrinting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 144;
    property HelpFile {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 218;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property RowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 168;
    property DatasheetFontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 160;
    property DatasheetFontHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 161;
    property DatasheetFontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 162;
    property DatasheetFontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 163;
    property DatasheetFontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 164;
    property TabularCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 194;
    property DatasheetGridlinesBehavior {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 318;
    property DatasheetGridlinesColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 319;
    property DatasheetCellsEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 320;
    property DatasheetForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 306;
    property ShowGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 169;
    property DatasheetBackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 321;
    property Hwnd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 192;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 195;
    property Page {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 196;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 197;
    property LogicalPageWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 198;
    property LogicalPageHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 199;
    property ZoomControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 217;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property Painting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 241;
    property PrtMip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 189;
    property PrtDevMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 190;
    property PrtDevNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 191;
    property FrozenColumns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 170;
    property Bookmark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 230;
    property TabularFamily {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 244;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property PaletteSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 98;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property PaintPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 100;
    property OnMenu {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 60;
    property OpenArgs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 284;
    property ConnectSynch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 285;
    property OnCurrent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 87;
    property OnInsert {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 81;
    property BeforeInsert {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 122;
    property AfterInsert {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 123;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 85;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 86;
    property OnDirty {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 375;
    property OnDelete {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 79;
    property BeforeDelConfirm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 124;
    property AfterDelConfirm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 125;
    property OnOpen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 77;
    property OnLoad {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 127;
    property OnResize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 117;
    property OnUnload {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 128;
    property OnClose {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 78;
    property OnActivate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 112;
    property OnDeactivate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 113;
    property OnGotFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property OnLostFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property OnClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property OnDblClick {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 224;
    property OnMouseDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
    property OnMouseMove {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property OnMouseUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property OnKeyDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
    property OnKeyUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property OnKeyPress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property KeyPreview {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 327;
    property OnError {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 119;
    property OnFilter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 333;
    property OnApplyFilter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 334;
    property OnTimer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 110;
    property TimerInterval {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 111;
    property Dirty {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 286;
    property WindowWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 287;
    property WindowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 288;
    property CurrentView {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 289;
    property CurrentSectionTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 291;
    property CurrentSectionLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 290;
    property SelLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 298;
    property SelTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 299;
    property SelWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 300;
    property SelHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 301;
    property CurrentRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 302;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 188;
    property InsideHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 315;
    property InsideWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 316;
    property PicturePalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 311;
    property HasModule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 342;
    property acHiddenCurrentPage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 365;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 370;
    property AllowDesignChanges {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 373;
    property ServerFilter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 246;
    property ServerFilterByForm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 247;
    property MaxRecords {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 361;
    property UniqueTable {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 65;
    property ResyncCommand {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 64;
    property InputParameters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 66;
    property MaxRecButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 63;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property NewRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint readonly dispid 2147;
    procedure Undo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2145;
    property ActiveControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessControl readonly dispid 2006;
    property DefaultControl {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}ControlType: Integer]: AccessControl readonly dispid 2150;
    property Dynaset {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2085;
    property RecordsetClone {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2086;
    property Recordset {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch dispid 2196;
    property Section {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: AccessSection readonly dispid 2088;
    property Form {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessForm readonly dispid 2089;
    property Module {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Module readonly dispid 2090;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    property ConnectControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessControl readonly dispid 2092;
    procedure Recalc {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2017;
    procedure Requery {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2018;
    procedure Refresh {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -550;
    procedure Repaint {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2020;
    procedure GoToPage {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_3:0}PageNumber: Integer; 
                                                            {VT_3:0}Right: Integer; 
                                                            {VT_3:0}Down: Integer); dispid 2021;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2022;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Controls readonly dispid 0;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property SubdatasheetHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 387;
    property SubdatasheetExpanded {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 390;
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -5000;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid -5001;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: IDispatch readonly dispid -5002;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5003;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString dispid -5004;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5005;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5006;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: OleVariant readonly dispid -5007;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5008;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer readonly dispid -5009;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5010;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5011;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid -5012;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}varChild: OleVariant]: WideString readonly dispid -5013;
    procedure accSelect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); dispid -5014;
    procedure accLocation {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); dispid -5015;
    function  accNavigate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; dispid -5016;
    function  accHitTest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant; dispid -5017;
    procedure accDoDefaultAction {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}varChild: OleVariant); dispid -5018;
  end;

// *********************************************************************//
// Interface: _FormEvents
// Flags:     (16) Hidden
// GUID:      {331FDCFB-CF31-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _FormEvents = interface(IUnknown)
    ['{331FDCFB-CF31-11CD-8701-00AA003F0F07}']
    function  Load {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Current {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  BeforeInsert {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterInsert {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  BeforeUpdate {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  AfterUpdate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Delete {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  BeforeDelConfirm {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                                    {VT_2:1}out Response: Smallint): HResult; stdcall;
    function  AfterDelConfirm {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var Status: Smallint): HResult; stdcall;
    function  Open {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  Resize {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Unload {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  Close {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Activate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Deactivate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  GotFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  LostFocus {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Click {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  DblClick {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  MouseDown {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseMove {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                             {VT_2:1}var Shift: Smallint; 
                                                             {VT_4:1}var X: Single; 
                                                             {VT_4:1}var Y: Single): HResult; stdcall;
    function  MouseUp {Flags(1), (4/4) CC:4, INV:1, DBG:6}({VT_2:1}var Button: Smallint; 
                                                           {VT_2:1}var Shift: Smallint; 
                                                           {VT_4:1}var X: Single; 
                                                           {VT_4:1}var Y: Single): HResult; stdcall;
    function  KeyDown {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                           {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  KeyPress {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}var KeyAscii: Smallint): HResult; stdcall;
    function  KeyUp {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var KeyCode: Smallint; 
                                                         {VT_2:1}var Shift: Smallint): HResult; stdcall;
    function  Error {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var DataErr: Smallint; 
                                                         {VT_2:1}out Response: Smallint): HResult; stdcall;
    function  Timer {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Filter {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                          {VT_2:1}var FilterType: Smallint): HResult; stdcall;
    function  ApplyFilter {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint; 
                                                               {VT_2:1}var ApplyType: Smallint): HResult; stdcall;
    function  Dirty {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: Forms
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1BB0E80-6128-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  Forms = interface(IDispatch)
    ['{B1BB0E80-6128-101B-AF4E-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): AccessForm; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: AccessForm read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  FormsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1BB0E80-6128-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  FormsDisp = dispinterface
    ['{B1BB0E80-6128-101B-AF4E-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: AccessForm readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: _Report
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3E8B6B00-91FF-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _Report = interface(IDispatch)
    ['{3E8B6B00-91FF-101B-AF4E-00AA003F0F07}']
    function  Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}pRet: Single); safecall;
    function  Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}pRet: Single); safecall;
    function  Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}pRet: Single); safecall;
    function  Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}pRet: Single); safecall;
    function  Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}pRet: Single); safecall;
    function  Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}pRet: Single); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    function  Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}pRet: Integer); safecall;
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Byte; safecall;
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_17:0}pRet: Byte); safecall;
    function  Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessControl; safecall;
    function  Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}ControlType: Integer): AccessControl; safecall;
    procedure Circle {Flags(1), (8/8) CC:0, INV:1, DBG:6}({VT_2:0}flags: Smallint; 
                                                          {VT_4:0}X: Single; {VT_4:0}Y: Single; 
                                                          {VT_4:0}radius: Single; 
                                                          {VT_3:0}color: Integer; 
                                                          {VT_4:0}start: Single; 
                                                          {VT_4:0}end_: Single; 
                                                          {VT_4:0}aspect: Single); safecall;
    procedure Line {Flags(1), (6/6) CC:0, INV:1, DBG:6}({VT_2:0}flags: Smallint; 
                                                        {VT_4:0}x1: Single; {VT_4:0}y1: Single; 
                                                        {VT_4:0}x2: Single; {VT_4:0}y2: Single; 
                                                        {VT_3:0}color: Integer); safecall;
    procedure PSet {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_2:0}flags: Smallint; {VT_4:0}X: Single; 
                                                        {VT_4:0}Y: Single; {VT_3:0}color: Integer); safecall;
    procedure Scale {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_2:0}flags: Smallint; 
                                                         {VT_4:0}x1: Single; {VT_4:0}y1: Single; 
                                                         {VT_4:0}x2: Single; {VT_4:0}y2: Single); safecall;
    function  TextWidth {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString): Single; safecall;
    function  TextHeight {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString): Single; safecall;
    procedure Print {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString); safecall;
    function  Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): AccessSection; safecall;
    function  Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): AccessGroupLevel; safecall;
    function  Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReport; safecall;
    function  Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Module; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Properties; safecall;
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Controls; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pbstrName: WideString); safecall;
    property FormName: WideString read Get_FormName write Set_FormName;
    property RecordSource: WideString read Get_RecordSource write Set_RecordSource;
    property Filter: WideString read Get_Filter write Set_Filter;
    property FilterOn: WordBool read Get_FilterOn write Set_FilterOn;
    property OrderBy: WideString read Get_OrderBy write Set_OrderBy;
    property OrderByOn: WordBool read Get_OrderByOn write Set_OrderByOn;
    property ServerFilter: WideString read Get_ServerFilter write Set_ServerFilter;
    property Caption: WideString read Get_Caption write Set_Caption;
    property RecordLocks: Byte read Get_RecordLocks write Set_RecordLocks;
    property PageHeader: Byte read Get_PageHeader write Set_PageHeader;
    property PageFooter: Byte read Get_PageFooter write Set_PageFooter;
    property DateGrouping: Byte read Get_DateGrouping write Set_DateGrouping;
    property GrpKeepTogether: Byte read Get_GrpKeepTogether write Set_GrpKeepTogether;
    property MinButton: WordBool read Get_MinButton write Set_MinButton;
    property MaxButton: WordBool read Get_MaxButton write Set_MaxButton;
    property Width: Smallint read Get_Width write Set_Width;
    property Picture: WideString read Get_Picture write Set_Picture;
    property PictureType: Byte read Get_PictureType write Set_PictureType;
    property PictureSizeMode: Byte read Get_PictureSizeMode write Set_PictureSizeMode;
    property PictureAlignment: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling: WordBool read Get_PictureTiling write Set_PictureTiling;
    property PicturePages: Byte read Get_PicturePages write Set_PicturePages;
    property MenuBar: WideString read Get_MenuBar write Set_MenuBar;
    property Toolbar: WideString read Get_Toolbar write Set_Toolbar;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property GridX: Smallint read Get_GridX write Set_GridX;
    property GridY: Smallint read Get_GridY write Set_GridY;
    property LayoutForPrint: WordBool read Get_LayoutForPrint write Set_LayoutForPrint;
    property FastLaserPrinting: WordBool read Get_FastLaserPrinting write Set_FastLaserPrinting;
    property HelpFile: WideString read Get_HelpFile write Set_HelpFile;
    property HelpContextId: Integer read Get_HelpContextId write Set_HelpContextId;
    property Hwnd: Integer read Get_Hwnd write Set_Hwnd;
    property Count: Smallint read Get_Count write Set_Count;
    property Page: Integer read Get_Page write Set_Page;
    property Pages: Smallint read Get_Pages write Set_Pages;
    property LogicalPageWidth: Integer read Get_LogicalPageWidth write Set_LogicalPageWidth;
    property LogicalPageHeight: Integer read Get_LogicalPageHeight write Set_LogicalPageHeight;
    property ZoomControl: Integer read Get_ZoomControl write Set_ZoomControl;
    property HasData: Integer read Get_HasData write Set_HasData;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Height: Integer read Get_Height write Set_Height;
    property PrintSection: WordBool read Get_PrintSection write Set_PrintSection;
    property NextRecord: WordBool read Get_NextRecord write Set_NextRecord;
    property MoveLayout: WordBool read Get_MoveLayout write Set_MoveLayout;
    property FormatCount: Smallint read Get_FormatCount write Set_FormatCount;
    property PrintCount: Smallint read Get_PrintCount write Set_PrintCount;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Painting: WordBool read Get_Painting write Set_Painting;
    property PrtMip: OleVariant read Get_PrtMip write Set_PrtMip;
    property PrtDevMode: OleVariant read Get_PrtDevMode write Set_PrtDevMode;
    property PrtDevNames: OleVariant read Get_PrtDevNames write Set_PrtDevNames;
    property ForeColor: Integer read Get_ForeColor write Set_ForeColor;
    property CurrentX: Single read Get_CurrentX write Set_CurrentX;
    property CurrentY: Single read Get_CurrentY write Set_CurrentY;
    property ScaleHeight: Single read Get_ScaleHeight write Set_ScaleHeight;
    property ScaleLeft: Single read Get_ScaleLeft write Set_ScaleLeft;
    property ScaleMode: Smallint read Get_ScaleMode write Set_ScaleMode;
    property ScaleTop: Single read Get_ScaleTop write Set_ScaleTop;
    property ScaleWidth: Single read Get_ScaleWidth write Set_ScaleWidth;
    property FontBold: Smallint read Get_FontBold write Set_FontBold;
    property FontItalic: Smallint read Get_FontItalic write Set_FontItalic;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Smallint read Get_FontSize write Set_FontSize;
    property FontUnderline: Smallint read Get_FontUnderline write Set_FontUnderline;
    property DrawMode: Smallint read Get_DrawMode write Set_DrawMode;
    property DrawStyle: Smallint read Get_DrawStyle write Set_DrawStyle;
    property DrawWidth: Smallint read Get_DrawWidth write Set_DrawWidth;
    property FillColor: Integer read Get_FillColor write Set_FillColor;
    property FillStyle: Smallint read Get_FillStyle write Set_FillStyle;
    property _Name: WideString read Get__Name write Set__Name;
    property PaletteSource: WideString read Get_PaletteSource write Set_PaletteSource;
    property Tag: WideString read Get_Tag write Set_Tag;
    property PaintPalette: OleVariant read Get_PaintPalette write Set_PaintPalette;
    property OnMenu: WideString read Get_OnMenu write Set_OnMenu;
    property OnOpen: WideString read Get_OnOpen write Set_OnOpen;
    property OnClose: WideString read Get_OnClose write Set_OnClose;
    property OnActivate: WideString read Get_OnActivate write Set_OnActivate;
    property OnDeactivate: WideString read Get_OnDeactivate write Set_OnDeactivate;
    property OnNoData: WideString read Get_OnNoData write Set_OnNoData;
    property OnPage: WideString read Get_OnPage write Set_OnPage;
    property OnError: WideString read Get_OnError write Set_OnError;
    property Dirty: WordBool read Get_Dirty write Set_Dirty;
    property CurrentRecord: Integer read Get_CurrentRecord write Set_CurrentRecord;
    property PictureData: OleVariant read Get_PictureData write Set_PictureData;
    property PicturePalette: OleVariant read Get_PicturePalette write Set_PicturePalette;
    property HasModule: WordBool read Get_HasModule write Set_HasModule;
    property acHiddenCurrentPage: Integer read Get_acHiddenCurrentPage write Set_acHiddenCurrentPage;
    property Orientation: Byte read Get_Orientation write Set_Orientation;
    property InputParameters: WideString read Get_InputParameters write Set_InputParameters;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property ActiveControl: AccessControl read Get_ActiveControl;
    property DefaultControl {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}ControlType: Integer]: AccessControl read Get_DefaultControl;
    property Section {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: AccessSection read Get_Section;
    property GroupLevel {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: AccessGroupLevel read Get_GroupLevel;
    property Report: AccessReport read Get_Report;
    property Module: Module read Get_Module;
    property Properties: Properties read Get_Properties;
    property Controls: Controls read Get_Controls;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  _ReportDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3E8B6B00-91FF-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _ReportDisp = dispinterface
    ['{3E8B6B00-91FF-101B-AF4E-00AA003F0F07}']
    property FormName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 39;
    property RecordSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 156;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 245;
    property FilterOn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 332;
    property OrderBy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 331;
    property OrderByOn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 336;
    property ServerFilter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 246;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property RecordLocks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 26;
    property PageHeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 43;
    property PageFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 40;
    property DateGrouping {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 282;
    property GrpKeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 283;
    property MinButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 95;
    property MaxButton {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 94;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 150;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 341;
    property PictureSizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 312;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 309;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 313;
    property PicturePages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 310;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 240;
    property Toolbar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 353;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 304;
    property GridX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 41;
    property GridY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 42;
    property LayoutForPrint {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 143;
    property FastLaserPrinting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 144;
    property HelpFile {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 218;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 219;
    property Hwnd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 192;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 195;
    property Page {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 196;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 197;
    property LogicalPageWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 198;
    property LogicalPageHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 199;
    property ZoomControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 217;
    property HasData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 202;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 54;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 141;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 44;
    property PrintSection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 225;
    property NextRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 226;
    property MoveLayout {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 227;
    property FormatCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 228;
    property PrintCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 229;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property Painting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 241;
    property PrtMip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 189;
    property PrtDevMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 190;
    property PrtDevNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 191;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 204;
    property CurrentX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 205;
    property CurrentY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 206;
    property ScaleHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 207;
    property ScaleLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 208;
    property ScaleMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 209;
    property ScaleTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 210;
    property ScaleWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 211;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 32;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 33;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 35;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 36;
    property DrawMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 212;
    property DrawStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 213;
    property DrawWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 214;
    property FillColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 216;
    property FillStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 215;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 20;
    property PaletteSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 98;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property PaintPalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 100;
    property OnMenu {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 60;
    property OnOpen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 77;
    property OnClose {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 78;
    property OnActivate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 112;
    property OnDeactivate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 113;
    property OnNoData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 121;
    property OnPage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 83;
    property OnError {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 119;
    property Dirty {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 286;
    property CurrentRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 302;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 188;
    property PicturePalette {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 311;
    property HasModule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 342;
    property acHiddenCurrentPage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 365;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Byte dispid 370;
    property InputParameters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 66;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property ActiveControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessControl readonly dispid 2006;
    property DefaultControl {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}ControlType: Integer]: AccessControl readonly dispid 2150;
    procedure Circle {Flags(2), (8/8) CC:0, INV:1, DBG:4}({VT_2:0}flags: Smallint; 
                                                          {VT_4:0}X: Single; {VT_4:0}Y: Single; 
                                                          {VT_4:0}radius: Single; 
                                                          {VT_3:0}color: Integer; 
                                                          {VT_4:0}start: Single; 
                                                          {VT_4:0}end_: Single; 
                                                          {VT_4:0}aspect: Single); dispid 2118;
    procedure Line {Flags(2), (6/6) CC:0, INV:1, DBG:4}({VT_2:0}flags: Smallint; 
                                                        {VT_4:0}x1: Single; {VT_4:0}y1: Single; 
                                                        {VT_4:0}x2: Single; {VT_4:0}y2: Single; 
                                                        {VT_3:0}color: Integer); dispid 2152;
    procedure PSet {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_2:0}flags: Smallint; {VT_4:0}X: Single; 
                                                        {VT_4:0}Y: Single; {VT_3:0}color: Integer); dispid 2117;
    procedure Scale {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_2:0}flags: Smallint; 
                                                         {VT_4:0}x1: Single; {VT_4:0}y1: Single; 
                                                         {VT_4:0}x2: Single; {VT_4:0}y2: Single); dispid 2116;
    function  TextWidth {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString): Single; dispid 2114;
    function  TextHeight {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString): Single; dispid 2115;
    procedure Print {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString); dispid 2153;
    property Section {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: AccessSection readonly dispid 2088;
    property GroupLevel {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: AccessGroupLevel readonly dispid 2098;
    property Report {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReport readonly dispid 2097;
    property Module {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Module readonly dispid 2090;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Properties readonly dispid 2091;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Controls readonly dispid 0;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
    function  _Evaluate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: {??PSafeArray} OleVariant): OleVariant; dispid -5;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
  end;

// *********************************************************************//
// Interface: _ReportEvents
// Flags:     (16) Hidden
// GUID:      {BC9E4357-F037-11CD-8701-00AA003F0F07}
// *********************************************************************//
  _ReportEvents = interface(IUnknown)
    ['{BC9E4357-F037-11CD-8701-00AA003F0F07}']
    function  Open {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  Close {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Activate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Deactivate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Error {Flags(1), (2/2) CC:4, INV:1, DBG:6}({VT_2:1}var DataErr: Smallint; 
                                                         {VT_2:1}out Response: Smallint): HResult; stdcall;
    function  NoData {Flags(1), (1/1) CC:4, INV:1, DBG:6}({VT_2:1}out Cancel: Smallint): HResult; stdcall;
    function  Page {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: Reports
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1523700-6128-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  Reports = interface(IDispatch)
    ['{D1523700-6128-101B-AF4E-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): AccessReport; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: AccessReport read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ReportsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1523700-6128-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  ReportsDisp = dispinterface
    ['{D1523700-6128-101B-AF4E-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: AccessReport readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: Screen
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DC6B66C0-6128-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  Screen = interface(IDispatch)
    ['{DC6B66C0-6128-101B-AF4E-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ActiveDatasheet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessForm; safecall;
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessControl; safecall;
    function  Get_PreviousControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessControl; safecall;
    function  Get_ActiveForm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessForm; safecall;
    function  Get_ActiveReport {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReport; safecall;
    function  Get_MousePointer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_MousePointer {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}pRet: Smallint); safecall;
    function  Get_ActiveDataAccessPage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DataAccessPage; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property ActiveDatasheet: AccessForm read Get_ActiveDatasheet;
    property ActiveControl: AccessControl read Get_ActiveControl;
    property PreviousControl: AccessControl read Get_PreviousControl;
    property ActiveForm: AccessForm read Get_ActiveForm;
    property ActiveReport: AccessReport read Get_ActiveReport;
    property MousePointer: Smallint read Get_MousePointer write Set_MousePointer;
    property ActiveDataAccessPage: DataAccessPage read Get_ActiveDataAccessPage;
  end;

// *********************************************************************//
// DispIntf:  ScreenDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DC6B66C0-6128-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  ScreenDisp = dispinterface
    ['{DC6B66C0-6128-101B-AF4E-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property ActiveDatasheet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessForm readonly dispid 2146;
    property ActiveControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessControl readonly dispid 2006;
    property PreviousControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessControl readonly dispid 2007;
    property ActiveForm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessForm readonly dispid 2008;
    property ActiveReport {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReport readonly dispid 2009;
    property MousePointer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 2106;
    property ActiveDataAccessPage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DataAccessPage readonly dispid 2214;
  end;

// *********************************************************************//
// Interface: _Application
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {68CCE6C0-6129-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _Application = interface(IDispatch)
    ['{68CCE6C0-6129-101B-AF4E-00AA003F0F07}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure NewCurrentDatabase {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const filepath: WideString); safecall;
    procedure OpenCurrentDatabase {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const filepath: WideString; 
                                                                       {VT_11:0}Exclusive: WordBool); safecall;
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  GetOption {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const OptionName: WideString): OleVariant; safecall;
    procedure SetOption {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const OptionName: WideString; 
                                                             {VT_12:0}Setting: OleVariant); safecall;
    procedure Echo {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_2:0}EchoOn: Smallint; 
                                                        {VT_8:0}const bstrStatusBarText: WideString); safecall;
    procedure CloseCurrentDatabase {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Quit {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Option: AcQuitOption); safecall;
    function  Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Forms; safecall;
    function  Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Reports; safecall;
    function  Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Screen; safecall;
    function  Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DoCmd; safecall;
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pfVisible: WordBool); safecall;
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pfUserCtrl: WordBool); safecall;
    function  SysCmd {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_29:0}Action: AcSysCmdAction; 
                                                          {VT_12:0}Argument2: OleVariant; 
                                                          {VT_12:0}Argument3: OleVariant): OleVariant; safecall;
    function  CreateForm {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:0}Database: OleVariant; 
                                                              {VT_12:0}FormTemplate: OleVariant): AccessForm; safecall;
    function  CreateReport {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:0}Database: OleVariant; 
                                                                {VT_12:0}ReportTemplate: OleVariant): AccessReport; safecall;
    function  CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant; 
                                                                  {VT_12:0}Left: OleVariant; 
                                                                  {VT_12:0}Top: OleVariant; 
                                                                  {VT_12:0}Width: OleVariant; 
                                                                  {VT_12:0}Height: OleVariant): AccessControl; safecall;
    function  CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant; 
                                                                        {VT_12:0}Left: OleVariant; 
                                                                        {VT_12:0}Top: OleVariant; 
                                                                        {VT_12:0}Width: OleVariant; 
                                                                        {VT_12:0}Height: OleVariant): AccessControl; safecall;
    function  CreateControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_8:0}const FormName: WideString; 
                                                                    {VT_29:0}ControlType: AcControlType; 
                                                                    {VT_29:0}Section: AcSection; 
                                                                    {VT_8:0}const Parent: WideString; 
                                                                    {VT_8:0}const ControlSource: WideString; 
                                                                    {VT_3:0}Left: Integer; 
                                                                    {VT_3:0}Top: Integer; 
                                                                    {VT_3:0}Width: Integer; 
                                                                    {VT_3:0}Height: Integer): AccessControl; safecall;
    function  CreateReportControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_8:0}const ReportName: WideString; 
                                                                          {VT_29:0}ControlType: AcControlType; 
                                                                          {VT_29:0}Section: AcSection; 
                                                                          {VT_8:0}const Parent: WideString; 
                                                                          {VT_8:0}const ControlName: WideString; 
                                                                          {VT_3:0}Left: Integer; 
                                                                          {VT_3:0}Top: Integer; 
                                                                          {VT_3:0}Width: Integer; 
                                                                          {VT_3:0}Height: Integer): AccessControl; safecall;
    procedure DeleteControl {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const FormName: WideString; 
                                                                 {VT_8:0}const ControlName: WideString); safecall;
    procedure DeleteReportControl {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const ReportName: WideString; 
                                                                       {VT_8:0}const ControlName: WideString); safecall;
    function  CreateGroupLevel {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_8:0}const ReportName: WideString; 
                                                                    {VT_8:0}const Expression: WideString; 
                                                                    {VT_2:0}Header: Smallint; 
                                                                    {VT_2:0}Footer: Smallint): Integer; safecall;
    function  DMin {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DMax {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DSum {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DAvg {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DLookup {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString; 
                                                           {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DLast {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString; 
                                                         {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DVar {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DVarP {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString; 
                                                         {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DStDev {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DStDevP {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString; 
                                                           {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DFirst {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  DCount {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; safecall;
    function  Eval {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const StringExpr: WideString): OleVariant; safecall;
    function  CurrentUser {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WideString; safecall;
    function  DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Application: WideString; 
                                                               {VT_8:0}const Topic: WideString): OleVariant; safecall;
    procedure DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:0}ChanNum: OleVariant; 
                                                              {VT_8:0}const Command: WideString); safecall;
    procedure DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}ChanNum: OleVariant; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString); safecall;
    function  DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:0}ChanNum: OleVariant; 
                                                              {VT_8:0}const Item: WideString): WideString; safecall;
    procedure DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}ChanNum: OleVariant); safecall;
    procedure DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DBEngine; safecall;
    function  CurrentDb {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Database; safecall;
    function  CodeDb {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Database; safecall;
    procedure BeginUndoable {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Hwnd: Integer); safecall;
    procedure SetUndoRecording {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}yesno: Smallint); safecall;
    function  BuildCriteria {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Field: WideString; 
                                                                 {VT_2:0}FieldType: Smallint; 
                                                                 {VT_8:0}const Expression: WideString): WideString; safecall;
    procedure InsertText {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString; 
                                                              {VT_8:0}const ModuleName: WideString); safecall;
    procedure ReloadAddIns {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  DefaultWorkspaceClone {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Workspace; safecall;
    procedure RefreshTitleBar {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure AddAutoCorrect {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const ChangeFrom: WideString; 
                                                                  {VT_8:0}const ChangeTo: WideString); safecall;
    procedure DelAutoCorrect {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const ChangeFrom: WideString); safecall;
    function  hWndAccessApp {Flags(1), (1/0) CC:0, INV:1, DBG:6}: SYSINT; safecall;
    function  Run {Flags(1), (32/31) CC:0, INV:1, DBG:6}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant; 
                                                         {VT_12:1}var Arg27: OleVariant; 
                                                         {VT_12:1}var Arg28: OleVariant; 
                                                         {VT_12:1}var Arg29: OleVariant; 
                                                         {VT_12:1}var Arg30: OleVariant): OleVariant; safecall;
    function  Nz {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:0}Value: OleVariant; 
                                                      {VT_12:0}ValueIfNull: OleVariant): OleVariant; safecall;
    function  LoadPicture {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString): IDispatch; safecall;
    procedure ReplaceModule {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_3:0}objtyp: Integer; 
                                                                 {VT_8:0}const ModuleName: WideString; 
                                                                 {VT_8:0}const FileName: WideString; 
                                                                 {VT_3:0}token: Integer); safecall;
    function  AccessError {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:0}ErrorNumber: OleVariant): OleVariant; safecall;
    function  BuilderString {Flags(1), (1/0) CC:0, INV:1, DBG:6}: OleVariant; safecall;
    function  StringFromGUID {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:0}Guid: OleVariant): OleVariant; safecall;
    function  GUIDFromString {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:0}String_: OleVariant): OleVariant; safecall;
    function  AppLoadString {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}id: Integer): OleVariant; safecall;
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CommandBars; safecall;
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Assistant; safecall;
    procedure FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_8:0}const Address: WideString; 
                                                                   {VT_8:0}const SubAddress: WideString; 
                                                                   {VT_11:0}NewWindow: WordBool; 
                                                                   {VT_11:0}AddHistory: WordBool; 
                                                                   {VT_12:0}ExtraInfo: OleVariant; 
                                                                   {VT_29:0}Method: MsoExtraInfoMethod; 
                                                                   {VT_8:0}const HeaderInfo: WideString); safecall;
    procedure SaveAsText {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                              {VT_8:0}const ObjectName: WideString; 
                                                              {VT_8:0}const FileName: WideString); safecall;
    procedure LoadFromText {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_8:0}const ObjectName: WideString; 
                                                                {VT_8:0}const FileName: WideString); safecall;
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure RefreshDatabaseWindow {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReferences; safecall;
    function  Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Modules; safecall;
    function  Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FileSearch; safecall;
    function  Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure RunCommand {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Command: AcCommand); safecall;
    function  HyperlinkPart {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:0}Hyperlink: OleVariant; 
                                                                 {VT_29:0}Part: AcHyperlinkPart): WideString; safecall;
    function  GetHiddenAttribute {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                                      {VT_8:0}const ObjectName: WideString): WordBool; safecall;
    procedure SetHiddenAttribute {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}ObjectType: AcObjectType; 
                                                                      {VT_8:0}const ObjectName: WideString; 
                                                                      {VT_11:0}fHidden: WordBool); safecall;
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:6}: VBE; safecall;
    function  Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DataAccessPages; safecall;
    function  CreateDataAccessPage {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:0}FileName: OleVariant; 
                                                                        {VT_11:0}CreateNewFile: WordBool): DataAccessPage; safecall;
    function  Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CurrentProject; safecall;
    function  Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CurrentData; safecall;
    function  Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CodeProject; safecall;
    function  Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CodeData; safecall;
    procedure NewAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const filepath: WideString; 
                                                                    {VT_12:0}Connect: OleVariant); safecall;
    procedure OpenAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const filepath: WideString; 
                                                                     {VT_11:0}Exclusive: WordBool); safecall;
    procedure CreateAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const filepath: WideString; 
                                                                       {VT_12:0}Connect: OleVariant); safecall;
    function  Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WizHook; safecall;
    function  Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: COMAddIns; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DefaultWebOptions; safecall;
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LanguageSettings; safecall;
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AnswerWizard; safecall;
    function  Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoFeatureInstall; safecall;
    procedure Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}FeatureInstall: MsoFeatureInstall); safecall;
    function  EuroConvert {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_5:0}Number: Double; 
                                                               {VT_8:0}const SourceCurrency: WideString; 
                                                               {VT_8:0}const TargetCurrency: WideString; 
                                                               {VT_12:0}FullPrecision: OleVariant; 
                                                               {VT_12:0}TriangulationPrecision: OleVariant): Double; safecall;
    function  Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property CodeContextObject: IDispatch read Get_CodeContextObject;
    property MenuBar: WideString read Get_MenuBar write Set_MenuBar;
    property CurrentObjectType: Integer read Get_CurrentObjectType;
    property CurrentObjectName: WideString read Get_CurrentObjectName;
    property Forms: Forms read Get_Forms;
    property Reports: Reports read Get_Reports;
    property Screen: Screen read Get_Screen;
    property DoCmd: DoCmd read Get_DoCmd;
    property ShortcutMenuBar: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property DBEngine: DBEngine read Get_DBEngine;
    property CommandBars: CommandBars read Get_CommandBars;
    property Assistant: Assistant read Get_Assistant;
    property References: AccessReferences read Get_References;
    property Modules: Modules read Get_Modules;
    property FileSearch: FileSearch read Get_FileSearch;
    property IsCompiled: WordBool read Get_IsCompiled;
    property VBE: VBE read Get_VBE;
    property DataAccessPages: DataAccessPages read Get_DataAccessPages;
    property ADOConnectString: WideString read Get_ADOConnectString;
    property CurrentProject: CurrentProject read Get_CurrentProject;
    property CurrentData: CurrentData read Get_CurrentData;
    property CodeProject: CodeProject read Get_CodeProject;
    property CodeData: CodeData read Get_CodeData;
    property WizHook: WizHook read Get_WizHook;
    property ProductCode: WideString read Get_ProductCode;
    property COMAddIns: COMAddIns read Get_COMAddIns;
    property Name: WideString read Get_Name;
    property DefaultWebOptions: DefaultWebOptions read Get_DefaultWebOptions;
    property LanguageSettings: LanguageSettings read Get_LanguageSettings;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
    property FeatureInstall: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
    property VGXFrameInterval: OleVariant read Get_VGXFrameInterval;
  end;

// *********************************************************************//
// DispIntf:  _ApplicationDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {68CCE6C0-6129-101B-AF4E-00AA003F0F07}
// *********************************************************************//
  _ApplicationDisp = dispinterface
    ['{68CCE6C0-6129-101B-AF4E-00AA003F0F07}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property CodeContextObject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2082;
    procedure NewCurrentDatabase {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const filepath: WideString); dispid 2142;
    procedure OpenCurrentDatabase {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const filepath: WideString; 
                                                                       {VT_11:0}Exclusive: WordBool); dispid 2140;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2010;
    property CurrentObjectType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2011;
    property CurrentObjectName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2012;
    function  GetOption {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const OptionName: WideString): OleVariant; dispid 2013;
    procedure SetOption {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const OptionName: WideString; 
                                                             {VT_12:0}Setting: OleVariant); dispid 2014;
    procedure Echo {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_2:0}EchoOn: Smallint; 
                                                        {VT_8:0}const bstrStatusBarText: WideString); dispid 2015;
    procedure CloseCurrentDatabase {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2141;
    procedure Quit {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Option: AcQuitOption); dispid 2016;
    property Forms {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Forms readonly dispid 2002;
    property Reports {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Reports readonly dispid 2003;
    property Screen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Screen readonly dispid 2004;
    property DoCmd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DoCmd readonly dispid 2025;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2107;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2148;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2149;
    function  SysCmd {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_29:0}Action: AcSysCmdAction; 
                                                          {VT_12:0}Argument2: OleVariant; 
                                                          {VT_12:0}Argument3: OleVariant): OleVariant; dispid 2028;
    function  CreateForm {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:0}Database: OleVariant; 
                                                              {VT_12:0}FormTemplate: OleVariant): AccessForm; dispid 2029;
    function  CreateReport {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:0}Database: OleVariant; 
                                                                {VT_12:0}ReportTemplate: OleVariant): AccessReport; dispid 2030;
    function  CreateControl {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant; 
                                                                  {VT_12:0}Left: OleVariant; 
                                                                  {VT_12:0}Top: OleVariant; 
                                                                  {VT_12:0}Width: OleVariant; 
                                                                  {VT_12:0}Height: OleVariant): AccessControl; dispid 2031;
    function  CreateReportControl {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant; 
                                                                        {VT_12:0}Left: OleVariant; 
                                                                        {VT_12:0}Top: OleVariant; 
                                                                        {VT_12:0}Width: OleVariant; 
                                                                        {VT_12:0}Height: OleVariant): AccessControl; dispid 2032;
    function  CreateControlEx {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_8:0}const FormName: WideString; 
                                                                    {VT_29:0}ControlType: AcControlType; 
                                                                    {VT_29:0}Section: AcSection; 
                                                                    {VT_8:0}const Parent: WideString; 
                                                                    {VT_8:0}const ControlSource: WideString; 
                                                                    {VT_3:0}Left: Integer; 
                                                                    {VT_3:0}Top: Integer; 
                                                                    {VT_3:0}Width: Integer; 
                                                                    {VT_3:0}Height: Integer): AccessControl; dispid 2164;
    function  CreateReportControlEx {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_8:0}const ReportName: WideString; 
                                                                          {VT_29:0}ControlType: AcControlType; 
                                                                          {VT_29:0}Section: AcSection; 
                                                                          {VT_8:0}const Parent: WideString; 
                                                                          {VT_8:0}const ControlName: WideString; 
                                                                          {VT_3:0}Left: Integer; 
                                                                          {VT_3:0}Top: Integer; 
                                                                          {VT_3:0}Width: Integer; 
                                                                          {VT_3:0}Height: Integer): AccessControl; dispid 2165;
    procedure DeleteControl {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const FormName: WideString; 
                                                                 {VT_8:0}const ControlName: WideString); dispid 2033;
    procedure DeleteReportControl {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const ReportName: WideString; 
                                                                       {VT_8:0}const ControlName: WideString); dispid 2034;
    function  CreateGroupLevel {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_8:0}const ReportName: WideString; 
                                                                    {VT_8:0}const Expression: WideString; 
                                                                    {VT_2:0}Header: Smallint; 
                                                                    {VT_2:0}Footer: Smallint): Integer; dispid 2051;
    function  DMin {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2035;
    function  DMax {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2036;
    function  DSum {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2037;
    function  DAvg {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2038;
    function  DLookup {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString; 
                                                           {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2039;
    function  DLast {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString; 
                                                         {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2040;
    function  DVar {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2041;
    function  DVarP {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString; 
                                                         {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2042;
    function  DStDev {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2043;
    function  DStDevP {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString; 
                                                           {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2044;
    function  DFirst {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2045;
    function  DCount {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; dispid 2046;
    function  Eval {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const StringExpr: WideString): OleVariant; dispid 2047;
    function  CurrentUser {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WideString; dispid 2048;
    function  DDEInitiate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Application: WideString; 
                                                               {VT_8:0}const Topic: WideString): OleVariant; dispid 2052;
    procedure DDEExecute {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:0}ChanNum: OleVariant; 
                                                              {VT_8:0}const Command: WideString); dispid 2053;
    procedure DDEPoke {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}ChanNum: OleVariant; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString); dispid 2054;
    function  DDERequest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:0}ChanNum: OleVariant; 
                                                              {VT_8:0}const Item: WideString): WideString; dispid 2055;
    procedure DDETerminate {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}ChanNum: OleVariant); dispid 2056;
    procedure DDETerminateAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2057;
    property DBEngine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DBEngine readonly dispid 2110;
    function  CurrentDb {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Database; dispid 2049;
    function  CodeDb {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Database; dispid 2050;
    procedure BeginUndoable {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Hwnd: Integer); dispid 2099;
    procedure SetUndoRecording {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}yesno: Smallint); dispid 2100;
    function  BuildCriteria {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Field: WideString; 
                                                                 {VT_2:0}FieldType: Smallint; 
                                                                 {VT_8:0}const Expression: WideString): WideString; dispid 2138;
    procedure InsertText {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString; 
                                                              {VT_8:0}const ModuleName: WideString); dispid 2093;
    procedure ReloadAddIns {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2154;
    function  DefaultWorkspaceClone {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Workspace; dispid 2157;
    procedure RefreshTitleBar {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2158;
    procedure AddAutoCorrect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const ChangeFrom: WideString; 
                                                                  {VT_8:0}const ChangeTo: WideString); dispid 2159;
    procedure DelAutoCorrect {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const ChangeFrom: WideString); dispid 2160;
    function  hWndAccessApp {Flags(2), (1/0) CC:0, INV:1, DBG:4}: SYSINT; dispid 2163;
    function  Run {Flags(2), (32/31) CC:0, INV:1, DBG:4}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant; 
                                                         {VT_12:1}var Arg27: OleVariant; 
                                                         {VT_12:1}var Arg28: OleVariant; 
                                                         {VT_12:1}var Arg29: OleVariant; 
                                                         {VT_12:1}var Arg30: OleVariant): OleVariant; dispid 2134;
    function  Nz {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:0}Value: OleVariant; 
                                                      {VT_12:0}ValueIfNull: OleVariant): OleVariant; dispid 2135;
    function  LoadPicture {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString): IDispatch; dispid 2166;
    procedure ReplaceModule {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_3:0}objtyp: Integer; 
                                                                 {VT_8:0}const ModuleName: WideString; 
                                                                 {VT_8:0}const FileName: WideString; 
                                                                 {VT_3:0}token: Integer); dispid 2168;
    function  AccessError {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:0}ErrorNumber: OleVariant): OleVariant; dispid 2169;
    function  BuilderString {Flags(2), (1/0) CC:0, INV:1, DBG:4}: OleVariant; dispid 2170;
    function  StringFromGUID {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:0}Guid: OleVariant): OleVariant; dispid 2171;
    function  GUIDFromString {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:0}String_: OleVariant): OleVariant; dispid 2172;
    function  AppLoadString {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}id: Integer): OleVariant; dispid 2173;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CommandBars readonly dispid 2174;
    property Assistant {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Assistant readonly dispid 2175;
    procedure FollowHyperlink {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_8:0}const Address: WideString; 
                                                                   {VT_8:0}const SubAddress: WideString; 
                                                                   {VT_11:0}NewWindow: WordBool; 
                                                                   {VT_11:0}AddHistory: WordBool; 
                                                                   {VT_12:0}ExtraInfo: OleVariant; 
                                                                   {VT_29:0}Method: MsoExtraInfoMethod; 
                                                                   {VT_8:0}const HeaderInfo: WideString); dispid 2176;
    procedure SaveAsText {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                              {VT_8:0}const ObjectName: WideString; 
                                                              {VT_8:0}const FileName: WideString); dispid 2178;
    procedure LoadFromText {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_8:0}const ObjectName: WideString; 
                                                                {VT_8:0}const FileName: WideString); dispid 2179;
    procedure AddToFavorites {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2184;
    procedure RefreshDatabaseWindow {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2186;
    property References {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReferences readonly dispid 2187;
    property Modules {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Modules readonly dispid 2188;
    property FileSearch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FileSearch readonly dispid 2189;
    property IsCompiled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 2193;
    procedure RunCommand {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Command: AcCommand); dispid 2194;
    function  HyperlinkPart {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:0}Hyperlink: OleVariant; 
                                                                 {VT_29:0}Part: AcHyperlinkPart): WideString; dispid 2195;
    function  GetHiddenAttribute {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                                      {VT_8:0}const ObjectName: WideString): WordBool; dispid 2197;
    procedure SetHiddenAttribute {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}ObjectType: AcObjectType; 
                                                                      {VT_8:0}const ObjectName: WideString; 
                                                                      {VT_11:0}fHidden: WordBool); dispid 2198;
    property VBE {Flags(2), (1/0) CC:0, INV:2, DBG:6}: VBE readonly dispid 2210;
    property DataAccessPages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DataAccessPages readonly dispid 2212;
    function  CreateDataAccessPage {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:0}FileName: OleVariant; 
                                                                        {VT_11:0}CreateNewFile: WordBool): DataAccessPage; dispid 2213;
    property ADOConnectString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2233;
    property CurrentProject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CurrentProject readonly dispid 2215;
    property CurrentData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CurrentData readonly dispid 2216;
    property CodeProject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CodeProject readonly dispid 2217;
    property CodeData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CodeData readonly dispid 2218;
    procedure NewAccessProject {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const filepath: WideString; 
                                                                    {VT_12:0}Connect: OleVariant); dispid 2262;
    procedure OpenAccessProject {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const filepath: WideString; 
                                                                     {VT_11:0}Exclusive: WordBool); dispid 2263;
    procedure CreateAccessProject {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const filepath: WideString; 
                                                                       {VT_12:0}Connect: OleVariant); dispid 2264;
    property WizHook {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WizHook readonly dispid 2235;
    property ProductCode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2266;
    property COMAddIns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: COMAddIns readonly dispid 2277;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2094;
    property DefaultWebOptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DefaultWebOptions readonly dispid 2278;
    property LanguageSettings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LanguageSettings readonly dispid 2301;
    property AnswerWizard {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AnswerWizard readonly dispid 2304;
    property FeatureInstall {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoFeatureInstall dispid 2322;
    function  EuroConvert {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_5:0}Number: Double; 
                                                               {VT_8:0}const SourceCurrency: WideString; 
                                                               {VT_8:0}const TargetCurrency: WideString; 
                                                               {VT_12:0}FullPrecision: OleVariant; 
                                                               {VT_12:0}TriangulationPrecision: OleVariant): Double; dispid 2325;
    property VGXFrameInterval {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2326;
  end;

// *********************************************************************//
// Interface: Reference
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EB106212-9C89-11CF-A2B3-00A0C90542FF}
// *********************************************************************//
  Reference = interface(IDispatch)
    ['{EB106212-9C89-11CF-A2B3-00A0C90542FF}']
    function  Get_Collection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessReferences; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Guid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Major {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Minor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_FullPath {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_BuiltIn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_IsBroken {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:6}: vbext_RefKind; safecall;
    property Collection: AccessReferences read Get_Collection;
    property Name: WideString read Get_Name;
    property Guid: WideString read Get_Guid;
    property Major: Integer read Get_Major;
    property Minor: Integer read Get_Minor;
    property FullPath: WideString read Get_FullPath;
    property BuiltIn: WordBool read Get_BuiltIn;
    property IsBroken: WordBool read Get_IsBroken;
    property Kind: vbext_RefKind read Get_Kind;
  end;

// *********************************************************************//
// DispIntf:  ReferenceDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EB106212-9C89-11CF-A2B3-00A0C90542FF}
// *********************************************************************//
  ReferenceDisp = dispinterface
    ['{EB106212-9C89-11CF-A2B3-00A0C90542FF}']
    property Collection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessReferences readonly dispid 1610743808;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1610743809;
    property Guid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1610743810;
    property Major {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1610743811;
    property Minor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1610743812;
    property FullPath {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1610743813;
    property BuiltIn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 1610743814;
    property IsBroken {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 1610743815;
    property Kind {Flags(2), (1/0) CC:0, INV:2, DBG:6}: vbext_RefKind readonly dispid 1610743816;
  end;

// *********************************************************************//
// Interface: _References
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EB106213-9C89-11CF-A2B3-00A0C90542FF}
// *********************************************************************//
  _References = interface(IDispatch)
    ['{EB106213-9C89-11CF-A2B3-00A0C90542FF}']
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:0}var_: OleVariant): Reference; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    function  AddFromGuid {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const Guid: WideString; 
                                                               {VT_3:0}Major: Integer; 
                                                               {VT_3:0}Minor: Integer): Reference; safecall;
    function  AddFromFile {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString): Reference; safecall;
    procedure Remove {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const Reference: Reference); safecall;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  _ReferencesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EB106213-9C89-11CF-A2B3-00A0C90542FF}
// *********************************************************************//
  _ReferencesDisp = dispinterface
    ['{EB106213-9C89-11CF-A2B3-00A0C90542FF}']
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1610743808;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:0}var_: OleVariant): Reference; dispid 0;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1610743810;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
    function  AddFromGuid {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const Guid: WideString; 
                                                               {VT_3:0}Major: Integer; 
                                                               {VT_3:0}Minor: Integer): Reference; dispid 1610743812;
    function  AddFromFile {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString): Reference; dispid 1610743813;
    procedure Remove {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Reference: Reference); dispid 1610743814;
  end;

// *********************************************************************//
// DispIntf:  _References_Events
// Flags:     (4240) Hidden NonExtensible Dispatchable
// GUID:      {F163F201-ADA2-11CF-89A9-00A0C9054129}
// *********************************************************************//
  _References_Events = dispinterface
    ['{F163F201-ADA2-11CF-89A9-00A0C9054129}']
    procedure ItemAdded {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Reference: Reference); dispid 0;
    procedure ItemRemoved {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Reference: Reference); dispid 1;
  end;

// *********************************************************************//
// Interface: _Dummy
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8B06E320-B23C-11CF-89A8-00A0C9054129}
// *********************************************************************//
  _Dummy = interface(IDispatch)
    ['{8B06E320-B23C-11CF-89A8-00A0C9054129}']
  end;

// *********************************************************************//
// DispIntf:  _DummyDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8B06E320-B23C-11CF-89A8-00A0C9054129}
// *********************************************************************//
  _DummyDisp = dispinterface
    ['{8B06E320-B23C-11CF-89A8-00A0C9054129}']
  end;

// *********************************************************************//
// Interface: _DataAccessPage
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {493D8A72-1DB1-11D1-98A2-006008197D41}
// *********************************************************************//
  _DataAccessPage = interface(IDispatch)
    ['{493D8A72-1DB1-11D1-98A2-006008197D41}']
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pRet: WordBool); safecall;
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const ThemeName: WideString); safecall;
    function  Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessWebOptions; safecall;
    function  Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pRet: WideString); safecall;
    function  Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    property _Name: WideString read Get__Name;
    property Name: WideString read Get_Name;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Tag: WideString read Get_Tag write Set_Tag;
    property WindowWidth: Integer read Get_WindowWidth;
    property WindowHeight: Integer read Get_WindowHeight;
    property CurrentView: Smallint read Get_CurrentView;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Document: IDispatch read Get_Document;
    property WebOptions: AccessWebOptions read Get_WebOptions;
    property ConnectionString: WideString read Get_ConnectionString write Set_ConnectionString;
    property FieldListConnection: IDispatch read Get_FieldListConnection;
  end;

// *********************************************************************//
// DispIntf:  _DataAccessPageDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {493D8A72-1DB1-11D1-98A2-006008197D41}
// *********************************************************************//
  _DataAccessPageDisp = dispinterface
    ['{493D8A72-1DB1-11D1-98A2-006008197D41}']
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 20;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid -2147418112;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 148;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 266;
    property WindowWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 287;
    property WindowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 288;
    property CurrentView {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint readonly dispid 289;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Document {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 0;
    procedure ApplyTheme {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const ThemeName: WideString); dispid 2258;
    property WebOptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessWebOptions readonly dispid 2293;
    property ConnectionString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2268;
    property FieldListConnection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2298;
  end;

// *********************************************************************//
// Interface: DataAccessPages
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {493D8A71-1DB1-11D1-98A2-006008197D41}
// *********************************************************************//
  DataAccessPages = interface(IDispatch)
    ['{493D8A71-1DB1-11D1-98A2-006008197D41}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}var_: OleVariant): DataAccessPage; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}var_: OleVariant]: DataAccessPage read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  DataAccessPagesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {493D8A71-1DB1-11D1-98A2-006008197D41}
// *********************************************************************//
  DataAccessPagesDisp = dispinterface
    ['{493D8A71-1DB1-11D1-98A2-006008197D41}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}var_: OleVariant]: DataAccessPage readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: AllObjects
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDBD4001-44D5-11D1-98C0-006008197D41}
// *********************************************************************//
  AllObjects = interface(IDispatch)
    ['{DDBD4001-44D5-11D1-98C0-006008197D41}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}var_: OleVariant): AccessObject; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AllObjectsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDBD4001-44D5-11D1-98C0-006008197D41}
// *********************************************************************//
  AllObjectsDisp = dispinterface
    ['{DDBD4001-44D5-11D1-98C0-006008197D41}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}var_: OleVariant]: AccessObject readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
  end;

// *********************************************************************//
// Interface: AccessObjectProperty
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1FE3E471-A7D0-11D1-9944-006008197D41}
// *********************************************************************//
  AccessObjectProperty = interface(IDispatch)
    ['{1FE3E471-A7D0-11D1-9944-006008197D41}']
    function  Get__Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:0}pRet: OleVariant); safecall;
    property _Value: OleVariant read Get__Value;
    property Name: WideString read Get_Name;
    property Value: OleVariant read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  AccessObjectPropertyDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1FE3E471-A7D0-11D1-9944-006008197D41}
// *********************************************************************//
  AccessObjectPropertyDisp = dispinterface
    ['{1FE3E471-A7D0-11D1-9944-006008197D41}']
    property _Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 2103;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid -2147418112;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant dispid 0;
  end;

// *********************************************************************//
// Interface: AccessObjectProperties
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0921F331-A7C9-11D1-9944-006008197D41}
// *********************************************************************//
  AccessObjectProperties = interface(IDispatch)
    ['{0921F331-A7C9-11D1-9944-006008197D41}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:0}Index: OleVariant): AccessObjectProperty; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:6}: IUnknown; safecall;
    procedure Add {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const PropertyName: WideString; 
                                                       {VT_12:0}Value: OleVariant); safecall;
    procedure Remove {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:0}Item: OleVariant); safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:0}Index: OleVariant]: AccessObjectProperty read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AccessObjectPropertiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0921F331-A7C9-11D1-9944-006008197D41}
// *********************************************************************//
  AccessObjectPropertiesDisp = dispinterface
    ['{0921F331-A7C9-11D1-9944-006008197D41}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:0}Index: OleVariant]: AccessObjectProperty readonly dispid 0; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2001;
    function  _NewEnum {Flags(2), (1/0) CC:0, INV:1, DBG:4}: IUnknown; dispid -4;
    procedure Add {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const PropertyName: WideString; 
                                                       {VT_12:0}Value: OleVariant); dispid 2191;
    procedure Remove {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:0}Item: OleVariant); dispid 2192;
  end;

// *********************************************************************//
// Interface: _CurrentProject
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9212BA71-3E79-11D1-98BD-006008197D41}
// *********************************************************************//
  _CurrentProject = interface(IDispatch)
    ['{9212BA71-3E79-11D1-98BD-006008197D41}']
    function  Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllForms; safecall;
    function  Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllReports; safecall;
    function  Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllMacros; safecall;
    function  Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllModules; safecall;
    function  Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllDataAccessPages; safecall;
    function  Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcProjectType; safecall;
    function  Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                  {VT_12:0}UserID: OleVariant; 
                                                                  {VT_12:0}Password: OleVariant); safecall;
    procedure CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Connection; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessObjectProperties; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    property AllForms: AllForms read Get_AllForms;
    property AllReports: AllReports read Get_AllReports;
    property AllMacros: AllMacros read Get_AllMacros;
    property AllModules: AllModules read Get_AllModules;
    property AllDataAccessPages: AllDataAccessPages read Get_AllDataAccessPages;
    property ProjectType: AcProjectType read Get_ProjectType;
    property BaseConnectionString: WideString read Get_BaseConnectionString;
    property IsConnected: WordBool read Get_IsConnected;
    property Name: WideString read Get_Name;
    property Path: WideString read Get_Path;
    property FullName: WideString read Get_FullName;
    property Connection: Connection read Get_Connection;
    property Properties: AccessObjectProperties read Get_Properties;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  _CurrentProjectDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9212BA71-3E79-11D1-98BD-006008197D41}
// *********************************************************************//
  _CurrentProjectDisp = dispinterface
    ['{9212BA71-3E79-11D1-98BD-006008197D41}']
    property AllForms {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllForms readonly dispid 2219;
    property AllReports {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllReports readonly dispid 2220;
    property AllMacros {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllMacros readonly dispid 2221;
    property AllModules {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllModules readonly dispid 2222;
    property AllDataAccessPages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllDataAccessPages readonly dispid 2224;
    property ProjectType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcProjectType readonly dispid 2271;
    property BaseConnectionString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2267;
    property IsConnected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 2269;
    procedure OpenConnection {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                  {VT_12:0}UserID: OleVariant; 
                                                                  {VT_12:0}Password: OleVariant); dispid 2272;
    procedure CloseConnection {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2270;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2094;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2275;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2260;
    property Connection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Connection readonly dispid 2274;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessObjectProperties readonly dispid 2091;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
  end;

// *********************************************************************//
// Interface: _CurrentData
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9212BA73-3E79-11D1-98BD-006008197D41}
// *********************************************************************//
  _CurrentData = interface(IDispatch)
    ['{9212BA73-3E79-11D1-98BD-006008197D41}']
    function  Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllTables; safecall;
    function  Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllQueries; safecall;
    function  Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllViews; safecall;
    function  Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllStoredProcedures; safecall;
    function  Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AllDatabaseDiagrams; safecall;
    property AllTables: AllTables read Get_AllTables;
    property AllQueries: AllQueries read Get_AllQueries;
    property AllViews: AllViews read Get_AllViews;
    property AllStoredProcedures: AllStoredProcedures read Get_AllStoredProcedures;
    property AllDatabaseDiagrams: AllDatabaseDiagrams read Get_AllDatabaseDiagrams;
  end;

// *********************************************************************//
// DispIntf:  _CurrentDataDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9212BA73-3E79-11D1-98BD-006008197D41}
// *********************************************************************//
  _CurrentDataDisp = dispinterface
    ['{9212BA73-3E79-11D1-98BD-006008197D41}']
    property AllTables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllTables readonly dispid 2225;
    property AllQueries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllQueries readonly dispid 2226;
    property AllViews {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllViews readonly dispid 2228;
    property AllStoredProcedures {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllStoredProcedures readonly dispid 2229;
    property AllDatabaseDiagrams {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AllDatabaseDiagrams readonly dispid 2230;
  end;

// *********************************************************************//
// Interface: AccessObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABE316B1-3FF6-11D1-98BD-006008197D41}
// *********************************************************************//
  AccessObject = interface(IDispatch)
    ['{ABE316B1-3FF6-11D1-98BD-006008197D41}']
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Attributes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessObjectProperties; safecall;
    function  Get_IsLoaded {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    property Parent: IDispatch read Get_Parent;
    property _Name: WideString read Get__Name;
    property Name: WideString read Get_Name;
    property Type_: Integer read Get_Type_;
    property Attributes: Integer read Get_Attributes;
    property Properties: AccessObjectProperties read Get_Properties;
    property IsLoaded: WordBool read Get_IsLoaded;
    property FullName: WideString read Get_FullName;
  end;

// *********************************************************************//
// DispIntf:  AccessObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABE316B1-3FF6-11D1-98BD-006008197D41}
// *********************************************************************//
  AccessObjectDisp = dispinterface
    ['{ABE316B1-3FF6-11D1-98BD-006008197D41}']
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 20;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid -2147418112;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2095;
    property Attributes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2257;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessObjectProperties readonly dispid 2091;
    property IsLoaded {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 2276;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2260;
  end;

// *********************************************************************//
// Interface: _WizHook
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {CB9D3171-4728-11D1-8334-006008197CC8}
// *********************************************************************//
  _WizHook = interface(IDispatch)
    ['{CB9D3171-4728-11D1-8334-006008197CC8}']
    procedure Set_Key {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_22:0}Param1: SYSINT); safecall;
    function  NameFromActid {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_22:0}Actid: SYSINT): WideString; safecall;
    function  ArgsOfActid {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_22:0}Actid: SYSINT): SYSINT; safecall;
    function  OpenScript {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_8:0}const Script: WideString; 
                                                              {VT_8:0}const Label_: WideString; 
                                                              {VT_3:0}OpenMode: Integer; 
                                                              {VT_22:1}var Extra: SYSINT; 
                                                              {VT_3:1}var Version: Integer): Integer; safecall;
    function  GetScriptString {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_3:0}HScr: Integer; 
                                                                   {VT_3:0}ScriptColumn: Integer; 
                                                                   {VT_8:1}var Value: WideString): WordBool; safecall;
    function  SaveScriptString {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_3:0}HScr: Integer; 
                                                                    {VT_3:0}ScriptColumn: Integer; 
                                                                    {VT_8:0}const Value: WideString): WordBool; safecall;
    function  GlobalProcExists {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): WordBool; safecall;
    function  TableFieldHasUniqueIndex {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Table: WideString; 
                                                                            {VT_8:0}const Columns: WideString): WordBool; safecall;
    function  BracketString {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:1}var String_: WideString; 
                                                                 {VT_3:0}flags: Integer): WordBool; safecall;
    function  WizHelp {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const HelpFile: WideString; 
                                                           {VT_3:0}wCmd: Integer; 
                                                           {VT_3:0}ContextID: Integer): WordBool; safecall;
    function  OpenPictureFile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:1}var File_: WideString; 
                                                                   {VT_11:1}var Cancelled: WordBool): WordBool; safecall;
    function  EnglishPictToLocal {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const In_: WideString; 
                                                                      {VT_8:1}var Out: WideString): WordBool; safecall;
    function  TranslateExpression {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_8:0}const In_: WideString; 
                                                                       {VT_8:1}var Out: WideString; 
                                                                       {VT_3:0}ParseFlags: Integer; 
                                                                       {VT_3:0}TranslateFlags: Integer): WordBool; safecall;
    function  FileExists {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const File_: WideString): WordBool; safecall;
    function  FullPath {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const RelativePath: WideString; 
                                                            {VT_8:1}var FullPath: WideString): Smallint; safecall;
    procedure SplitPath {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_8:0}const Path: WideString; 
                                                             {VT_8:1}var Drive: WideString; 
                                                             {VT_8:1}var Dir: WideString; 
                                                             {VT_8:1}var File_: WideString; 
                                                             {VT_8:1}var Ext: WideString); safecall;
    function  TwipsFromFont {Flags(1), (11/10) CC:0, INV:1, DBG:6}({VT_8:0}const FontName: WideString; 
                                                                   {VT_3:0}Size: Integer; 
                                                                   {VT_3:0}Weight: Integer; 
                                                                   {VT_11:0}Italic: WordBool; 
                                                                   {VT_11:0}Underline: WordBool; 
                                                                   {VT_3:0}Cch: Integer; 
                                                                   {VT_8:0}const Caption: WideString; 
                                                                   {VT_3:0}MaxWidthCch: Integer; 
                                                                   {VT_3:1}var dx: Integer; 
                                                                   {VT_3:1}var dy: Integer): WordBool; safecall;
    function  ObjTypOfRecordSource {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const RecordSource: WideString): Smallint; safecall;
    function  IsValidIdent {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Identifier: WideString): WordBool; safecall;
    procedure SortStringArray {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_27:1}var Array_: PSafeArray); safecall;
    function  AnalyzeTable {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:1}const Workspace: Workspace; 
                                                                {VT_29:1}const Database: Database; 
                                                                {VT_8:0}const Table: WideString; 
                                                                {VT_11:0}ReturnDebugInfo: WordBool; 
                                                                {VT_8:1}var Results: WideString): Integer; safecall;
    function  AnalyzeQuery {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:1}const Workspace: Workspace; 
                                                                {VT_29:1}const Database: Database; 
                                                                {VT_8:0}const Query: WideString; 
                                                                {VT_8:1}var Results: WideString): Integer; safecall;
    function  GetFileName {Flags(1), (12/11) CC:0, INV:1, DBG:6}({VT_3:0}hwndOwner: Integer; 
                                                                 {VT_8:0}const AppName: WideString; 
                                                                 {VT_8:0}const DlgTitle: WideString; 
                                                                 {VT_8:0}const OpenTitle: WideString; 
                                                                 {VT_8:1}var File_: WideString; 
                                                                 {VT_8:0}const InitialDir: WideString; 
                                                                 {VT_8:0}const Filter: WideString; 
                                                                 {VT_3:0}FilterIndex: Integer; 
                                                                 {VT_3:0}View: Integer; 
                                                                 {VT_3:0}flags: Integer; 
                                                                 {VT_11:0}fOpen: WordBool): Integer; safecall;
    procedure CreateDataPageControl {Flags(1), (10/10) CC:0, INV:1, DBG:6}({VT_8:0}const DpName: WideString; 
                                                                           {VT_8:0}const CtlName: WideString; 
                                                                           {VT_3:0}Typ: Integer; 
                                                                           {VT_8:0}const Section: WideString; 
                                                                           {VT_3:0}SectionType: Integer; 
                                                                           {VT_8:0}const AppletCode: WideString; 
                                                                           {VT_3:0}X: Integer; 
                                                                           {VT_3:0}Y: Integer; 
                                                                           {VT_3:0}dx: Integer; 
                                                                           {VT_3:0}dy: Integer); safecall;
    procedure KnownWizLeaks {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_11:0}fStart: WordBool); safecall;
    function  SetVbaPassword {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:0}const bstrDbName: WideString; 
                                                                  {VT_8:0}const bstrConnect: WideString; 
                                                                  {VT_8:0}const bstrPasswd: WideString): WordBool; safecall;
    function  LocalFont {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WideString; safecall;
    procedure SaveObject {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const bstrName: WideString; 
                                                              {VT_2:0}objtyp: Smallint); safecall;
    function  CurrentLangID {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Integer; safecall;
    function  KeyboardLangID {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Integer; safecall;
    function  AccessUserDataDir {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WideString; safecall;
    function  OfficeAddInDir {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WideString; safecall;
    function  EmbedFileOnDataPage {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const DpName: WideString; 
                                                                       {VT_8:0}const FileToInsert: WideString): WideString; safecall;
    function  Get_DbcVbProject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: _VBProject; safecall;
    procedure ReportLeaksToFile {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_11:0}fRptToFile: WordBool; 
                                                                     {VT_8:0}const bstrFileOut: WideString); safecall;
    function  Get_IsMatchToDbcConnectString {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_8:0}const bstrConnectionString: WideString): WordBool; safecall;
    procedure LoadImexSpecSolution {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const bstrFilename: WideString); safecall;
    procedure SetDpBlockKeyInput {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_11:0}fBlockKeys: WordBool); safecall;
    function  FirstDbcDataObject {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_8:1}var Name: WideString; 
                                                                      {VT_29:1}var ObjType: AcObjectType; 
                                                                      {VT_3:1}var Attribs: Integer): WordBool; safecall;
    function  CloseCurrentDatabase {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordBool; safecall;
    property Key: SYSINT write Set_Key;
    property DbcVbProject: _VBProject read Get_DbcVbProject;
    property IsMatchToDbcConnectString {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_8:0}const bstrConnectionString: WideString]: WordBool read Get_IsMatchToDbcConnectString;
  end;

// *********************************************************************//
// DispIntf:  _WizHookDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {CB9D3171-4728-11D1-8334-006008197CC8}
// *********************************************************************//
  _WizHookDisp = dispinterface
    ['{CB9D3171-4728-11D1-8334-006008197CC8}']
    property Key {Flags(2), (1/0) CC:0, INV:4, DBG:6}: SYSINT writeonly dispid 2237;
    function  NameFromActid {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_22:0}Actid: SYSINT): WideString; dispid 2234;
    function  ArgsOfActid {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_22:0}Actid: SYSINT): SYSINT; dispid 2236;
    function  OpenScript {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_8:0}const Script: WideString; 
                                                              {VT_8:0}const Label_: WideString; 
                                                              {VT_3:0}OpenMode: Integer; 
                                                              {VT_22:1}var Extra: SYSINT; 
                                                              {VT_3:1}var Version: Integer): Integer; dispid 2238;
    function  GetScriptString {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_3:0}HScr: Integer; 
                                                                   {VT_3:0}ScriptColumn: Integer; 
                                                                   {VT_8:1}var Value: WideString): WordBool; dispid 2239;
    function  SaveScriptString {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_3:0}HScr: Integer; 
                                                                    {VT_3:0}ScriptColumn: Integer; 
                                                                    {VT_8:0}const Value: WideString): WordBool; dispid 2240;
    function  GlobalProcExists {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): WordBool; dispid 2241;
    function  TableFieldHasUniqueIndex {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Table: WideString; 
                                                                            {VT_8:0}const Columns: WideString): WordBool; dispid 2242;
    function  BracketString {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:1}var String_: WideString; 
                                                                 {VT_3:0}flags: Integer): WordBool; dispid 2243;
    function  WizHelp {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const HelpFile: WideString; 
                                                           {VT_3:0}wCmd: Integer; 
                                                           {VT_3:0}ContextID: Integer): WordBool; dispid 2244;
    function  OpenPictureFile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:1}var File_: WideString; 
                                                                   {VT_11:1}var Cancelled: WordBool): WordBool; dispid 2245;
    function  EnglishPictToLocal {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const In_: WideString; 
                                                                      {VT_8:1}var Out: WideString): WordBool; dispid 2246;
    function  TranslateExpression {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_8:0}const In_: WideString; 
                                                                       {VT_8:1}var Out: WideString; 
                                                                       {VT_3:0}ParseFlags: Integer; 
                                                                       {VT_3:0}TranslateFlags: Integer): WordBool; dispid 2247;
    function  FileExists {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const File_: WideString): WordBool; dispid 2248;
    function  FullPath {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const RelativePath: WideString; 
                                                            {VT_8:1}var FullPath: WideString): Smallint; dispid 2249;
    procedure SplitPath {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_8:0}const Path: WideString; 
                                                             {VT_8:1}var Drive: WideString; 
                                                             {VT_8:1}var Dir: WideString; 
                                                             {VT_8:1}var File_: WideString; 
                                                             {VT_8:1}var Ext: WideString); dispid 2250;
    function  TwipsFromFont {Flags(2), (11/10) CC:0, INV:1, DBG:4}({VT_8:0}const FontName: WideString; 
                                                                   {VT_3:0}Size: Integer; 
                                                                   {VT_3:0}Weight: Integer; 
                                                                   {VT_11:0}Italic: WordBool; 
                                                                   {VT_11:0}Underline: WordBool; 
                                                                   {VT_3:0}Cch: Integer; 
                                                                   {VT_8:0}const Caption: WideString; 
                                                                   {VT_3:0}MaxWidthCch: Integer; 
                                                                   {VT_3:1}var dx: Integer; 
                                                                   {VT_3:1}var dy: Integer): WordBool; dispid 2251;
    function  ObjTypOfRecordSource {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const RecordSource: WideString): Smallint; dispid 2252;
    function  IsValidIdent {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Identifier: WideString): WordBool; dispid 2253;
    procedure SortStringArray {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_27:1}var Array_: {??PSafeArray} OleVariant); dispid 2254;
    function  AnalyzeTable {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:1}const Workspace: Workspace; 
                                                                {VT_29:1}const Database: Database; 
                                                                {VT_8:0}const Table: WideString; 
                                                                {VT_11:0}ReturnDebugInfo: WordBool; 
                                                                {VT_8:1}var Results: WideString): Integer; dispid 2255;
    function  AnalyzeQuery {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:1}const Workspace: Workspace; 
                                                                {VT_29:1}const Database: Database; 
                                                                {VT_8:0}const Query: WideString; 
                                                                {VT_8:1}var Results: WideString): Integer; dispid 2256;
    function  GetFileName {Flags(2), (12/11) CC:0, INV:1, DBG:4}({VT_3:0}hwndOwner: Integer; 
                                                                 {VT_8:0}const AppName: WideString; 
                                                                 {VT_8:0}const DlgTitle: WideString; 
                                                                 {VT_8:0}const OpenTitle: WideString; 
                                                                 {VT_8:1}var File_: WideString; 
                                                                 {VT_8:0}const InitialDir: WideString; 
                                                                 {VT_8:0}const Filter: WideString; 
                                                                 {VT_3:0}FilterIndex: Integer; 
                                                                 {VT_3:0}View: Integer; 
                                                                 {VT_3:0}flags: Integer; 
                                                                 {VT_11:0}fOpen: WordBool): Integer; dispid 2261;
    procedure CreateDataPageControl {Flags(2), (10/10) CC:0, INV:1, DBG:4}({VT_8:0}const DpName: WideString; 
                                                                           {VT_8:0}const CtlName: WideString; 
                                                                           {VT_3:0}Typ: Integer; 
                                                                           {VT_8:0}const Section: WideString; 
                                                                           {VT_3:0}SectionType: Integer; 
                                                                           {VT_8:0}const AppletCode: WideString; 
                                                                           {VT_3:0}X: Integer; 
                                                                           {VT_3:0}Y: Integer; 
                                                                           {VT_3:0}dx: Integer; 
                                                                           {VT_3:0}dy: Integer); dispid 2265;
    procedure KnownWizLeaks {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_11:0}fStart: WordBool); dispid 2273;
    function  SetVbaPassword {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:0}const bstrDbName: WideString; 
                                                                  {VT_8:0}const bstrConnect: WideString; 
                                                                  {VT_8:0}const bstrPasswd: WideString): WordBool; dispid 2294;
    function  LocalFont {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WideString; dispid 2295;
    procedure SaveObject {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const bstrName: WideString; 
                                                              {VT_2:0}objtyp: Smallint); dispid 2296;
    function  CurrentLangID {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Integer; dispid 2299;
    function  KeyboardLangID {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Integer; dispid 2300;
    function  AccessUserDataDir {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WideString; dispid 2302;
    function  OfficeAddInDir {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WideString; dispid 2303;
    function  EmbedFileOnDataPage {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const DpName: WideString; 
                                                                       {VT_8:0}const FileToInsert: WideString): WideString; dispid 2305;
    property DbcVbProject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: _VBProject readonly dispid 2306;
    procedure ReportLeaksToFile {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_11:0}fRptToFile: WordBool; 
                                                                     {VT_8:0}const bstrFileOut: WideString); dispid 2292;
    property IsMatchToDbcConnectString {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_8:0}const bstrConnectionString: WideString]: WordBool readonly dispid 2291;
    procedure LoadImexSpecSolution {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const bstrFilename: WideString); dispid 2282;
    procedure SetDpBlockKeyInput {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_11:0}fBlockKeys: WordBool); dispid 2283;
    function  FirstDbcDataObject {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_8:1}var Name: WideString; 
                                                                      {VT_29:1}var ObjType: AcObjectType; 
                                                                      {VT_3:1}var Attribs: Integer): WordBool; dispid 2323;
    function  CloseCurrentDatabase {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordBool; dispid 2324;
  end;

// *********************************************************************//
// Interface: _DefaultWebOptions
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {416ED4F0-AB31-11D1-BF72-0060083E43CF}
// *********************************************************************//
  _DefaultWebOptions = interface(IDispatch)
    ['{416ED4F0-AB31-11D1-BF72-0060083E43CF}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcColorIndex; safecall;
    procedure Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pl: AcColorIndex); safecall;
    function  Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AcColorIndex; safecall;
    procedure Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}pl: AcColorIndex); safecall;
    function  Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pstr: WideString); safecall;
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding; safecall;
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}penc: MsoEncoding); safecall;
    function  Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property HyperlinkColor: AcColorIndex read Get_HyperlinkColor write Set_HyperlinkColor;
    property FollowedHyperlinkColor: AcColorIndex read Get_FollowedHyperlinkColor write Set_FollowedHyperlinkColor;
    property UnderlineHyperlinks: WordBool read Get_UnderlineHyperlinks write Set_UnderlineHyperlinks;
    property OrganizeInFolder: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property CheckIfOfficeIsHTMLEditor: WordBool read Get_CheckIfOfficeIsHTMLEditor write Set_CheckIfOfficeIsHTMLEditor;
    property DownloadComponents: WordBool read Get_DownloadComponents write Set_DownloadComponents;
    property LocationOfComponents: WideString read Get_LocationOfComponents write Set_LocationOfComponents;
    property Encoding: MsoEncoding read Get_Encoding write Set_Encoding;
    property AlwaysSaveInDefaultEncoding: WordBool read Get_AlwaysSaveInDefaultEncoding write Set_AlwaysSaveInDefaultEncoding;
    property FolderSuffix: WideString read Get_FolderSuffix;
  end;

// *********************************************************************//
// DispIntf:  _DefaultWebOptionsDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {416ED4F0-AB31-11D1-BF72-0060083E43CF}
// *********************************************************************//
  _DefaultWebOptionsDisp = dispinterface
    ['{416ED4F0-AB31-11D1-BF72-0060083E43CF}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property HyperlinkColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcColorIndex dispid 2279;
    property FollowedHyperlinkColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AcColorIndex dispid 2280;
    property UnderlineHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2281;
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2284;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2285;
    property CheckIfOfficeIsHTMLEditor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2286;
    property DownloadComponents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2287;
    property LocationOfComponents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2288;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding dispid 2289;
    property AlwaysSaveInDefaultEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2290;
    property FolderSuffix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2307;
  end;

// *********************************************************************//
// Interface: _WebOptions
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {416ED4F6-AB31-11D1-BF72-0060083E43CF}
// *********************************************************************//
  _WebOptions = interface(IDispatch)
    ['{416ED4F6-AB31-11D1-BF72-0060083E43CF}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AccessApplication; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}pf: WordBool); safecall;
    function  Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const pstr: WideString); safecall;
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding; safecall;
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}penc: MsoEncoding); safecall;
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure UseDefaultFolderSuffix {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: AccessApplication read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property OrganizeInFolder: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property DownloadComponents: WordBool read Get_DownloadComponents write Set_DownloadComponents;
    property LocationOfComponents: WideString read Get_LocationOfComponents write Set_LocationOfComponents;
    property Encoding: MsoEncoding read Get_Encoding write Set_Encoding;
    property FolderSuffix: WideString read Get_FolderSuffix;
  end;

// *********************************************************************//
// DispIntf:  _WebOptionsDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {416ED4F6-AB31-11D1-BF72-0060083E43CF}
// *********************************************************************//
  _WebOptionsDisp = dispinterface
    ['{416ED4F6-AB31-11D1-BF72-0060083E43CF}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AccessApplication readonly dispid 2005;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2087;
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2284;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2285;
    property DownloadComponents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2287;
    property LocationOfComponents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2288;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding dispid 2289;
    property FolderSuffix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2307;
    procedure UseDefaultFolderSuffix {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2308;
  end;

// *********************************************************************//
// Interface: _DummyEvents
// Flags:     (16) Hidden
// GUID:      {58BF3100-B580-11CF-89A8-00A0C9054129}
// *********************************************************************//
  _DummyEvents = interface(IUnknown)
    ['{58BF3100-B580-11CF-89A8-00A0C9054129}']
    function  Initialize {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
    function  Terminate {Flags(1), (0/0) CC:4, INV:1, DBG:6}: HResult; stdcall;
  end;

// *********************************************************************//
// The Class CoFormatCondition provides a Create and CreateRemote method to          
// create instances of the default interface _FormatCondition exposed by              
// the CoClass FormatCondition. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFormatCondition = class
    class function Create: _FormatCondition;
    class function CreateRemote(const MachineName: string): _FormatCondition;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TFormatCondition
// Help String      : 
// Default Interface: _FormatCondition
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TFormatConditionProperties= class;
{$ENDIF}
  TFormatCondition = class(TOleServer)
  private
    FIntf:        _FormatCondition;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TFormatConditionProperties;
    function      GetServerProperties: TFormatConditionProperties;
{$ENDIF}
    function      GetDefaultInterface: _FormatCondition;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:Integer
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
// StdProp:Integer
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
// StdProp:WordBool
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:WordBool
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:WordBool
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:WordBool
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:TOleEnum
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionType;
// StdProp:TOleEnum
    function  Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionOperator;
// StdProp:WideString
    function  Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _FormatCondition);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure Modify {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_29:0}Type_: AcFormatConditionType; 
                                                          {VT_29:0}Operator: AcFormatConditionOperator); overload;
    procedure Modify {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_29:0}Type_: AcFormatConditionType; 
                                                          {VT_29:0}Operator: AcFormatConditionOperator; 
                                                          {VT_12:0}Expression1: OleVariant); overload;
    procedure Modify {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_29:0}Type_: AcFormatConditionType; 
                                                          {VT_29:0}Operator: AcFormatConditionOperator; 
                                                          {VT_12:0}Expression1: OleVariant; 
                                                          {VT_12:0}Expression2: OleVariant); overload;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    property  DefaultInterface: _FormatCondition read GetDefaultInterface;
  {CoClassWriteProperties}
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcFormatConditionType read Get_Type_;
    property Operator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcFormatConditionOperator read Get_Operator;
    property Expression1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Expression1;
    property Expression2 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Expression2;
  {CoClassWriteProperties}
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ForeColor write Set_ForeColor;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_BackColor write Set_BackColor;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FontBold write Set_FontBold;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FontUnderline write Set_FontUnderline;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Enabled write Set_Enabled;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TFormatConditionProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TFormatCondition
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TFormatConditionProperties = class(TPersistent)
  private
    FServer:    TFormatCondition;
    function    GetDefaultInterface: _FormatCondition;
    constructor Create(AServer: TFormatCondition);
  protected
// StdProp:Integer
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
// StdProp:Integer
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
// StdProp:WordBool
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:WordBool
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:WordBool
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:WordBool
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
// StdProp:TOleEnum
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionType;
// StdProp:TOleEnum
    function  Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionOperator;
// StdProp:WideString
    function  Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
  public
    property DefaultInterface: _FormatCondition read GetDefaultInterface;
  published
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ForeColor write Set_ForeColor;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_BackColor write Set_BackColor;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FontBold write Set_FontBold;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FontUnderline write Set_FontUnderline;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Enabled write Set_Enabled;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAccessHyperlink provides a Create and CreateRemote method to          
// create instances of the default interface _Hyperlink exposed by              
// the CoClass AccessHyperlink. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAccessHyperlink = class
    class function Create: _Hyperlink;
    class function CreateRemote(const MachineName: string): _Hyperlink;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAccessHyperlink
// Help String      : 
// Default Interface: _Hyperlink
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAccessHyperlinkProperties= class;
{$ENDIF}
  TAccessHyperlink = class(TOleServer)
  private
    FIntf:        _Hyperlink;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAccessHyperlinkProperties;
    function      GetServerProperties: TAccessHyperlinkProperties;
{$ENDIF}
    function      GetDefaultInterface: _Hyperlink;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:WideString
    function  Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Hyperlink);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Follow {Flags(1), (5/5) CC:0, INV:1, DBG:3}({VT_11:0}NewWindow: WordBool; 
                                                          {VT_11:0}AddHistory: WordBool; 
                                                          {VT_12:0}ExtraInfo: OleVariant; 
                                                          {VT_29:0}Method: MsoExtraInfoMethod; 
                                                          {VT_8:0}const HeaderInfo: WideString);
    procedure CreateNewDocument {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString; 
                                                                     {VT_11:0}EditNow: WordBool; 
                                                                     {VT_11:0}Overwrite: WordBool);
    property  DefaultInterface: _Hyperlink read GetDefaultInterface;
  {CoClassWriteProperties}
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAccessHyperlinkProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAccessHyperlink
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAccessHyperlinkProperties = class(TPersistent)
  private
    FServer:    TAccessHyperlink;
    function    GetDefaultInterface: _Hyperlink;
    constructor Create(AServer: TAccessHyperlink);
  protected
// StdProp:WideString
    function  Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
// StdProp:WideString
    function  Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:OleVariant
    procedure Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
  public
    property DefaultInterface: _Hyperlink read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAccessForm provides a Create and CreateRemote method to          
// create instances of the default interface _Form exposed by              
// the CoClass AccessForm. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAccessForm = class
    class function Create: _Form;
    class function CreateRemote(const MachineName: string): _Form;
  end;

  TAccessFormBeforeInsert = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessFormBeforeUpdate = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessFormDelete = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessFormBeforeDelConfirm = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant;
                                                                                                var {VT_2:1}Response: OleVariant) of object;
  TAccessFormAfterDelConfirm = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Status: OleVariant) of object;
  TAccessFormOpen = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessFormUnload = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessFormDblClick = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessFormMouseDown = procedure(Sender: TObject;  {Flags(3), (4/4) CC:4, INV:1, DBG:9}var {VT_2:1}Button: OleVariant;
                                                                                         var {VT_2:1}Shift: OleVariant;
                                                                                         var {VT_4:1}X: OleVariant;
                                                                                         var {VT_4:1}Y: OleVariant) of object;
  TAccessFormMouseMove = procedure(Sender: TObject;  {Flags(3), (4/4) CC:4, INV:1, DBG:9}var {VT_2:1}Button: OleVariant;
                                                                                         var {VT_2:1}Shift: OleVariant;
                                                                                         var {VT_4:1}X: OleVariant;
                                                                                         var {VT_4:1}Y: OleVariant) of object;
  TAccessFormMouseUp = procedure(Sender: TObject;  {Flags(3), (4/4) CC:4, INV:1, DBG:9}var {VT_2:1}Button: OleVariant;
                                                                                       var {VT_2:1}Shift: OleVariant;
                                                                                       var {VT_4:1}X: OleVariant;
                                                                                       var {VT_4:1}Y: OleVariant) of object;
  TAccessFormKeyDown = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}KeyCode: OleVariant;
                                                                                       var {VT_2:1}Shift: OleVariant) of object;
  TAccessFormKeyPress = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}KeyAscii: OleVariant) of object;
  TAccessFormKeyUp = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}KeyCode: OleVariant;
                                                                                     var {VT_2:1}Shift: OleVariant) of object;
  TAccessFormError = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}DataErr: OleVariant;
                                                                                     var {VT_2:1}Response: OleVariant) of object;
  TAccessFormFilter = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant;
                                                                                      var {VT_2:1}FilterType: OleVariant) of object;
  TAccessFormApplyFilter = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant;
                                                                                           var {VT_2:1}ApplyType: OleVariant) of object;
  TAccessFormDirty = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAccessForm
// Help String      : 
// Default Interface: _Form
// Def. Intf. DISP? : No
// Event   Interface: _FormEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAccessFormProperties= class;
{$ENDIF}
  TAccessForm = class(TOleServer)
  private
    FOnLoad: TNotifyEvent;
    FOnCurrent: TNotifyEvent;
    FOnBeforeInsert: TAccessFormBeforeInsert;
    FOnAfterInsert: TNotifyEvent;
    FOnBeforeUpdate: TAccessFormBeforeUpdate;
    FOnAfterUpdate: TNotifyEvent;
    FOnDelete: TAccessFormDelete;
    FOnBeforeDelConfirm: TAccessFormBeforeDelConfirm;
    FOnAfterDelConfirm: TAccessFormAfterDelConfirm;
    FOnOpen: TAccessFormOpen;
    FOnResize: TNotifyEvent;
    FOnUnload: TAccessFormUnload;
    FOnClose: TNotifyEvent;
    FOnActivate: TNotifyEvent;
    FOnDeactivate: TNotifyEvent;
    FOnGotFocus: TNotifyEvent;
    FOnLostFocus: TNotifyEvent;
    FOnClick: TNotifyEvent;
    FOnDblClick: TAccessFormDblClick;
    FOnMouseDown: TAccessFormMouseDown;
    FOnMouseMove: TAccessFormMouseMove;
    FOnMouseUp: TAccessFormMouseUp;
    FOnKeyDown: TAccessFormKeyDown;
    FOnKeyPress: TAccessFormKeyPress;
    FOnKeyUp: TAccessFormKeyUp;
    FOnError: TAccessFormError;
    FOnTimer: TNotifyEvent;
    FOnFilter: TAccessFormFilter;
    FOnApplyFilter: TAccessFormApplyFilter;
    FOnDirty: TAccessFormDirty;
    FIntf:        _Form;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAccessFormProperties;
    function      GetServerProperties: TAccessFormProperties;
{$ENDIF}
    function      GetDefaultInterface: _Form;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
  {CoClassWriteArrayPropMethods}
// StdProp:IDispatch
    function  Get_accParent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:Integer
    function  Get_accChildCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_accChild {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): IDispatch;
// StdProp:WideString
    function  Get_accName {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:WideString
    function  Get_accValue {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:WideString
    function  Get_accDescription {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:OleVariant
    function  Get_accRole {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
// StdProp:OleVariant
    function  Get_accState {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
// StdProp:WideString
    function  Get_accHelp {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:Integer
    function  Get_accHelpTopic {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:1}out pszHelpFile: WideString; 
                                                                    {VT_12:0}varChild: OleVariant): Integer;
// StdProp:WideString
    function  Get_accKeyboardShortcut {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:OleVariant
    function  Get_accFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    function  Get_accSelection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:WideString
    function  Get_accDefaultAction {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:WideString
    procedure Set_accName {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                               {VT_8:0}const pszName: WideString);
// StdProp:WideString
    procedure Set_accValue {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                                {VT_8:0}const pszValue: WideString);
// StdProp:WideString
    function  Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Integer
    function  Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Byte
    function  Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Integer
    function  Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:OleVariant
    function  Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Smallint
    function  Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:OleVariant
    function  Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Byte
    function  Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:OleVariant
    function  Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WideString
    function  Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:OleVariant
    function  Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Smallint
    function  Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:OleVariant
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Integer
    function  Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:OleVariant
    function  Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WordBool
    function  Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Byte
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WideString
    function  Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:Smallint
    function  Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
// StdProp:
    function  Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
// StdProp:IDispatch
    function  Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    procedure Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:3}({VT_9:0}const pRet: IDispatch);
// StdProp:
    function  Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
// StdProp:
    function  Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessForm;
// StdProp:
    function  Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
// StdProp:
    function  Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
// StdProp:
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
// StdProp:Smallint
    function  Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Form);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure accSelect {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_3:0}flagsSelect: Integer); overload;
    procedure accSelect {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}flagsSelect: Integer; 
                                                             {VT_12:0}varChild: OleVariant); overload;
    procedure accLocation {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer); overload;
    procedure accLocation {Flags(1), (5/5) CC:0, INV:1, DBG:3}({VT_3:1}out pxLeft: Integer; 
                                                               {VT_3:1}out pyTop: Integer; 
                                                               {VT_3:1}out pcxWidth: Integer; 
                                                               {VT_3:1}out pcyHeight: Integer; 
                                                               {VT_12:0}varChild: OleVariant); overload;
    function  accNavigate {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_3:0}navDir: Integer): OleVariant; overload;
    function  accNavigate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}navDir: Integer; 
                                                               {VT_12:0}varStart: OleVariant): OleVariant; overload;
    function  accHitTest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}xLeft: Integer; 
                                                              {VT_3:0}yTop: Integer): OleVariant;
    procedure accDoDefaultAction {Flags(1), (1/0) CC:0, INV:1, DBG:3}; overload;
    procedure accDoDefaultAction {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:0}varChild: OleVariant); overload;
    procedure Undo {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Recalc {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Requery {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Refresh {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Repaint {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure GoToPage {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_3:0}PageNumber: Integer; 
                                                            {VT_3:0}Right: Integer; 
                                                            {VT_3:0}Down: Integer);
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant;
    property  DefaultInterface: _Form read GetDefaultInterface;
  {CoClassWriteProperties}
    property accParent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_accParent;
    property accChildCount {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_accChildCount;
    property accChild {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: IDispatch read Get_accChild;
    property accName {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: WideString read Get_accName write Set_accName;
    property accValue {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: WideString read Get_accValue write Set_accValue;
    property accDescription {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: WideString read Get_accDescription;
    property accRole {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: OleVariant read Get_accRole;
    property accState {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: OleVariant read Get_accState;
    property accHelp {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: WideString read Get_accHelp;
    property accHelpTopic {Flags(2), (3/2) CC:0, INV:2, DBG:2}[{VT_8:1}out pszHelpFile: WideString; 
                                                               {VT_12:0}varChild: OleVariant]: Integer read Get_accHelpTopic;
    property accKeyboardShortcut {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: WideString read Get_accKeyboardShortcut;
    property accFocus {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_accFocus;
    property accSelection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_accSelection;
    property accDefaultAction {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}varChild: OleVariant]: WideString read Get_accDefaultAction;
    property FormName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FormName write Set_FormName;
    property AllowEditing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowEditing write Set_AllowEditing;
    property DefaultEditing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DefaultEditing write Set_DefaultEditing;
    property AllowUpdating {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_AllowUpdating write Set_AllowUpdating;
    property MinButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MinButton write Set_MinButton;
    property MaxButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MaxButton write Set_MaxButton;
    property TabularCharSet {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_TabularCharSet write Set_TabularCharSet;
    property ShowGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowGrid write Set_ShowGrid;
    property LogicalPageWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_LogicalPageWidth write Set_LogicalPageWidth;
    property LogicalPageHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_LogicalPageHeight write Set_LogicalPageHeight;
    property ZoomControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ZoomControl write Set_ZoomControl;
    property PrtMip {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PrtMip write Set_PrtMip;
    property PrtDevMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PrtDevMode write Set_PrtDevMode;
    property PrtDevNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PrtDevNames write Set_PrtDevNames;
    property Bookmark {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_Bookmark write Set_Bookmark;
    property TabularFamily {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_TabularFamily write Set_TabularFamily;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get__Name write Set__Name;
    property PaintPalette {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PaintPalette write Set_PaintPalette;
    property OpenArgs {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_OpenArgs write Set_OpenArgs;
    property ConnectSynch {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_ConnectSynch write Set_ConnectSynch;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PictureData write Set_PictureData;
    property PicturePalette {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PicturePalette write Set_PicturePalette;
    property acHiddenCurrentPage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_acHiddenCurrentPage write Set_acHiddenCurrentPage;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property NewRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_NewRecord;
    property ActiveControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessControl read Get_ActiveControl;
    property DefaultControl {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_3:0}ControlType: Integer]: AccessControl read Get_DefaultControl;
    property Dynaset {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Dynaset;
    property RecordsetClone {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_RecordsetClone;
    property Recordset {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Recordset write Set_Recordset;
    property Section {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}Index: OleVariant]: AccessSection read Get_Section;
    property Form {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessForm read Get_Form;
    property Module {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Module read Get_Module;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Properties read Get_Properties;
    property ConnectControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessControl read Get_ConnectControl;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Controls read Get_Controls;
  {CoClassWriteProperties}
    property RecordSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecordSource write Set_RecordSource;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Filter write Set_Filter;
    property FilterOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FilterOn write Set_FilterOn;
    property OrderBy {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OrderBy write Set_OrderBy;
    property OrderByOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrderByOn write Set_OrderByOn;
    property AllowFilters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowFilters write Set_AllowFilters;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Caption write Set_Caption;
    property DefaultView {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DefaultView write Set_DefaultView;
    property ViewsAllowed {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_ViewsAllowed write Set_ViewsAllowed;
    property AllowEdits {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowEdits write Set_AllowEdits;
    property AllowDeletions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowDeletions write Set_AllowDeletions;
    property AllowAdditions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowAdditions write Set_AllowAdditions;
    property DataEntry {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DataEntry write Set_DataEntry;
    property RecordsetType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_RecordsetType write Set_RecordsetType;
    property RecordLocks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_RecordLocks write Set_RecordLocks;
    property ScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_ScrollBars write Set_ScrollBars;
    property RecordSelectors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_RecordSelectors write Set_RecordSelectors;
    property NavigationButtons {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_NavigationButtons write Set_NavigationButtons;
    property DividingLines {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DividingLines write Set_DividingLines;
    property AutoResize {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AutoResize write Set_AutoResize;
    property AutoCenter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AutoCenter write Set_AutoCenter;
    property PopUp {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PopUp write Set_PopUp;
    property Modal {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Modal write Set_Modal;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_BorderStyle write Set_BorderStyle;
    property ControlBox {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ControlBox write Set_ControlBox;
    property MinMaxButtons {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_MinMaxButtons write Set_MinMaxButtons;
    property CloseButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CloseButton write Set_CloseButton;
    property WhatsThisButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_WhatsThisButton write Set_WhatsThisButton;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Width write Set_Width;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Picture write Set_Picture;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureType write Set_PictureType;
    property PictureSizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureSizeMode write Set_PictureSizeMode;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PictureTiling write Set_PictureTiling;
    property Cycle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_Cycle write Set_Cycle;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MenuBar write Set_MenuBar;
    property Toolbar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Toolbar write Set_Toolbar;
    property ShortcutMenu {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShortcutMenu write Set_ShortcutMenu;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property GridX {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridX write Set_GridX;
    property GridY {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridY write Set_GridY;
    property LayoutForPrint {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_LayoutForPrint write Set_LayoutForPrint;
    property FastLaserPrinting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FastLaserPrinting write Set_FastLaserPrinting;
    property HelpFile {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_HelpFile write Set_HelpFile;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HelpContextId write Set_HelpContextId;
    property RowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_RowHeight write Set_RowHeight;
    property DatasheetFontName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DatasheetFontName write Set_DatasheetFontName;
    property DatasheetFontHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DatasheetFontHeight write Set_DatasheetFontHeight;
    property DatasheetFontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DatasheetFontWeight write Set_DatasheetFontWeight;
    property DatasheetFontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DatasheetFontItalic write Set_DatasheetFontItalic;
    property DatasheetFontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DatasheetFontUnderline write Set_DatasheetFontUnderline;
    property DatasheetGridlinesBehavior {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DatasheetGridlinesBehavior write Set_DatasheetGridlinesBehavior;
    property DatasheetGridlinesColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DatasheetGridlinesColor write Set_DatasheetGridlinesColor;
    property DatasheetCellsEffect {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DatasheetCellsEffect write Set_DatasheetCellsEffect;
    property DatasheetForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DatasheetForeColor write Set_DatasheetForeColor;
    property DatasheetBackColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DatasheetBackColor write Set_DatasheetBackColor;
    property Hwnd {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hwnd write Set_Hwnd;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Count write Set_Count;
    property Page {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Page write Set_Page;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Pages write Set_Pages;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property Painting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Painting write Set_Painting;
    property FrozenColumns {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FrozenColumns write Set_FrozenColumns;
    property PaletteSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PaletteSource write Set_PaletteSource;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Tag write Set_Tag;
    property OnMenu {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMenu write Set_OnMenu;
    property OnCurrent1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnCurrent write Set_OnCurrent;
    property OnInsert {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnInsert write Set_OnInsert;
    property BeforeInsert {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BeforeInsert write Set_BeforeInsert;
    property AfterInsert {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AfterInsert write Set_AfterInsert;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnDirty1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDirty write Set_OnDirty;
    property OnDelete1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDelete write Set_OnDelete;
    property BeforeDelConfirm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BeforeDelConfirm write Set_BeforeDelConfirm;
    property AfterDelConfirm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AfterDelConfirm write Set_AfterDelConfirm;
    property OnOpen1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnOpen write Set_OnOpen;
    property OnLoad1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnLoad write Set_OnLoad;
    property OnResize1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnResize write Set_OnResize;
    property OnUnload1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnUnload write Set_OnUnload;
    property OnClose1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnClose write Set_OnClose;
    property OnActivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnActivate write Set_OnActivate;
    property OnDeactivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDeactivate write Set_OnDeactivate;
    property OnGotFocus1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property KeyPreview {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_KeyPreview write Set_KeyPreview;
    property OnError1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnError write Set_OnError;
    property OnFilter1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnFilter write Set_OnFilter;
    property OnApplyFilter1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnApplyFilter write Set_OnApplyFilter;
    property OnTimer1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnTimer write Set_OnTimer;
    property TimerInterval {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_TimerInterval write Set_TimerInterval;
    property Dirty {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Dirty write Set_Dirty;
    property WindowWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_WindowWidth write Set_WindowWidth;
    property WindowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_WindowHeight write Set_WindowHeight;
    property CurrentView {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentView write Set_CurrentView;
    property CurrentSectionTop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentSectionTop write Set_CurrentSectionTop;
    property CurrentSectionLeft {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentSectionLeft write Set_CurrentSectionLeft;
    property SelLeft {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelLeft write Set_SelLeft;
    property SelTop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelTop write Set_SelTop;
    property SelWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelWidth write Set_SelWidth;
    property SelHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelHeight write Set_SelHeight;
    property CurrentRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_CurrentRecord write Set_CurrentRecord;
    property InsideHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_InsideHeight write Set_InsideHeight;
    property InsideWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_InsideWidth write Set_InsideWidth;
    property HasModule {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasModule write Set_HasModule;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_Orientation write Set_Orientation;
    property AllowDesignChanges {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowDesignChanges write Set_AllowDesignChanges;
    property ServerFilter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ServerFilter write Set_ServerFilter;
    property ServerFilterByForm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ServerFilterByForm write Set_ServerFilterByForm;
    property MaxRecords {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_MaxRecords write Set_MaxRecords;
    property UniqueTable {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UniqueTable write Set_UniqueTable;
    property ResyncCommand {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ResyncCommand write Set_ResyncCommand;
    property InputParameters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_InputParameters write Set_InputParameters;
    property MaxRecButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MaxRecButton write Set_MaxRecButton;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name write Set_Name;
    property SubdatasheetHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_SubdatasheetHeight write Set_SubdatasheetHeight;
    property SubdatasheetExpanded {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SubdatasheetExpanded write Set_SubdatasheetExpanded;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAccessFormProperties read GetServerProperties;
{$ENDIF}
  {CoClassWriteEventDecls}
    property OnLoad: TNotifyEvent read FOnLoad write FOnLoad;
    property OnCurrent: TNotifyEvent read FOnCurrent write FOnCurrent;
    property OnBeforeInsert: TAccessFormBeforeInsert read FOnBeforeInsert write FOnBeforeInsert;
    property OnAfterInsert: TNotifyEvent read FOnAfterInsert write FOnAfterInsert;
    property OnBeforeUpdate: TAccessFormBeforeUpdate read FOnBeforeUpdate write FOnBeforeUpdate;
    property OnAfterUpdate: TNotifyEvent read FOnAfterUpdate write FOnAfterUpdate;
    property OnDelete: TAccessFormDelete read FOnDelete write FOnDelete;
    property OnBeforeDelConfirm: TAccessFormBeforeDelConfirm read FOnBeforeDelConfirm write FOnBeforeDelConfirm;
    property OnAfterDelConfirm: TAccessFormAfterDelConfirm read FOnAfterDelConfirm write FOnAfterDelConfirm;
    property OnOpen: TAccessFormOpen read FOnOpen write FOnOpen;
    property OnResize: TNotifyEvent read FOnResize write FOnResize;
    property OnUnload: TAccessFormUnload read FOnUnload write FOnUnload;
    property OnClose: TNotifyEvent read FOnClose write FOnClose;
    property OnActivate: TNotifyEvent read FOnActivate write FOnActivate;
    property OnDeactivate: TNotifyEvent read FOnDeactivate write FOnDeactivate;
    property OnGotFocus: TNotifyEvent read FOnGotFocus write FOnGotFocus;
    property OnLostFocus: TNotifyEvent read FOnLostFocus write FOnLostFocus;
    property OnClick: TNotifyEvent read FOnClick write FOnClick;
    property OnDblClick: TAccessFormDblClick read FOnDblClick write FOnDblClick;
    property OnMouseDown: TAccessFormMouseDown read FOnMouseDown write FOnMouseDown;
    property OnMouseMove: TAccessFormMouseMove read FOnMouseMove write FOnMouseMove;
    property OnMouseUp: TAccessFormMouseUp read FOnMouseUp write FOnMouseUp;
    property OnKeyDown: TAccessFormKeyDown read FOnKeyDown write FOnKeyDown;
    property OnKeyPress: TAccessFormKeyPress read FOnKeyPress write FOnKeyPress;
    property OnKeyUp: TAccessFormKeyUp read FOnKeyUp write FOnKeyUp;
    property OnError: TAccessFormError read FOnError write FOnError;
    property OnTimer: TNotifyEvent read FOnTimer write FOnTimer;
    property OnFilter: TAccessFormFilter read FOnFilter write FOnFilter;
    property OnApplyFilter: TAccessFormApplyFilter read FOnApplyFilter write FOnApplyFilter;
    property OnDirty: TAccessFormDirty read FOnDirty write FOnDirty;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAccessForm
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAccessFormProperties = class(TPersistent)
  private
    FServer:    TAccessForm;
    function    GetDefaultInterface: _Form;
    constructor Create(AServer: TAccessForm);
  protected
// StdProp:IDispatch
    function  Get_accParent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:Integer
    function  Get_accChildCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_accChild {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): IDispatch;
// StdProp:WideString
    function  Get_accName {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:WideString
    function  Get_accValue {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:WideString
    function  Get_accDescription {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:OleVariant
    function  Get_accRole {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
// StdProp:OleVariant
    function  Get_accState {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
// StdProp:WideString
    function  Get_accHelp {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:Integer
    function  Get_accHelpTopic {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:1}out pszHelpFile: WideString; 
                                                                    {VT_12:0}varChild: OleVariant): Integer;
// StdProp:WideString
    function  Get_accKeyboardShortcut {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:OleVariant
    function  Get_accFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    function  Get_accSelection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:WideString
    function  Get_accDefaultAction {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
// StdProp:WideString
    procedure Set_accName {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                               {VT_8:0}const pszName: WideString);
// StdProp:WideString
    procedure Set_accValue {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                                {VT_8:0}const pszValue: WideString);
// StdProp:WideString
    function  Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Integer
    function  Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Byte
    function  Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Integer
    function  Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:OleVariant
    function  Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Smallint
    function  Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:OleVariant
    function  Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Byte
    function  Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:OleVariant
    function  Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WideString
    function  Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:OleVariant
    function  Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Smallint
    function  Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:OleVariant
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Integer
    function  Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:OleVariant
    function  Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WordBool
    function  Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Byte
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WideString
    function  Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:Smallint
    function  Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
// StdProp:
    function  Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
// StdProp:IDispatch
    function  Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    procedure Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:3}({VT_9:0}const pRet: IDispatch);
// StdProp:
    function  Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
// StdProp:
    function  Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessForm;
// StdProp:
    function  Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
// StdProp:
    function  Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
// StdProp:
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
// StdProp:Smallint
    function  Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
  public
    property DefaultInterface: _Form read GetDefaultInterface;
  published
    property RecordSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecordSource write Set_RecordSource;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Filter write Set_Filter;
    property FilterOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FilterOn write Set_FilterOn;
    property OrderBy {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OrderBy write Set_OrderBy;
    property OrderByOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrderByOn write Set_OrderByOn;
    property AllowFilters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowFilters write Set_AllowFilters;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Caption write Set_Caption;
    property DefaultView {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DefaultView write Set_DefaultView;
    property ViewsAllowed {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_ViewsAllowed write Set_ViewsAllowed;
    property AllowEdits {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowEdits write Set_AllowEdits;
    property AllowDeletions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowDeletions write Set_AllowDeletions;
    property AllowAdditions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowAdditions write Set_AllowAdditions;
    property DataEntry {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DataEntry write Set_DataEntry;
    property RecordsetType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_RecordsetType write Set_RecordsetType;
    property RecordLocks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_RecordLocks write Set_RecordLocks;
    property ScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_ScrollBars write Set_ScrollBars;
    property RecordSelectors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_RecordSelectors write Set_RecordSelectors;
    property NavigationButtons {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_NavigationButtons write Set_NavigationButtons;
    property DividingLines {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DividingLines write Set_DividingLines;
    property AutoResize {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AutoResize write Set_AutoResize;
    property AutoCenter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AutoCenter write Set_AutoCenter;
    property PopUp {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PopUp write Set_PopUp;
    property Modal {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Modal write Set_Modal;
    property BorderStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_BorderStyle write Set_BorderStyle;
    property ControlBox {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ControlBox write Set_ControlBox;
    property MinMaxButtons {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_MinMaxButtons write Set_MinMaxButtons;
    property CloseButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CloseButton write Set_CloseButton;
    property WhatsThisButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_WhatsThisButton write Set_WhatsThisButton;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Width write Set_Width;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Picture write Set_Picture;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureType write Set_PictureType;
    property PictureSizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureSizeMode write Set_PictureSizeMode;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PictureTiling write Set_PictureTiling;
    property Cycle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_Cycle write Set_Cycle;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MenuBar write Set_MenuBar;
    property Toolbar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Toolbar write Set_Toolbar;
    property ShortcutMenu {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShortcutMenu write Set_ShortcutMenu;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property GridX {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridX write Set_GridX;
    property GridY {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridY write Set_GridY;
    property LayoutForPrint {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_LayoutForPrint write Set_LayoutForPrint;
    property FastLaserPrinting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FastLaserPrinting write Set_FastLaserPrinting;
    property HelpFile {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_HelpFile write Set_HelpFile;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HelpContextId write Set_HelpContextId;
    property RowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_RowHeight write Set_RowHeight;
    property DatasheetFontName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DatasheetFontName write Set_DatasheetFontName;
    property DatasheetFontHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DatasheetFontHeight write Set_DatasheetFontHeight;
    property DatasheetFontWeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DatasheetFontWeight write Set_DatasheetFontWeight;
    property DatasheetFontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DatasheetFontItalic write Set_DatasheetFontItalic;
    property DatasheetFontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DatasheetFontUnderline write Set_DatasheetFontUnderline;
    property DatasheetGridlinesBehavior {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DatasheetGridlinesBehavior write Set_DatasheetGridlinesBehavior;
    property DatasheetGridlinesColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DatasheetGridlinesColor write Set_DatasheetGridlinesColor;
    property DatasheetCellsEffect {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DatasheetCellsEffect write Set_DatasheetCellsEffect;
    property DatasheetForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DatasheetForeColor write Set_DatasheetForeColor;
    property DatasheetBackColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DatasheetBackColor write Set_DatasheetBackColor;
    property Hwnd {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hwnd write Set_Hwnd;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Count write Set_Count;
    property Page {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Page write Set_Page;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Pages write Set_Pages;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property Painting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Painting write Set_Painting;
    property FrozenColumns {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FrozenColumns write Set_FrozenColumns;
    property PaletteSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PaletteSource write Set_PaletteSource;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Tag write Set_Tag;
    property OnMenu {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMenu write Set_OnMenu;
    property OnCurrent1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnCurrent write Set_OnCurrent;
    property OnInsert {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnInsert write Set_OnInsert;
    property BeforeInsert {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BeforeInsert write Set_BeforeInsert;
    property AfterInsert {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AfterInsert write Set_AfterInsert;
    property BeforeUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BeforeUpdate write Set_BeforeUpdate;
    property AfterUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AfterUpdate write Set_AfterUpdate;
    property OnDirty1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDirty write Set_OnDirty;
    property OnDelete1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDelete write Set_OnDelete;
    property BeforeDelConfirm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BeforeDelConfirm write Set_BeforeDelConfirm;
    property AfterDelConfirm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AfterDelConfirm write Set_AfterDelConfirm;
    property OnOpen1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnOpen write Set_OnOpen;
    property OnLoad1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnLoad write Set_OnLoad;
    property OnResize1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnResize write Set_OnResize;
    property OnUnload1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnUnload write Set_OnUnload;
    property OnClose1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnClose write Set_OnClose;
    property OnActivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnActivate write Set_OnActivate;
    property OnDeactivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDeactivate write Set_OnDeactivate;
    property OnGotFocus1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnGotFocus write Set_OnGotFocus;
    property OnLostFocus1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnLostFocus write Set_OnLostFocus;
    property OnClick1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnClick write Set_OnClick;
    property OnDblClick1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDblClick write Set_OnDblClick;
    property OnMouseDown1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMouseDown write Set_OnMouseDown;
    property OnMouseMove1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMouseMove write Set_OnMouseMove;
    property OnMouseUp1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMouseUp write Set_OnMouseUp;
    property OnKeyDown1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnKeyDown write Set_OnKeyDown;
    property OnKeyUp1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnKeyUp write Set_OnKeyUp;
    property OnKeyPress1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnKeyPress write Set_OnKeyPress;
    property KeyPreview {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_KeyPreview write Set_KeyPreview;
    property OnError1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnError write Set_OnError;
    property OnFilter1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnFilter write Set_OnFilter;
    property OnApplyFilter1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnApplyFilter write Set_OnApplyFilter;
    property OnTimer1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnTimer write Set_OnTimer;
    property TimerInterval {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_TimerInterval write Set_TimerInterval;
    property Dirty {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Dirty write Set_Dirty;
    property WindowWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_WindowWidth write Set_WindowWidth;
    property WindowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_WindowHeight write Set_WindowHeight;
    property CurrentView {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentView write Set_CurrentView;
    property CurrentSectionTop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentSectionTop write Set_CurrentSectionTop;
    property CurrentSectionLeft {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentSectionLeft write Set_CurrentSectionLeft;
    property SelLeft {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelLeft write Set_SelLeft;
    property SelTop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelTop write Set_SelTop;
    property SelWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelWidth write Set_SelWidth;
    property SelHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SelHeight write Set_SelHeight;
    property CurrentRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_CurrentRecord write Set_CurrentRecord;
    property InsideHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_InsideHeight write Set_InsideHeight;
    property InsideWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_InsideWidth write Set_InsideWidth;
    property HasModule {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasModule write Set_HasModule;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_Orientation write Set_Orientation;
    property AllowDesignChanges {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AllowDesignChanges write Set_AllowDesignChanges;
    property ServerFilter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ServerFilter write Set_ServerFilter;
    property ServerFilterByForm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ServerFilterByForm write Set_ServerFilterByForm;
    property MaxRecords {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_MaxRecords write Set_MaxRecords;
    property UniqueTable {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UniqueTable write Set_UniqueTable;
    property ResyncCommand {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ResyncCommand write Set_ResyncCommand;
    property InputParameters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_InputParameters write Set_InputParameters;
    property MaxRecButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MaxRecButton write Set_MaxRecButton;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name write Set_Name;
    property SubdatasheetHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_SubdatasheetHeight write Set_SubdatasheetHeight;
    property SubdatasheetExpanded {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SubdatasheetExpanded write Set_SubdatasheetExpanded;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAccessReport provides a Create and CreateRemote method to          
// create instances of the default interface _Report exposed by              
// the CoClass AccessReport. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAccessReport = class
    class function Create: _Report;
    class function CreateRemote(const MachineName: string): _Report;
  end;

  TAccessReportOpen = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;
  TAccessReportError = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_2:1}DataErr: OleVariant;
                                                                                       var {VT_2:1}Response: OleVariant) of object;
  TAccessReportNoData = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_2:1}Cancel: OleVariant) of object;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAccessReport
// Help String      : 
// Default Interface: _Report
// Def. Intf. DISP? : No
// Event   Interface: _ReportEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAccessReportProperties= class;
{$ENDIF}
  TAccessReport = class(TOleServer)
  private
    FOnOpen: TAccessReportOpen;
    FOnClose: TNotifyEvent;
    FOnActivate: TNotifyEvent;
    FOnDeactivate: TNotifyEvent;
    FOnError: TAccessReportError;
    FOnNoData: TAccessReportNoData;
    FOnPage: TNotifyEvent;
    FIntf:        _Report;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAccessReportProperties;
    function      GetServerProperties: TAccessReportProperties;
{$ENDIF}
    function      GetDefaultInterface: _Report;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
  {CoClassWriteArrayPropMethods}
// StdProp:WideString
    function  Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:OleVariant
    function  Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Integer
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Single
    function  Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Smallint
    function  Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Single
    function  Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Smallint
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:OleVariant
    function  Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WideString
    function  Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:OleVariant
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WordBool
    function  Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Byte
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
// StdProp:
    function  Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
// StdProp:
    function  Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
// StdProp:
    function  Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}Index: Integer): AccessGroupLevel;
// StdProp:
    function  Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReport;
// StdProp:
    function  Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
// StdProp:
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Report);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure Circle {Flags(1), (8/8) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                          {VT_4:0}X: Single; {VT_4:0}Y: Single; 
                                                          {VT_4:0}radius: Single; 
                                                          {VT_3:0}color: Integer; 
                                                          {VT_4:0}start: Single; 
                                                          {VT_4:0}end_: Single; 
                                                          {VT_4:0}aspect: Single);
    procedure Line {Flags(1), (6/6) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                        {VT_4:0}x1: Single; {VT_4:0}y1: Single; 
                                                        {VT_4:0}x2: Single; {VT_4:0}y2: Single; 
                                                        {VT_3:0}color: Integer);
    procedure PSet {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; {VT_4:0}X: Single; 
                                                        {VT_4:0}Y: Single; {VT_3:0}color: Integer);
    procedure Scale {Flags(1), (5/5) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                         {VT_4:0}x1: Single; {VT_4:0}y1: Single; 
                                                         {VT_4:0}x2: Single; {VT_4:0}y2: Single);
    function  TextWidth {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString): Single;
    function  TextHeight {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString): Single;
    procedure Print {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString);
    function  _Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const bstrExpr: WideString; 
                                                             {VT_27:1}var ppsa: PSafeArray): OleVariant;
    property  DefaultInterface: _Report read GetDefaultInterface;
  {CoClassWriteProperties}
    property FormName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FormName write Set_FormName;
    property MinButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MinButton write Set_MinButton;
    property MaxButton {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MaxButton write Set_MaxButton;
    property LogicalPageWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_LogicalPageWidth write Set_LogicalPageWidth;
    property LogicalPageHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_LogicalPageHeight write Set_LogicalPageHeight;
    property ZoomControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ZoomControl write Set_ZoomControl;
    property PrtMip {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PrtMip write Set_PrtMip;
    property PrtDevMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PrtDevMode write Set_PrtDevMode;
    property PrtDevNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PrtDevNames write Set_PrtDevNames;
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get__Name write Set__Name;
    property PaintPalette {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PaintPalette write Set_PaintPalette;
    property PictureData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PictureData write Set_PictureData;
    property PicturePalette {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_PicturePalette write Set_PicturePalette;
    property acHiddenCurrentPage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_acHiddenCurrentPage write Set_acHiddenCurrentPage;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property ActiveControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessControl read Get_ActiveControl;
    property DefaultControl {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_3:0}ControlType: Integer]: AccessControl read Get_DefaultControl;
    property Section {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}Index: OleVariant]: AccessSection read Get_Section;
    property GroupLevel {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_3:0}Index: Integer]: AccessGroupLevel read Get_GroupLevel;
    property Report {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessReport read Get_Report;
    property Module {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Module read Get_Module;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Properties read Get_Properties;
    property Controls {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Controls read Get_Controls;
  {CoClassWriteProperties}
    property RecordSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecordSource write Set_RecordSource;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Filter write Set_Filter;
    property FilterOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FilterOn write Set_FilterOn;
    property OrderBy {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OrderBy write Set_OrderBy;
    property OrderByOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrderByOn write Set_OrderByOn;
    property ServerFilter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ServerFilter write Set_ServerFilter;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Caption write Set_Caption;
    property RecordLocks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_RecordLocks write Set_RecordLocks;
    property PageHeader {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PageHeader write Set_PageHeader;
    property PageFooter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PageFooter write Set_PageFooter;
    property DateGrouping {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DateGrouping write Set_DateGrouping;
    property GrpKeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_GrpKeepTogether write Set_GrpKeepTogether;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Width write Set_Width;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Picture write Set_Picture;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureType write Set_PictureType;
    property PictureSizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureSizeMode write Set_PictureSizeMode;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PictureTiling write Set_PictureTiling;
    property PicturePages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PicturePages write Set_PicturePages;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MenuBar write Set_MenuBar;
    property Toolbar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Toolbar write Set_Toolbar;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property GridX {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridX write Set_GridX;
    property GridY {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridY write Set_GridY;
    property LayoutForPrint {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_LayoutForPrint write Set_LayoutForPrint;
    property FastLaserPrinting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FastLaserPrinting write Set_FastLaserPrinting;
    property HelpFile {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_HelpFile write Set_HelpFile;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HelpContextId write Set_HelpContextId;
    property Hwnd {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hwnd write Set_Hwnd;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Count write Set_Count;
    property Page {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Page write Set_Page;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Pages write Set_Pages;
    property HasData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HasData write Set_HasData;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Left write Set_Left;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Top write Set_Top;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Height write Set_Height;
    property PrintSection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintSection write Set_PrintSection;
    property NextRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_NextRecord write Set_NextRecord;
    property MoveLayout {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MoveLayout write Set_MoveLayout;
    property FormatCount {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FormatCount write Set_FormatCount;
    property PrintCount {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_PrintCount write Set_PrintCount;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property Painting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Painting write Set_Painting;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ForeColor write Set_ForeColor;
    property CurrentX {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CurrentX write Set_CurrentX;
    property CurrentY {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CurrentY write Set_CurrentY;
    property ScaleHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleHeight write Set_ScaleHeight;
    property ScaleLeft {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleLeft write Set_ScaleLeft;
    property ScaleMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_ScaleMode write Set_ScaleMode;
    property ScaleTop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleTop write Set_ScaleTop;
    property ScaleWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleWidth write Set_ScaleWidth;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontBold write Set_FontBold;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontItalic write Set_FontItalic;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FontName write Set_FontName;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontSize write Set_FontSize;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontUnderline write Set_FontUnderline;
    property DrawMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DrawMode write Set_DrawMode;
    property DrawStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DrawStyle write Set_DrawStyle;
    property DrawWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DrawWidth write Set_DrawWidth;
    property FillColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_FillColor write Set_FillColor;
    property FillStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FillStyle write Set_FillStyle;
    property PaletteSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PaletteSource write Set_PaletteSource;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Tag write Set_Tag;
    property OnMenu {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMenu write Set_OnMenu;
    property OnOpen1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnOpen write Set_OnOpen;
    property OnClose1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnClose write Set_OnClose;
    property OnActivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnActivate write Set_OnActivate;
    property OnDeactivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDeactivate write Set_OnDeactivate;
    property OnNoData1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnNoData write Set_OnNoData;
    property OnPage1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnPage write Set_OnPage;
    property OnError1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnError write Set_OnError;
    property Dirty {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Dirty write Set_Dirty;
    property CurrentRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_CurrentRecord write Set_CurrentRecord;
    property HasModule {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasModule write Set_HasModule;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_Orientation write Set_Orientation;
    property InputParameters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_InputParameters write Set_InputParameters;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name write Set_Name;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAccessReportProperties read GetServerProperties;
{$ENDIF}
  {CoClassWriteEventDecls}
    property OnOpen: TAccessReportOpen read FOnOpen write FOnOpen;
    property OnClose: TNotifyEvent read FOnClose write FOnClose;
    property OnActivate: TNotifyEvent read FOnActivate write FOnActivate;
    property OnDeactivate: TNotifyEvent read FOnDeactivate write FOnDeactivate;
    property OnError: TAccessReportError read FOnError write FOnError;
    property OnNoData: TAccessReportNoData read FOnNoData write FOnNoData;
    property OnPage: TNotifyEvent read FOnPage write FOnPage;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAccessReport
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAccessReportProperties = class(TPersistent)
  private
    FServer:    TAccessReport;
    function    GetDefaultInterface: _Report;
    constructor Create(AServer: TAccessReport);
  protected
// StdProp:WideString
    function  Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Byte
    function  Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:Byte
    function  Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WordBool
    function  Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Byte
    function  Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Integer
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:WordBool
    function  Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Smallint
    function  Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WordBool
    function  Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:OleVariant
    function  Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:Integer
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Single
    function  Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Smallint
    function  Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Single
    function  Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Single
    function  Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
// StdProp:Smallint
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Smallint
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Smallint
    function  Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:Integer
    function  Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Smallint
    function  Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:Smallint
    procedure Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
// StdProp:WideString
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:OleVariant
    function  Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WideString
    function  Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WideString
    function  Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:OleVariant
    function  Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:OleVariant
    function  Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
// StdProp:WordBool
    function  Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:Integer
    function  Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
// StdProp:Byte
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
// StdProp:Byte
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
// StdProp:WideString
    function  Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
// StdProp:
    function  Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
// StdProp:
    function  Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
// StdProp:
    function  Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}Index: Integer): AccessGroupLevel;
// StdProp:
    function  Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReport;
// StdProp:
    function  Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
// StdProp:
    function  Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
  public
    property DefaultInterface: _Report read GetDefaultInterface;
  published
    property RecordSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecordSource write Set_RecordSource;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Filter write Set_Filter;
    property FilterOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FilterOn write Set_FilterOn;
    property OrderBy {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OrderBy write Set_OrderBy;
    property OrderByOn {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrderByOn write Set_OrderByOn;
    property ServerFilter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ServerFilter write Set_ServerFilter;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Caption write Set_Caption;
    property RecordLocks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_RecordLocks write Set_RecordLocks;
    property PageHeader {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PageHeader write Set_PageHeader;
    property PageFooter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PageFooter write Set_PageFooter;
    property DateGrouping {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_DateGrouping write Set_DateGrouping;
    property GrpKeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_GrpKeepTogether write Set_GrpKeepTogether;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Width write Set_Width;
    property Picture {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Picture write Set_Picture;
    property PictureType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureType write Set_PictureType;
    property PictureSizeMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureSizeMode write Set_PictureSizeMode;
    property PictureAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PictureAlignment write Set_PictureAlignment;
    property PictureTiling {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PictureTiling write Set_PictureTiling;
    property PicturePages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_PicturePages write Set_PicturePages;
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MenuBar write Set_MenuBar;
    property Toolbar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Toolbar write Set_Toolbar;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property GridX {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridX write Set_GridX;
    property GridY {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_GridY write Set_GridY;
    property LayoutForPrint {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_LayoutForPrint write Set_LayoutForPrint;
    property FastLaserPrinting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FastLaserPrinting write Set_FastLaserPrinting;
    property HelpFile {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_HelpFile write Set_HelpFile;
    property HelpContextId {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HelpContextId write Set_HelpContextId;
    property Hwnd {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hwnd write Set_Hwnd;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Count write Set_Count;
    property Page {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Page write Set_Page;
    property Pages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_Pages write Set_Pages;
    property HasData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HasData write Set_HasData;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Left write Set_Left;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Top write Set_Top;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Height write Set_Height;
    property PrintSection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintSection write Set_PrintSection;
    property NextRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_NextRecord write Set_NextRecord;
    property MoveLayout {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MoveLayout write Set_MoveLayout;
    property FormatCount {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FormatCount write Set_FormatCount;
    property PrintCount {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_PrintCount write Set_PrintCount;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property Painting {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Painting write Set_Painting;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ForeColor write Set_ForeColor;
    property CurrentX {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CurrentX write Set_CurrentX;
    property CurrentY {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CurrentY write Set_CurrentY;
    property ScaleHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleHeight write Set_ScaleHeight;
    property ScaleLeft {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleLeft write Set_ScaleLeft;
    property ScaleMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_ScaleMode write Set_ScaleMode;
    property ScaleTop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleTop write Set_ScaleTop;
    property ScaleWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_ScaleWidth write Set_ScaleWidth;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontBold write Set_FontBold;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontItalic write Set_FontItalic;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FontName write Set_FontName;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontSize write Set_FontSize;
    property FontUnderline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FontUnderline write Set_FontUnderline;
    property DrawMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DrawMode write Set_DrawMode;
    property DrawStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DrawStyle write Set_DrawStyle;
    property DrawWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_DrawWidth write Set_DrawWidth;
    property FillColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_FillColor write Set_FillColor;
    property FillStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_FillStyle write Set_FillStyle;
    property PaletteSource {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PaletteSource write Set_PaletteSource;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Tag write Set_Tag;
    property OnMenu {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnMenu write Set_OnMenu;
    property OnOpen1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnOpen write Set_OnOpen;
    property OnClose1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnClose write Set_OnClose;
    property OnActivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnActivate write Set_OnActivate;
    property OnDeactivate1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnDeactivate write Set_OnDeactivate;
    property OnNoData1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnNoData write Set_OnNoData;
    property OnPage1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnPage write Set_OnPage;
    property OnError1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_OnError write Set_OnError;
    property Dirty {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Dirty write Set_Dirty;
    property CurrentRecord {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_CurrentRecord write Set_CurrentRecord;
    property HasModule {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasModule write Set_HasModule;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Byte read Get_Orientation write Set_Orientation;
    property InputParameters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_InputParameters write Set_InputParameters;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name write Set_Name;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAccessApplication provides a Create and CreateRemote method to          
// create instances of the default interface _Application exposed by              
// the CoClass AccessApplication. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAccessApplication = class
    class function Create: _Application;
    class function CreateRemote(const MachineName: string): _Application;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAccessApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (11) AppObject CanCreate Predeclid
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAccessApplicationProperties= class;
{$ENDIF}
  TAccessApplication = class(TOleServer)
  private
    FIntf:        _Application;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAccessApplicationProperties;
    function      GetServerProperties: TAccessApplicationProperties;
{$ENDIF}
    function      GetDefaultInterface: _Application;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:WideString
    function  Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Forms;
// StdProp:
    function  Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Reports;
// StdProp:
    function  Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Screen;
// StdProp:
    function  Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DoCmd;
// StdProp:WideString
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfVisible: WordBool);
// StdProp:WordBool
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfUserCtrl: WordBool);
// StdProp:
    function  Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DBEngine;
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
// StdProp:
    function  Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReferences;
// StdProp:
    function  Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Modules;
// StdProp:
    function  Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
// StdProp:WordBool
    function  Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
// StdProp:
    function  Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DataAccessPages;
// StdProp:WideString
    function  Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentProject;
// StdProp:
    function  Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentData;
// StdProp:
    function  Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeProject;
// StdProp:
    function  Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeData;
// StdProp:
    function  Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WizHook;
// StdProp:WideString
    function  Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DefaultWebOptions;
// StdProp:
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
// StdProp:
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
// StdProp:TOleEnum
    function  Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
// StdProp:TOleEnum
    procedure Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}FeatureInstall: MsoFeatureInstall);
// StdProp:OleVariant
    function  Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Application);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure NewCurrentDatabase {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString);
    procedure OpenCurrentDatabase {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                       {VT_11:0}Exclusive: WordBool);
    function  GetOption {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const OptionName: WideString): OleVariant;
    procedure SetOption {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const OptionName: WideString; 
                                                             {VT_12:0}Setting: OleVariant);
    procedure Echo {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_2:0}EchoOn: Smallint; 
                                                        {VT_8:0}const bstrStatusBarText: WideString);
    procedure CloseCurrentDatabase {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Quit {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Option: AcQuitOption);
    function  SysCmd {Flags(1), (4/1) CC:0, INV:1, DBG:3}({VT_29:0}Action: AcSysCmdAction): OleVariant; overload;
    function  SysCmd {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_29:0}Action: AcSysCmdAction; 
                                                          {VT_12:0}Argument2: OleVariant): OleVariant; overload;
    function  SysCmd {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_29:0}Action: AcSysCmdAction; 
                                                          {VT_12:0}Argument2: OleVariant; 
                                                          {VT_12:0}Argument3: OleVariant): OleVariant; overload;
    function  CreateForm {Flags(1), (3/0) CC:0, INV:1, DBG:3}: AccessForm; overload;
    function  CreateForm {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant): AccessForm; overload;
    function  CreateForm {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant; 
                                                              {VT_12:0}FormTemplate: OleVariant): AccessForm; overload;
    function  CreateReport {Flags(1), (3/0) CC:0, INV:1, DBG:3}: AccessReport; overload;
    function  CreateReport {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant): AccessReport; overload;
    function  CreateReport {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant; 
                                                                {VT_12:0}ReportTemplate: OleVariant): AccessReport; overload;
    function  CreateControl {Flags(1), (10/3) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection): AccessControl; overload;
    function  CreateControl {Flags(1), (10/4) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant): AccessControl; overload;
    function  CreateControl {Flags(1), (10/5) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant): AccessControl; overload;
    function  CreateControl {Flags(1), (10/6) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant; 
                                                                  {VT_12:0}Left: OleVariant): AccessControl; overload;
    function  CreateControl {Flags(1), (10/7) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant; 
                                                                  {VT_12:0}Left: OleVariant; 
                                                                  {VT_12:0}Top: OleVariant): AccessControl; overload;
    function  CreateControl {Flags(1), (10/8) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant; 
                                                                  {VT_12:0}Left: OleVariant; 
                                                                  {VT_12:0}Top: OleVariant; 
                                                                  {VT_12:0}Width: OleVariant): AccessControl; overload;
    function  CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                  {VT_29:0}ControlType: AcControlType; 
                                                                  {VT_29:0}Section: AcSection; 
                                                                  {VT_12:0}Parent: OleVariant; 
                                                                  {VT_12:0}ColumnName: OleVariant; 
                                                                  {VT_12:0}Left: OleVariant; 
                                                                  {VT_12:0}Top: OleVariant; 
                                                                  {VT_12:0}Width: OleVariant; 
                                                                  {VT_12:0}Height: OleVariant): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/3) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/4) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/5) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/6) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant; 
                                                                        {VT_12:0}Left: OleVariant): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/7) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant; 
                                                                        {VT_12:0}Left: OleVariant; 
                                                                        {VT_12:0}Top: OleVariant): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/8) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant; 
                                                                        {VT_12:0}Left: OleVariant; 
                                                                        {VT_12:0}Top: OleVariant; 
                                                                        {VT_12:0}Width: OleVariant): AccessControl; overload;
    function  CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                        {VT_29:0}ControlType: AcControlType; 
                                                                        {VT_29:0}Section: AcSection; 
                                                                        {VT_12:0}Parent: OleVariant; 
                                                                        {VT_12:0}ColumnName: OleVariant; 
                                                                        {VT_12:0}Left: OleVariant; 
                                                                        {VT_12:0}Top: OleVariant; 
                                                                        {VT_12:0}Width: OleVariant; 
                                                                        {VT_12:0}Height: OleVariant): AccessControl; overload;
    function  CreateControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                    {VT_29:0}ControlType: AcControlType; 
                                                                    {VT_29:0}Section: AcSection; 
                                                                    {VT_8:0}const Parent: WideString; 
                                                                    {VT_8:0}const ControlSource: WideString; 
                                                                    {VT_3:0}Left: Integer; 
                                                                    {VT_3:0}Top: Integer; 
                                                                    {VT_3:0}Width: Integer; 
                                                                    {VT_3:0}Height: Integer): AccessControl;
    function  CreateReportControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                          {VT_29:0}ControlType: AcControlType; 
                                                                          {VT_29:0}Section: AcSection; 
                                                                          {VT_8:0}const Parent: WideString; 
                                                                          {VT_8:0}const ControlName: WideString; 
                                                                          {VT_3:0}Left: Integer; 
                                                                          {VT_3:0}Top: Integer; 
                                                                          {VT_3:0}Width: Integer; 
                                                                          {VT_3:0}Height: Integer): AccessControl;
    procedure DeleteControl {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                 {VT_8:0}const ControlName: WideString);
    procedure DeleteReportControl {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                       {VT_8:0}const ControlName: WideString);
    function  CreateGroupLevel {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                    {VT_8:0}const Expression: WideString; 
                                                                    {VT_2:0}Header: Smallint; 
                                                                    {VT_2:0}Footer: Smallint): Integer;
    function  DMin {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DMin {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DMax {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DMax {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DSum {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DSum {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DAvg {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DAvg {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DLookup {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DLookup {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString; 
                                                           {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DLast {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DLast {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString; 
                                                         {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DVar {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DVar {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                        {VT_8:0}const Domain: WideString; 
                                                        {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DVarP {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DVarP {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                         {VT_8:0}const Domain: WideString; 
                                                         {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DStDev {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DStDev {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DStDevP {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DStDevP {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                           {VT_8:0}const Domain: WideString; 
                                                           {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DFirst {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DFirst {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  DCount {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString): OleVariant; overload;
    function  DCount {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                          {VT_8:0}const Domain: WideString; 
                                                          {VT_12:0}Criteria: OleVariant): OleVariant; overload;
    function  Eval {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const StringExpr: WideString): OleVariant;
    function  CurrentUser {Flags(1), (1/0) CC:0, INV:1, DBG:3}: WideString;
    function  DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const Application: WideString; 
                                                               {VT_8:0}const Topic: WideString): OleVariant;
    procedure DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant; 
                                                              {VT_8:0}const Command: WideString);
    procedure DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString);
    function  DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant; 
                                                              {VT_8:0}const Item: WideString): WideString;
    procedure DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant);
    procedure DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  CurrentDb {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Database;
    function  CodeDb {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Database;
    procedure BeginUndoable {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_3:0}Hwnd: Integer);
    procedure SetUndoRecording {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}yesno: Smallint);
    function  BuildCriteria {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Field: WideString; 
                                                                 {VT_2:0}FieldType: Smallint; 
                                                                 {VT_8:0}const Expression: WideString): WideString;
    procedure InsertText {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const Text: WideString; 
                                                              {VT_8:0}const ModuleName: WideString);
    procedure ReloadAddIns {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  DefaultWorkspaceClone {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Workspace;
    procedure RefreshTitleBar {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure AddAutoCorrect {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const ChangeFrom: WideString; 
                                                                  {VT_8:0}const ChangeTo: WideString);
    procedure DelAutoCorrect {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const ChangeFrom: WideString);
    function  hWndAccessApp {Flags(1), (1/0) CC:0, INV:1, DBG:3}: SYSINT;
    function  Run {Flags(1), (32/1) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString): OleVariant; overload;
    function  Run {Flags(1), (32/2) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/3) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/4) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant; 
                                                        {VT_12:1}var Arg3: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/5) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant; 
                                                        {VT_12:1}var Arg3: OleVariant; 
                                                        {VT_12:1}var Arg4: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/6) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant; 
                                                        {VT_12:1}var Arg3: OleVariant; 
                                                        {VT_12:1}var Arg4: OleVariant; 
                                                        {VT_12:1}var Arg5: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/7) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant; 
                                                        {VT_12:1}var Arg3: OleVariant; 
                                                        {VT_12:1}var Arg4: OleVariant; 
                                                        {VT_12:1}var Arg5: OleVariant; 
                                                        {VT_12:1}var Arg6: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/8) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant; 
                                                        {VT_12:1}var Arg3: OleVariant; 
                                                        {VT_12:1}var Arg4: OleVariant; 
                                                        {VT_12:1}var Arg5: OleVariant; 
                                                        {VT_12:1}var Arg6: OleVariant; 
                                                        {VT_12:1}var Arg7: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/9) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                        {VT_12:1}var Arg1: OleVariant; 
                                                        {VT_12:1}var Arg2: OleVariant; 
                                                        {VT_12:1}var Arg3: OleVariant; 
                                                        {VT_12:1}var Arg4: OleVariant; 
                                                        {VT_12:1}var Arg5: OleVariant; 
                                                        {VT_12:1}var Arg6: OleVariant; 
                                                        {VT_12:1}var Arg7: OleVariant; 
                                                        {VT_12:1}var Arg8: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/10) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/11) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/12) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/13) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/14) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/15) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/16) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/17) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/18) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/19) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/20) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/21) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/22) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/23) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/24) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/25) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/26) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/27) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/28) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant; 
                                                         {VT_12:1}var Arg27: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/29) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant; 
                                                         {VT_12:1}var Arg27: OleVariant; 
                                                         {VT_12:1}var Arg28: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/30) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant; 
                                                         {VT_12:1}var Arg27: OleVariant; 
                                                         {VT_12:1}var Arg28: OleVariant; 
                                                         {VT_12:1}var Arg29: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/31) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                         {VT_12:1}var Arg1: OleVariant; 
                                                         {VT_12:1}var Arg2: OleVariant; 
                                                         {VT_12:1}var Arg3: OleVariant; 
                                                         {VT_12:1}var Arg4: OleVariant; 
                                                         {VT_12:1}var Arg5: OleVariant; 
                                                         {VT_12:1}var Arg6: OleVariant; 
                                                         {VT_12:1}var Arg7: OleVariant; 
                                                         {VT_12:1}var Arg8: OleVariant; 
                                                         {VT_12:1}var Arg9: OleVariant; 
                                                         {VT_12:1}var Arg10: OleVariant; 
                                                         {VT_12:1}var Arg11: OleVariant; 
                                                         {VT_12:1}var Arg12: OleVariant; 
                                                         {VT_12:1}var Arg13: OleVariant; 
                                                         {VT_12:1}var Arg14: OleVariant; 
                                                         {VT_12:1}var Arg15: OleVariant; 
                                                         {VT_12:1}var Arg16: OleVariant; 
                                                         {VT_12:1}var Arg17: OleVariant; 
                                                         {VT_12:1}var Arg18: OleVariant; 
                                                         {VT_12:1}var Arg19: OleVariant; 
                                                         {VT_12:1}var Arg20: OleVariant; 
                                                         {VT_12:1}var Arg21: OleVariant; 
                                                         {VT_12:1}var Arg22: OleVariant; 
                                                         {VT_12:1}var Arg23: OleVariant; 
                                                         {VT_12:1}var Arg24: OleVariant; 
                                                         {VT_12:1}var Arg25: OleVariant; 
                                                         {VT_12:1}var Arg26: OleVariant; 
                                                         {VT_12:1}var Arg27: OleVariant; 
                                                         {VT_12:1}var Arg28: OleVariant; 
                                                         {VT_12:1}var Arg29: OleVariant; 
                                                         {VT_12:1}var Arg30: OleVariant): OleVariant; overload;
    function  Nz {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}Value: OleVariant): OleVariant; overload;
    function  Nz {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Value: OleVariant; 
                                                      {VT_12:0}ValueIfNull: OleVariant): OleVariant; overload;
    function  LoadPicture {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString): IDispatch;
    procedure ReplaceModule {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_3:0}objtyp: Integer; 
                                                                 {VT_8:0}const ModuleName: WideString; 
                                                                 {VT_8:0}const FileName: WideString; 
                                                                 {VT_3:0}token: Integer);
    function  AccessError {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}ErrorNumber: OleVariant): OleVariant;
    function  BuilderString {Flags(1), (1/0) CC:0, INV:1, DBG:3}: OleVariant;
    function  StringFromGUID {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}Guid: OleVariant): OleVariant;
    function  GUIDFromString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}String_: OleVariant): OleVariant;
    function  AppLoadString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_3:0}id: Integer): OleVariant;
    procedure FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:3}({VT_8:0}const Address: WideString; 
                                                                   {VT_8:0}const SubAddress: WideString; 
                                                                   {VT_11:0}NewWindow: WordBool; 
                                                                   {VT_11:0}AddHistory: WordBool; 
                                                                   {VT_12:0}ExtraInfo: OleVariant; 
                                                                   {VT_29:0}Method: MsoExtraInfoMethod; 
                                                                   {VT_8:0}const HeaderInfo: WideString);
    procedure SaveAsText {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                              {VT_8:0}const ObjectName: WideString; 
                                                              {VT_8:0}const FileName: WideString);
    procedure LoadFromText {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                {VT_8:0}const ObjectName: WideString; 
                                                                {VT_8:0}const FileName: WideString);
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure RefreshDatabaseWindow {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure RunCommand {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Command: AcCommand);
    function  HyperlinkPart {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Hyperlink: OleVariant; 
                                                                 {VT_29:0}Part: AcHyperlinkPart): WideString;
    function  GetHiddenAttribute {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                      {VT_8:0}const ObjectName: WideString): WordBool;
    procedure SetHiddenAttribute {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                      {VT_8:0}const ObjectName: WideString; 
                                                                      {VT_11:0}fHidden: WordBool);
    function  CreateDataAccessPage {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}FileName: OleVariant; 
                                                                        {VT_11:0}CreateNewFile: WordBool): DataAccessPage;
    procedure NewAccessProject {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString); overload;
    procedure NewAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                    {VT_12:0}Connect: OleVariant); overload;
    procedure OpenAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                     {VT_11:0}Exclusive: WordBool);
    procedure CreateAccessProject {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString); overload;
    procedure CreateAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                       {VT_12:0}Connect: OleVariant); overload;
    function  EuroConvert {Flags(1), (6/3) CC:0, INV:1, DBG:3}({VT_5:0}Number: Double; 
                                                               {VT_8:0}const SourceCurrency: WideString; 
                                                               {VT_8:0}const TargetCurrency: WideString): Double; overload;
    function  EuroConvert {Flags(1), (6/4) CC:0, INV:1, DBG:3}({VT_5:0}Number: Double; 
                                                               {VT_8:0}const SourceCurrency: WideString; 
                                                               {VT_8:0}const TargetCurrency: WideString; 
                                                               {VT_12:0}FullPrecision: OleVariant): Double; overload;
    function  EuroConvert {Flags(1), (6/5) CC:0, INV:1, DBG:3}({VT_5:0}Number: Double; 
                                                               {VT_8:0}const SourceCurrency: WideString; 
                                                               {VT_8:0}const TargetCurrency: WideString; 
                                                               {VT_12:0}FullPrecision: OleVariant; 
                                                               {VT_12:0}TriangulationPrecision: OleVariant): Double; overload;
    property  DefaultInterface: _Application read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property CodeContextObject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_CodeContextObject;
    property CurrentObjectType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_CurrentObjectType;
    property CurrentObjectName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_CurrentObjectName;
    property Forms {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Forms read Get_Forms;
    property Reports {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Reports read Get_Reports;
    property Screen {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Screen read Get_Screen;
    property DoCmd {Flags(2), (1/0) CC:0, INV:2, DBG:2}: DoCmd read Get_DoCmd;
    property DBEngine {Flags(2), (1/0) CC:0, INV:2, DBG:2}: DBEngine read Get_DBEngine;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CommandBars read Get_CommandBars;
    property Assistant {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Assistant read Get_Assistant;
    property References {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessReferences read Get_References;
    property Modules {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Modules read Get_Modules;
    property FileSearch {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FileSearch read Get_FileSearch;
    property IsCompiled {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IsCompiled;
    property VBE {Flags(2), (1/0) CC:0, INV:2, DBG:2}: VBE read Get_VBE;
    property DataAccessPages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: DataAccessPages read Get_DataAccessPages;
    property ADOConnectString {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ADOConnectString;
    property CurrentProject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CurrentProject read Get_CurrentProject;
    property CurrentData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CurrentData read Get_CurrentData;
    property CodeProject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CodeProject read Get_CodeProject;
    property CodeData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CodeData read Get_CodeData;
    property WizHook {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WizHook read Get_WizHook;
    property ProductCode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ProductCode;
    property COMAddIns {Flags(2), (1/0) CC:0, INV:2, DBG:2}: COMAddIns read Get_COMAddIns;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property DefaultWebOptions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: DefaultWebOptions read Get_DefaultWebOptions;
    property LanguageSettings {Flags(2), (1/0) CC:0, INV:2, DBG:2}: LanguageSettings read Get_LanguageSettings;
    property AnswerWizard {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AnswerWizard read Get_AnswerWizard;
    property VGXFrameInterval {Flags(2), (1/0) CC:0, INV:2, DBG:2}: OleVariant read Get_VGXFrameInterval;
  {CoClassWriteProperties}
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MenuBar write Set_MenuBar;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UserControl write Set_UserControl;
    property FeatureInstall {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAccessApplicationProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAccessApplication
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAccessApplicationProperties = class(TPersistent)
  private
    FServer:    TAccessApplication;
    function    GetDefaultInterface: _Application;
    constructor Create(AServer: TAccessApplication);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:WideString
    function  Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Forms;
// StdProp:
    function  Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Reports;
// StdProp:
    function  Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Screen;
// StdProp:
    function  Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DoCmd;
// StdProp:WideString
    function  Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfVisible: WordBool);
// StdProp:WordBool
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfUserCtrl: WordBool);
// StdProp:
    function  Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DBEngine;
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
// StdProp:
    function  Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReferences;
// StdProp:
    function  Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Modules;
// StdProp:
    function  Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
// StdProp:WordBool
    function  Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
// StdProp:
    function  Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DataAccessPages;
// StdProp:WideString
    function  Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentProject;
// StdProp:
    function  Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentData;
// StdProp:
    function  Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeProject;
// StdProp:
    function  Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeData;
// StdProp:
    function  Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WizHook;
// StdProp:WideString
    function  Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DefaultWebOptions;
// StdProp:
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
// StdProp:
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
// StdProp:TOleEnum
    function  Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
// StdProp:TOleEnum
    procedure Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}FeatureInstall: MsoFeatureInstall);
// StdProp:OleVariant
    function  Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
  public
    property DefaultInterface: _Application read GetDefaultInterface;
  published
    property MenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MenuBar write Set_MenuBar;
    property ShortcutMenuBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ShortcutMenuBar write Set_ShortcutMenuBar;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UserControl write Set_UserControl;
    property FeatureInstall {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAccessReferences provides a Create and CreateRemote method to          
// create instances of the default interface _References exposed by              
// the CoClass AccessReferences. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAccessReferences = class
    class function Create: _References;
    class function CreateRemote(const MachineName: string): _References;
  end;

  TAccessReferencesItemAdded = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_29:1}Reference: OleVariant) of object;
  TAccessReferencesItemRemoved = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_29:1}Reference: OleVariant) of object;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAccessReferences
// Help String      : 
// Default Interface: _References
// Def. Intf. DISP? : No
// Event   Interface: _References_Events
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAccessReferencesProperties= class;
{$ENDIF}
  TAccessReferences = class(TOleServer)
  private
    FOnItemAdded: TAccessReferencesItemAdded;
    FOnItemRemoved: TAccessReferencesItemRemoved;
    FIntf:        _References;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAccessReferencesProperties;
    function      GetServerProperties: TAccessReferencesProperties;
{$ENDIF}
    function      GetDefaultInterface: _References;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
  {CoClassWriteArrayPropMethods}
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _References);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}var_: OleVariant): Reference;
    function  _NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:3}: IUnknown;
    function  AddFromGuid {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Guid: WideString; 
                                                               {VT_3:0}Major: Integer; 
                                                               {VT_3:0}Minor: Integer): Reference;
    function  AddFromFile {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString): Reference;
    procedure Remove {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:1}const Reference: Reference);
    property  DefaultInterface: _References read GetDefaultInterface;
  {CoClassWriteProperties}
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAccessReferencesProperties read GetServerProperties;
{$ENDIF}
  {CoClassWriteEventDecls}
    property OnItemAdded: TAccessReferencesItemAdded read FOnItemAdded write FOnItemAdded;
    property OnItemRemoved: TAccessReferencesItemRemoved read FOnItemRemoved write FOnItemRemoved;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAccessReferences
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAccessReferencesProperties = class(TPersistent)
  private
    FServer:    TAccessReferences;
    function    GetDefaultInterface: _References;
    constructor Create(AServer: TAccessReferences);
  protected
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: _References read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoDataAccessPage provides a Create and CreateRemote method to          
// create instances of the default interface _DataAccessPage exposed by              
// the CoClass DataAccessPage. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDataAccessPage = class
    class function Create: _DataAccessPage;
    class function CreateRemote(const MachineName: string): _DataAccessPage;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TDataAccessPage
// Help String      : 
// Default Interface: _DataAccessPage
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TDataAccessPageProperties= class;
{$ENDIF}
  TDataAccessPage = class(TOleServer)
  private
    FIntf:        _DataAccessPage;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TDataAccessPageProperties;
    function      GetServerProperties: TDataAccessPageProperties;
{$ENDIF}
    function      GetDefaultInterface: _DataAccessPage;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:WideString
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Smallint
    function  Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessWebOptions;
// StdProp:WideString
    function  Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:IDispatch
    function  Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _DataAccessPage);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const ThemeName: WideString);
    property  DefaultInterface: _DataAccessPage read GetDefaultInterface;
  {CoClassWriteProperties}
    property _Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get__Name;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property WindowWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_WindowWidth;
    property WindowHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_WindowHeight;
    property CurrentView {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Smallint read Get_CurrentView;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Document {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Document;
    property WebOptions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessWebOptions read Get_WebOptions;
    property FieldListConnection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_FieldListConnection;
  {CoClassWriteProperties}
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Tag write Set_Tag;
    property ConnectionString {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ConnectionString write Set_ConnectionString;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TDataAccessPageProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TDataAccessPage
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TDataAccessPageProperties = class(TPersistent)
  private
    FServer:    TDataAccessPage;
    function    GetDefaultInterface: _DataAccessPage;
    constructor Create(AServer: TDataAccessPage);
  protected
// StdProp:WideString
    function  Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
// StdProp:WideString
    function  Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:Integer
    function  Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Smallint
    function  Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessWebOptions;
// StdProp:WideString
    function  Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
// StdProp:IDispatch
    function  Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
  public
    property DefaultInterface: _DataAccessPage read GetDefaultInterface;
  published
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property Tag {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Tag write Set_Tag;
    property ConnectionString {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ConnectionString write Set_ConnectionString;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllForms provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllForms. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllForms = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllForms
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllFormsProperties= class;
{$ENDIF}
  TAllForms = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllFormsProperties;
    function      GetServerProperties: TAllFormsProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllFormsProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllForms
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllFormsProperties = class(TPersistent)
  private
    FServer:    TAllForms;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllForms);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllReports provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllReports. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllReports = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllReports
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllReportsProperties= class;
{$ENDIF}
  TAllReports = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllReportsProperties;
    function      GetServerProperties: TAllReportsProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllReportsProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllReports
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllReportsProperties = class(TPersistent)
  private
    FServer:    TAllReports;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllReports);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllMacros provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllMacros. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllMacros = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllMacros
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllMacrosProperties= class;
{$ENDIF}
  TAllMacros = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllMacrosProperties;
    function      GetServerProperties: TAllMacrosProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllMacrosProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllMacros
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllMacrosProperties = class(TPersistent)
  private
    FServer:    TAllMacros;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllMacros);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllModules provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllModules. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllModules = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllModules
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllModulesProperties= class;
{$ENDIF}
  TAllModules = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllModulesProperties;
    function      GetServerProperties: TAllModulesProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllModulesProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllModules
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllModulesProperties = class(TPersistent)
  private
    FServer:    TAllModules;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllModules);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllDataAccessPages provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllDataAccessPages. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllDataAccessPages = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllDataAccessPages
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllDataAccessPagesProperties= class;
{$ENDIF}
  TAllDataAccessPages = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllDataAccessPagesProperties;
    function      GetServerProperties: TAllDataAccessPagesProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllDataAccessPagesProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllDataAccessPages
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllDataAccessPagesProperties = class(TPersistent)
  private
    FServer:    TAllDataAccessPages;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllDataAccessPages);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllTables provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllTables. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllTables = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllTables
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllTablesProperties= class;
{$ENDIF}
  TAllTables = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllTablesProperties;
    function      GetServerProperties: TAllTablesProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllTablesProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllTables
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllTablesProperties = class(TPersistent)
  private
    FServer:    TAllTables;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllTables);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllQueries provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllQueries. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllQueries = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllQueries
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllQueriesProperties= class;
{$ENDIF}
  TAllQueries = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllQueriesProperties;
    function      GetServerProperties: TAllQueriesProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllQueriesProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllQueries
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllQueriesProperties = class(TPersistent)
  private
    FServer:    TAllQueries;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllQueries);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllViews provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllViews. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllViews = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllViews
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllViewsProperties= class;
{$ENDIF}
  TAllViews = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllViewsProperties;
    function      GetServerProperties: TAllViewsProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllViewsProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllViews
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllViewsProperties = class(TPersistent)
  private
    FServer:    TAllViews;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllViews);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllStoredProcedures provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllStoredProcedures. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllStoredProcedures = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllStoredProcedures
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllStoredProceduresProperties= class;
{$ENDIF}
  TAllStoredProcedures = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllStoredProceduresProperties;
    function      GetServerProperties: TAllStoredProceduresProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllStoredProceduresProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllStoredProcedures
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllStoredProceduresProperties = class(TPersistent)
  private
    FServer:    TAllStoredProcedures;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllStoredProcedures);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAllDatabaseDiagrams provides a Create and CreateRemote method to          
// create instances of the default interface AllObjects exposed by              
// the CoClass AllDatabaseDiagrams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAllDatabaseDiagrams = class
    class function Create: AllObjects;
    class function CreateRemote(const MachineName: string): AllObjects;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAllDatabaseDiagrams
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAllDatabaseDiagramsProperties= class;
{$ENDIF}
  TAllDatabaseDiagrams = class(TOleServer)
  private
    FIntf:        AllObjects;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAllDatabaseDiagramsProperties;
    function      GetServerProperties: TAllDatabaseDiagramsProperties;
{$ENDIF}
    function      GetDefaultInterface: AllObjects;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: AllObjects);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: AllObjects read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:0}var_: OleVariant]: AccessObject read Get_Item; default;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Count;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAllDatabaseDiagramsProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAllDatabaseDiagrams
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAllDatabaseDiagramsProperties = class(TPersistent)
  private
    FServer:    TAllDatabaseDiagrams;
    function    GetDefaultInterface: AllObjects;
    constructor Create(AServer: TAllDatabaseDiagrams);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
// StdProp:Integer
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
  public
    property DefaultInterface: AllObjects read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoCurrentProject provides a Create and CreateRemote method to          
// create instances of the default interface _CurrentProject exposed by              
// the CoClass CurrentProject. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCurrentProject = class
    class function Create: _CurrentProject;
    class function CreateRemote(const MachineName: string): _CurrentProject;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TCurrentProject
// Help String      : 
// Default Interface: _CurrentProject
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TCurrentProjectProperties= class;
{$ENDIF}
  TCurrentProject = class(TOleServer)
  private
    FIntf:        _CurrentProject;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TCurrentProjectProperties;
    function      GetServerProperties: TCurrentProjectProperties;
{$ENDIF}
    function      GetDefaultInterface: _CurrentProject;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
// StdProp:
    function  Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
// StdProp:
    function  Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
// StdProp:
    function  Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
// StdProp:
    function  Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
// StdProp:TOleEnum
    function  Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
// StdProp:WideString
    function  Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _CurrentProject);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure OpenConnection {Flags(1), (3/0) CC:0, INV:1, DBG:3}; overload;
    procedure OpenConnection {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant); overload;
    procedure OpenConnection {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                  {VT_12:0}UserID: OleVariant); overload;
    procedure OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                  {VT_12:0}UserID: OleVariant; 
                                                                  {VT_12:0}Password: OleVariant); overload;
    procedure CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    property  DefaultInterface: _CurrentProject read GetDefaultInterface;
  {CoClassWriteProperties}
    property AllForms {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllForms read Get_AllForms;
    property AllReports {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllReports read Get_AllReports;
    property AllMacros {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllMacros read Get_AllMacros;
    property AllModules {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllModules read Get_AllModules;
    property AllDataAccessPages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllDataAccessPages read Get_AllDataAccessPages;
    property ProjectType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcProjectType read Get_ProjectType;
    property BaseConnectionString {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BaseConnectionString;
    property IsConnected {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IsConnected;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Path;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FullName;
    property Connection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Connection read Get_Connection;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessObjectProperties read Get_Properties;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TCurrentProjectProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TCurrentProject
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TCurrentProjectProperties = class(TPersistent)
  private
    FServer:    TCurrentProject;
    function    GetDefaultInterface: _CurrentProject;
    constructor Create(AServer: TCurrentProject);
  protected
// StdProp:
    function  Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
// StdProp:
    function  Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
// StdProp:
    function  Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
// StdProp:
    function  Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
// StdProp:
    function  Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
// StdProp:TOleEnum
    function  Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
// StdProp:WideString
    function  Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
  public
    property DefaultInterface: _CurrentProject read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoCurrentData provides a Create and CreateRemote method to          
// create instances of the default interface _CurrentData exposed by              
// the CoClass CurrentData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCurrentData = class
    class function Create: _CurrentData;
    class function CreateRemote(const MachineName: string): _CurrentData;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TCurrentData
// Help String      : 
// Default Interface: _CurrentData
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TCurrentDataProperties= class;
{$ENDIF}
  TCurrentData = class(TOleServer)
  private
    FIntf:        _CurrentData;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TCurrentDataProperties;
    function      GetServerProperties: TCurrentDataProperties;
{$ENDIF}
    function      GetDefaultInterface: _CurrentData;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
// StdProp:
    function  Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
// StdProp:
    function  Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
// StdProp:
    function  Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
// StdProp:
    function  Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _CurrentData);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: _CurrentData read GetDefaultInterface;
  {CoClassWriteProperties}
    property AllTables {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllTables read Get_AllTables;
    property AllQueries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllQueries read Get_AllQueries;
    property AllViews {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllViews read Get_AllViews;
    property AllStoredProcedures {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllStoredProcedures read Get_AllStoredProcedures;
    property AllDatabaseDiagrams {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllDatabaseDiagrams read Get_AllDatabaseDiagrams;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TCurrentDataProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TCurrentData
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TCurrentDataProperties = class(TPersistent)
  private
    FServer:    TCurrentData;
    function    GetDefaultInterface: _CurrentData;
    constructor Create(AServer: TCurrentData);
  protected
// StdProp:
    function  Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
// StdProp:
    function  Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
// StdProp:
    function  Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
// StdProp:
    function  Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
// StdProp:
    function  Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
  public
    property DefaultInterface: _CurrentData read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoCodeProject provides a Create and CreateRemote method to          
// create instances of the default interface _CurrentProject exposed by              
// the CoClass CodeProject. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCodeProject = class
    class function Create: _CurrentProject;
    class function CreateRemote(const MachineName: string): _CurrentProject;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TCodeProject
// Help String      : 
// Default Interface: _CurrentProject
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TCodeProjectProperties= class;
{$ENDIF}
  TCodeProject = class(TOleServer)
  private
    FIntf:        _CurrentProject;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TCodeProjectProperties;
    function      GetServerProperties: TCodeProjectProperties;
{$ENDIF}
    function      GetDefaultInterface: _CurrentProject;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
// StdProp:
    function  Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
// StdProp:
    function  Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
// StdProp:
    function  Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
// StdProp:
    function  Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
// StdProp:TOleEnum
    function  Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
// StdProp:WideString
    function  Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _CurrentProject);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure OpenConnection {Flags(1), (3/0) CC:0, INV:1, DBG:3}; overload;
    procedure OpenConnection {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant); overload;
    procedure OpenConnection {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                  {VT_12:0}UserID: OleVariant); overload;
    procedure OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                  {VT_12:0}UserID: OleVariant; 
                                                                  {VT_12:0}Password: OleVariant); overload;
    procedure CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    property  DefaultInterface: _CurrentProject read GetDefaultInterface;
  {CoClassWriteProperties}
    property AllForms {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllForms read Get_AllForms;
    property AllReports {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllReports read Get_AllReports;
    property AllMacros {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllMacros read Get_AllMacros;
    property AllModules {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllModules read Get_AllModules;
    property AllDataAccessPages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllDataAccessPages read Get_AllDataAccessPages;
    property ProjectType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcProjectType read Get_ProjectType;
    property BaseConnectionString {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BaseConnectionString;
    property IsConnected {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IsConnected;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Path;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FullName;
    property Connection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Connection read Get_Connection;
    property Properties {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessObjectProperties read Get_Properties;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TCodeProjectProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TCodeProject
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TCodeProjectProperties = class(TPersistent)
  private
    FServer:    TCodeProject;
    function    GetDefaultInterface: _CurrentProject;
    constructor Create(AServer: TCodeProject);
  protected
// StdProp:
    function  Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
// StdProp:
    function  Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
// StdProp:
    function  Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
// StdProp:
    function  Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
// StdProp:
    function  Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
// StdProp:TOleEnum
    function  Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
// StdProp:WideString
    function  Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
// StdProp:
    function  Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
  public
    property DefaultInterface: _CurrentProject read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoCodeData provides a Create and CreateRemote method to          
// create instances of the default interface _CurrentData exposed by              
// the CoClass CodeData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCodeData = class
    class function Create: _CurrentData;
    class function CreateRemote(const MachineName: string): _CurrentData;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TCodeData
// Help String      : 
// Default Interface: _CurrentData
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TCodeDataProperties= class;
{$ENDIF}
  TCodeData = class(TOleServer)
  private
    FIntf:        _CurrentData;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TCodeDataProperties;
    function      GetServerProperties: TCodeDataProperties;
{$ENDIF}
    function      GetDefaultInterface: _CurrentData;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
// StdProp:
    function  Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
// StdProp:
    function  Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
// StdProp:
    function  Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
// StdProp:
    function  Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _CurrentData);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: _CurrentData read GetDefaultInterface;
  {CoClassWriteProperties}
    property AllTables {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllTables read Get_AllTables;
    property AllQueries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllQueries read Get_AllQueries;
    property AllViews {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllViews read Get_AllViews;
    property AllStoredProcedures {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllStoredProcedures read Get_AllStoredProcedures;
    property AllDatabaseDiagrams {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AllDatabaseDiagrams read Get_AllDatabaseDiagrams;
  {CoClassWriteProperties}
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TCodeDataProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TCodeData
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TCodeDataProperties = class(TPersistent)
  private
    FServer:    TCodeData;
    function    GetDefaultInterface: _CurrentData;
    constructor Create(AServer: TCodeData);
  protected
// StdProp:
    function  Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
// StdProp:
    function  Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
// StdProp:
    function  Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
// StdProp:
    function  Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
// StdProp:
    function  Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
  public
    property DefaultInterface: _CurrentData read GetDefaultInterface;
  published
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoWizHook provides a Create and CreateRemote method to          
// create instances of the default interface _WizHook exposed by              
// the CoClass WizHook. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWizHook = class
    class function Create: _WizHook;
    class function CreateRemote(const MachineName: string): _WizHook;
  end;

// *********************************************************************//
// The Class CoDefaultWebOptions provides a Create and CreateRemote method to          
// create instances of the default interface _DefaultWebOptions exposed by              
// the CoClass DefaultWebOptions. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDefaultWebOptions = class
    class function Create: _DefaultWebOptions;
    class function CreateRemote(const MachineName: string): _DefaultWebOptions;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TDefaultWebOptions
// Help String      : 
// Default Interface: _DefaultWebOptions
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TDefaultWebOptionsProperties= class;
{$ENDIF}
  TDefaultWebOptions = class(TOleServer)
  private
    FIntf:        _DefaultWebOptions;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TDefaultWebOptionsProperties;
    function      GetServerProperties: TDefaultWebOptionsProperties;
{$ENDIF}
    function      GetDefaultInterface: _DefaultWebOptions;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:TOleEnum
    function  Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
// StdProp:TOleEnum
    procedure Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
// StdProp:TOleEnum
    function  Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
// StdProp:TOleEnum
    procedure Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
// StdProp:WordBool
    function  Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WideString
    function  Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
// StdProp:TOleEnum
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
// StdProp:WordBool
    function  Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WideString
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _DefaultWebOptions);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: _DefaultWebOptions read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property FolderSuffix {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FolderSuffix;
  {CoClassWriteProperties}
    property HyperlinkColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcColorIndex read Get_HyperlinkColor write Set_HyperlinkColor;
    property FollowedHyperlinkColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcColorIndex read Get_FollowedHyperlinkColor write Set_FollowedHyperlinkColor;
    property UnderlineHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UnderlineHyperlinks write Set_UnderlineHyperlinks;
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property CheckIfOfficeIsHTMLEditor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CheckIfOfficeIsHTMLEditor write Set_CheckIfOfficeIsHTMLEditor;
    property DownloadComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DownloadComponents write Set_DownloadComponents;
    property LocationOfComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_LocationOfComponents write Set_LocationOfComponents;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_Encoding write Set_Encoding;
    property AlwaysSaveInDefaultEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AlwaysSaveInDefaultEncoding write Set_AlwaysSaveInDefaultEncoding;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TDefaultWebOptionsProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TDefaultWebOptions
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TDefaultWebOptionsProperties = class(TPersistent)
  private
    FServer:    TDefaultWebOptions;
    function    GetDefaultInterface: _DefaultWebOptions;
    constructor Create(AServer: TDefaultWebOptions);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:TOleEnum
    function  Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
// StdProp:TOleEnum
    procedure Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
// StdProp:TOleEnum
    function  Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
// StdProp:TOleEnum
    procedure Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
// StdProp:WordBool
    function  Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WideString
    function  Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
// StdProp:TOleEnum
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
// StdProp:WordBool
    function  Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WideString
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
  public
    property DefaultInterface: _DefaultWebOptions read GetDefaultInterface;
  published
    property HyperlinkColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcColorIndex read Get_HyperlinkColor write Set_HyperlinkColor;
    property FollowedHyperlinkColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AcColorIndex read Get_FollowedHyperlinkColor write Set_FollowedHyperlinkColor;
    property UnderlineHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UnderlineHyperlinks write Set_UnderlineHyperlinks;
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property CheckIfOfficeIsHTMLEditor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CheckIfOfficeIsHTMLEditor write Set_CheckIfOfficeIsHTMLEditor;
    property DownloadComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DownloadComponents write Set_DownloadComponents;
    property LocationOfComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_LocationOfComponents write Set_LocationOfComponents;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_Encoding write Set_Encoding;
    property AlwaysSaveInDefaultEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AlwaysSaveInDefaultEncoding write Set_AlwaysSaveInDefaultEncoding;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoAccessWebOptions provides a Create and CreateRemote method to          
// create instances of the default interface _WebOptions exposed by              
// the CoClass AccessWebOptions. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAccessWebOptions = class
    class function Create: _WebOptions;
    class function CreateRemote(const MachineName: string): _WebOptions;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TAccessWebOptions
// Help String      : 
// Default Interface: _WebOptions
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TAccessWebOptionsProperties= class;
{$ENDIF}
  TAccessWebOptions = class(TOleServer)
  private
    FIntf:        _WebOptions;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TAccessWebOptionsProperties;
    function      GetServerProperties: TAccessWebOptionsProperties;
{$ENDIF}
    function      GetDefaultInterface: _WebOptions;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WideString
    function  Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
// StdProp:TOleEnum
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
// StdProp:WideString
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _WebOptions);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure UseDefaultFolderSuffix {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    property  DefaultInterface: _WebOptions read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AccessApplication read Get_Application;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property FolderSuffix {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FolderSuffix;
  {CoClassWriteProperties}
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property DownloadComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DownloadComponents write Set_DownloadComponents;
    property LocationOfComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_LocationOfComponents write Set_LocationOfComponents;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_Encoding write Set_Encoding;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TAccessWebOptionsProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TAccessWebOptions
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TAccessWebOptionsProperties = class(TPersistent)
  private
    FServer:    TAccessWebOptions;
    function    GetDefaultInterface: _WebOptions;
    constructor Create(AServer: TAccessWebOptions);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WordBool
    function  Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
// StdProp:WideString
    function  Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
// StdProp:TOleEnum
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
// StdProp:WideString
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
  public
    property DefaultInterface: _WebOptions read GetDefaultInterface;
  published
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property DownloadComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DownloadComponents write Set_DownloadComponents;
    property LocationOfComponents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_LocationOfComponents write Set_LocationOfComponents;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_Encoding write Set_Encoding;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoClass_ provides a Create and CreateRemote method to          
// create instances of the default interface _Dummy exposed by              
// the CoClass Class_. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoClass_ = class
    class function Create: _Dummy;
    class function CreateRemote(const MachineName: string): _Dummy;
  end;

procedure Register;

implementation

uses ComObj;

class function CoFormatCondition.Create: _FormatCondition;
begin
  Result := CreateComObject(CLASS_FormatCondition) as _FormatCondition;
end;

class function CoFormatCondition.CreateRemote(const MachineName: string): _FormatCondition;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FormatCondition) as _FormatCondition;
end;

procedure TFormatCondition.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{E27A992D-A330-11D0-81DD-00C04FC2F51B}';
    IntfIID:   '{E27A992C-A330-11D0-81DD-00C04FC2F51B}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TFormatCondition.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _FormatCondition;
  end;
end;

procedure TFormatCondition.ConnectTo(svrIntf: _FormatCondition);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TFormatCondition.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TFormatCondition.GetDefaultInterface: _FormatCondition;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TFormatCondition.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TFormatConditionProperties.Create(Self);
{$ENDIF}
end;

destructor TFormatCondition.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TFormatCondition.GetServerProperties: TFormatConditionProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:Integer
function  TFormatCondition.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TFormatCondition.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
begin
  DefaultInterface.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}plResult);
end;

// StdProp:Integer
function  TFormatCondition.Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TFormatCondition.Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
begin
  DefaultInterface.Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}plResult);
end;

// StdProp:WordBool
function  TFormatCondition.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatCondition.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:WordBool
function  TFormatCondition.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatCondition.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:WordBool
function  TFormatCondition.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatCondition.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:WordBool
function  TFormatCondition.Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatCondition.Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:TOleEnum
function  TFormatCondition.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionType;
begin
  Result := DefaultInterface.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TFormatCondition.Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionOperator;
begin
  Result := DefaultInterface.Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TFormatCondition.Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TFormatCondition.Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TFormatCondition.Modify {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_29:0}Type_: AcFormatConditionType; 
                                                                       {VT_29:0}Operator: AcFormatConditionOperator);
begin
  DefaultInterface.Modify {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_29:0}Type_, {VT_29:0}Operator, 
                                                               EmptyParam, EmptyParam);
end;

procedure TFormatCondition.Modify {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_29:0}Type_: AcFormatConditionType; 
                                                                       {VT_29:0}Operator: AcFormatConditionOperator; 
                                                                       {VT_12:0}Expression1: OleVariant);
begin
  DefaultInterface.Modify {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_29:0}Type_, {VT_29:0}Operator, 
                                                               {VT_12:0}Expression1, EmptyParam);
end;

procedure TFormatCondition.Modify {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_29:0}Type_: AcFormatConditionType; 
                                                                       {VT_29:0}Operator: AcFormatConditionOperator; 
                                                                       {VT_12:0}Expression1: OleVariant; 
                                                                       {VT_12:0}Expression2: OleVariant);
begin
  DefaultInterface.Modify {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_29:0}Type_, {VT_29:0}Operator, 
                                                               {VT_12:0}Expression1, 
                                                               {VT_12:0}Expression2);
end;

procedure TFormatCondition.Delete {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Delete {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TFormatConditionProperties.Create(AServer: TFormatCondition);
begin
  inherited Create;
  FServer := AServer;
end;

function TFormatConditionProperties.GetDefaultInterface: _FormatCondition;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:Integer
function  TFormatConditionProperties.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TFormatConditionProperties.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
begin
  DefaultInterface.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}plResult);
end;

// StdProp:Integer
function  TFormatConditionProperties.Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TFormatConditionProperties.Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}plResult: Integer);
begin
  DefaultInterface.Set_BackColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}plResult);
end;

// StdProp:WordBool
function  TFormatConditionProperties.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatConditionProperties.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:WordBool
function  TFormatConditionProperties.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatConditionProperties.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:WordBool
function  TFormatConditionProperties.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatConditionProperties.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:WordBool
function  TFormatConditionProperties.Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TFormatConditionProperties.Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfResult: WordBool);
begin
  DefaultInterface.Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfResult);
end;

// StdProp:TOleEnum
function  TFormatConditionProperties.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionType;
begin
  Result := DefaultInterface.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TFormatConditionProperties.Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcFormatConditionOperator;
begin
  Result := DefaultInterface.Get_Operator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TFormatConditionProperties.Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Expression1 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TFormatConditionProperties.Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Expression2 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAccessHyperlink.Create: _Hyperlink;
begin
  Result := CreateComObject(CLASS_AccessHyperlink) as _Hyperlink;
end;

class function CoAccessHyperlink.CreateRemote(const MachineName: string): _Hyperlink;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AccessHyperlink) as _Hyperlink;
end;

procedure TAccessHyperlink.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{50D56610-60AC-11CF-82C9-00AA004B9FE6}';
    IntfIID:   '{50D56611-60AC-11CF-82C9-00AA004B9FE6}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAccessHyperlink.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _Hyperlink;
  end;
end;

procedure TAccessHyperlink.ConnectTo(svrIntf: _Hyperlink);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAccessHyperlink.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAccessHyperlink.GetDefaultInterface: _Hyperlink;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAccessHyperlink.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAccessHyperlinkProperties.Create(Self);
{$ENDIF}
end;

destructor TAccessHyperlink.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAccessHyperlink.GetServerProperties: TAccessHyperlinkProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:WideString
function  TAccessHyperlink.Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlink.Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlink.Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlink.Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlink.Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlink.Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlink.Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlink.Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlink.Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlink.Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

procedure TAccessHyperlink.AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessHyperlink.Follow {Flags(1), (5/5) CC:0, INV:1, DBG:3}({VT_11:0}NewWindow: WordBool; 
                                                                       {VT_11:0}AddHistory: WordBool; 
                                                                       {VT_12:0}ExtraInfo: OleVariant; 
                                                                       {VT_29:0}Method: MsoExtraInfoMethod; 
                                                                       {VT_8:0}const HeaderInfo: WideString);
begin
  DefaultInterface.Follow {Flags(1), (5/5) CC:0, INV:1, DBG:7}({VT_11:0}NewWindow, 
                                                               {VT_11:0}AddHistory, 
                                                               {VT_12:0}ExtraInfo, {VT_29:0}Method, 
                                                               {VT_8:0}HeaderInfo);
end;

procedure TAccessHyperlink.CreateNewDocument {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString; 
                                                                                  {VT_11:0}EditNow: WordBool; 
                                                                                  {VT_11:0}Overwrite: WordBool);
begin
  DefaultInterface.CreateNewDocument {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_8:0}FileName, 
                                                                          {VT_11:0}EditNow, 
                                                                          {VT_11:0}Overwrite);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAccessHyperlinkProperties.Create(AServer: TAccessHyperlink);
begin
  inherited Create;
  FServer := AServer;
end;

function TAccessHyperlinkProperties.GetDefaultInterface: _Hyperlink;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:WideString
function  TAccessHyperlinkProperties.Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlinkProperties.Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlinkProperties.Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlinkProperties.Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlinkProperties.Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlinkProperties.Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlinkProperties.Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlinkProperties.Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

// StdProp:WideString
function  TAccessHyperlinkProperties.Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessHyperlinkProperties.Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pbstrResult: OleVariant);
begin
  DefaultInterface.Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pbstrResult);
end;

{$ENDIF}

class function CoAccessForm.Create: _Form;
begin
  Result := CreateComObject(CLASS_AccessForm) as _Form;
end;

class function CoAccessForm.CreateRemote(const MachineName: string): _Form;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AccessForm) as _Form;
end;

procedure TAccessForm.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{483615A0-74BE-101B-AF4E-00AA003F0F07}';
    IntfIID:   '{E5135D80-8F8D-101B-AF4E-00AA003F0F07}';
    EventIID:  '{331FDCFB-CF31-11CD-8701-00AA003F0F07}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAccessForm.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _Form;
  end;
end;

procedure TAccessForm.ConnectTo(svrIntf: _Form);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TAccessForm.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    FIntf := nil;
  end;
end;

function TAccessForm.GetDefaultInterface: _Form;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAccessForm.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAccessFormProperties.Create(Self);
{$ENDIF}
end;

destructor TAccessForm.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAccessForm.GetServerProperties: TAccessFormProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TAccessForm.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   2067: if Assigned(FOnLoad) then
            FOnLoad(Self);
   2058: if Assigned(FOnCurrent) then
            FOnCurrent(Self);
   2059: if Assigned(FOnBeforeInsert) then
            FOnBeforeInsert(Self, Params[0] {VT_2:1}{out Smallint});
   2060: if Assigned(FOnAfterInsert) then
            FOnAfterInsert(Self);
   2061: if Assigned(FOnBeforeUpdate) then
            FOnBeforeUpdate(Self, Params[0] {VT_2:1}{out Smallint});
   2062: if Assigned(FOnAfterUpdate) then
            FOnAfterUpdate(Self);
   2063: if Assigned(FOnDelete) then
            FOnDelete(Self, Params[0] {VT_2:1}{out Smallint});
   2064: if Assigned(FOnBeforeDelConfirm) then
            FOnBeforeDelConfirm(Self, Params[0] {VT_2:1}{out Smallint}, Params[1] {VT_2:1}{out Smallint});
   2065: if Assigned(FOnAfterDelConfirm) then
            FOnAfterDelConfirm(Self, Params[0] {VT_2:1}{var Smallint});
   2066: if Assigned(FOnOpen) then
            FOnOpen(Self, Params[0] {VT_2:1}{out Smallint});
   2068: if Assigned(FOnResize) then
            FOnResize(Self);
   2069: if Assigned(FOnUnload) then
            FOnUnload(Self, Params[0] {VT_2:1}{out Smallint});
   2070: if Assigned(FOnClose) then
            FOnClose(Self);
   2071: if Assigned(FOnActivate) then
            FOnActivate(Self);
   2072: if Assigned(FOnDeactivate) then
            FOnDeactivate(Self);
   2073: if Assigned(FOnGotFocus) then
            FOnGotFocus(Self);
   2074: if Assigned(FOnLostFocus) then
            FOnLostFocus(Self);
   -600: if Assigned(FOnClick) then
            FOnClick(Self);
   -601: if Assigned(FOnDblClick) then
            FOnDblClick(Self, Params[0] {VT_2:1}{out Smallint});
   -605: if Assigned(FOnMouseDown) then
            FOnMouseDown(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{var Smallint}, Params[2] {VT_4:1}{var Single}, Params[3] {VT_4:1}{var Single});
   -606: if Assigned(FOnMouseMove) then
            FOnMouseMove(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{var Smallint}, Params[2] {VT_4:1}{var Single}, Params[3] {VT_4:1}{var Single});
   -607: if Assigned(FOnMouseUp) then
            FOnMouseUp(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{var Smallint}, Params[2] {VT_4:1}{var Single}, Params[3] {VT_4:1}{var Single});
   -602: if Assigned(FOnKeyDown) then
            FOnKeyDown(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{var Smallint});
   -603: if Assigned(FOnKeyPress) then
            FOnKeyPress(Self, Params[0] {VT_2:1}{var Smallint});
   -604: if Assigned(FOnKeyUp) then
            FOnKeyUp(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{var Smallint});
   2083: if Assigned(FOnError) then
            FOnError(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{out Smallint});
   2084: if Assigned(FOnTimer) then
            FOnTimer(Self);
   2155: if Assigned(FOnFilter) then
            FOnFilter(Self, Params[0] {VT_2:1}{out Smallint}, Params[1] {VT_2:1}{var Smallint});
   2156: if Assigned(FOnApplyFilter) then
            FOnApplyFilter(Self, Params[0] {VT_2:1}{out Smallint}, Params[1] {VT_2:1}{var Smallint});
   2205: if Assigned(FOnDirty) then
            FOnDirty(Self, Params[0] {VT_2:1}{out Smallint});
  end; {case DispID}
end;

// StdProp:IDispatch
function  TAccessForm.Get_accParent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_accParent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TAccessForm.Get_accChildCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_accChildCount {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessForm.Get_accChild {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): IDispatch;
begin
  Result := DefaultInterface.Get_accChild {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessForm.Get_accName {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accName {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessForm.Get_accValue {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accValue {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessForm.Get_accDescription {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accDescription {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:OleVariant
function  TAccessForm.Get_accRole {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Get_accRole {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:OleVariant
function  TAccessForm.Get_accState {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Get_accState {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessForm.Get_accHelp {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accHelp {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:Integer
function  TAccessForm.Get_accHelpTopic {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:1}out pszHelpFile: WideString; 
                                                                            {VT_12:0}varChild: OleVariant): Integer;
begin
  Result := DefaultInterface.Get_accHelpTopic {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_8:1}pszHelpFile, 
                                                                                   {VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessForm.Get_accKeyboardShortcut {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accKeyboardShortcut {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:OleVariant
function  TAccessForm.Get_accFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_accFocus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TAccessForm.Get_accSelection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_accSelection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessForm.Get_accDefaultAction {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accDefaultAction {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
procedure TAccessForm.Set_accName {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                                       {VT_8:0}const pszName: WideString);
begin
  DefaultInterface.Set_accName {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_12:0}varChild, 
                                                                    {VT_8:0}pszName);
end;

// StdProp:WideString
procedure TAccessForm.Set_accValue {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                                        {VT_8:0}const pszValue: WideString);
begin
  DefaultInterface.Set_accValue {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_12:0}varChild, 
                                                                     {VT_8:0}pszValue);
end;

// StdProp:WideString
function  TAccessForm.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessForm.Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:OleVariant
function  TAccessForm.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessForm.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Byte
function  TAccessForm.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessForm.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessForm.Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessForm.Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessForm.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:
function  TAccessForm.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessForm.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
function  TAccessForm.Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessForm.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
begin
  Result := DefaultInterface.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessForm.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
begin
  Result := DefaultInterface.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_3:0}ControlType);
end;

// StdProp:IDispatch
function  TAccessForm.Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessForm.Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessForm.Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
procedure TAccessForm.Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:3}({VT_9:0}const pRet: IDispatch);
begin
  DefaultInterface.Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:7}({VT_9:0}pRet);
end;

// StdProp:
function  TAccessForm.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
begin
  Result := DefaultInterface.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}Index);
end;

// StdProp:
function  TAccessForm.Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessForm;
begin
  Result := DefaultInterface.Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessForm.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
begin
  Result := DefaultInterface.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessForm.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessForm.Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
begin
  Result := DefaultInterface.Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessForm.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
begin
  Result := DefaultInterface.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessForm.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessForm.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
begin
  DefaultInterface.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pbstrName);
end;

// StdProp:Smallint
function  TAccessForm.Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessForm.Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessForm.Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessForm.Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

procedure TAccessForm.accSelect {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_3:0}flagsSelect: Integer);
begin
  DefaultInterface.accSelect {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_3:0}flagsSelect, EmptyParam);
end;

procedure TAccessForm.accSelect {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}flagsSelect: Integer; 
                                                                     {VT_12:0}varChild: OleVariant);
begin
  DefaultInterface.accSelect {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_3:0}flagsSelect, 
                                                                  {VT_12:0}varChild);
end;

procedure TAccessForm.accLocation {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_3:1}out pxLeft: Integer; 
                                                                       {VT_3:1}out pyTop: Integer; 
                                                                       {VT_3:1}out pcxWidth: Integer; 
                                                                       {VT_3:1}out pcyHeight: Integer);
begin
  DefaultInterface.accLocation {Flags(1), (5/5) CC:0, INV:1, DBG:7}({VT_3:1}pxLeft, {VT_3:1}pyTop, 
                                                                    {VT_3:1}pcxWidth, 
                                                                    {VT_3:1}pcyHeight, EmptyParam);
end;

procedure TAccessForm.accLocation {Flags(1), (5/5) CC:0, INV:1, DBG:3}({VT_3:1}out pxLeft: Integer; 
                                                                       {VT_3:1}out pyTop: Integer; 
                                                                       {VT_3:1}out pcxWidth: Integer; 
                                                                       {VT_3:1}out pcyHeight: Integer; 
                                                                       {VT_12:0}varChild: OleVariant);
begin
  DefaultInterface.accLocation {Flags(1), (5/5) CC:0, INV:1, DBG:7}({VT_3:1}pxLeft, {VT_3:1}pyTop, 
                                                                    {VT_3:1}pcxWidth, 
                                                                    {VT_3:1}pcyHeight, 
                                                                    {VT_12:0}varChild);
end;

function  TAccessForm.accNavigate {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_3:0}navDir: Integer): OleVariant;
begin
  Result := DefaultInterface.accNavigate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}navDir, 
                                                                              EmptyParam);
end;

function  TAccessForm.accNavigate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}navDir: Integer; 
                                                                       {VT_12:0}varStart: OleVariant): OleVariant;
begin
  Result := DefaultInterface.accNavigate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}navDir, 
                                                                              {VT_12:0}varStart);
end;

function  TAccessForm.accHitTest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}xLeft: Integer; 
                                                                      {VT_3:0}yTop: Integer): OleVariant;
begin
  Result := DefaultInterface.accHitTest {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}xLeft, 
                                                                             {VT_3:0}yTop);
end;

procedure TAccessForm.accDoDefaultAction {Flags(1), (1/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.accDoDefaultAction {Flags(1), (1/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

procedure TAccessForm.accDoDefaultAction {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:0}varChild: OleVariant);
begin
  DefaultInterface.accDoDefaultAction {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:0}varChild);
end;

procedure TAccessForm.Undo {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Undo {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessForm.Recalc {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Recalc {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessForm.Requery {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Requery {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessForm.Refresh {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Refresh {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessForm.Repaint {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Repaint {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessForm.GoToPage {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_3:0}PageNumber: Integer; 
                                                                    {VT_3:0}Right: Integer; 
                                                                    {VT_3:0}Down: Integer);
begin
  DefaultInterface.GoToPage {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_3:0}PageNumber, {VT_3:0}Right, 
                                                                 {VT_3:0}Down);
end;

procedure TAccessForm.SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TAccessForm._Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const bstrExpr: WideString; 
                                                                     {VT_27:1}var ppsa: PSafeArray): OleVariant;
begin
  Result := DefaultInterface._Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_8:0}bstrExpr, 
                                                                            {VT_27:1}ppsa);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAccessFormProperties.Create(AServer: TAccessForm);
begin
  inherited Create;
  FServer := AServer;
end;

function TAccessFormProperties.GetDefaultInterface: _Form;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:IDispatch
function  TAccessFormProperties.Get_accParent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_accParent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TAccessFormProperties.Get_accChildCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_accChildCount {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessFormProperties.Get_accChild {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): IDispatch;
begin
  Result := DefaultInterface.Get_accChild {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_accName {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accName {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_accValue {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accValue {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_accDescription {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accDescription {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_accRole {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Get_accRole {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_accState {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Get_accState {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_accHelp {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accHelp {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_accHelpTopic {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:1}out pszHelpFile: WideString; 
                                                                                      {VT_12:0}varChild: OleVariant): Integer;
begin
  Result := DefaultInterface.Get_accHelpTopic {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_8:1}pszHelpFile, 
                                                                                   {VT_12:0}varChild);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_accKeyboardShortcut {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accKeyboardShortcut {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_accFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_accFocus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_accSelection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_accSelection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessFormProperties.Get_accDefaultAction {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}varChild: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_accDefaultAction {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}varChild);
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_accName {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                                                 {VT_8:0}const pszName: WideString);
begin
  DefaultInterface.Set_accName {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_12:0}varChild, 
                                                                    {VT_8:0}pszName);
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_accValue {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:0}varChild: OleVariant; 
                                                                                  {VT_8:0}const pszValue: WideString);
begin
  DefaultInterface.Set_accValue {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_12:0}varChild, 
                                                                     {VT_8:0}pszValue);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowFilters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowFilters {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DefaultView {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DefaultView {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_ViewsAllowed {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_ViewsAllowed {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowEditing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowEditing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DefaultEditing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DefaultEditing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowEdits {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowEdits {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowDeletions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowDeletions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowAdditions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowAdditions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DataEntry {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DataEntry {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_AllowUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_AllowUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_RecordsetType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_RecordsetType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_ScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_ScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_RecordSelectors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_RecordSelectors {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_NavigationButtons {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_NavigationButtons {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DividingLines {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DividingLines {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AutoResize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AutoResize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AutoCenter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AutoCenter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PopUp {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PopUp {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Modal {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Modal {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_BorderStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_BorderStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ControlBox {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ControlBox {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_MinMaxButtons {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_MinMaxButtons {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CloseButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_CloseButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_WhatsThisButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_WhatsThisButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_Cycle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_Cycle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShortcutMenu {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ShortcutMenu {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_RowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_RowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DatasheetFontName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_DatasheetFontName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DatasheetFontHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DatasheetFontHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DatasheetFontWeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DatasheetFontWeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DatasheetFontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DatasheetFontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DatasheetFontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_DatasheetFontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_TabularCharSet {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_TabularCharSet {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DatasheetGridlinesBehavior {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DatasheetGridlinesBehavior {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DatasheetGridlinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_DatasheetGridlinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DatasheetCellsEffect {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DatasheetCellsEffect {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DatasheetForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_DatasheetForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DatasheetBackColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_DatasheetBackColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FrozenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FrozenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_TabularFamily {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_TabularFamily {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_OpenArgs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_OpenArgs {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_ConnectSynch {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_ConnectSynch {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnCurrent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnCurrent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnInsert {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnInsert {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BeforeInsert {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_BeforeInsert {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AfterInsert {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_AfterInsert {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BeforeUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_BeforeUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AfterUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_AfterUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDirty {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDirty {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDelete {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDelete {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BeforeDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_BeforeDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AfterDelConfirm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_AfterDelConfirm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnLoad {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnLoad {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnResize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnResize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnUnload {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnUnload {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnGotFocus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnGotFocus {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnLostFocus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnLostFocus {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnClick {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnClick {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDblClick {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDblClick {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMouseDown {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMouseDown {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMouseMove {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMouseMove {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMouseUp {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMouseUp {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnKeyDown {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnKeyDown {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnKeyUp {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnKeyUp {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnKeyPress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnKeyPress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_KeyPreview {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_KeyPreview {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnApplyFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnApplyFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnTimer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnTimer {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_TimerInterval {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_TimerInterval {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_WindowWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_WindowHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_CurrentView {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentSectionTop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_CurrentSectionTop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentSectionLeft {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_CurrentSectionLeft {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelLeft {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelLeft {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelTop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelTop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SelHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_SelHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_InsideHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_InsideHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_InsideWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_InsideWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:OleVariant
function  TAccessFormProperties.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessFormProperties.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Byte
function  TAccessFormProperties.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessFormProperties.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AllowDesignChanges {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_AllowDesignChanges {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ServerFilterByForm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_ServerFilterByForm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessFormProperties.Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_MaxRecords {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessFormProperties.Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_MaxRecords {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UniqueTable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_UniqueTable {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ResyncCommand {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ResyncCommand {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessFormProperties.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MaxRecButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MaxRecButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:
function  TAccessFormProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessFormProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_NewRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessFormProperties.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
begin
  Result := DefaultInterface.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessFormProperties.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
begin
  Result := DefaultInterface.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_3:0}ControlType);
end;

// StdProp:IDispatch
function  TAccessFormProperties.Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Dynaset {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessFormProperties.Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_RecordsetClone {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessFormProperties.Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Recordset {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
procedure TAccessFormProperties.Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:3}({VT_9:0}const pRet: IDispatch);
begin
  DefaultInterface.Set_Recordset {Flags(1), (1/1) CC:0, INV:8, DBG:7}({VT_9:0}pRet);
end;

// StdProp:
function  TAccessFormProperties.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
begin
  Result := DefaultInterface.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}Index);
end;

// StdProp:
function  TAccessFormProperties.Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessForm;
begin
  Result := DefaultInterface.Get_Form {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessFormProperties.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
begin
  Result := DefaultInterface.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessFormProperties.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessFormProperties.Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
begin
  Result := DefaultInterface.Get_ConnectControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessFormProperties.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
begin
  Result := DefaultInterface.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessFormProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessFormProperties.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
begin
  DefaultInterface.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pbstrName);
end;

// StdProp:Smallint
function  TAccessFormProperties.Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_SubdatasheetHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessFormProperties.Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_SubdatasheetHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessFormProperties.Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SubdatasheetExpanded {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessFormProperties.Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_SubdatasheetExpanded {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

{$ENDIF}

class function CoAccessReport.Create: _Report;
begin
  Result := CreateComObject(CLASS_AccessReport) as _Report;
end;

class function CoAccessReport.CreateRemote(const MachineName: string): _Report;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AccessReport) as _Report;
end;

procedure TAccessReport.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{27CE30A0-91FF-101B-AF4E-00AA003F0F07}';
    IntfIID:   '{3E8B6B00-91FF-101B-AF4E-00AA003F0F07}';
    EventIID:  '{BC9E4357-F037-11CD-8701-00AA003F0F07}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAccessReport.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _Report;
  end;
end;

procedure TAccessReport.ConnectTo(svrIntf: _Report);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TAccessReport.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    FIntf := nil;
  end;
end;

function TAccessReport.GetDefaultInterface: _Report;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAccessReport.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAccessReportProperties.Create(Self);
{$ENDIF}
end;

destructor TAccessReport.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAccessReport.GetServerProperties: TAccessReportProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TAccessReport.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   2066: if Assigned(FOnOpen) then
            FOnOpen(Self, Params[0] {VT_2:1}{out Smallint});
   2070: if Assigned(FOnClose) then
            FOnClose(Self);
   2071: if Assigned(FOnActivate) then
            FOnActivate(Self);
   2072: if Assigned(FOnDeactivate) then
            FOnDeactivate(Self);
   2083: if Assigned(FOnError) then
            FOnError(Self, Params[0] {VT_2:1}{var Smallint}, Params[1] {VT_2:1}{out Smallint});
   2161: if Assigned(FOnNoData) then
            FOnNoData(Self, Params[0] {VT_2:1}{out Smallint});
   2162: if Assigned(FOnPage) then
            FOnPage(Self);
  end; {case DispID}
end;

// StdProp:WideString
function  TAccessReport.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReport.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReport.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReport.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReport.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReport.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReport.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Single
function  TAccessReport.Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReport.Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReport.Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReport.Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReport.Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReport.Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReport.Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReport.Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Single
function  TAccessReport.Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReport.Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReport.Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReport.Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessReport.Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReport.Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReport.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReport.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReport.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReport.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReport.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReport.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WordBool
function  TAccessReport.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReport.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessReport.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReport.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Byte
function  TAccessReport.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReport.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessReport.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:
function  TAccessReport.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessReport.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReport.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
begin
  Result := DefaultInterface.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReport.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
begin
  Result := DefaultInterface.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_3:0}ControlType);
end;

// StdProp:
function  TAccessReport.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
begin
  Result := DefaultInterface.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}Index);
end;

// StdProp:
function  TAccessReport.Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}Index: Integer): AccessGroupLevel;
begin
  Result := DefaultInterface.Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_3:0}Index);
end;

// StdProp:
function  TAccessReport.Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReport;
begin
  Result := DefaultInterface.Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReport.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
begin
  Result := DefaultInterface.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReport.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReport.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
begin
  Result := DefaultInterface.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessReport.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReport.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
begin
  DefaultInterface.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pbstrName);
end;

procedure TAccessReport.Circle {Flags(1), (8/8) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                                    {VT_4:0}X: Single; 
                                                                    {VT_4:0}Y: Single; 
                                                                    {VT_4:0}radius: Single; 
                                                                    {VT_3:0}color: Integer; 
                                                                    {VT_4:0}start: Single; 
                                                                    {VT_4:0}end_: Single; 
                                                                    {VT_4:0}aspect: Single);
begin
  DefaultInterface.Circle {Flags(1), (8/8) CC:0, INV:1, DBG:7}({VT_2:0}flags, {VT_4:0}X, {VT_4:0}Y, 
                                                               {VT_4:0}radius, {VT_3:0}color, 
                                                               {VT_4:0}start, {VT_4:0}end_, 
                                                               {VT_4:0}aspect);
end;

procedure TAccessReport.Line {Flags(1), (6/6) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                                  {VT_4:0}x1: Single; 
                                                                  {VT_4:0}y1: Single; 
                                                                  {VT_4:0}x2: Single; 
                                                                  {VT_4:0}y2: Single; 
                                                                  {VT_3:0}color: Integer);
begin
  DefaultInterface.Line {Flags(1), (6/6) CC:0, INV:1, DBG:7}({VT_2:0}flags, {VT_4:0}x1, {VT_4:0}y1, 
                                                             {VT_4:0}x2, {VT_4:0}y2, {VT_3:0}color);
end;

procedure TAccessReport.PSet {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                                  {VT_4:0}X: Single; 
                                                                  {VT_4:0}Y: Single; 
                                                                  {VT_3:0}color: Integer);
begin
  DefaultInterface.PSet {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_2:0}flags, {VT_4:0}X, {VT_4:0}Y, 
                                                             {VT_3:0}color);
end;

procedure TAccessReport.Scale {Flags(1), (5/5) CC:0, INV:1, DBG:3}({VT_2:0}flags: Smallint; 
                                                                   {VT_4:0}x1: Single; 
                                                                   {VT_4:0}y1: Single; 
                                                                   {VT_4:0}x2: Single; 
                                                                   {VT_4:0}y2: Single);
begin
  DefaultInterface.Scale {Flags(1), (5/5) CC:0, INV:1, DBG:7}({VT_2:0}flags, {VT_4:0}x1, 
                                                              {VT_4:0}y1, {VT_4:0}x2, {VT_4:0}y2);
end;

function  TAccessReport.TextWidth {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString): Single;
begin
  Result := DefaultInterface.TextWidth {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}Expr);
end;

function  TAccessReport.TextHeight {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString): Single;
begin
  Result := DefaultInterface.TextHeight {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}Expr);
end;

procedure TAccessReport.Print {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString);
begin
  DefaultInterface.Print {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Expr);
end;

function  TAccessReport._Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const bstrExpr: WideString; 
                                                                       {VT_27:1}var ppsa: PSafeArray): OleVariant;
begin
  Result := DefaultInterface._Evaluate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_8:0}bstrExpr, 
                                                                            {VT_27:1}ppsa);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAccessReportProperties.Create(AServer: TAccessReport);
begin
  inherited Create;
  FServer := AServer;
end;

function TAccessReportProperties.GetDefaultInterface: _Report;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:WideString
function  TAccessReportProperties.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FormName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_FormName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecordSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_RecordSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FilterOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FilterOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OrderBy {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OrderBy {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrderByOn {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_OrderByOn {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ServerFilter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ServerFilter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_RecordLocks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_RecordLocks {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PageHeader {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PageHeader {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PageFooter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PageFooter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_DateGrouping {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_DateGrouping {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_GrpKeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_GrpKeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MinButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MinButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MaxButton {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MaxButton {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Picture {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Picture {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureSizeMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureSizeMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PictureAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PictureAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PictureTiling {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PictureTiling {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_PicturePages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_PicturePages {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Toolbar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Toolbar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridX {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridX {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_GridY {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_GridY {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_LayoutForPrint {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_LayoutForPrint {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FastLaserPrinting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_FastLaserPrinting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_HelpFile {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_HelpFile {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HelpContextId {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_HelpContextId {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hwnd {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Hwnd {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Count {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Page {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Page {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_Pages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_Pages {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_LogicalPageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_LogicalPageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ZoomControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_ZoomControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HasData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_HasData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintSection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_PrintSection {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_NextRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_NextRecord {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MoveLayout {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_MoveLayout {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FormatCount {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FormatCount {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_PrintCount {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_PrintCount {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Painting {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Painting {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReportProperties.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtMip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReportProperties.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtMip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReportProperties.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReportProperties.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReportProperties.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PrtDevNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReportProperties.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PrtDevNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_ForeColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Single
function  TAccessReportProperties.Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CurrentX {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReportProperties.Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_CurrentX {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReportProperties.Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CurrentY {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReportProperties.Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_CurrentY {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReportProperties.Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReportProperties.Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReportProperties.Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleLeft {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReportProperties.Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleLeft {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_ScaleMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_ScaleMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Single
function  TAccessReportProperties.Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleTop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReportProperties.Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleTop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Single
function  TAccessReportProperties.Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TAccessReportProperties.Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}pRet: Single);
begin
  DefaultInterface.Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FontUnderline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FontUnderline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DrawMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DrawMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DrawStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DrawStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_DrawWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_DrawWidth {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_FillColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_FillColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Smallint
function  TAccessReportProperties.Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_FillStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
procedure TAccessReportProperties.Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_2:0}pRet: Smallint);
begin
  DefaultInterface.Set_FillStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_2:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set__Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PaletteSource {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_PaletteSource {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReportProperties.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PaintPalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReportProperties.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PaintPalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnMenu {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnMenu {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnClose {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnClose {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnActivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnActivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnDeactivate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnDeactivate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnNoData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnNoData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnPage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnPage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_OnError {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_OnError {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Dirty {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Dirty {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_CurrentRecord {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_CurrentRecord {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReportProperties.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PictureData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReportProperties.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PictureData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:OleVariant
function  TAccessReportProperties.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_PicturePalette {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TAccessReportProperties.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:0}pRet: OleVariant);
begin
  DefaultInterface.Set_PicturePalette {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:0}pRet);
end;

// StdProp:WordBool
function  TAccessReportProperties.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasModule {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessReportProperties.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_HasModule {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:Integer
function  TAccessReportProperties.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_acHiddenCurrentPage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TAccessReportProperties.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}pRet: Integer);
begin
  DefaultInterface.Set_acHiddenCurrentPage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}pRet);
end;

// StdProp:Byte
function  TAccessReportProperties.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Byte;
begin
  Result := DefaultInterface.Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Byte
procedure TAccessReportProperties.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_17:0}pRet: Byte);
begin
  DefaultInterface.Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_17:0}pRet);
end;

// StdProp:WideString
function  TAccessReportProperties.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_InputParameters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_InputParameters {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:
function  TAccessReportProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessReportProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReportProperties.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessControl;
begin
  Result := DefaultInterface.Get_ActiveControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReportProperties.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}ControlType: Integer): AccessControl;
begin
  Result := DefaultInterface.Get_DefaultControl {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_3:0}ControlType);
end;

// StdProp:
function  TAccessReportProperties.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}Index: OleVariant): AccessSection;
begin
  Result := DefaultInterface.Get_Section {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}Index);
end;

// StdProp:
function  TAccessReportProperties.Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_3:0}Index: Integer): AccessGroupLevel;
begin
  Result := DefaultInterface.Get_GroupLevel {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_3:0}Index);
end;

// StdProp:
function  TAccessReportProperties.Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReport;
begin
  Result := DefaultInterface.Get_Report {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReportProperties.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Module;
begin
  Result := DefaultInterface.Get_Module {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReportProperties.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Properties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessReportProperties.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Controls;
begin
  Result := DefaultInterface.Get_Controls {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessReportProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessReportProperties.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pbstrName: WideString);
begin
  DefaultInterface.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pbstrName);
end;

{$ENDIF}

class function CoAccessApplication.Create: _Application;
begin
  Result := CreateComObject(CLASS_AccessApplication) as _Application;
end;

class function CoAccessApplication.CreateRemote(const MachineName: string): _Application;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AccessApplication) as _Application;
end;

procedure TAccessApplication.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{73A4C9C1-D68D-11D0-98BF-00A0C90DC8D9}';
    IntfIID:   '{68CCE6C0-6129-101B-AF4E-00AA003F0F07}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAccessApplication.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _Application;
  end;
end;

procedure TAccessApplication.ConnectTo(svrIntf: _Application);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAccessApplication.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAccessApplication.GetDefaultInterface: _Application;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAccessApplication.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAccessApplicationProperties.Create(Self);
{$ENDIF}
end;

destructor TAccessApplication.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAccessApplication.GetServerProperties: TAccessApplicationProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAccessApplication.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessApplication.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessApplication.Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplication.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessApplication.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessApplication.Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplication.Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Forms;
begin
  Result := DefaultInterface.Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Reports;
begin
  Result := DefaultInterface.Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Screen;
begin
  Result := DefaultInterface.Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DoCmd;
begin
  Result := DefaultInterface.Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplication.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessApplication.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessApplication.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessApplication.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfVisible: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfVisible);
end;

// StdProp:WordBool
function  TAccessApplication.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessApplication.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfUserCtrl: WordBool);
begin
  DefaultInterface.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfUserCtrl);
end;

// StdProp:
function  TAccessApplication.Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DBEngine;
begin
  Result := DefaultInterface.Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
begin
  Result := DefaultInterface.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReferences;
begin
  Result := DefaultInterface.Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Modules;
begin
  Result := DefaultInterface.Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
begin
  Result := DefaultInterface.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TAccessApplication.Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
begin
  Result := DefaultInterface.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DataAccessPages;
begin
  Result := DefaultInterface.Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplication.Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentProject;
begin
  Result := DefaultInterface.Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentData;
begin
  Result := DefaultInterface.Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeProject;
begin
  Result := DefaultInterface.Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeData;
begin
  Result := DefaultInterface.Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WizHook;
begin
  Result := DefaultInterface.Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplication.Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
begin
  Result := DefaultInterface.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplication.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DefaultWebOptions;
begin
  Result := DefaultInterface.Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
begin
  Result := DefaultInterface.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplication.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
begin
  Result := DefaultInterface.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TAccessApplication.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
begin
  Result := DefaultInterface.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TAccessApplication.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}FeatureInstall: MsoFeatureInstall);
begin
  DefaultInterface.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}FeatureInstall);
end;

// StdProp:OleVariant
function  TAccessApplication.Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TAccessApplication.NewCurrentDatabase {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString);
begin
  DefaultInterface.NewCurrentDatabase {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}filepath);
end;

procedure TAccessApplication.OpenCurrentDatabase {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                                      {VT_11:0}Exclusive: WordBool);
begin
  DefaultInterface.OpenCurrentDatabase {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}filepath, 
                                                                            {VT_11:0}Exclusive);
end;

function  TAccessApplication.GetOption {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const OptionName: WideString): OleVariant;
begin
  Result := DefaultInterface.GetOption {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}OptionName);
end;

procedure TAccessApplication.SetOption {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const OptionName: WideString; 
                                                                            {VT_12:0}Setting: OleVariant);
begin
  DefaultInterface.SetOption {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}OptionName, 
                                                                  {VT_12:0}Setting);
end;

procedure TAccessApplication.Echo {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_2:0}EchoOn: Smallint; 
                                                                       {VT_8:0}const bstrStatusBarText: WideString);
begin
  DefaultInterface.Echo {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_2:0}EchoOn, 
                                                             {VT_8:0}bstrStatusBarText);
end;

procedure TAccessApplication.CloseCurrentDatabase {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CloseCurrentDatabase {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessApplication.Quit {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Option: AcQuitOption);
begin
  DefaultInterface.Quit {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_29:0}Option);
end;

function  TAccessApplication.SysCmd {Flags(1), (4/1) CC:0, INV:1, DBG:3}({VT_29:0}Action: AcSysCmdAction): OleVariant;
begin
  Result := DefaultInterface.SysCmd {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_29:0}Action, 
                                                                         EmptyParam, EmptyParam);
end;

function  TAccessApplication.SysCmd {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_29:0}Action: AcSysCmdAction; 
                                                                         {VT_12:0}Argument2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.SysCmd {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_29:0}Action, 
                                                                         {VT_12:0}Argument2, 
                                                                         EmptyParam);
end;

function  TAccessApplication.SysCmd {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_29:0}Action: AcSysCmdAction; 
                                                                         {VT_12:0}Argument2: OleVariant; 
                                                                         {VT_12:0}Argument3: OleVariant): OleVariant;
begin
  Result := DefaultInterface.SysCmd {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_29:0}Action, 
                                                                         {VT_12:0}Argument2, 
                                                                         {VT_12:0}Argument3);
end;

function  TAccessApplication.CreateForm {Flags(1), (3/0) CC:0, INV:1, DBG:3}: AccessForm;
begin
  Result := DefaultInterface.CreateForm {Flags(1), (3/2) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam);
end;

function  TAccessApplication.CreateForm {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant): AccessForm;
begin
  Result := DefaultInterface.CreateForm {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Database, 
                                                                             EmptyParam);
end;

function  TAccessApplication.CreateForm {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant; 
                                                                             {VT_12:0}FormTemplate: OleVariant): AccessForm;
begin
  Result := DefaultInterface.CreateForm {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Database, 
                                                                             {VT_12:0}FormTemplate);
end;

function  TAccessApplication.CreateReport {Flags(1), (3/0) CC:0, INV:1, DBG:3}: AccessReport;
begin
  Result := DefaultInterface.CreateReport {Flags(1), (3/2) CC:0, INV:1, DBG:7}(EmptyParam, 
                                                                               EmptyParam);
end;

function  TAccessApplication.CreateReport {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant): AccessReport;
begin
  Result := DefaultInterface.CreateReport {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Database, 
                                                                               EmptyParam);
end;

function  TAccessApplication.CreateReport {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Database: OleVariant; 
                                                                               {VT_12:0}ReportTemplate: OleVariant): AccessReport;
begin
  Result := DefaultInterface.CreateReport {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Database, 
                                                                               {VT_12:0}ReportTemplate);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/3) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/4) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection; 
                                                                                 {VT_12:0}Parent: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 {VT_12:0}Parent, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/5) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection; 
                                                                                 {VT_12:0}Parent: OleVariant; 
                                                                                 {VT_12:0}ColumnName: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 {VT_12:0}Parent, 
                                                                                 {VT_12:0}ColumnName, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/6) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection; 
                                                                                 {VT_12:0}Parent: OleVariant; 
                                                                                 {VT_12:0}ColumnName: OleVariant; 
                                                                                 {VT_12:0}Left: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 {VT_12:0}Parent, 
                                                                                 {VT_12:0}ColumnName, 
                                                                                 {VT_12:0}Left, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/7) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection; 
                                                                                 {VT_12:0}Parent: OleVariant; 
                                                                                 {VT_12:0}ColumnName: OleVariant; 
                                                                                 {VT_12:0}Left: OleVariant; 
                                                                                 {VT_12:0}Top: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 {VT_12:0}Parent, 
                                                                                 {VT_12:0}ColumnName, 
                                                                                 {VT_12:0}Left, 
                                                                                 {VT_12:0}Top, 
                                                                                 EmptyParam, 
                                                                                 EmptyParam);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/8) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection; 
                                                                                 {VT_12:0}Parent: OleVariant; 
                                                                                 {VT_12:0}ColumnName: OleVariant; 
                                                                                 {VT_12:0}Left: OleVariant; 
                                                                                 {VT_12:0}Top: OleVariant; 
                                                                                 {VT_12:0}Width: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 {VT_12:0}Parent, 
                                                                                 {VT_12:0}ColumnName, 
                                                                                 {VT_12:0}Left, 
                                                                                 {VT_12:0}Top, 
                                                                                 {VT_12:0}Width, 
                                                                                 EmptyParam);
end;

function  TAccessApplication.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                 {VT_29:0}ControlType: AcControlType; 
                                                                                 {VT_29:0}Section: AcSection; 
                                                                                 {VT_12:0}Parent: OleVariant; 
                                                                                 {VT_12:0}ColumnName: OleVariant; 
                                                                                 {VT_12:0}Left: OleVariant; 
                                                                                 {VT_12:0}Top: OleVariant; 
                                                                                 {VT_12:0}Width: OleVariant; 
                                                                                 {VT_12:0}Height: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                 {VT_29:0}ControlType, 
                                                                                 {VT_29:0}Section, 
                                                                                 {VT_12:0}Parent, 
                                                                                 {VT_12:0}ColumnName, 
                                                                                 {VT_12:0}Left, 
                                                                                 {VT_12:0}Top, 
                                                                                 {VT_12:0}Width, 
                                                                                 {VT_12:0}Height);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/3) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/4) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection; 
                                                                                       {VT_12:0}Parent: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       {VT_12:0}Parent, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/5) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection; 
                                                                                       {VT_12:0}Parent: OleVariant; 
                                                                                       {VT_12:0}ColumnName: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       {VT_12:0}Parent, 
                                                                                       {VT_12:0}ColumnName, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/6) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection; 
                                                                                       {VT_12:0}Parent: OleVariant; 
                                                                                       {VT_12:0}ColumnName: OleVariant; 
                                                                                       {VT_12:0}Left: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       {VT_12:0}Parent, 
                                                                                       {VT_12:0}ColumnName, 
                                                                                       {VT_12:0}Left, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/7) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection; 
                                                                                       {VT_12:0}Parent: OleVariant; 
                                                                                       {VT_12:0}ColumnName: OleVariant; 
                                                                                       {VT_12:0}Left: OleVariant; 
                                                                                       {VT_12:0}Top: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       {VT_12:0}Parent, 
                                                                                       {VT_12:0}ColumnName, 
                                                                                       {VT_12:0}Left, 
                                                                                       {VT_12:0}Top, 
                                                                                       EmptyParam, 
                                                                                       EmptyParam);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/8) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection; 
                                                                                       {VT_12:0}Parent: OleVariant; 
                                                                                       {VT_12:0}ColumnName: OleVariant; 
                                                                                       {VT_12:0}Left: OleVariant; 
                                                                                       {VT_12:0}Top: OleVariant; 
                                                                                       {VT_12:0}Width: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       {VT_12:0}Parent, 
                                                                                       {VT_12:0}ColumnName, 
                                                                                       {VT_12:0}Left, 
                                                                                       {VT_12:0}Top, 
                                                                                       {VT_12:0}Width, 
                                                                                       EmptyParam);
end;

function  TAccessApplication.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                       {VT_29:0}ControlType: AcControlType; 
                                                                                       {VT_29:0}Section: AcSection; 
                                                                                       {VT_12:0}Parent: OleVariant; 
                                                                                       {VT_12:0}ColumnName: OleVariant; 
                                                                                       {VT_12:0}Left: OleVariant; 
                                                                                       {VT_12:0}Top: OleVariant; 
                                                                                       {VT_12:0}Width: OleVariant; 
                                                                                       {VT_12:0}Height: OleVariant): AccessControl;
begin
  Result := DefaultInterface.CreateReportControl {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                       {VT_29:0}ControlType, 
                                                                                       {VT_29:0}Section, 
                                                                                       {VT_12:0}Parent, 
                                                                                       {VT_12:0}ColumnName, 
                                                                                       {VT_12:0}Left, 
                                                                                       {VT_12:0}Top, 
                                                                                       {VT_12:0}Width, 
                                                                                       {VT_12:0}Height);
end;

function  TAccessApplication.CreateControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                   {VT_29:0}ControlType: AcControlType; 
                                                                                   {VT_29:0}Section: AcSection; 
                                                                                   {VT_8:0}const Parent: WideString; 
                                                                                   {VT_8:0}const ControlSource: WideString; 
                                                                                   {VT_3:0}Left: Integer; 
                                                                                   {VT_3:0}Top: Integer; 
                                                                                   {VT_3:0}Width: Integer; 
                                                                                   {VT_3:0}Height: Integer): AccessControl;
begin
  Result := DefaultInterface.CreateControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                                   {VT_29:0}ControlType, 
                                                                                   {VT_29:0}Section, 
                                                                                   {VT_8:0}Parent, 
                                                                                   {VT_8:0}ControlSource, 
                                                                                   {VT_3:0}Left, 
                                                                                   {VT_3:0}Top, 
                                                                                   {VT_3:0}Width, 
                                                                                   {VT_3:0}Height);
end;

function  TAccessApplication.CreateReportControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                         {VT_29:0}ControlType: AcControlType; 
                                                                                         {VT_29:0}Section: AcSection; 
                                                                                         {VT_8:0}const Parent: WideString; 
                                                                                         {VT_8:0}const ControlName: WideString; 
                                                                                         {VT_3:0}Left: Integer; 
                                                                                         {VT_3:0}Top: Integer; 
                                                                                         {VT_3:0}Width: Integer; 
                                                                                         {VT_3:0}Height: Integer): AccessControl;
begin
  Result := DefaultInterface.CreateReportControlEx {Flags(1), (10/9) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                         {VT_29:0}ControlType, 
                                                                                         {VT_29:0}Section, 
                                                                                         {VT_8:0}Parent, 
                                                                                         {VT_8:0}ControlName, 
                                                                                         {VT_3:0}Left, 
                                                                                         {VT_3:0}Top, 
                                                                                         {VT_3:0}Width, 
                                                                                         {VT_3:0}Height);
end;

procedure TAccessApplication.DeleteControl {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const FormName: WideString; 
                                                                                {VT_8:0}const ControlName: WideString);
begin
  DefaultInterface.DeleteControl {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}FormName, 
                                                                      {VT_8:0}ControlName);
end;

procedure TAccessApplication.DeleteReportControl {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                      {VT_8:0}const ControlName: WideString);
begin
  DefaultInterface.DeleteReportControl {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                            {VT_8:0}ControlName);
end;

function  TAccessApplication.CreateGroupLevel {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_8:0}const ReportName: WideString; 
                                                                                   {VT_8:0}const Expression: WideString; 
                                                                                   {VT_2:0}Header: Smallint; 
                                                                                   {VT_2:0}Footer: Smallint): Integer;
begin
  Result := DefaultInterface.CreateGroupLevel {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_8:0}ReportName, 
                                                                                   {VT_8:0}Expression, 
                                                                                   {VT_2:0}Header, 
                                                                                   {VT_2:0}Footer);
end;

function  TAccessApplication.DMin {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DMin {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DMin {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString; 
                                                                       {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DMin {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, 
                                                                       {VT_12:0}Criteria);
end;

function  TAccessApplication.DMax {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DMax {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DMax {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString; 
                                                                       {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DMax {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, 
                                                                       {VT_12:0}Criteria);
end;

function  TAccessApplication.DSum {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DSum {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DSum {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString; 
                                                                       {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DSum {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, 
                                                                       {VT_12:0}Criteria);
end;

function  TAccessApplication.DAvg {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DAvg {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DAvg {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString; 
                                                                       {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DAvg {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, 
                                                                       {VT_12:0}Criteria);
end;

function  TAccessApplication.DLookup {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                          {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DLookup {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                          {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DLookup {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                          {VT_8:0}const Domain: WideString; 
                                                                          {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DLookup {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                          {VT_8:0}Domain, 
                                                                          {VT_12:0}Criteria);
end;

function  TAccessApplication.DLast {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                        {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DLast {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                        {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DLast {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                        {VT_8:0}const Domain: WideString; 
                                                                        {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DLast {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                        {VT_8:0}Domain, 
                                                                        {VT_12:0}Criteria);
end;

function  TAccessApplication.DVar {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DVar {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DVar {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                       {VT_8:0}const Domain: WideString; 
                                                                       {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DVar {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                       {VT_8:0}Domain, 
                                                                       {VT_12:0}Criteria);
end;

function  TAccessApplication.DVarP {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                        {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DVarP {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                        {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DVarP {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                        {VT_8:0}const Domain: WideString; 
                                                                        {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DVarP {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                        {VT_8:0}Domain, 
                                                                        {VT_12:0}Criteria);
end;

function  TAccessApplication.DStDev {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                         {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DStDev {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                         {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DStDev {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                         {VT_8:0}const Domain: WideString; 
                                                                         {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DStDev {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                         {VT_8:0}Domain, 
                                                                         {VT_12:0}Criteria);
end;

function  TAccessApplication.DStDevP {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                          {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DStDevP {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                          {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DStDevP {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                          {VT_8:0}const Domain: WideString; 
                                                                          {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DStDevP {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                          {VT_8:0}Domain, 
                                                                          {VT_12:0}Criteria);
end;

function  TAccessApplication.DFirst {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                         {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DFirst {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                         {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DFirst {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                         {VT_8:0}const Domain: WideString; 
                                                                         {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DFirst {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                         {VT_8:0}Domain, 
                                                                         {VT_12:0}Criteria);
end;

function  TAccessApplication.DCount {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                         {VT_8:0}const Domain: WideString): OleVariant;
begin
  Result := DefaultInterface.DCount {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                         {VT_8:0}Domain, EmptyParam);
end;

function  TAccessApplication.DCount {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Expr: WideString; 
                                                                         {VT_8:0}const Domain: WideString; 
                                                                         {VT_12:0}Criteria: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DCount {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Expr, 
                                                                         {VT_8:0}Domain, 
                                                                         {VT_12:0}Criteria);
end;

function  TAccessApplication.Eval {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const StringExpr: WideString): OleVariant;
begin
  Result := DefaultInterface.Eval {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}StringExpr);
end;

function  TAccessApplication.CurrentUser {Flags(1), (1/0) CC:0, INV:1, DBG:3}: WideString;
begin
  Result := DefaultInterface.CurrentUser {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TAccessApplication.DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const Application: WideString; 
                                                                              {VT_8:0}const Topic: WideString): OleVariant;
begin
  Result := DefaultInterface.DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_8:0}Application, 
                                                                              {VT_8:0}Topic);
end;

procedure TAccessApplication.DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant; 
                                                                             {VT_8:0}const Command: WideString);
begin
  DefaultInterface.DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_12:0}ChanNum, {VT_8:0}Command);
end;

procedure TAccessApplication.DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant; 
                                                                          {VT_8:0}const Item: WideString; 
                                                                          {VT_8:0}const Data: WideString);
begin
  DefaultInterface.DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}ChanNum, {VT_8:0}Item, 
                                                                {VT_8:0}Data);
end;

function  TAccessApplication.DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant; 
                                                                             {VT_8:0}const Item: WideString): WideString;
begin
  Result := DefaultInterface.DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}ChanNum, 
                                                                             {VT_8:0}Item);
end;

procedure TAccessApplication.DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:0}ChanNum: OleVariant);
begin
  DefaultInterface.DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:0}ChanNum);
end;

procedure TAccessApplication.DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TAccessApplication.CurrentDb {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Database;
begin
  Result := DefaultInterface.CurrentDb {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TAccessApplication.CodeDb {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Database;
begin
  Result := DefaultInterface.CodeDb {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessApplication.BeginUndoable {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_3:0}Hwnd: Integer);
begin
  DefaultInterface.BeginUndoable {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_3:0}Hwnd);
end;

procedure TAccessApplication.SetUndoRecording {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}yesno: Smallint);
begin
  DefaultInterface.SetUndoRecording {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_2:0}yesno);
end;

function  TAccessApplication.BuildCriteria {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Field: WideString; 
                                                                                {VT_2:0}FieldType: Smallint; 
                                                                                {VT_8:0}const Expression: WideString): WideString;
begin
  Result := DefaultInterface.BuildCriteria {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Field, 
                                                                                {VT_2:0}FieldType, 
                                                                                {VT_8:0}Expression);
end;

procedure TAccessApplication.InsertText {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const Text: WideString; 
                                                                             {VT_8:0}const ModuleName: WideString);
begin
  DefaultInterface.InsertText {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}Text, {VT_8:0}ModuleName);
end;

procedure TAccessApplication.ReloadAddIns {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ReloadAddIns {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TAccessApplication.DefaultWorkspaceClone {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Workspace;
begin
  Result := DefaultInterface.DefaultWorkspaceClone {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessApplication.RefreshTitleBar {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.RefreshTitleBar {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessApplication.AddAutoCorrect {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const ChangeFrom: WideString; 
                                                                                 {VT_8:0}const ChangeTo: WideString);
begin
  DefaultInterface.AddAutoCorrect {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}ChangeFrom, 
                                                                       {VT_8:0}ChangeTo);
end;

procedure TAccessApplication.DelAutoCorrect {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const ChangeFrom: WideString);
begin
  DefaultInterface.DelAutoCorrect {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}ChangeFrom);
end;

function  TAccessApplication.hWndAccessApp {Flags(1), (1/0) CC:0, INV:1, DBG:3}: SYSINT;
begin
  Result := DefaultInterface.hWndAccessApp {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TAccessApplication.Run {Flags(1), (32/1) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/2) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/3) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/4) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant; 
                                                                       {VT_12:1}var Arg3: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/5) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant; 
                                                                       {VT_12:1}var Arg3: OleVariant; 
                                                                       {VT_12:1}var Arg4: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/6) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant; 
                                                                       {VT_12:1}var Arg3: OleVariant; 
                                                                       {VT_12:1}var Arg4: OleVariant; 
                                                                       {VT_12:1}var Arg5: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/7) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant; 
                                                                       {VT_12:1}var Arg3: OleVariant; 
                                                                       {VT_12:1}var Arg4: OleVariant; 
                                                                       {VT_12:1}var Arg5: OleVariant; 
                                                                       {VT_12:1}var Arg6: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/8) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant; 
                                                                       {VT_12:1}var Arg3: OleVariant; 
                                                                       {VT_12:1}var Arg4: OleVariant; 
                                                                       {VT_12:1}var Arg5: OleVariant; 
                                                                       {VT_12:1}var Arg6: OleVariant; 
                                                                       {VT_12:1}var Arg7: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/9) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                       {VT_12:1}var Arg1: OleVariant; 
                                                                       {VT_12:1}var Arg2: OleVariant; 
                                                                       {VT_12:1}var Arg3: OleVariant; 
                                                                       {VT_12:1}var Arg4: OleVariant; 
                                                                       {VT_12:1}var Arg5: OleVariant; 
                                                                       {VT_12:1}var Arg6: OleVariant; 
                                                                       {VT_12:1}var Arg7: OleVariant; 
                                                                       {VT_12:1}var Arg8: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/10) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/11) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/12) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/13) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/14) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/15) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/16) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/17) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/18) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/19) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/20) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/21) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/22) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/23) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/24) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/25) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/26) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant; 
                                                                        {VT_12:1}var Arg25: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, 
                                                                        {VT_12:1}Arg25, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/27) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant; 
                                                                        {VT_12:1}var Arg25: OleVariant; 
                                                                        {VT_12:1}var Arg26: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, 
                                                                        {VT_12:1}Arg25, 
                                                                        {VT_12:1}Arg26, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/28) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant; 
                                                                        {VT_12:1}var Arg25: OleVariant; 
                                                                        {VT_12:1}var Arg26: OleVariant; 
                                                                        {VT_12:1}var Arg27: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, 
                                                                        {VT_12:1}Arg25, 
                                                                        {VT_12:1}Arg26, 
                                                                        {VT_12:1}Arg27, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/29) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant; 
                                                                        {VT_12:1}var Arg25: OleVariant; 
                                                                        {VT_12:1}var Arg26: OleVariant; 
                                                                        {VT_12:1}var Arg27: OleVariant; 
                                                                        {VT_12:1}var Arg28: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, 
                                                                        {VT_12:1}Arg25, 
                                                                        {VT_12:1}Arg26, 
                                                                        {VT_12:1}Arg27, 
                                                                        {VT_12:1}Arg28, EmptyParam, 
                                                                        EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/30) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant; 
                                                                        {VT_12:1}var Arg25: OleVariant; 
                                                                        {VT_12:1}var Arg26: OleVariant; 
                                                                        {VT_12:1}var Arg27: OleVariant; 
                                                                        {VT_12:1}var Arg28: OleVariant; 
                                                                        {VT_12:1}var Arg29: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, 
                                                                        {VT_12:1}Arg25, 
                                                                        {VT_12:1}Arg26, 
                                                                        {VT_12:1}Arg27, 
                                                                        {VT_12:1}Arg28, 
                                                                        {VT_12:1}Arg29, EmptyParam);
end;

function  TAccessApplication.Run {Flags(1), (32/31) CC:0, INV:1, DBG:3}({VT_8:0}const Procedure_: WideString; 
                                                                        {VT_12:1}var Arg1: OleVariant; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant; 
                                                                        {VT_12:1}var Arg5: OleVariant; 
                                                                        {VT_12:1}var Arg6: OleVariant; 
                                                                        {VT_12:1}var Arg7: OleVariant; 
                                                                        {VT_12:1}var Arg8: OleVariant; 
                                                                        {VT_12:1}var Arg9: OleVariant; 
                                                                        {VT_12:1}var Arg10: OleVariant; 
                                                                        {VT_12:1}var Arg11: OleVariant; 
                                                                        {VT_12:1}var Arg12: OleVariant; 
                                                                        {VT_12:1}var Arg13: OleVariant; 
                                                                        {VT_12:1}var Arg14: OleVariant; 
                                                                        {VT_12:1}var Arg15: OleVariant; 
                                                                        {VT_12:1}var Arg16: OleVariant; 
                                                                        {VT_12:1}var Arg17: OleVariant; 
                                                                        {VT_12:1}var Arg18: OleVariant; 
                                                                        {VT_12:1}var Arg19: OleVariant; 
                                                                        {VT_12:1}var Arg20: OleVariant; 
                                                                        {VT_12:1}var Arg21: OleVariant; 
                                                                        {VT_12:1}var Arg22: OleVariant; 
                                                                        {VT_12:1}var Arg23: OleVariant; 
                                                                        {VT_12:1}var Arg24: OleVariant; 
                                                                        {VT_12:1}var Arg25: OleVariant; 
                                                                        {VT_12:1}var Arg26: OleVariant; 
                                                                        {VT_12:1}var Arg27: OleVariant; 
                                                                        {VT_12:1}var Arg28: OleVariant; 
                                                                        {VT_12:1}var Arg29: OleVariant; 
                                                                        {VT_12:1}var Arg30: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}Procedure_, 
                                                                        {VT_12:1}Arg1, 
                                                                        {VT_12:1}Arg2, 
                                                                        {VT_12:1}Arg3, 
                                                                        {VT_12:1}Arg4, 
                                                                        {VT_12:1}Arg5, 
                                                                        {VT_12:1}Arg6, 
                                                                        {VT_12:1}Arg7, 
                                                                        {VT_12:1}Arg8, 
                                                                        {VT_12:1}Arg9, 
                                                                        {VT_12:1}Arg10, 
                                                                        {VT_12:1}Arg11, 
                                                                        {VT_12:1}Arg12, 
                                                                        {VT_12:1}Arg13, 
                                                                        {VT_12:1}Arg14, 
                                                                        {VT_12:1}Arg15, 
                                                                        {VT_12:1}Arg16, 
                                                                        {VT_12:1}Arg17, 
                                                                        {VT_12:1}Arg18, 
                                                                        {VT_12:1}Arg19, 
                                                                        {VT_12:1}Arg20, 
                                                                        {VT_12:1}Arg21, 
                                                                        {VT_12:1}Arg22, 
                                                                        {VT_12:1}Arg23, 
                                                                        {VT_12:1}Arg24, 
                                                                        {VT_12:1}Arg25, 
                                                                        {VT_12:1}Arg26, 
                                                                        {VT_12:1}Arg27, 
                                                                        {VT_12:1}Arg28, 
                                                                        {VT_12:1}Arg29, 
                                                                        {VT_12:1}Arg30);
end;

function  TAccessApplication.Nz {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}Value: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Nz {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Value, EmptyParam);
end;

function  TAccessApplication.Nz {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Value: OleVariant; 
                                                                     {VT_12:0}ValueIfNull: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Nz {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Value, 
                                                                     {VT_12:0}ValueIfNull);
end;

function  TAccessApplication.LoadPicture {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString): IDispatch;
begin
  Result := DefaultInterface.LoadPicture {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}FileName);
end;

procedure TAccessApplication.ReplaceModule {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_3:0}objtyp: Integer; 
                                                                                {VT_8:0}const ModuleName: WideString; 
                                                                                {VT_8:0}const FileName: WideString; 
                                                                                {VT_3:0}token: Integer);
begin
  DefaultInterface.ReplaceModule {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_3:0}objtyp, 
                                                                      {VT_8:0}ModuleName, 
                                                                      {VT_8:0}FileName, 
                                                                      {VT_3:0}token);
end;

function  TAccessApplication.AccessError {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}ErrorNumber: OleVariant): OleVariant;
begin
  Result := DefaultInterface.AccessError {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:0}ErrorNumber);
end;

function  TAccessApplication.BuilderString {Flags(1), (1/0) CC:0, INV:1, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.BuilderString {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TAccessApplication.StringFromGUID {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}Guid: OleVariant): OleVariant;
begin
  Result := DefaultInterface.StringFromGUID {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:0}Guid);
end;

function  TAccessApplication.GUIDFromString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}String_: OleVariant): OleVariant;
begin
  Result := DefaultInterface.GUIDFromString {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:0}String_);
end;

function  TAccessApplication.AppLoadString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_3:0}id: Integer): OleVariant;
begin
  Result := DefaultInterface.AppLoadString {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_3:0}id);
end;

procedure TAccessApplication.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:3}({VT_8:0}const Address: WideString; 
                                                                                  {VT_8:0}const SubAddress: WideString; 
                                                                                  {VT_11:0}NewWindow: WordBool; 
                                                                                  {VT_11:0}AddHistory: WordBool; 
                                                                                  {VT_12:0}ExtraInfo: OleVariant; 
                                                                                  {VT_29:0}Method: MsoExtraInfoMethod; 
                                                                                  {VT_8:0}const HeaderInfo: WideString);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_8:0}Address, 
                                                                        {VT_8:0}SubAddress, 
                                                                        {VT_11:0}NewWindow, 
                                                                        {VT_11:0}AddHistory, 
                                                                        {VT_12:0}ExtraInfo, 
                                                                        {VT_29:0}Method, 
                                                                        {VT_8:0}HeaderInfo);
end;

procedure TAccessApplication.SaveAsText {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                             {VT_8:0}const ObjectName: WideString; 
                                                                             {VT_8:0}const FileName: WideString);
begin
  DefaultInterface.SaveAsText {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_29:0}ObjectType, 
                                                                   {VT_8:0}ObjectName, 
                                                                   {VT_8:0}FileName);
end;

procedure TAccessApplication.LoadFromText {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                               {VT_8:0}const ObjectName: WideString; 
                                                                               {VT_8:0}const FileName: WideString);
begin
  DefaultInterface.LoadFromText {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_29:0}ObjectType, 
                                                                     {VT_8:0}ObjectName, 
                                                                     {VT_8:0}FileName);
end;

procedure TAccessApplication.AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessApplication.RefreshDatabaseWindow {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.RefreshDatabaseWindow {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TAccessApplication.RunCommand {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Command: AcCommand);
begin
  DefaultInterface.RunCommand {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_29:0}Command);
end;

function  TAccessApplication.HyperlinkPart {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}Hyperlink: OleVariant; 
                                                                                {VT_29:0}Part: AcHyperlinkPart): WideString;
begin
  Result := DefaultInterface.HyperlinkPart {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}Hyperlink, 
                                                                                {VT_29:0}Part);
end;

function  TAccessApplication.GetHiddenAttribute {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                                     {VT_8:0}const ObjectName: WideString): WordBool;
begin
  Result := DefaultInterface.GetHiddenAttribute {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_29:0}ObjectType, 
                                                                                     {VT_8:0}ObjectName);
end;

procedure TAccessApplication.SetHiddenAttribute {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}ObjectType: AcObjectType; 
                                                                                     {VT_8:0}const ObjectName: WideString; 
                                                                                     {VT_11:0}fHidden: WordBool);
begin
  DefaultInterface.SetHiddenAttribute {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_29:0}ObjectType, 
                                                                           {VT_8:0}ObjectName, 
                                                                           {VT_11:0}fHidden);
end;

function  TAccessApplication.CreateDataAccessPage {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}FileName: OleVariant; 
                                                                                       {VT_11:0}CreateNewFile: WordBool): DataAccessPage;
begin
  Result := DefaultInterface.CreateDataAccessPage {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:0}FileName, 
                                                                                       {VT_11:0}CreateNewFile);
end;

procedure TAccessApplication.NewAccessProject {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString);
begin
  DefaultInterface.NewAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}filepath, 
                                                                         EmptyParam);
end;

procedure TAccessApplication.NewAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                                   {VT_12:0}Connect: OleVariant);
begin
  DefaultInterface.NewAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}filepath, 
                                                                         {VT_12:0}Connect);
end;

procedure TAccessApplication.OpenAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                                    {VT_11:0}Exclusive: WordBool);
begin
  DefaultInterface.OpenAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}filepath, 
                                                                          {VT_11:0}Exclusive);
end;

procedure TAccessApplication.CreateAccessProject {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString);
begin
  DefaultInterface.CreateAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}filepath, 
                                                                            EmptyParam);
end;

procedure TAccessApplication.CreateAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const filepath: WideString; 
                                                                                      {VT_12:0}Connect: OleVariant);
begin
  DefaultInterface.CreateAccessProject {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}filepath, 
                                                                            {VT_12:0}Connect);
end;

function  TAccessApplication.EuroConvert {Flags(1), (6/3) CC:0, INV:1, DBG:3}({VT_5:0}Number: Double; 
                                                                              {VT_8:0}const SourceCurrency: WideString; 
                                                                              {VT_8:0}const TargetCurrency: WideString): Double;
begin
  Result := DefaultInterface.EuroConvert {Flags(1), (6/5) CC:0, INV:1, DBG:7}({VT_5:0}Number, 
                                                                              {VT_8:0}SourceCurrency, 
                                                                              {VT_8:0}TargetCurrency, 
                                                                              EmptyParam, EmptyParam);
end;

function  TAccessApplication.EuroConvert {Flags(1), (6/4) CC:0, INV:1, DBG:3}({VT_5:0}Number: Double; 
                                                                              {VT_8:0}const SourceCurrency: WideString; 
                                                                              {VT_8:0}const TargetCurrency: WideString; 
                                                                              {VT_12:0}FullPrecision: OleVariant): Double;
begin
  Result := DefaultInterface.EuroConvert {Flags(1), (6/5) CC:0, INV:1, DBG:7}({VT_5:0}Number, 
                                                                              {VT_8:0}SourceCurrency, 
                                                                              {VT_8:0}TargetCurrency, 
                                                                              {VT_12:0}FullPrecision, 
                                                                              EmptyParam);
end;

function  TAccessApplication.EuroConvert {Flags(1), (6/5) CC:0, INV:1, DBG:3}({VT_5:0}Number: Double; 
                                                                              {VT_8:0}const SourceCurrency: WideString; 
                                                                              {VT_8:0}const TargetCurrency: WideString; 
                                                                              {VT_12:0}FullPrecision: OleVariant; 
                                                                              {VT_12:0}TriangulationPrecision: OleVariant): Double;
begin
  Result := DefaultInterface.EuroConvert {Flags(1), (6/5) CC:0, INV:1, DBG:7}({VT_5:0}Number, 
                                                                              {VT_8:0}SourceCurrency, 
                                                                              {VT_8:0}TargetCurrency, 
                                                                              {VT_12:0}FullPrecision, 
                                                                              {VT_12:0}TriangulationPrecision);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAccessApplicationProperties.Create(AServer: TAccessApplication);
begin
  inherited Create;
  FServer := AServer;
end;

function TAccessApplicationProperties.GetDefaultInterface: _Application;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAccessApplicationProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessApplicationProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessApplicationProperties.Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CodeContextObject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplicationProperties.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessApplicationProperties.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_MenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TAccessApplicationProperties.Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_CurrentObjectType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplicationProperties.Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_CurrentObjectName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Forms;
begin
  Result := DefaultInterface.Get_Forms {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Reports;
begin
  Result := DefaultInterface.Get_Reports {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Screen;
begin
  Result := DefaultInterface.Get_Screen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DoCmd;
begin
  Result := DefaultInterface.Get_DoCmd {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplicationProperties.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ShortcutMenuBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessApplicationProperties.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ShortcutMenuBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:WordBool
function  TAccessApplicationProperties.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessApplicationProperties.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfVisible: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfVisible);
end;

// StdProp:WordBool
function  TAccessApplicationProperties.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessApplicationProperties.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pfUserCtrl: WordBool);
begin
  DefaultInterface.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pfUserCtrl);
end;

// StdProp:
function  TAccessApplicationProperties.Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DBEngine;
begin
  Result := DefaultInterface.Get_DBEngine {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
begin
  Result := DefaultInterface.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessReferences;
begin
  Result := DefaultInterface.Get_References {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Modules;
begin
  Result := DefaultInterface.Get_Modules {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
begin
  Result := DefaultInterface.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TAccessApplicationProperties.Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsCompiled {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
begin
  Result := DefaultInterface.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DataAccessPages;
begin
  Result := DefaultInterface.Get_DataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplicationProperties.Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ADOConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentProject;
begin
  Result := DefaultInterface.Get_CurrentProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CurrentData;
begin
  Result := DefaultInterface.Get_CurrentData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeProject;
begin
  Result := DefaultInterface.Get_CodeProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CodeData;
begin
  Result := DefaultInterface.Get_CodeData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WizHook;
begin
  Result := DefaultInterface.Get_WizHook {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplicationProperties.Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ProductCode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
begin
  Result := DefaultInterface.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TAccessApplicationProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: DefaultWebOptions;
begin
  Result := DefaultInterface.Get_DefaultWebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
begin
  Result := DefaultInterface.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAccessApplicationProperties.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
begin
  Result := DefaultInterface.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TAccessApplicationProperties.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
begin
  Result := DefaultInterface.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TAccessApplicationProperties.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}FeatureInstall: MsoFeatureInstall);
begin
  DefaultInterface.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}FeatureInstall);
end;

// StdProp:OleVariant
function  TAccessApplicationProperties.Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_VGXFrameInterval {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAccessReferences.Create: _References;
begin
  Result := CreateComObject(CLASS_AccessReferences) as _References;
end;

class function CoAccessReferences.CreateRemote(const MachineName: string): _References;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AccessReferences) as _References;
end;

procedure TAccessReferences.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{EB106214-9C89-11CF-A2B3-00A0C90542FF}';
    IntfIID:   '{EB106213-9C89-11CF-A2B3-00A0C90542FF}';
    EventIID:  '{F163F201-ADA2-11CF-89A9-00A0C9054129}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAccessReferences.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _References;
  end;
end;

procedure TAccessReferences.ConnectTo(svrIntf: _References);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TAccessReferences.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    FIntf := nil;
  end;
end;

function TAccessReferences.GetDefaultInterface: _References;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAccessReferences.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAccessReferencesProperties.Create(Self);
{$ENDIF}
end;

destructor TAccessReferences.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAccessReferences.GetServerProperties: TAccessReferencesProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TAccessReferences.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   0: if Assigned(FOnItemAdded) then
            FOnItemAdded(Self, Params[0] {VT_29:1}{const Reference});
   1: if Assigned(FOnItemRemoved) then
            FOnItemRemoved(Self, Params[0] {VT_29:1}{const Reference});
  end; {case DispID}
end;

// StdProp:IDispatch
function  TAccessReferences.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TAccessReferences.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

function  TAccessReferences.Item {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:0}var_: OleVariant): Reference;
begin
  Result := DefaultInterface.Item {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:0}var_);
end;

function  TAccessReferences._NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:3}: IUnknown;
begin
  Result := DefaultInterface._NewEnum {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TAccessReferences.AddFromGuid {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_8:0}const Guid: WideString; 
                                                                             {VT_3:0}Major: Integer; 
                                                                             {VT_3:0}Minor: Integer): Reference;
begin
  Result := DefaultInterface.AddFromGuid {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_8:0}Guid, 
                                                                              {VT_3:0}Major, 
                                                                              {VT_3:0}Minor);
end;

function  TAccessReferences.AddFromFile {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString): Reference;
begin
  Result := DefaultInterface.AddFromFile {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}FileName);
end;

procedure TAccessReferences.Remove {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:1}const Reference: Reference);
begin
  DefaultInterface.Remove {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_29:1}Reference);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAccessReferencesProperties.Create(AServer: TAccessReferences);
begin
  inherited Create;
  FServer := AServer;
end;

function TAccessReferencesProperties.GetDefaultInterface: _References;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:IDispatch
function  TAccessReferencesProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TAccessReferencesProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoDataAccessPage.Create: _DataAccessPage;
begin
  Result := CreateComObject(CLASS_DataAccessPage) as _DataAccessPage;
end;

class function CoDataAccessPage.CreateRemote(const MachineName: string): _DataAccessPage;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DataAccessPage) as _DataAccessPage;
end;

procedure TDataAccessPage.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{493D8A73-1DB1-11D1-98A2-006008197D41}';
    IntfIID:   '{493D8A72-1DB1-11D1-98A2-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TDataAccessPage.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _DataAccessPage;
  end;
end;

procedure TDataAccessPage.ConnectTo(svrIntf: _DataAccessPage);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TDataAccessPage.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TDataAccessPage.GetDefaultInterface: _DataAccessPage;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TDataAccessPage.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TDataAccessPageProperties.Create(Self);
{$ENDIF}
end;

destructor TDataAccessPage.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TDataAccessPage.GetServerProperties: TDataAccessPageProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:WideString
function  TDataAccessPage.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TDataAccessPage.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TDataAccessPage.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDataAccessPage.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TDataAccessPage.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TDataAccessPage.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TDataAccessPage.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TDataAccessPage.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
function  TDataAccessPage.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TDataAccessPage.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TDataAccessPage.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TDataAccessPage.Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TDataAccessPage.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessWebOptions;
begin
  Result := DefaultInterface.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TDataAccessPage.Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TDataAccessPage.Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:IDispatch
function  TDataAccessPage.Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TDataAccessPage.ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const ThemeName: WideString);
begin
  DefaultInterface.ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}ThemeName);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TDataAccessPageProperties.Create(AServer: TDataAccessPage);
begin
  inherited Create;
  FServer := AServer;
end;

function TDataAccessPageProperties.GetDefaultInterface: _DataAccessPage;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:WideString
function  TDataAccessPageProperties.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TDataAccessPageProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TDataAccessPageProperties.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDataAccessPageProperties.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pRet: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pRet);
end;

// StdProp:WideString
function  TDataAccessPageProperties.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Tag {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TDataAccessPageProperties.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_Tag {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:Integer
function  TDataAccessPageProperties.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WindowWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TDataAccessPageProperties.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WindowHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Smallint
function  TDataAccessPageProperties.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Smallint;
begin
  Result := DefaultInterface.Get_CurrentView {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TDataAccessPageProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TDataAccessPageProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TDataAccessPageProperties.Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TDataAccessPageProperties.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessWebOptions;
begin
  Result := DefaultInterface.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TDataAccessPageProperties.Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TDataAccessPageProperties.Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pRet: WideString);
begin
  DefaultInterface.Set_ConnectionString {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pRet);
end;

// StdProp:IDispatch
function  TDataAccessPageProperties.Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_FieldListConnection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllForms.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllForms) as AllObjects;
end;

class function CoAllForms.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllForms) as AllObjects;
end;

procedure TAllForms.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C813-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllForms.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllForms.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllForms.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllForms.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllForms.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllFormsProperties.Create(Self);
{$ENDIF}
end;

destructor TAllForms.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllForms.GetServerProperties: TAllFormsProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllForms.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllForms.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllForms.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllForms.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllFormsProperties.Create(AServer: TAllForms);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllFormsProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllFormsProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllFormsProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllFormsProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllFormsProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllReports.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllReports) as AllObjects;
end;

class function CoAllReports.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllReports) as AllObjects;
end;

procedure TAllReports.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C814-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllReports.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllReports.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllReports.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllReports.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllReports.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllReportsProperties.Create(Self);
{$ENDIF}
end;

destructor TAllReports.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllReports.GetServerProperties: TAllReportsProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllReports.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllReports.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllReports.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllReports.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllReportsProperties.Create(AServer: TAllReports);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllReportsProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllReportsProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllReportsProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllReportsProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllReportsProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllMacros.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllMacros) as AllObjects;
end;

class function CoAllMacros.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllMacros) as AllObjects;
end;

procedure TAllMacros.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C815-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllMacros.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllMacros.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllMacros.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllMacros.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllMacros.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllMacrosProperties.Create(Self);
{$ENDIF}
end;

destructor TAllMacros.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllMacros.GetServerProperties: TAllMacrosProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllMacros.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllMacros.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllMacros.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllMacros.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllMacrosProperties.Create(AServer: TAllMacros);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllMacrosProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllMacrosProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllMacrosProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllMacrosProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllMacrosProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllModules.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllModules) as AllObjects;
end;

class function CoAllModules.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllModules) as AllObjects;
end;

procedure TAllModules.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C816-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllModules.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllModules.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllModules.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllModules.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllModules.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllModulesProperties.Create(Self);
{$ENDIF}
end;

destructor TAllModules.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllModules.GetServerProperties: TAllModulesProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllModules.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllModules.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllModules.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllModules.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllModulesProperties.Create(AServer: TAllModules);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllModulesProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllModulesProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllModulesProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllModulesProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllModulesProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllDataAccessPages.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllDataAccessPages) as AllObjects;
end;

class function CoAllDataAccessPages.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllDataAccessPages) as AllObjects;
end;

procedure TAllDataAccessPages.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C818-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllDataAccessPages.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllDataAccessPages.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllDataAccessPages.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllDataAccessPages.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllDataAccessPages.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllDataAccessPagesProperties.Create(Self);
{$ENDIF}
end;

destructor TAllDataAccessPages.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllDataAccessPages.GetServerProperties: TAllDataAccessPagesProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllDataAccessPages.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllDataAccessPages.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllDataAccessPages.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllDataAccessPages.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllDataAccessPagesProperties.Create(AServer: TAllDataAccessPages);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllDataAccessPagesProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllDataAccessPagesProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllDataAccessPagesProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllDataAccessPagesProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllDataAccessPagesProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllTables.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllTables) as AllObjects;
end;

class function CoAllTables.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllTables) as AllObjects;
end;

procedure TAllTables.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C81B-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllTables.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllTables.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllTables.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllTables.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllTables.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllTablesProperties.Create(Self);
{$ENDIF}
end;

destructor TAllTables.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllTables.GetServerProperties: TAllTablesProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllTables.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllTables.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllTables.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllTables.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllTablesProperties.Create(AServer: TAllTables);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllTablesProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllTablesProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllTablesProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllTablesProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllTablesProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllQueries.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllQueries) as AllObjects;
end;

class function CoAllQueries.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllQueries) as AllObjects;
end;

procedure TAllQueries.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C81C-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllQueries.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllQueries.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllQueries.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllQueries.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllQueries.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllQueriesProperties.Create(Self);
{$ENDIF}
end;

destructor TAllQueries.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllQueries.GetServerProperties: TAllQueriesProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllQueries.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllQueries.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllQueries.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllQueries.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllQueriesProperties.Create(AServer: TAllQueries);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllQueriesProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllQueriesProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllQueriesProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllQueriesProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllQueriesProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllViews.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllViews) as AllObjects;
end;

class function CoAllViews.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllViews) as AllObjects;
end;

procedure TAllViews.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C81E-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllViews.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllViews.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllViews.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllViews.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllViews.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllViewsProperties.Create(Self);
{$ENDIF}
end;

destructor TAllViews.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllViews.GetServerProperties: TAllViewsProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllViews.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllViews.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllViews.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllViews.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllViewsProperties.Create(AServer: TAllViews);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllViewsProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllViewsProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllViewsProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllViewsProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllViewsProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllStoredProcedures.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllStoredProcedures) as AllObjects;
end;

class function CoAllStoredProcedures.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllStoredProcedures) as AllObjects;
end;

procedure TAllStoredProcedures.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C820-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllStoredProcedures.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllStoredProcedures.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllStoredProcedures.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllStoredProcedures.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllStoredProcedures.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllStoredProceduresProperties.Create(Self);
{$ENDIF}
end;

destructor TAllStoredProcedures.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllStoredProcedures.GetServerProperties: TAllStoredProceduresProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllStoredProcedures.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllStoredProcedures.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllStoredProcedures.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllStoredProcedures.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllStoredProceduresProperties.Create(AServer: TAllStoredProcedures);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllStoredProceduresProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllStoredProceduresProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllStoredProceduresProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllStoredProceduresProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllStoredProceduresProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAllDatabaseDiagrams.Create: AllObjects;
begin
  Result := CreateComObject(CLASS_AllDatabaseDiagrams) as AllObjects;
end;

class function CoAllDatabaseDiagrams.CreateRemote(const MachineName: string): AllObjects;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AllDatabaseDiagrams) as AllObjects;
end;

procedure TAllDatabaseDiagrams.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C821-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{DDBD4001-44D5-11D1-98C0-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAllDatabaseDiagrams.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as AllObjects;
  end;
end;

procedure TAllDatabaseDiagrams.ConnectTo(svrIntf: AllObjects);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAllDatabaseDiagrams.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAllDatabaseDiagrams.GetDefaultInterface: AllObjects;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAllDatabaseDiagrams.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAllDatabaseDiagramsProperties.Create(Self);
{$ENDIF}
end;

destructor TAllDatabaseDiagrams.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAllDatabaseDiagrams.GetServerProperties: TAllDatabaseDiagramsProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAllDatabaseDiagrams.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllDatabaseDiagrams.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllDatabaseDiagrams.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllDatabaseDiagrams.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAllDatabaseDiagramsProperties.Create(AServer: TAllDatabaseDiagrams);
begin
  inherited Create;
  FServer := AServer;
end;

function TAllDatabaseDiagramsProperties.GetDefaultInterface: AllObjects;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAllDatabaseDiagramsProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAllDatabaseDiagramsProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TAllDatabaseDiagramsProperties.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:0}var_: OleVariant): AccessObject;
begin
  Result := DefaultInterface.Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:0}var_);
end;

// StdProp:Integer
function  TAllDatabaseDiagramsProperties.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoCurrentProject.Create: _CurrentProject;
begin
  Result := CreateComObject(CLASS_CurrentProject) as _CurrentProject;
end;

class function CoCurrentProject.CreateRemote(const MachineName: string): _CurrentProject;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CurrentProject) as _CurrentProject;
end;

procedure TCurrentProject.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C811-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{9212BA71-3E79-11D1-98BD-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TCurrentProject.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _CurrentProject;
  end;
end;

procedure TCurrentProject.ConnectTo(svrIntf: _CurrentProject);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TCurrentProject.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TCurrentProject.GetDefaultInterface: _CurrentProject;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TCurrentProject.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TCurrentProjectProperties.Create(Self);
{$ENDIF}
end;

destructor TCurrentProject.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TCurrentProject.GetServerProperties: TCurrentProjectProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TCurrentProject.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
begin
  Result := DefaultInterface.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
begin
  Result := DefaultInterface.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
begin
  Result := DefaultInterface.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
begin
  Result := DefaultInterface.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
begin
  Result := DefaultInterface.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TCurrentProject.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
begin
  Result := DefaultInterface.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProject.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TCurrentProject.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProject.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProject.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProject.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
begin
  Result := DefaultInterface.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProject.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TCurrentProject.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TCurrentProject.OpenConnection {Flags(1), (3/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                       EmptyParam);
end;

procedure TCurrentProject.OpenConnection {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant);
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}BaseConnectionString, 
                                                                       EmptyParam, EmptyParam);
end;

procedure TCurrentProject.OpenConnection {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                              {VT_12:0}UserID: OleVariant);
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}BaseConnectionString, 
                                                                       {VT_12:0}UserID, EmptyParam);
end;

procedure TCurrentProject.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                              {VT_12:0}UserID: OleVariant; 
                                                                              {VT_12:0}Password: OleVariant);
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}BaseConnectionString, 
                                                                       {VT_12:0}UserID, 
                                                                       {VT_12:0}Password);
end;

procedure TCurrentProject.CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TCurrentProjectProperties.Create(AServer: TCurrentProject);
begin
  inherited Create;
  FServer := AServer;
end;

function TCurrentProjectProperties.GetDefaultInterface: _CurrentProject;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TCurrentProjectProperties.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
begin
  Result := DefaultInterface.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
begin
  Result := DefaultInterface.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
begin
  Result := DefaultInterface.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
begin
  Result := DefaultInterface.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
begin
  Result := DefaultInterface.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TCurrentProjectProperties.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
begin
  Result := DefaultInterface.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProjectProperties.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TCurrentProjectProperties.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProjectProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProjectProperties.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCurrentProjectProperties.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
begin
  Result := DefaultInterface.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentProjectProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TCurrentProjectProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoCurrentData.Create: _CurrentData;
begin
  Result := CreateComObject(CLASS_CurrentData) as _CurrentData;
end;

class function CoCurrentData.CreateRemote(const MachineName: string): _CurrentData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CurrentData) as _CurrentData;
end;

procedure TCurrentData.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C819-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{9212BA73-3E79-11D1-98BD-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TCurrentData.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _CurrentData;
  end;
end;

procedure TCurrentData.ConnectTo(svrIntf: _CurrentData);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TCurrentData.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TCurrentData.GetDefaultInterface: _CurrentData;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TCurrentData.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TCurrentDataProperties.Create(Self);
{$ENDIF}
end;

destructor TCurrentData.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TCurrentData.GetServerProperties: TCurrentDataProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TCurrentData.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
begin
  Result := DefaultInterface.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentData.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
begin
  Result := DefaultInterface.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentData.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
begin
  Result := DefaultInterface.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentData.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
begin
  Result := DefaultInterface.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentData.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
begin
  Result := DefaultInterface.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TCurrentDataProperties.Create(AServer: TCurrentData);
begin
  inherited Create;
  FServer := AServer;
end;

function TCurrentDataProperties.GetDefaultInterface: _CurrentData;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TCurrentDataProperties.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
begin
  Result := DefaultInterface.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentDataProperties.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
begin
  Result := DefaultInterface.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentDataProperties.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
begin
  Result := DefaultInterface.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentDataProperties.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
begin
  Result := DefaultInterface.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCurrentDataProperties.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
begin
  Result := DefaultInterface.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoCodeProject.Create: _CurrentProject;
begin
  Result := CreateComObject(CLASS_CodeProject) as _CurrentProject;
end;

class function CoCodeProject.CreateRemote(const MachineName: string): _CurrentProject;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CodeProject) as _CurrentProject;
end;

procedure TCodeProject.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{9212BA72-3E79-11D1-98BD-006008197D41}';
    IntfIID:   '{9212BA71-3E79-11D1-98BD-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TCodeProject.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _CurrentProject;
  end;
end;

procedure TCodeProject.ConnectTo(svrIntf: _CurrentProject);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TCodeProject.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TCodeProject.GetDefaultInterface: _CurrentProject;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TCodeProject.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TCodeProjectProperties.Create(Self);
{$ENDIF}
end;

destructor TCodeProject.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TCodeProject.GetServerProperties: TCodeProjectProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TCodeProject.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
begin
  Result := DefaultInterface.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
begin
  Result := DefaultInterface.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
begin
  Result := DefaultInterface.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
begin
  Result := DefaultInterface.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
begin
  Result := DefaultInterface.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TCodeProject.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
begin
  Result := DefaultInterface.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProject.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TCodeProject.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProject.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProject.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProject.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
begin
  Result := DefaultInterface.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProject.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TCodeProject.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TCodeProject.OpenConnection {Flags(1), (3/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                       EmptyParam);
end;

procedure TCodeProject.OpenConnection {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant);
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}BaseConnectionString, 
                                                                       EmptyParam, EmptyParam);
end;

procedure TCodeProject.OpenConnection {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                           {VT_12:0}UserID: OleVariant);
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}BaseConnectionString, 
                                                                       {VT_12:0}UserID, EmptyParam);
end;

procedure TCodeProject.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:0}BaseConnectionString: OleVariant; 
                                                                           {VT_12:0}UserID: OleVariant; 
                                                                           {VT_12:0}Password: OleVariant);
begin
  DefaultInterface.OpenConnection {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:0}BaseConnectionString, 
                                                                       {VT_12:0}UserID, 
                                                                       {VT_12:0}Password);
end;

procedure TCodeProject.CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CloseConnection {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TCodeProjectProperties.Create(AServer: TCodeProject);
begin
  inherited Create;
  FServer := AServer;
end;

function TCodeProjectProperties.GetDefaultInterface: _CurrentProject;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TCodeProjectProperties.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllForms;
begin
  Result := DefaultInterface.Get_AllForms {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllReports;
begin
  Result := DefaultInterface.Get_AllReports {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllMacros;
begin
  Result := DefaultInterface.Get_AllMacros {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllModules;
begin
  Result := DefaultInterface.Get_AllModules {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDataAccessPages;
begin
  Result := DefaultInterface.Get_AllDataAccessPages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TCodeProjectProperties.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcProjectType;
begin
  Result := DefaultInterface.Get_ProjectType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProjectProperties.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BaseConnectionString {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TCodeProjectProperties.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsConnected {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProjectProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProjectProperties.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TCodeProjectProperties.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Connection;
begin
  Result := DefaultInterface.Get_Connection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessObjectProperties;
begin
  Result := DefaultInterface.Get_Properties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeProjectProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TCodeProjectProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoCodeData.Create: _CurrentData;
begin
  Result := CreateComObject(CLASS_CodeData) as _CurrentData;
end;

class function CoCodeData.CreateRemote(const MachineName: string): _CurrentData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CodeData) as _CurrentData;
end;

procedure TCodeData.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{08F6C81A-3CFD-11D1-98BC-006008197D41}';
    IntfIID:   '{9212BA73-3E79-11D1-98BD-006008197D41}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TCodeData.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _CurrentData;
  end;
end;

procedure TCodeData.ConnectTo(svrIntf: _CurrentData);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TCodeData.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TCodeData.GetDefaultInterface: _CurrentData;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TCodeData.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TCodeDataProperties.Create(Self);
{$ENDIF}
end;

destructor TCodeData.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TCodeData.GetServerProperties: TCodeDataProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TCodeData.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
begin
  Result := DefaultInterface.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeData.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
begin
  Result := DefaultInterface.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeData.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
begin
  Result := DefaultInterface.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeData.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
begin
  Result := DefaultInterface.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeData.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
begin
  Result := DefaultInterface.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TCodeDataProperties.Create(AServer: TCodeData);
begin
  inherited Create;
  FServer := AServer;
end;

function TCodeDataProperties.GetDefaultInterface: _CurrentData;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TCodeDataProperties.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllTables;
begin
  Result := DefaultInterface.Get_AllTables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeDataProperties.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllQueries;
begin
  Result := DefaultInterface.Get_AllQueries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeDataProperties.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllViews;
begin
  Result := DefaultInterface.Get_AllViews {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeDataProperties.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllStoredProcedures;
begin
  Result := DefaultInterface.Get_AllStoredProcedures {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TCodeDataProperties.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AllDatabaseDiagrams;
begin
  Result := DefaultInterface.Get_AllDatabaseDiagrams {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoWizHook.Create: _WizHook;
begin
  Result := CreateComObject(CLASS_WizHook) as _WizHook;
end;

class function CoWizHook.CreateRemote(const MachineName: string): _WizHook;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WizHook) as _WizHook;
end;

class function CoDefaultWebOptions.Create: _DefaultWebOptions;
begin
  Result := CreateComObject(CLASS_DefaultWebOptions) as _DefaultWebOptions;
end;

class function CoDefaultWebOptions.CreateRemote(const MachineName: string): _DefaultWebOptions;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DefaultWebOptions) as _DefaultWebOptions;
end;

procedure TDefaultWebOptions.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{416ED4F1-AB31-11D1-BF72-0060083E43CF}';
    IntfIID:   '{416ED4F0-AB31-11D1-BF72-0060083E43CF}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TDefaultWebOptions.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _DefaultWebOptions;
  end;
end;

procedure TDefaultWebOptions.ConnectTo(svrIntf: _DefaultWebOptions);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TDefaultWebOptions.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TDefaultWebOptions.GetDefaultInterface: _DefaultWebOptions;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TDefaultWebOptions.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TDefaultWebOptionsProperties.Create(Self);
{$ENDIF}
end;

destructor TDefaultWebOptions.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TDefaultWebOptions.GetServerProperties: TDefaultWebOptionsProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TDefaultWebOptions.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TDefaultWebOptions.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TDefaultWebOptions.Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
begin
  Result := DefaultInterface.Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TDefaultWebOptions.Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
begin
  DefaultInterface.Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}pl);
end;

// StdProp:TOleEnum
function  TDefaultWebOptions.Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
begin
  Result := DefaultInterface.Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TDefaultWebOptions.Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
begin
  DefaultInterface.Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}pl);
end;

// StdProp:WordBool
function  TDefaultWebOptions.Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptions.Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptions.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptions.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptions.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptions.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptions.Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptions.Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptions.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptions.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WideString
function  TDefaultWebOptions.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TDefaultWebOptions.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
begin
  DefaultInterface.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pstr);
end;

// StdProp:TOleEnum
function  TDefaultWebOptions.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TDefaultWebOptions.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
begin
  DefaultInterface.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}penc);
end;

// StdProp:WordBool
function  TDefaultWebOptions.Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptions.Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WideString
function  TDefaultWebOptions.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TDefaultWebOptionsProperties.Create(AServer: TDefaultWebOptions);
begin
  inherited Create;
  FServer := AServer;
end;

function TDefaultWebOptionsProperties.GetDefaultInterface: _DefaultWebOptions;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TDefaultWebOptionsProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TDefaultWebOptionsProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TDefaultWebOptionsProperties.Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
begin
  Result := DefaultInterface.Get_HyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TDefaultWebOptionsProperties.Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
begin
  DefaultInterface.Set_HyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}pl);
end;

// StdProp:TOleEnum
function  TDefaultWebOptionsProperties.Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AcColorIndex;
begin
  Result := DefaultInterface.Get_FollowedHyperlinkColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TDefaultWebOptionsProperties.Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}pl: AcColorIndex);
begin
  DefaultInterface.Set_FollowedHyperlinkColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}pl);
end;

// StdProp:WordBool
function  TDefaultWebOptionsProperties.Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UnderlineHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptionsProperties.Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_UnderlineHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptionsProperties.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptionsProperties.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptionsProperties.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptionsProperties.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptionsProperties.Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptionsProperties.Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TDefaultWebOptionsProperties.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptionsProperties.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WideString
function  TDefaultWebOptionsProperties.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TDefaultWebOptionsProperties.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
begin
  DefaultInterface.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pstr);
end;

// StdProp:TOleEnum
function  TDefaultWebOptionsProperties.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TDefaultWebOptionsProperties.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
begin
  DefaultInterface.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}penc);
end;

// StdProp:WordBool
function  TDefaultWebOptionsProperties.Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TDefaultWebOptionsProperties.Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WideString
function  TDefaultWebOptionsProperties.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoAccessWebOptions.Create: _WebOptions;
begin
  Result := CreateComObject(CLASS_AccessWebOptions) as _WebOptions;
end;

class function CoAccessWebOptions.CreateRemote(const MachineName: string): _WebOptions;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AccessWebOptions) as _WebOptions;
end;

procedure TAccessWebOptions.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{416ED4F7-AB31-11D1-BF72-0060083E43CF}';
    IntfIID:   '{416ED4F6-AB31-11D1-BF72-0060083E43CF}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TAccessWebOptions.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _WebOptions;
  end;
end;

procedure TAccessWebOptions.ConnectTo(svrIntf: _WebOptions);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TAccessWebOptions.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TAccessWebOptions.GetDefaultInterface: _WebOptions;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TAccessWebOptions.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TAccessWebOptionsProperties.Create(Self);
{$ENDIF}
end;

destructor TAccessWebOptions.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TAccessWebOptions.GetServerProperties: TAccessWebOptionsProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TAccessWebOptions.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessWebOptions.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TAccessWebOptions.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessWebOptions.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TAccessWebOptions.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessWebOptions.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TAccessWebOptions.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessWebOptions.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WideString
function  TAccessWebOptions.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessWebOptions.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
begin
  DefaultInterface.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pstr);
end;

// StdProp:TOleEnum
function  TAccessWebOptions.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TAccessWebOptions.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
begin
  DefaultInterface.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}penc);
end;

// StdProp:WideString
function  TAccessWebOptions.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TAccessWebOptions.UseDefaultFolderSuffix {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.UseDefaultFolderSuffix {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TAccessWebOptionsProperties.Create(AServer: TAccessWebOptions);
begin
  inherited Create;
  FServer := AServer;
end;

function TAccessWebOptionsProperties.GetDefaultInterface: _WebOptions;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TAccessWebOptionsProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AccessApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TAccessWebOptionsProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TAccessWebOptionsProperties.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessWebOptionsProperties.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TAccessWebOptionsProperties.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessWebOptionsProperties.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WordBool
function  TAccessWebOptionsProperties.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DownloadComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TAccessWebOptionsProperties.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}pf: WordBool);
begin
  DefaultInterface.Set_DownloadComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}pf);
end;

// StdProp:WideString
function  TAccessWebOptionsProperties.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_LocationOfComponents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TAccessWebOptionsProperties.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const pstr: WideString);
begin
  DefaultInterface.Set_LocationOfComponents {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}pstr);
end;

// StdProp:TOleEnum
function  TAccessWebOptionsProperties.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TAccessWebOptionsProperties.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}penc: MsoEncoding);
begin
  DefaultInterface.Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}penc);
end;

// StdProp:WideString
function  TAccessWebOptionsProperties.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoClass_.Create: _Dummy;
begin
  Result := CreateComObject(CLASS_Class_) as _Dummy;
end;

class function CoClass_.CreateRemote(const MachineName: string): _Dummy;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Class_) as _Dummy;
end;

procedure Register;
begin
  RegisterComponents('Servers',[TFormatCondition, TAccessHyperlink, TAccessForm, TAccessReport, 
    TAccessApplication, TAccessReferences, TDataAccessPage, TAllForms, TAllReports, 
    TAllMacros, TAllModules, TAllDataAccessPages, TAllTables, TAllQueries, 
    TAllViews, TAllStoredProcedures, TAllDatabaseDiagrams, TCurrentProject, TCurrentData, 
    TCodeProject, TCodeData, TDefaultWebOptions, TAccessWebOptions]);
end;

end.
