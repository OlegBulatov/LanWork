unit Word2000;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : $Revision:   1.0.1.0.1.0  $
// File generated on 11/22/99 5:43:57 AM from Type Library described below.

// *************************************************************************//
// NOTE:                                                                      
// Items guarded by $IFDEF_LIVE_SERVER_AT_DESIGN_TIME are used by properties  
// which return objects that may need to be explicitly created via a function 
// call prior to any access via the property. These items have been disabled  
// in order to prevent accidental use from within the object inspector. You   
// may enable them by defining LIVE_SERVER_AT_DESIGN_TIME or by selectively   
// removing them from the $IFDEF blocks. However, such items must still be    
// programmatically created via a method of the appropriate CoClass before    
// they can be used.                                                          
// ************************************************************************ //
// Type Lib: d:\rampage\typelib\typelibraries\msword9.olb (1)
// IID\LCID: {00020905-0000-0000-C000-000000000046}\0
// Helpfile: d:\rampage\typelib\typelibraries\VBAWRD9.CHM
// DepndLst: 
//   (1) v2.0 stdole, (D:\WINNT\System32\stdole2.tlb)
//   (2) v2.1 Office, (D:\MSOF2K\Office\MSO9.DLL)
//   (3) v5.3 VBIDE, (D:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
//   (4) v4.0 StdVCL, (D:\RAMPAGE\BIN\STDVCL40.DLL)
// Errors:
//   Hint: Symbol 'Global' renamed to 'WordGlobal'
//   Hint: Symbol 'Application' renamed to 'WordApplication'
//   Hint: Symbol 'Document' renamed to 'WordDocument'
//   Hint: Symbol 'Font' renamed to 'WordFont'
//   Hint: Symbol 'ParagraphFormat' renamed to 'WordParagraphFormat'
//   Hint: Symbol 'OLEControl' renamed to 'WordOLEControl'
//   Hint: Symbol 'LetterContent' renamed to 'WordLetterContent'
//   Hint: Enum Member 'emptyenum' of 'WdCharacterCaseHID' changed to 'emptyenum_'
//   Hint: Enum Member 'emptyenum' of 'WdParagraphAlignmentHID' changed to 'emptyenum__'
//   Hint: Enum Member 'emptyenum' of 'WdListNumberStyleHID' changed to 'emptyenum___'
//   Hint: Enum Member 'emptyenum' of 'WdNoteNumberStyleHID' changed to 'emptyenum____'
//   Hint: Enum Member 'emptyenum' of 'WdCaptionNumberStyleHID' changed to 'emptyenum_____'
//   Hint: Enum Member 'emptyenum' of 'WdPageNumberStyleHID' changed to 'emptyenum______'
//   Hint: Enum Member 'emptyenum' of 'WdStatisticHID' changed to 'emptyenum_______'
//   Hint: Enum Member 'emptyenum' of 'WdTabLeaderHID' changed to 'emptyenum________'
//   Hint: Enum Member 'emptyenum' of 'WdMeasurementUnitsHID' changed to 'emptyenum_________'
//   Hint: Enum Member 'emptyenum' of 'WdSortFieldTypeHID' changed to 'emptyenum__________'
//   Hint: Enum Member 'emptyenum' of 'WdWordDialogTabHID' changed to 'emptyenum___________'
//   Hint: Enum Member 'emptyenum' of 'WdWordDialogHID' changed to 'emptyenum____________'
//   Hint: Enum Member 'emptyenum' of 'WdHelpTypeHID' changed to 'emptyenum_____________'
//   Hint: Enum Member 'emptyenum' of 'WdDictionaryTypeHID' changed to 'emptyenum______________'
//   Hint: Enum Member 'emptyenum' of 'WdTextOrientationHID' changed to 'emptyenum_______________'
//   Hint: Symbol 'System' renamed to 'System_'
//   Hint: Parameter 'Object' of _Application.IsObjectValid changed to 'Object_'
//   Hint: Parameter 'To' of _Application.PrintOutOld changed to 'To_'
//   Hint: Member 'Repeat' of '_Application' changed to 'Repeat_'
//   Hint: Parameter 'Object' of _Application.OrganizerCopy changed to 'Object_'
//   Hint: Parameter 'Object' of _Application.OrganizerDelete changed to 'Object_'
//   Hint: Parameter 'Object' of _Application.OrganizerRename changed to 'Object_'
//   Hint: Parameter 'String' of _Application.CheckGrammar changed to 'String_'
//   Hint: Parameter 'String' of _Application.CleanString changed to 'String_'
//   Hint: Parameter 'To' of _Application.PrintOut changed to 'To_'
//   Hint: Symbol 'System' renamed to 'System_'
//   Hint: Parameter 'Object' of _Global.IsObjectValid changed to 'Object_'
//   Hint: Member 'Repeat' of '_Global' changed to 'Repeat_'
//   Hint: Parameter 'String' of _Global.CleanString changed to 'String_'
//   Hint: Member 'Type' of '_Document' changed to 'Type_'
//   Hint: Parameter 'Type' of _Document.Compatibility changed to 'Type_'
//   Hint: Parameter 'Type' of _Document.Compatibility changed to 'Type_'
//   Hint: Parameter 'To' of _Document.PrintOutOld changed to 'To_'
//   Hint: Parameter 'End' of _Document.Range changed to 'End_'
//   Hint: Member 'GoTo' of '_Document' changed to 'GoTo_'
//   Hint: Parameter 'Type' of _Document.Protect changed to 'Type_'
//   Hint: Parameter 'Type' of _Document.EditionOptions changed to 'Type_'
//   Hint: Parameter 'To' of _Document.PrintOut changed to 'To_'
//   Hint: Member 'Type' of 'Template' changed to 'Type_'
//   Hint: Member 'End' of 'Bookmark' changed to 'End_'
//   Hint: Member 'Type' of 'Window' changed to 'Type_'
//   Hint: Parameter 'To' of Window.PrintOutOld changed to 'To_'
//   Hint: Parameter 'To' of Window.PrintOut changed to 'To_'
//   Hint: Member 'End' of 'Range' changed to 'End_'
//   Hint: Member 'Case' of 'Range' changed to 'Case_'
//   Hint: Parameter 'Type' of Range.Information changed to 'Type_'
//   Hint: Parameter 'End' of Range.SetRange changed to 'End_'
//   Hint: Parameter 'Unit' of Range.Next changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.Previous changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.StartOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.EndOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.Move changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.MoveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.MoveEnd changed to 'Unit_'
//   Hint: Parameter 'Type' of Range.InsertBreak changed to 'Type_'
//   Hint: Parameter 'Unit' of Range.Delete changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.Expand changed to 'Unit_'
//   Hint: Parameter 'Label' of Range.InsertCaption changed to 'Label_'
//   Hint: Member 'GoTo' of 'Range' changed to 'GoTo_'
//   Hint: Parameter 'To' of Range.InsertDatabase changed to 'To_'
//   Hint: Parameter 'Raise' of Range.PhoneticGuide changed to 'Raise_'
//   Hint: Member 'Label' of 'OLEFormat' changed to 'Label_'
//   Hint: Member 'Object' of 'OLEFormat' changed to 'Object_'
//   Hint: Member 'Type' of 'LinkFormat' changed to 'Type_'
//   Hint: Parameter 'Type' of Fields.Add changed to 'Type_'
//   Hint: Member 'Type' of 'Field' changed to 'Type_'
//   Hint: Parameter 'Type' of Styles.Add changed to 'Type_'
//   Hint: Member 'Type' of 'Style' changed to 'Type_'
//   Hint: Parameter 'Type' of FormFields.Add changed to 'Type_'
//   Hint: Member 'Type' of 'FormField' changed to 'Type_'
//   Hint: Member 'Type' of 'TextInput' changed to 'Type_'
//   Hint: Parameter 'Type' of TextInput.EditType changed to 'Type_'
//   Hint: Parameter 'Type' of MailMerge.UseAddressBook changed to 'Type_'
//   Hint: Member 'Type' of 'MailMergeField' changed to 'Type_'
//   Hint: Member 'Type' of 'MailMergeDataSource' changed to 'Type_'
//   Hint: Member 'Type' of 'Dialog' changed to 'Type_'
//   Hint: Member 'End' of 'Selection' changed to 'End_'
//   Hint: Member 'Type' of 'Selection' changed to 'Type_'
//   Hint: Parameter 'Type' of Selection.Information changed to 'Type_'
//   Hint: Parameter 'End' of Selection.SetRange changed to 'End_'
//   Hint: Parameter 'Unit' of Selection.Next changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.Previous changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.StartOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.EndOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.Move changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveEnd changed to 'Unit_'
//   Hint: Parameter 'Type' of Selection.InsertBreak changed to 'Type_'
//   Hint: Parameter 'Unit' of Selection.Delete changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.Expand changed to 'Unit_'
//   Hint: Parameter 'Label' of Selection.InsertCaption changed to 'Label_'
//   Hint: Member 'GoTo' of 'Selection' changed to 'GoTo_'
//   Hint: Parameter 'Unit' of Selection.MoveLeft changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveRight changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveUp changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveDown changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.HomeKey changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.EndKey changed to 'Unit_'
//   Hint: Parameter 'Type' of Indexes.AddOld changed to 'Type_'
//   Hint: Parameter 'Type' of Indexes.Add changed to 'Type_'
//   Hint: Member 'Type' of 'Index' changed to 'Type_'
//   Hint: Member 'Type' of 'Revision' changed to 'Type_'
//   Hint: Member 'Protected' of 'KeyBinding' changed to 'Protected_'
//   Hint: Member 'Type' of 'Hyperlink' changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddCallout changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddConnector changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddShape changed to 'Type_'
//   Hint: Member 'Type' of 'ShapeRange' changed to 'Type_'
//   Hint: Member 'Type' of 'Shape' changed to 'Type_'
//   Hint: Member 'Type' of 'View' changed to 'Type_'
//   Hint: Member 'Type' of 'InlineShape' changed to 'Type_'
//   Hint: Member 'Type' of 'Dictionary' changed to 'Type_'
//   Hint: Member 'Type' of 'ProofreadingErrors' changed to 'Type_'
//   Hint: Member 'Type' of 'WrapFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'CalloutFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'ColorFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'ConnectorFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'FillFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'ShadowFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'Frameset' changed to 'Type_'
//   Hint: Symbol 'Global' renamed to 'WordGlobal'
//   Hint: Symbol 'Application' renamed to 'WordApplication'
//   Hint: Symbol 'Document' renamed to 'WordDocument'
//   Hint: Symbol 'Font' renamed to 'WordFont'
//   Hint: Symbol 'ParagraphFormat' renamed to 'WordParagraphFormat'
//   Hint: Symbol 'OLEControl' renamed to 'WordOLEControl'
//   Hint: Symbol 'LetterContent' renamed to 'WordLetterContent'
//   Hint: Enum Member 'emptyenum' of 'WdCharacterCaseHID' changed to 'emptyenum_'
//   Hint: Enum Member 'emptyenum' of 'WdParagraphAlignmentHID' changed to 'emptyenum__'
//   Hint: Enum Member 'emptyenum' of 'WdListNumberStyleHID' changed to 'emptyenum___'
//   Hint: Enum Member 'emptyenum' of 'WdNoteNumberStyleHID' changed to 'emptyenum____'
//   Hint: Enum Member 'emptyenum' of 'WdCaptionNumberStyleHID' changed to 'emptyenum_____'
//   Hint: Enum Member 'emptyenum' of 'WdPageNumberStyleHID' changed to 'emptyenum______'
//   Hint: Enum Member 'emptyenum' of 'WdStatisticHID' changed to 'emptyenum_______'
//   Hint: Enum Member 'emptyenum' of 'WdTabLeaderHID' changed to 'emptyenum________'
//   Hint: Enum Member 'emptyenum' of 'WdMeasurementUnitsHID' changed to 'emptyenum_________'
//   Hint: Enum Member 'emptyenum' of 'WdSortFieldTypeHID' changed to 'emptyenum__________'
//   Hint: Enum Member 'emptyenum' of 'WdWordDialogTabHID' changed to 'emptyenum___________'
//   Hint: Enum Member 'emptyenum' of 'WdWordDialogHID' changed to 'emptyenum____________'
//   Hint: Enum Member 'emptyenum' of 'WdHelpTypeHID' changed to 'emptyenum_____________'
//   Hint: Enum Member 'emptyenum' of 'WdDictionaryTypeHID' changed to 'emptyenum______________'
//   Hint: Enum Member 'emptyenum' of 'WdTextOrientationHID' changed to 'emptyenum_______________'
//   Hint: Symbol 'System' renamed to 'System_'
//   Hint: Member 'Repeat' of '_Application' changed to 'Repeat_'
//   Hint: Symbol 'System' renamed to 'System_'
//   Hint: Member 'Repeat' of '_Global' changed to 'Repeat_'
//   Hint: Member 'Type' of '_Document' changed to 'Type_'
//   Hint: Member 'GoTo' of '_Document' changed to 'GoTo_'
//   Hint: Member 'Type' of 'Template' changed to 'Type_'
//   Hint: Member 'End' of 'Bookmark' changed to 'End_'
//   Hint: Member 'Type' of 'Window' changed to 'Type_'
//   Hint: Member 'End' of 'Range' changed to 'End_'
//   Hint: Member 'Case' of 'Range' changed to 'Case_'
//   Hint: Member 'GoTo' of 'Range' changed to 'GoTo_'
//   Hint: Member 'Label' of 'OLEFormat' changed to 'Label_'
//   Hint: Member 'Object' of 'OLEFormat' changed to 'Object_'
//   Hint: Member 'Type' of 'LinkFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'Field' changed to 'Type_'
//   Hint: Member 'Type' of 'Style' changed to 'Type_'
//   Hint: Member 'Type' of 'FormField' changed to 'Type_'
//   Hint: Member 'Type' of 'TextInput' changed to 'Type_'
//   Hint: Member 'Type' of 'MailMergeField' changed to 'Type_'
//   Hint: Member 'Type' of 'MailMergeDataSource' changed to 'Type_'
//   Hint: Member 'Type' of 'Dialog' changed to 'Type_'
//   Hint: Member 'End' of 'Selection' changed to 'End_'
//   Hint: Member 'Type' of 'Selection' changed to 'Type_'
//   Hint: Member 'GoTo' of 'Selection' changed to 'GoTo_'
//   Hint: Member 'Type' of 'Index' changed to 'Type_'
//   Hint: Member 'Type' of 'Revision' changed to 'Type_'
//   Hint: Member 'Protected' of 'KeyBinding' changed to 'Protected_'
//   Hint: Member 'Type' of 'Hyperlink' changed to 'Type_'
//   Hint: Member 'Type' of 'ShapeRange' changed to 'Type_'
//   Hint: Member 'Type' of 'Shape' changed to 'Type_'
//   Hint: Member 'Type' of 'View' changed to 'Type_'
//   Hint: Member 'Type' of 'InlineShape' changed to 'Type_'
//   Hint: Member 'Type' of 'Dictionary' changed to 'Type_'
//   Hint: Member 'Type' of 'ProofreadingErrors' changed to 'Type_'
//   Hint: Member 'Type' of 'WrapFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'CalloutFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'ColorFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'ConnectorFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'FillFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'ShadowFormat' changed to 'Type_'
//   Hint: Member 'Type' of 'Frameset' changed to 'Type_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
interface

uses Windows, ActiveX, Classes, Graphics, OleServer, OleCtrls, StdVCL, 
  Office2000, VBIDE2000;

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  WordMajorVersion = 8;
  WordMinorVersion = 1;

  LIBID_Word: TGUID = '{00020905-0000-0000-C000-000000000046}';

  IID__Application: TGUID = '{00020970-0000-0000-C000-000000000046}';
  IID__Global: TGUID = '{000209B9-0000-0000-C000-000000000046}';
  IID_FontNames: TGUID = '{0002096F-0000-0000-C000-000000000046}';
  IID_Languages: TGUID = '{0002096E-0000-0000-C000-000000000046}';
  IID_Language: TGUID = '{0002096D-0000-0000-C000-000000000046}';
  IID_Documents: TGUID = '{0002096C-0000-0000-C000-000000000046}';
  IID__Document: TGUID = '{0002096B-0000-0000-C000-000000000046}';
  IID_Template: TGUID = '{0002096A-0000-0000-C000-000000000046}';
  IID_Templates: TGUID = '{000209A2-0000-0000-C000-000000000046}';
  IID_RoutingSlip: TGUID = '{00020969-0000-0000-C000-000000000046}';
  IID_Bookmark: TGUID = '{00020968-0000-0000-C000-000000000046}';
  IID_Bookmarks: TGUID = '{00020967-0000-0000-C000-000000000046}';
  IID_Variable: TGUID = '{00020966-0000-0000-C000-000000000046}';
  IID_Variables: TGUID = '{00020965-0000-0000-C000-000000000046}';
  IID_RecentFile: TGUID = '{00020964-0000-0000-C000-000000000046}';
  IID_RecentFiles: TGUID = '{00020963-0000-0000-C000-000000000046}';
  IID_Window: TGUID = '{00020962-0000-0000-C000-000000000046}';
  IID_Windows: TGUID = '{00020961-0000-0000-C000-000000000046}';
  IID_Pane: TGUID = '{00020960-0000-0000-C000-000000000046}';
  IID_Panes: TGUID = '{0002095F-0000-0000-C000-000000000046}';
  IID_Range: TGUID = '{0002095E-0000-0000-C000-000000000046}';
  IID_ListFormat: TGUID = '{000209C0-0000-0000-C000-000000000046}';
  IID_Find: TGUID = '{000209B0-0000-0000-C000-000000000046}';
  IID_Replacement: TGUID = '{000209B1-0000-0000-C000-000000000046}';
  IID_Characters: TGUID = '{0002095D-0000-0000-C000-000000000046}';
  IID_Words: TGUID = '{0002095C-0000-0000-C000-000000000046}';
  IID_Sentences: TGUID = '{0002095B-0000-0000-C000-000000000046}';
  IID_Sections: TGUID = '{0002095A-0000-0000-C000-000000000046}';
  IID_Section: TGUID = '{00020959-0000-0000-C000-000000000046}';
  IID_Paragraphs: TGUID = '{00020958-0000-0000-C000-000000000046}';
  IID_Paragraph: TGUID = '{00020957-0000-0000-C000-000000000046}';
  IID_DropCap: TGUID = '{00020956-0000-0000-C000-000000000046}';
  IID_TabStops: TGUID = '{00020955-0000-0000-C000-000000000046}';
  IID_TabStop: TGUID = '{00020954-0000-0000-C000-000000000046}';
  IID__ParagraphFormat: TGUID = '{00020953-0000-0000-C000-000000000046}';
  IID__Font: TGUID = '{00020952-0000-0000-C000-000000000046}';
  IID_Table: TGUID = '{00020951-0000-0000-C000-000000000046}';
  IID_Row: TGUID = '{00020950-0000-0000-C000-000000000046}';
  IID_Column: TGUID = '{0002094F-0000-0000-C000-000000000046}';
  IID_Cell: TGUID = '{0002094E-0000-0000-C000-000000000046}';
  IID_Tables: TGUID = '{0002094D-0000-0000-C000-000000000046}';
  IID_Rows: TGUID = '{0002094C-0000-0000-C000-000000000046}';
  IID_Columns: TGUID = '{0002094B-0000-0000-C000-000000000046}';
  IID_Cells: TGUID = '{0002094A-0000-0000-C000-000000000046}';
  IID_AutoCorrect: TGUID = '{00020949-0000-0000-C000-000000000046}';
  IID_AutoCorrectEntries: TGUID = '{00020948-0000-0000-C000-000000000046}';
  IID_AutoCorrectEntry: TGUID = '{00020947-0000-0000-C000-000000000046}';
  IID_FirstLetterExceptions: TGUID = '{00020946-0000-0000-C000-000000000046}';
  IID_FirstLetterException: TGUID = '{00020945-0000-0000-C000-000000000046}';
  IID_TwoInitialCapsExceptions: TGUID = '{00020944-0000-0000-C000-000000000046}';
  IID_TwoInitialCapsException: TGUID = '{00020943-0000-0000-C000-000000000046}';
  IID_Footnotes: TGUID = '{00020942-0000-0000-C000-000000000046}';
  IID_Endnotes: TGUID = '{00020941-0000-0000-C000-000000000046}';
  IID_Comments: TGUID = '{00020940-0000-0000-C000-000000000046}';
  IID_Footnote: TGUID = '{0002093F-0000-0000-C000-000000000046}';
  IID_Endnote: TGUID = '{0002093E-0000-0000-C000-000000000046}';
  IID_Comment: TGUID = '{0002093D-0000-0000-C000-000000000046}';
  IID_Borders: TGUID = '{0002093C-0000-0000-C000-000000000046}';
  IID_Border: TGUID = '{0002093B-0000-0000-C000-000000000046}';
  IID_Shading: TGUID = '{0002093A-0000-0000-C000-000000000046}';
  IID_TextRetrievalMode: TGUID = '{00020939-0000-0000-C000-000000000046}';
  IID_AutoTextEntries: TGUID = '{00020937-0000-0000-C000-000000000046}';
  IID_AutoTextEntry: TGUID = '{00020936-0000-0000-C000-000000000046}';
  IID_System: TGUID = '{00020935-0000-0000-C000-000000000046}';
  IID_OLEFormat: TGUID = '{00020933-0000-0000-C000-000000000046}';
  IID_LinkFormat: TGUID = '{00020931-0000-0000-C000-000000000046}';
  IID__OLEControl: TGUID = '{000209A4-0000-0000-C000-000000000046}';
  IID_Fields: TGUID = '{00020930-0000-0000-C000-000000000046}';
  IID_Field: TGUID = '{0002092F-0000-0000-C000-000000000046}';
  IID_Browser: TGUID = '{0002092E-0000-0000-C000-000000000046}';
  IID_Styles: TGUID = '{0002092D-0000-0000-C000-000000000046}';
  IID_Style: TGUID = '{0002092C-0000-0000-C000-000000000046}';
  IID_Frames: TGUID = '{0002092B-0000-0000-C000-000000000046}';
  IID_Frame: TGUID = '{0002092A-0000-0000-C000-000000000046}';
  IID_FormFields: TGUID = '{00020929-0000-0000-C000-000000000046}';
  IID_FormField: TGUID = '{00020928-0000-0000-C000-000000000046}';
  IID_TextInput: TGUID = '{00020927-0000-0000-C000-000000000046}';
  IID_CheckBox: TGUID = '{00020926-0000-0000-C000-000000000046}';
  IID_DropDown: TGUID = '{00020925-0000-0000-C000-000000000046}';
  IID_ListEntries: TGUID = '{00020924-0000-0000-C000-000000000046}';
  IID_ListEntry: TGUID = '{00020923-0000-0000-C000-000000000046}';
  IID_TablesOfFigures: TGUID = '{00020922-0000-0000-C000-000000000046}';
  IID_TableOfFigures: TGUID = '{00020921-0000-0000-C000-000000000046}';
  IID_MailMerge: TGUID = '{00020920-0000-0000-C000-000000000046}';
  IID_MailMergeFields: TGUID = '{0002091F-0000-0000-C000-000000000046}';
  IID_MailMergeField: TGUID = '{0002091E-0000-0000-C000-000000000046}';
  IID_MailMergeDataSource: TGUID = '{0002091D-0000-0000-C000-000000000046}';
  IID_MailMergeFieldNames: TGUID = '{0002091C-0000-0000-C000-000000000046}';
  IID_MailMergeFieldName: TGUID = '{0002091B-0000-0000-C000-000000000046}';
  IID_MailMergeDataFields: TGUID = '{0002091A-0000-0000-C000-000000000046}';
  IID_MailMergeDataField: TGUID = '{00020919-0000-0000-C000-000000000046}';
  IID_Envelope: TGUID = '{00020918-0000-0000-C000-000000000046}';
  IID_MailingLabel: TGUID = '{00020917-0000-0000-C000-000000000046}';
  IID_CustomLabels: TGUID = '{00020916-0000-0000-C000-000000000046}';
  IID_CustomLabel: TGUID = '{00020915-0000-0000-C000-000000000046}';
  IID_TablesOfContents: TGUID = '{00020914-0000-0000-C000-000000000046}';
  IID_TableOfContents: TGUID = '{00020913-0000-0000-C000-000000000046}';
  IID_TablesOfAuthorities: TGUID = '{00020912-0000-0000-C000-000000000046}';
  IID_TableOfAuthorities: TGUID = '{00020911-0000-0000-C000-000000000046}';
  IID_Dialogs: TGUID = '{00020910-0000-0000-C000-000000000046}';
  IID_Dialog: TGUID = '{000209B8-0000-0000-C000-000000000046}';
  IID_PageSetup: TGUID = '{00020971-0000-0000-C000-000000000046}';
  IID_LineNumbering: TGUID = '{00020972-0000-0000-C000-000000000046}';
  IID_TextColumns: TGUID = '{00020973-0000-0000-C000-000000000046}';
  IID_TextColumn: TGUID = '{00020974-0000-0000-C000-000000000046}';
  IID_Selection: TGUID = '{00020975-0000-0000-C000-000000000046}';
  IID_TablesOfAuthoritiesCategories: TGUID = '{00020976-0000-0000-C000-000000000046}';
  IID_TableOfAuthoritiesCategory: TGUID = '{00020977-0000-0000-C000-000000000046}';
  IID_CaptionLabels: TGUID = '{00020978-0000-0000-C000-000000000046}';
  IID_CaptionLabel: TGUID = '{00020979-0000-0000-C000-000000000046}';
  IID_AutoCaptions: TGUID = '{0002097A-0000-0000-C000-000000000046}';
  IID_AutoCaption: TGUID = '{0002097B-0000-0000-C000-000000000046}';
  IID_Indexes: TGUID = '{0002097C-0000-0000-C000-000000000046}';
  IID_Index: TGUID = '{0002097D-0000-0000-C000-000000000046}';
  IID_AddIn: TGUID = '{0002097E-0000-0000-C000-000000000046}';
  IID_AddIns: TGUID = '{0002097F-0000-0000-C000-000000000046}';
  IID_Revisions: TGUID = '{00020980-0000-0000-C000-000000000046}';
  IID_Revision: TGUID = '{00020981-0000-0000-C000-000000000046}';
  IID_Task: TGUID = '{00020982-0000-0000-C000-000000000046}';
  IID_Tasks: TGUID = '{00020983-0000-0000-C000-000000000046}';
  IID_HeadersFooters: TGUID = '{00020984-0000-0000-C000-000000000046}';
  IID_HeaderFooter: TGUID = '{00020985-0000-0000-C000-000000000046}';
  IID_PageNumbers: TGUID = '{00020986-0000-0000-C000-000000000046}';
  IID_PageNumber: TGUID = '{00020987-0000-0000-C000-000000000046}';
  IID_Subdocuments: TGUID = '{00020988-0000-0000-C000-000000000046}';
  IID_Subdocument: TGUID = '{00020989-0000-0000-C000-000000000046}';
  IID_HeadingStyles: TGUID = '{0002098A-0000-0000-C000-000000000046}';
  IID_HeadingStyle: TGUID = '{0002098B-0000-0000-C000-000000000046}';
  IID_StoryRanges: TGUID = '{0002098C-0000-0000-C000-000000000046}';
  IID_ListLevel: TGUID = '{0002098D-0000-0000-C000-000000000046}';
  IID_ListLevels: TGUID = '{0002098E-0000-0000-C000-000000000046}';
  IID_ListTemplate: TGUID = '{0002098F-0000-0000-C000-000000000046}';
  IID_ListTemplates: TGUID = '{00020990-0000-0000-C000-000000000046}';
  IID_ListParagraphs: TGUID = '{00020991-0000-0000-C000-000000000046}';
  IID_List: TGUID = '{00020992-0000-0000-C000-000000000046}';
  IID_Lists: TGUID = '{00020993-0000-0000-C000-000000000046}';
  IID_ListGallery: TGUID = '{00020994-0000-0000-C000-000000000046}';
  IID_ListGalleries: TGUID = '{00020995-0000-0000-C000-000000000046}';
  IID_KeyBindings: TGUID = '{00020996-0000-0000-C000-000000000046}';
  IID_KeysBoundTo: TGUID = '{00020997-0000-0000-C000-000000000046}';
  IID_KeyBinding: TGUID = '{00020998-0000-0000-C000-000000000046}';
  IID_FileConverter: TGUID = '{00020999-0000-0000-C000-000000000046}';
  IID_FileConverters: TGUID = '{0002099A-0000-0000-C000-000000000046}';
  IID_SynonymInfo: TGUID = '{0002099B-0000-0000-C000-000000000046}';
  IID_Hyperlinks: TGUID = '{0002099C-0000-0000-C000-000000000046}';
  IID_Hyperlink: TGUID = '{0002099D-0000-0000-C000-000000000046}';
  IID_Shapes: TGUID = '{0002099F-0000-0000-C000-000000000046}';
  IID_ShapeRange: TGUID = '{000209B5-0000-0000-C000-000000000046}';
  IID_GroupShapes: TGUID = '{000209B6-0000-0000-C000-000000000046}';
  IID_Shape: TGUID = '{000209A0-0000-0000-C000-000000000046}';
  IID_TextFrame: TGUID = '{000209B2-0000-0000-C000-000000000046}';
  IID__LetterContent: TGUID = '{000209A1-0000-0000-C000-000000000046}';
  IID_View: TGUID = '{000209A5-0000-0000-C000-000000000046}';
  IID_Zoom: TGUID = '{000209A6-0000-0000-C000-000000000046}';
  IID_Zooms: TGUID = '{000209A7-0000-0000-C000-000000000046}';
  IID_InlineShape: TGUID = '{000209A8-0000-0000-C000-000000000046}';
  IID_InlineShapes: TGUID = '{000209A9-0000-0000-C000-000000000046}';
  IID_SpellingSuggestions: TGUID = '{000209AA-0000-0000-C000-000000000046}';
  IID_SpellingSuggestion: TGUID = '{000209AB-0000-0000-C000-000000000046}';
  IID_Dictionaries: TGUID = '{000209AC-0000-0000-C000-000000000046}';
  IID_HangulHanjaConversionDictionaries: TGUID = '{000209E0-0000-0000-C000-000000000046}';
  IID_Dictionary: TGUID = '{000209AD-0000-0000-C000-000000000046}';
  IID_ReadabilityStatistics: TGUID = '{000209AE-0000-0000-C000-000000000046}';
  IID_ReadabilityStatistic: TGUID = '{000209AF-0000-0000-C000-000000000046}';
  IID_Versions: TGUID = '{000209B3-0000-0000-C000-000000000046}';
  IID_Version: TGUID = '{000209B4-0000-0000-C000-000000000046}';
  IID_Options: TGUID = '{000209B7-0000-0000-C000-000000000046}';
  IID_MailMessage: TGUID = '{000209BA-0000-0000-C000-000000000046}';
  IID_ProofreadingErrors: TGUID = '{000209BB-0000-0000-C000-000000000046}';
  IID_Mailer: TGUID = '{000209BD-0000-0000-C000-000000000046}';
  IID_WrapFormat: TGUID = '{000209C3-0000-0000-C000-000000000046}';
  IID_HangulAndAlphabetExceptions: TGUID = '{000209D1-0000-0000-C000-000000000046}';
  IID_HangulAndAlphabetException: TGUID = '{000209D2-0000-0000-C000-000000000046}';
  IID_Adjustments: TGUID = '{000209C4-0000-0000-C000-000000000046}';
  IID_CalloutFormat: TGUID = '{000209C5-0000-0000-C000-000000000046}';
  IID_ColorFormat: TGUID = '{000209C6-0000-0000-C000-000000000046}';
  IID_ConnectorFormat: TGUID = '{000209C7-0000-0000-C000-000000000046}';
  IID_FillFormat: TGUID = '{000209C8-0000-0000-C000-000000000046}';
  IID_FreeformBuilder: TGUID = '{000209C9-0000-0000-C000-000000000046}';
  IID_LineFormat: TGUID = '{000209CA-0000-0000-C000-000000000046}';
  IID_PictureFormat: TGUID = '{000209CB-0000-0000-C000-000000000046}';
  IID_ShadowFormat: TGUID = '{000209CC-0000-0000-C000-000000000046}';
  IID_ShapeNode: TGUID = '{000209CD-0000-0000-C000-000000000046}';
  IID_ShapeNodes: TGUID = '{000209CE-0000-0000-C000-000000000046}';
  IID_TextEffectFormat: TGUID = '{000209CF-0000-0000-C000-000000000046}';
  IID_ThreeDFormat: TGUID = '{000209D0-0000-0000-C000-000000000046}';
  DIID_ApplicationEvents: TGUID = '{000209F7-0000-0000-C000-000000000046}';
  CLASS_WordGlobal: TGUID = '{000209F0-0000-0000-C000-000000000046}';
  DIID_ApplicationEvents2: TGUID = '{000209FE-0000-0000-C000-000000000046}';
  DIID_DocumentEvents: TGUID = '{000209F6-0000-0000-C000-000000000046}';
  CLASS_WordDocument: TGUID = '{00020906-0000-0000-C000-000000000046}';
  CLASS_WordFont: TGUID = '{000209F5-0000-0000-C000-000000000046}';
  CLASS_WordParagraphFormat: TGUID = '{000209F4-0000-0000-C000-000000000046}';
  DIID_OCXEvents: TGUID = '{000209F3-0000-0000-C000-000000000046}';
  CLASS_WordOLEControl: TGUID = '{000209F2-0000-0000-C000-000000000046}';
  CLASS_WordLetterContent: TGUID = '{000209F1-0000-0000-C000-000000000046}';
  IID_IApplicationEvents: TGUID = '{000209F7-0001-0000-C000-000000000046}';
  IID_IApplicationEvents2: TGUID = '{000209FE-0001-0000-C000-000000000046}';
  CLASS_WordApplication: TGUID = '{000209FF-0000-0000-C000-000000000046}';
  IID_EmailAuthor: TGUID = '{000209D7-0000-0000-C000-000000000046}';
  IID_EmailOptions: TGUID = '{000209DB-0000-0000-C000-000000000046}';
  IID_EmailSignature: TGUID = '{000209DC-0000-0000-C000-000000000046}';
  IID_Email: TGUID = '{000209DD-0000-0000-C000-000000000046}';
  IID_HorizontalLineFormat: TGUID = '{000209DE-0000-0000-C000-000000000046}';
  IID_Frameset: TGUID = '{000209E2-0000-0000-C000-000000000046}';
  IID_DefaultWebOptions: TGUID = '{000209E3-0000-0000-C000-000000000046}';
  IID_WebOptions: TGUID = '{000209E4-0000-0000-C000-000000000046}';
  IID_OtherCorrectionsExceptions: TGUID = '{000209DF-0000-0000-C000-000000000046}';
  IID_OtherCorrectionsException: TGUID = '{000209E1-0000-0000-C000-000000000046}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum WdMailSystem
type
  WdMailSystem = TOleEnum;
const
  wdNoMailSystem = $00000000;
  wdMAPI = $00000001;
  wdPowerTalk = $00000002;
  wdMAPIandPowerTalk = $00000003;

// Constants for enum WdTemplateType
type
  WdTemplateType = TOleEnum;
const
  wdNormalTemplate = $00000000;
  wdGlobalTemplate = $00000001;
  wdAttachedTemplate = $00000002;

// Constants for enum WdContinue
type
  WdContinue = TOleEnum;
const
  wdContinueDisabled = $00000000;
  wdResetList = $00000001;
  wdContinueList = $00000002;

// Constants for enum WdIMEMode
type
  WdIMEMode = TOleEnum;
const
  wdIMEModeNoControl = $00000000;
  wdIMEModeOn = $00000001;
  wdIMEModeOff = $00000002;
  wdIMEModeHiragana = $00000004;
  wdIMEModeKatakana = $00000005;
  wdIMEModeKatakanaHalf = $00000006;
  wdIMEModeAlphaFull = $00000007;
  wdIMEModeAlpha = $00000008;
  wdIMEModeHangulFull = $00000009;
  wdIMEModeHangul = $0000000A;

// Constants for enum WdBaselineAlignment
type
  WdBaselineAlignment = TOleEnum;
const
  wdBaselineAlignTop = $00000000;
  wdBaselineAlignCenter = $00000001;
  wdBaselineAlignBaseline = $00000002;
  wdBaselineAlignFarEast50 = $00000003;
  wdBaselineAlignAuto = $00000004;

// Constants for enum WdIndexFilter
type
  WdIndexFilter = TOleEnum;
const
  wdIndexFilterNone = $00000000;
  wdIndexFilterAiueo = $00000001;
  wdIndexFilterAkasatana = $00000002;
  wdIndexFilterChosung = $00000003;
  wdIndexFilterLow = $00000004;
  wdIndexFilterMedium = $00000005;
  wdIndexFilterFull = $00000006;

// Constants for enum WdIndexSortBy
type
  WdIndexSortBy = TOleEnum;
const
  wdIndexSortByStroke = $00000000;
  wdIndexSortBySyllable = $00000001;

// Constants for enum WdJustificationMode
type
  WdJustificationMode = TOleEnum;
const
  wdJustificationModeExpand = $00000000;
  wdJustificationModeCompress = $00000001;
  wdJustificationModeCompressKana = $00000002;

// Constants for enum WdFarEastLineBreakLevel
type
  WdFarEastLineBreakLevel = TOleEnum;
const
  wdFarEastLineBreakLevelNormal = $00000000;
  wdFarEastLineBreakLevelStrict = $00000001;
  wdFarEastLineBreakLevelCustom = $00000002;

// Constants for enum WdMultipleWordConversionsMode
type
  WdMultipleWordConversionsMode = TOleEnum;
const
  wdHangulToHanja = $00000000;
  wdHanjaToHangul = $00000001;

// Constants for enum WdColorIndex
type
  WdColorIndex = TOleEnum;
const
  wdAuto = $00000000;
  wdBlack = $00000001;
  wdBlue = $00000002;
  wdTurquoise = $00000003;
  wdBrightGreen = $00000004;
  wdPink = $00000005;
  wdRed = $00000006;
  wdYellow = $00000007;
  wdWhite = $00000008;
  wdDarkBlue = $00000009;
  wdTeal = $0000000A;
  wdGreen = $0000000B;
  wdViolet = $0000000C;
  wdDarkRed = $0000000D;
  wdDarkYellow = $0000000E;
  wdGray50 = $0000000F;
  wdGray25 = $00000010;
  wdByAuthor = $FFFFFFFF;
  wdNoHighlight = $00000000;

// Constants for enum WdTextureIndex
type
  WdTextureIndex = TOleEnum;
const
  wdTextureNone = $00000000;
  wdTexture2Pt5Percent = $00000019;
  wdTexture5Percent = $00000032;
  wdTexture7Pt5Percent = $0000004B;
  wdTexture10Percent = $00000064;
  wdTexture12Pt5Percent = $0000007D;
  wdTexture15Percent = $00000096;
  wdTexture17Pt5Percent = $000000AF;
  wdTexture20Percent = $000000C8;
  wdTexture22Pt5Percent = $000000E1;
  wdTexture25Percent = $000000FA;
  wdTexture27Pt5Percent = $00000113;
  wdTexture30Percent = $0000012C;
  wdTexture32Pt5Percent = $00000145;
  wdTexture35Percent = $0000015E;
  wdTexture37Pt5Percent = $00000177;
  wdTexture40Percent = $00000190;
  wdTexture42Pt5Percent = $000001A9;
  wdTexture45Percent = $000001C2;
  wdTexture47Pt5Percent = $000001DB;
  wdTexture50Percent = $000001F4;
  wdTexture52Pt5Percent = $0000020D;
  wdTexture55Percent = $00000226;
  wdTexture57Pt5Percent = $0000023F;
  wdTexture60Percent = $00000258;
  wdTexture62Pt5Percent = $00000271;
  wdTexture65Percent = $0000028A;
  wdTexture67Pt5Percent = $000002A3;
  wdTexture70Percent = $000002BC;
  wdTexture72Pt5Percent = $000002D5;
  wdTexture75Percent = $000002EE;
  wdTexture77Pt5Percent = $00000307;
  wdTexture80Percent = $00000320;
  wdTexture82Pt5Percent = $00000339;
  wdTexture85Percent = $00000352;
  wdTexture87Pt5Percent = $0000036B;
  wdTexture90Percent = $00000384;
  wdTexture92Pt5Percent = $0000039D;
  wdTexture95Percent = $000003B6;
  wdTexture97Pt5Percent = $000003CF;
  wdTextureSolid = $000003E8;
  wdTextureDarkHorizontal = $FFFFFFFF;
  wdTextureDarkVertical = $FFFFFFFE;
  wdTextureDarkDiagonalDown = $FFFFFFFD;
  wdTextureDarkDiagonalUp = $FFFFFFFC;
  wdTextureDarkCross = $FFFFFFFB;
  wdTextureDarkDiagonalCross = $FFFFFFFA;
  wdTextureHorizontal = $FFFFFFF9;
  wdTextureVertical = $FFFFFFF8;
  wdTextureDiagonalDown = $FFFFFFF7;
  wdTextureDiagonalUp = $FFFFFFF6;
  wdTextureCross = $FFFFFFF5;
  wdTextureDiagonalCross = $FFFFFFF4;

// Constants for enum WdUnderline
type
  WdUnderline = TOleEnum;
const
  wdUnderlineNone = $00000000;
  wdUnderlineSingle = $00000001;
  wdUnderlineWords = $00000002;
  wdUnderlineDouble = $00000003;
  wdUnderlineDotted = $00000004;
  wdUnderlineThick = $00000006;
  wdUnderlineDash = $00000007;
  wdUnderlineDotDash = $00000009;
  wdUnderlineDotDotDash = $0000000A;
  wdUnderlineWavy = $0000000B;
  wdUnderlineWavyHeavy = $0000001B;
  wdUnderlineDottedHeavy = $00000014;
  wdUnderlineDashHeavy = $00000017;
  wdUnderlineDotDashHeavy = $00000019;
  wdUnderlineDotDotDashHeavy = $0000001A;
  wdUnderlineDashLong = $00000027;
  wdUnderlineDashLongHeavy = $00000037;
  wdUnderlineWavyDouble = $0000002B;

// Constants for enum WdEmphasisMark
type
  WdEmphasisMark = TOleEnum;
const
  wdEmphasisMarkNone = $00000000;
  wdEmphasisMarkOverSolidCircle = $00000001;
  wdEmphasisMarkOverComma = $00000002;
  wdEmphasisMarkOverWhiteCircle = $00000003;
  wdEmphasisMarkUnderSolidCircle = $00000004;

// Constants for enum WdInternationalIndex
type
  WdInternationalIndex = TOleEnum;
const
  wdListSeparator = $00000011;
  wdDecimalSeparator = $00000012;
  wdThousandsSeparator = $00000013;
  wdCurrencyCode = $00000014;
  wd24HourClock = $00000015;
  wdInternationalAM = $00000016;
  wdInternationalPM = $00000017;
  wdTimeSeparator = $00000018;
  wdDateSeparator = $00000019;
  wdProductLanguageID = $0000001A;

// Constants for enum WdAutoMacros
type
  WdAutoMacros = TOleEnum;
const
  wdAutoExec = $00000000;
  wdAutoNew = $00000001;
  wdAutoOpen = $00000002;
  wdAutoClose = $00000003;
  wdAutoExit = $00000004;

// Constants for enum WdCaptionPosition
type
  WdCaptionPosition = TOleEnum;
const
  wdCaptionPositionAbove = $00000000;
  wdCaptionPositionBelow = $00000001;

// Constants for enum WdCountry
type
  WdCountry = TOleEnum;
const
  wdUS = $00000001;
  wdCanada = $00000002;
  wdLatinAmerica = $00000003;
  wdNetherlands = $0000001F;
  wdFrance = $00000021;
  wdSpain = $00000022;
  wdItaly = $00000027;
  wdUK = $0000002C;
  wdDenmark = $0000002D;
  wdSweden = $0000002E;
  wdNorway = $0000002F;
  wdGermany = $00000031;
  wdPeru = $00000033;
  wdMexico = $00000034;
  wdArgentina = $00000036;
  wdBrazil = $00000037;
  wdChile = $00000038;
  wdVenezuela = $0000003A;
  wdJapan = $00000051;
  wdTaiwan = $00000376;
  wdChina = $00000056;
  wdKorea = $00000052;
  wdFinland = $00000166;
  wdIceland = $00000162;

// Constants for enum WdHeadingSeparator
type
  WdHeadingSeparator = TOleEnum;
const
  wdHeadingSeparatorNone = $00000000;
  wdHeadingSeparatorBlankLine = $00000001;
  wdHeadingSeparatorLetter = $00000002;
  wdHeadingSeparatorLetterLow = $00000003;
  wdHeadingSeparatorLetterFull = $00000004;

// Constants for enum WdSeparatorType
type
  WdSeparatorType = TOleEnum;
const
  wdSeparatorHyphen = $00000000;
  wdSeparatorPeriod = $00000001;
  wdSeparatorColon = $00000002;
  wdSeparatorEmDash = $00000003;
  wdSeparatorEnDash = $00000004;

// Constants for enum WdPageNumberAlignment
type
  WdPageNumberAlignment = TOleEnum;
const
  wdAlignPageNumberLeft = $00000000;
  wdAlignPageNumberCenter = $00000001;
  wdAlignPageNumberRight = $00000002;
  wdAlignPageNumberInside = $00000003;
  wdAlignPageNumberOutside = $00000004;

// Constants for enum WdBorderType
type
  WdBorderType = TOleEnum;
const
  wdBorderTop = $FFFFFFFF;
  wdBorderLeft = $FFFFFFFE;
  wdBorderBottom = $FFFFFFFD;
  wdBorderRight = $FFFFFFFC;
  wdBorderHorizontal = $FFFFFFFB;
  wdBorderVertical = $FFFFFFFA;
  wdBorderDiagonalDown = $FFFFFFF9;
  wdBorderDiagonalUp = $FFFFFFF8;

// Constants for enum WdBorderTypeHID
type
  WdBorderTypeHID = TOleEnum;
const
  emptyenum = $00000000;

// Constants for enum WdFramePosition
type
  WdFramePosition = TOleEnum;
const
  wdFrameTop = $FFF0BDC1;
  wdFrameLeft = $FFF0BDC2;
  wdFrameBottom = $FFF0BDC3;
  wdFrameRight = $FFF0BDC4;
  wdFrameCenter = $FFF0BDC5;
  wdFrameInside = $FFF0BDC6;
  wdFrameOutside = $FFF0BDC7;

// Constants for enum WdAnimation
type
  WdAnimation = TOleEnum;
const
  wdAnimationNone = $00000000;
  wdAnimationLasVegasLights = $00000001;
  wdAnimationBlinkingBackground = $00000002;
  wdAnimationSparkleText = $00000003;
  wdAnimationMarchingBlackAnts = $00000004;
  wdAnimationMarchingRedAnts = $00000005;
  wdAnimationShimmer = $00000006;

// Constants for enum WdCharacterCase
type
  WdCharacterCase = TOleEnum;
const
  wdNextCase = $FFFFFFFF;
  wdLowerCase = $00000000;
  wdUpperCase = $00000001;
  wdTitleWord = $00000002;
  wdTitleSentence = $00000004;
  wdToggleCase = $00000005;
  wdHalfWidth = $00000006;
  wdFullWidth = $00000007;
  wdKatakana = $00000008;
  wdHiragana = $00000009;

// Constants for enum WdCharacterCaseHID
type
  WdCharacterCaseHID = TOleEnum;
const
  emptyenum_ = $00000000;

// Constants for enum WdSummaryMode
type
  WdSummaryMode = TOleEnum;
const
  wdSummaryModeHighlight = $00000000;
  wdSummaryModeHideAllButSummary = $00000001;
  wdSummaryModeInsert = $00000002;
  wdSummaryModeCreateNew = $00000003;

// Constants for enum WdSummaryLength
type
  WdSummaryLength = TOleEnum;
const
  wd10Sentences = $FFFFFFFE;
  wd20Sentences = $FFFFFFFD;
  wd100Words = $FFFFFFFC;
  wd500Words = $FFFFFFFB;
  wd10Percent = $FFFFFFFA;
  wd25Percent = $FFFFFFF9;
  wd50Percent = $FFFFFFF8;
  wd75Percent = $FFFFFFF7;

// Constants for enum WdStyleType
type
  WdStyleType = TOleEnum;
const
  wdStyleTypeParagraph = $00000001;
  wdStyleTypeCharacter = $00000002;

// Constants for enum WdUnits
type
  WdUnits = TOleEnum;
const
  wdCharacter = $00000001;
  wdWord = $00000002;
  wdSentence = $00000003;
  wdParagraph = $00000004;
  wdLine = $00000005;
  wdStory = $00000006;
  wdScreen = $00000007;
  wdSection = $00000008;
  wdColumn = $00000009;
  wdRow = $0000000A;
  wdWindow = $0000000B;
  wdCell = $0000000C;
  wdCharacterFormatting = $0000000D;
  wdParagraphFormatting = $0000000E;
  wdTable = $0000000F;
  wdItem = $00000010;

// Constants for enum WdGoToItem
type
  WdGoToItem = TOleEnum;
const
  wdGoToBookmark = $FFFFFFFF;
  wdGoToSection = $00000000;
  wdGoToPage = $00000001;
  wdGoToTable = $00000002;
  wdGoToLine = $00000003;
  wdGoToFootnote = $00000004;
  wdGoToEndnote = $00000005;
  wdGoToComment = $00000006;
  wdGoToField = $00000007;
  wdGoToGraphic = $00000008;
  wdGoToObject = $00000009;
  wdGoToEquation = $0000000A;
  wdGoToHeading = $0000000B;
  wdGoToPercent = $0000000C;
  wdGoToSpellingError = $0000000D;
  wdGoToGrammaticalError = $0000000E;
  wdGoToProofreadingError = $0000000F;

// Constants for enum WdGoToDirection
type
  WdGoToDirection = TOleEnum;
const
  wdGoToFirst = $00000001;
  wdGoToLast = $FFFFFFFF;
  wdGoToNext = $00000002;
  wdGoToRelative = $00000002;
  wdGoToPrevious = $00000003;
  wdGoToAbsolute = $00000001;

// Constants for enum WdCollapseDirection
type
  WdCollapseDirection = TOleEnum;
const
  wdCollapseStart = $00000001;
  wdCollapseEnd = $00000000;

// Constants for enum WdRowHeightRule
type
  WdRowHeightRule = TOleEnum;
const
  wdRowHeightAuto = $00000000;
  wdRowHeightAtLeast = $00000001;
  wdRowHeightExactly = $00000002;

// Constants for enum WdFrameSizeRule
type
  WdFrameSizeRule = TOleEnum;
const
  wdFrameAuto = $00000000;
  wdFrameAtLeast = $00000001;
  wdFrameExact = $00000002;

// Constants for enum WdInsertCells
type
  WdInsertCells = TOleEnum;
const
  wdInsertCellsShiftRight = $00000000;
  wdInsertCellsShiftDown = $00000001;
  wdInsertCellsEntireRow = $00000002;
  wdInsertCellsEntireColumn = $00000003;

// Constants for enum WdDeleteCells
type
  WdDeleteCells = TOleEnum;
const
  wdDeleteCellsShiftLeft = $00000000;
  wdDeleteCellsShiftUp = $00000001;
  wdDeleteCellsEntireRow = $00000002;
  wdDeleteCellsEntireColumn = $00000003;

// Constants for enum WdListApplyTo
type
  WdListApplyTo = TOleEnum;
const
  wdListApplyToWholeList = $00000000;
  wdListApplyToThisPointForward = $00000001;
  wdListApplyToSelection = $00000002;

// Constants for enum WdAlertLevel
type
  WdAlertLevel = TOleEnum;
const
  wdAlertsNone = $00000000;
  wdAlertsMessageBox = $FFFFFFFE;
  wdAlertsAll = $FFFFFFFF;

// Constants for enum WdCursorType
type
  WdCursorType = TOleEnum;
const
  wdCursorWait = $00000000;
  wdCursorIBeam = $00000001;
  wdCursorNormal = $00000002;
  wdCursorNorthwestArrow = $00000003;

// Constants for enum WdEnableCancelKey
type
  WdEnableCancelKey = TOleEnum;
const
  wdCancelDisabled = $00000000;
  wdCancelInterrupt = $00000001;

// Constants for enum WdRulerStyle
type
  WdRulerStyle = TOleEnum;
const
  wdAdjustNone = $00000000;
  wdAdjustProportional = $00000001;
  wdAdjustFirstColumn = $00000002;
  wdAdjustSameWidth = $00000003;

// Constants for enum WdParagraphAlignment
type
  WdParagraphAlignment = TOleEnum;
const
  wdAlignParagraphLeft = $00000000;
  wdAlignParagraphCenter = $00000001;
  wdAlignParagraphRight = $00000002;
  wdAlignParagraphJustify = $00000003;
  wdAlignParagraphDistribute = $00000004;
  wdAlignParagraphJustifyMed = $00000005;
  wdAlignParagraphJustifyHi = $00000007;
  wdAlignParagraphJustifyLow = $00000008;

// Constants for enum WdParagraphAlignmentHID
type
  WdParagraphAlignmentHID = TOleEnum;
const
  emptyenum__ = $00000000;

// Constants for enum WdListLevelAlignment
type
  WdListLevelAlignment = TOleEnum;
const
  wdListLevelAlignLeft = $00000000;
  wdListLevelAlignCenter = $00000001;
  wdListLevelAlignRight = $00000002;

// Constants for enum WdRowAlignment
type
  WdRowAlignment = TOleEnum;
const
  wdAlignRowLeft = $00000000;
  wdAlignRowCenter = $00000001;
  wdAlignRowRight = $00000002;

// Constants for enum WdTabAlignment
type
  WdTabAlignment = TOleEnum;
const
  wdAlignTabLeft = $00000000;
  wdAlignTabCenter = $00000001;
  wdAlignTabRight = $00000002;
  wdAlignTabDecimal = $00000003;
  wdAlignTabBar = $00000004;
  wdAlignTabList = $00000006;

// Constants for enum WdVerticalAlignment
type
  WdVerticalAlignment = TOleEnum;
const
  wdAlignVerticalTop = $00000000;
  wdAlignVerticalCenter = $00000001;
  wdAlignVerticalJustify = $00000002;
  wdAlignVerticalBottom = $00000003;

// Constants for enum WdCellVerticalAlignment
type
  WdCellVerticalAlignment = TOleEnum;
const
  wdCellAlignVerticalTop = $00000000;
  wdCellAlignVerticalCenter = $00000001;
  wdCellAlignVerticalBottom = $00000003;

// Constants for enum WdTrailingCharacter
type
  WdTrailingCharacter = TOleEnum;
const
  wdTrailingTab = $00000000;
  wdTrailingSpace = $00000001;
  wdTrailingNone = $00000002;

// Constants for enum WdListGalleryType
type
  WdListGalleryType = TOleEnum;
const
  wdBulletGallery = $00000001;
  wdNumberGallery = $00000002;
  wdOutlineNumberGallery = $00000003;

// Constants for enum WdListNumberStyle
type
  WdListNumberStyle = TOleEnum;
const
  wdListNumberStyleArabic = $00000000;
  wdListNumberStyleUppercaseRoman = $00000001;
  wdListNumberStyleLowercaseRoman = $00000002;
  wdListNumberStyleUppercaseLetter = $00000003;
  wdListNumberStyleLowercaseLetter = $00000004;
  wdListNumberStyleOrdinal = $00000005;
  wdListNumberStyleCardinalText = $00000006;
  wdListNumberStyleOrdinalText = $00000007;
  wdListNumberStyleKanji = $0000000A;
  wdListNumberStyleKanjiDigit = $0000000B;
  wdListNumberStyleAiueoHalfWidth = $0000000C;
  wdListNumberStyleIrohaHalfWidth = $0000000D;
  wdListNumberStyleArabicFullWidth = $0000000E;
  wdListNumberStyleKanjiTraditional = $00000010;
  wdListNumberStyleKanjiTraditional2 = $00000011;
  wdListNumberStyleNumberInCircle = $00000012;
  wdListNumberStyleAiueo = $00000014;
  wdListNumberStyleIroha = $00000015;
  wdListNumberStyleArabicLZ = $00000016;
  wdListNumberStyleBullet = $00000017;
  wdListNumberStyleGanada = $00000018;
  wdListNumberStyleChosung = $00000019;
  wdListNumberStyleGBNum1 = $0000001A;
  wdListNumberStyleGBNum2 = $0000001B;
  wdListNumberStyleGBNum3 = $0000001C;
  wdListNumberStyleGBNum4 = $0000001D;
  wdListNumberStyleZodiac1 = $0000001E;
  wdListNumberStyleZodiac2 = $0000001F;
  wdListNumberStyleZodiac3 = $00000020;
  wdListNumberStyleTradChinNum1 = $00000021;
  wdListNumberStyleTradChinNum2 = $00000022;
  wdListNumberStyleTradChinNum3 = $00000023;
  wdListNumberStyleTradChinNum4 = $00000024;
  wdListNumberStyleSimpChinNum1 = $00000025;
  wdListNumberStyleSimpChinNum2 = $00000026;
  wdListNumberStyleSimpChinNum3 = $00000027;
  wdListNumberStyleSimpChinNum4 = $00000028;
  wdListNumberStyleHanjaRead = $00000029;
  wdListNumberStyleHanjaReadDigit = $0000002A;
  wdListNumberStyleHangul = $0000002B;
  wdListNumberStyleHanja = $0000002C;
  wdListNumberStyleHebrew1 = $0000002D;
  wdListNumberStyleArabic1 = $0000002E;
  wdListNumberStyleHebrew2 = $0000002F;
  wdListNumberStyleArabic2 = $00000030;
  wdListNumberStyleLegal = $000000FD;
  wdListNumberStyleLegalLZ = $000000FE;
  wdListNumberStyleNone = $000000FF;

// Constants for enum WdListNumberStyleHID
type
  WdListNumberStyleHID = TOleEnum;
const
  emptyenum___ = $00000000;

// Constants for enum WdNoteNumberStyle
type
  WdNoteNumberStyle = TOleEnum;
const
  wdNoteNumberStyleArabic = $00000000;
  wdNoteNumberStyleUppercaseRoman = $00000001;
  wdNoteNumberStyleLowercaseRoman = $00000002;
  wdNoteNumberStyleUppercaseLetter = $00000003;
  wdNoteNumberStyleLowercaseLetter = $00000004;
  wdNoteNumberStyleSymbol = $00000009;
  wdNoteNumberStyleArabicFullWidth = $0000000E;
  wdNoteNumberStyleKanji = $0000000A;
  wdNoteNumberStyleKanjiDigit = $0000000B;
  wdNoteNumberStyleKanjiTraditional = $00000010;
  wdNoteNumberStyleNumberInCircle = $00000012;
  wdNoteNumberStyleHanjaRead = $00000029;
  wdNoteNumberStyleHanjaReadDigit = $0000002A;
  wdNoteNumberStyleTradChinNum1 = $00000021;
  wdNoteNumberStyleTradChinNum2 = $00000022;
  wdNoteNumberStyleSimpChinNum1 = $00000025;
  wdNoteNumberStyleSimpChinNum2 = $00000026;
  wdNoteNumberStyleHebrewLetter1 = $0000002D;
  wdNoteNumberStyleArabicLetter1 = $0000002E;
  wdNoteNumberStyleHebrewLetter2 = $0000002F;
  wdNoteNumberStyleArabicLetter2 = $00000030;

// Constants for enum WdNoteNumberStyleHID
type
  WdNoteNumberStyleHID = TOleEnum;
const
  emptyenum____ = $00000000;

// Constants for enum WdCaptionNumberStyle
type
  WdCaptionNumberStyle = TOleEnum;
const
  wdCaptionNumberStyleArabic = $00000000;
  wdCaptionNumberStyleUppercaseRoman = $00000001;
  wdCaptionNumberStyleLowercaseRoman = $00000002;
  wdCaptionNumberStyleUppercaseLetter = $00000003;
  wdCaptionNumberStyleLowercaseLetter = $00000004;
  wdCaptionNumberStyleArabicFullWidth = $0000000E;
  wdCaptionNumberStyleKanji = $0000000A;
  wdCaptionNumberStyleKanjiDigit = $0000000B;
  wdCaptionNumberStyleKanjiTraditional = $00000010;
  wdCaptionNumberStyleNumberInCircle = $00000012;
  wdCaptionNumberStyleGanada = $00000018;
  wdCaptionNumberStyleChosung = $00000019;
  wdCaptionNumberStyleZodiac1 = $0000001E;
  wdCaptionNumberStyleZodiac2 = $0000001F;
  wdCaptionNumberStyleHanjaRead = $00000029;
  wdCaptionNumberStyleHanjaReadDigit = $0000002A;
  wdCaptionNumberStyleTradChinNum2 = $00000022;
  wdCaptionNumberStyleTradChinNum3 = $00000023;
  wdCaptionNumberStyleSimpChinNum2 = $00000026;
  wdCaptionNumberStyleSimpChinNum3 = $00000027;
  wdCaptionNumberStyleHebrewLetter1 = $0000002D;
  wdCaptionNumberStyleArabicLetter1 = $0000002E;
  wdCaptionNumberStyleHebrewLetter2 = $0000002F;
  wdCaptionNumberStyleArabicLetter2 = $00000030;

// Constants for enum WdCaptionNumberStyleHID
type
  WdCaptionNumberStyleHID = TOleEnum;
const
  emptyenum_____ = $00000000;

// Constants for enum WdPageNumberStyle
type
  WdPageNumberStyle = TOleEnum;
const
  wdPageNumberStyleArabic = $00000000;
  wdPageNumberStyleUppercaseRoman = $00000001;
  wdPageNumberStyleLowercaseRoman = $00000002;
  wdPageNumberStyleUppercaseLetter = $00000003;
  wdPageNumberStyleLowercaseLetter = $00000004;
  wdPageNumberStyleArabicFullWidth = $0000000E;
  wdPageNumberStyleKanji = $0000000A;
  wdPageNumberStyleKanjiDigit = $0000000B;
  wdPageNumberStyleKanjiTraditional = $00000010;
  wdPageNumberStyleNumberInCircle = $00000012;
  wdPageNumberStyleHanjaRead = $00000029;
  wdPageNumberStyleHanjaReadDigit = $0000002A;
  wdPageNumberStyleTradChinNum1 = $00000021;
  wdPageNumberStyleTradChinNum2 = $00000022;
  wdPageNumberStyleSimpChinNum1 = $00000025;
  wdPageNumberStyleSimpChinNum2 = $00000026;
  wdPageNumberStyleHebrewLetter1 = $0000002D;
  wdPageNumberStyleArabicLetter1 = $0000002E;
  wdPageNumberStyleHebrewLetter2 = $0000002F;
  wdPageNumberStyleArabicLetter2 = $00000030;

// Constants for enum WdPageNumberStyleHID
type
  WdPageNumberStyleHID = TOleEnum;
const
  emptyenum______ = $00000000;

// Constants for enum WdStatistic
type
  WdStatistic = TOleEnum;
const
  wdStatisticWords = $00000000;
  wdStatisticLines = $00000001;
  wdStatisticPages = $00000002;
  wdStatisticCharacters = $00000003;
  wdStatisticParagraphs = $00000004;
  wdStatisticCharactersWithSpaces = $00000005;
  wdStatisticFarEastCharacters = $00000006;

// Constants for enum WdStatisticHID
type
  WdStatisticHID = TOleEnum;
const
  emptyenum_______ = $00000000;

// Constants for enum WdBuiltInProperty
type
  WdBuiltInProperty = TOleEnum;
const
  wdPropertyTitle = $00000001;
  wdPropertySubject = $00000002;
  wdPropertyAuthor = $00000003;
  wdPropertyKeywords = $00000004;
  wdPropertyComments = $00000005;
  wdPropertyTemplate = $00000006;
  wdPropertyLastAuthor = $00000007;
  wdPropertyRevision = $00000008;
  wdPropertyAppName = $00000009;
  wdPropertyTimeLastPrinted = $0000000A;
  wdPropertyTimeCreated = $0000000B;
  wdPropertyTimeLastSaved = $0000000C;
  wdPropertyVBATotalEdit = $0000000D;
  wdPropertyPages = $0000000E;
  wdPropertyWords = $0000000F;
  wdPropertyCharacters = $00000010;
  wdPropertySecurity = $00000011;
  wdPropertyCategory = $00000012;
  wdPropertyFormat = $00000013;
  wdPropertyManager = $00000014;
  wdPropertyCompany = $00000015;
  wdPropertyBytes = $00000016;
  wdPropertyLines = $00000017;
  wdPropertyParas = $00000018;
  wdPropertySlides = $00000019;
  wdPropertyNotes = $0000001A;
  wdPropertyHiddenSlides = $0000001B;
  wdPropertyMMClips = $0000001C;
  wdPropertyHyperlinkBase = $0000001D;
  wdPropertyCharsWSpaces = $0000001E;

// Constants for enum WdLineSpacing
type
  WdLineSpacing = TOleEnum;
const
  wdLineSpaceSingle = $00000000;
  wdLineSpace1pt5 = $00000001;
  wdLineSpaceDouble = $00000002;
  wdLineSpaceAtLeast = $00000003;
  wdLineSpaceExactly = $00000004;
  wdLineSpaceMultiple = $00000005;

// Constants for enum WdNumberType
type
  WdNumberType = TOleEnum;
const
  wdNumberParagraph = $00000001;
  wdNumberListNum = $00000002;
  wdNumberAllNumbers = $00000003;

// Constants for enum WdListType
type
  WdListType = TOleEnum;
const
  wdListNoNumbering = $00000000;
  wdListListNumOnly = $00000001;
  wdListBullet = $00000002;
  wdListSimpleNumbering = $00000003;
  wdListOutlineNumbering = $00000004;
  wdListMixedNumbering = $00000005;

// Constants for enum WdStoryType
type
  WdStoryType = TOleEnum;
const
  wdMainTextStory = $00000001;
  wdFootnotesStory = $00000002;
  wdEndnotesStory = $00000003;
  wdCommentsStory = $00000004;
  wdTextFrameStory = $00000005;
  wdEvenPagesHeaderStory = $00000006;
  wdPrimaryHeaderStory = $00000007;
  wdEvenPagesFooterStory = $00000008;
  wdPrimaryFooterStory = $00000009;
  wdFirstPageHeaderStory = $0000000A;
  wdFirstPageFooterStory = $0000000B;

// Constants for enum WdSaveFormat
type
  WdSaveFormat = TOleEnum;
const
  wdFormatDocument = $00000000;
  wdFormatTemplate = $00000001;
  wdFormatText = $00000002;
  wdFormatTextLineBreaks = $00000003;
  wdFormatDOSText = $00000004;
  wdFormatDOSTextLineBreaks = $00000005;
  wdFormatRTF = $00000006;
  wdFormatUnicodeText = $00000007;
  wdFormatEncodedText = $00000007;
  wdFormatHTML = $00000008;

// Constants for enum WdOpenFormat
type
  WdOpenFormat = TOleEnum;
const
  wdOpenFormatAuto = $00000000;
  wdOpenFormatDocument = $00000001;
  wdOpenFormatTemplate = $00000002;
  wdOpenFormatRTF = $00000003;
  wdOpenFormatText = $00000004;
  wdOpenFormatUnicodeText = $00000005;
  wdOpenFormatEncodedText = $00000005;
  wdOpenFormatAllWord = $00000006;
  wdOpenFormatWebPages = $00000007;

// Constants for enum WdHeaderFooterIndex
type
  WdHeaderFooterIndex = TOleEnum;
const
  wdHeaderFooterPrimary = $00000001;
  wdHeaderFooterFirstPage = $00000002;
  wdHeaderFooterEvenPages = $00000003;

// Constants for enum WdTocFormat
type
  WdTocFormat = TOleEnum;
const
  wdTOCTemplate = $00000000;
  wdTOCClassic = $00000001;
  wdTOCDistinctive = $00000002;
  wdTOCFancy = $00000003;
  wdTOCModern = $00000004;
  wdTOCFormal = $00000005;
  wdTOCSimple = $00000006;

// Constants for enum WdTofFormat
type
  WdTofFormat = TOleEnum;
const
  wdTOFTemplate = $00000000;
  wdTOFClassic = $00000001;
  wdTOFDistinctive = $00000002;
  wdTOFCentered = $00000003;
  wdTOFFormal = $00000004;
  wdTOFSimple = $00000005;

// Constants for enum WdToaFormat
type
  WdToaFormat = TOleEnum;
const
  wdTOATemplate = $00000000;
  wdTOAClassic = $00000001;
  wdTOADistinctive = $00000002;
  wdTOAFormal = $00000003;
  wdTOASimple = $00000004;

// Constants for enum WdLineStyle
type
  WdLineStyle = TOleEnum;
const
  wdLineStyleNone = $00000000;
  wdLineStyleSingle = $00000001;
  wdLineStyleDot = $00000002;
  wdLineStyleDashSmallGap = $00000003;
  wdLineStyleDashLargeGap = $00000004;
  wdLineStyleDashDot = $00000005;
  wdLineStyleDashDotDot = $00000006;
  wdLineStyleDouble = $00000007;
  wdLineStyleTriple = $00000008;
  wdLineStyleThinThickSmallGap = $00000009;
  wdLineStyleThickThinSmallGap = $0000000A;
  wdLineStyleThinThickThinSmallGap = $0000000B;
  wdLineStyleThinThickMedGap = $0000000C;
  wdLineStyleThickThinMedGap = $0000000D;
  wdLineStyleThinThickThinMedGap = $0000000E;
  wdLineStyleThinThickLargeGap = $0000000F;
  wdLineStyleThickThinLargeGap = $00000010;
  wdLineStyleThinThickThinLargeGap = $00000011;
  wdLineStyleSingleWavy = $00000012;
  wdLineStyleDoubleWavy = $00000013;
  wdLineStyleDashDotStroked = $00000014;
  wdLineStyleEmboss3D = $00000015;
  wdLineStyleEngrave3D = $00000016;
  wdLineStyleOutset = $00000017;
  wdLineStyleInset = $00000018;

// Constants for enum WdLineWidth
type
  WdLineWidth = TOleEnum;
const
  wdLineWidth025pt = $00000002;
  wdLineWidth050pt = $00000004;
  wdLineWidth075pt = $00000006;
  wdLineWidth100pt = $00000008;
  wdLineWidth150pt = $0000000C;
  wdLineWidth225pt = $00000012;
  wdLineWidth300pt = $00000018;
  wdLineWidth450pt = $00000024;
  wdLineWidth600pt = $00000030;

// Constants for enum WdBreakType
type
  WdBreakType = TOleEnum;
const
  wdSectionBreakNextPage = $00000002;
  wdSectionBreakContinuous = $00000003;
  wdSectionBreakEvenPage = $00000004;
  wdSectionBreakOddPage = $00000005;
  wdLineBreak = $00000006;
  wdPageBreak = $00000007;
  wdColumnBreak = $00000008;
  wdLineBreakClearLeft = $00000009;
  wdLineBreakClearRight = $0000000A;
  wdTextWrappingBreak = $0000000B;

// Constants for enum WdTabLeader
type
  WdTabLeader = TOleEnum;
const
  wdTabLeaderSpaces = $00000000;
  wdTabLeaderDots = $00000001;
  wdTabLeaderDashes = $00000002;
  wdTabLeaderLines = $00000003;
  wdTabLeaderHeavy = $00000004;
  wdTabLeaderMiddleDot = $00000005;

// Constants for enum WdTabLeaderHID
type
  WdTabLeaderHID = TOleEnum;
const
  emptyenum________ = $00000000;

// Constants for enum WdMeasurementUnits
type
  WdMeasurementUnits = TOleEnum;
const
  wdInches = $00000000;
  wdCentimeters = $00000001;
  wdMillimeters = $00000002;
  wdPoints = $00000003;
  wdPicas = $00000004;

// Constants for enum WdMeasurementUnitsHID
type
  WdMeasurementUnitsHID = TOleEnum;
const
  emptyenum_________ = $00000000;

// Constants for enum WdDropPosition
type
  WdDropPosition = TOleEnum;
const
  wdDropNone = $00000000;
  wdDropNormal = $00000001;
  wdDropMargin = $00000002;

// Constants for enum WdNumberingRule
type
  WdNumberingRule = TOleEnum;
const
  wdRestartContinuous = $00000000;
  wdRestartSection = $00000001;
  wdRestartPage = $00000002;

// Constants for enum WdFootnoteLocation
type
  WdFootnoteLocation = TOleEnum;
const
  wdBottomOfPage = $00000000;
  wdBeneathText = $00000001;

// Constants for enum WdEndnoteLocation
type
  WdEndnoteLocation = TOleEnum;
const
  wdEndOfSection = $00000000;
  wdEndOfDocument = $00000001;

// Constants for enum WdSortSeparator
type
  WdSortSeparator = TOleEnum;
const
  wdSortSeparateByTabs = $00000000;
  wdSortSeparateByCommas = $00000001;
  wdSortSeparateByDefaultTableSeparator = $00000002;

// Constants for enum WdTableFieldSeparator
type
  WdTableFieldSeparator = TOleEnum;
const
  wdSeparateByParagraphs = $00000000;
  wdSeparateByTabs = $00000001;
  wdSeparateByCommas = $00000002;
  wdSeparateByDefaultListSeparator = $00000003;

// Constants for enum WdSortFieldType
type
  WdSortFieldType = TOleEnum;
const
  wdSortFieldAlphanumeric = $00000000;
  wdSortFieldNumeric = $00000001;
  wdSortFieldDate = $00000002;
  wdSortFieldSyllable = $00000003;
  wdSortFieldJapanJIS = $00000004;
  wdSortFieldStroke = $00000005;
  wdSortFieldKoreaKS = $00000006;

// Constants for enum WdSortFieldTypeHID
type
  WdSortFieldTypeHID = TOleEnum;
const
  emptyenum__________ = $00000000;

// Constants for enum WdSortOrder
type
  WdSortOrder = TOleEnum;
const
  wdSortOrderAscending = $00000000;
  wdSortOrderDescending = $00000001;

// Constants for enum WdTableFormat
type
  WdTableFormat = TOleEnum;
const
  wdTableFormatNone = $00000000;
  wdTableFormatSimple1 = $00000001;
  wdTableFormatSimple2 = $00000002;
  wdTableFormatSimple3 = $00000003;
  wdTableFormatClassic1 = $00000004;
  wdTableFormatClassic2 = $00000005;
  wdTableFormatClassic3 = $00000006;
  wdTableFormatClassic4 = $00000007;
  wdTableFormatColorful1 = $00000008;
  wdTableFormatColorful2 = $00000009;
  wdTableFormatColorful3 = $0000000A;
  wdTableFormatColumns1 = $0000000B;
  wdTableFormatColumns2 = $0000000C;
  wdTableFormatColumns3 = $0000000D;
  wdTableFormatColumns4 = $0000000E;
  wdTableFormatColumns5 = $0000000F;
  wdTableFormatGrid1 = $00000010;
  wdTableFormatGrid2 = $00000011;
  wdTableFormatGrid3 = $00000012;
  wdTableFormatGrid4 = $00000013;
  wdTableFormatGrid5 = $00000014;
  wdTableFormatGrid6 = $00000015;
  wdTableFormatGrid7 = $00000016;
  wdTableFormatGrid8 = $00000017;
  wdTableFormatList1 = $00000018;
  wdTableFormatList2 = $00000019;
  wdTableFormatList3 = $0000001A;
  wdTableFormatList4 = $0000001B;
  wdTableFormatList5 = $0000001C;
  wdTableFormatList6 = $0000001D;
  wdTableFormatList7 = $0000001E;
  wdTableFormatList8 = $0000001F;
  wdTableFormat3DEffects1 = $00000020;
  wdTableFormat3DEffects2 = $00000021;
  wdTableFormat3DEffects3 = $00000022;
  wdTableFormatContemporary = $00000023;
  wdTableFormatElegant = $00000024;
  wdTableFormatProfessional = $00000025;
  wdTableFormatSubtle1 = $00000026;
  wdTableFormatSubtle2 = $00000027;
  wdTableFormatWeb1 = $00000028;
  wdTableFormatWeb2 = $00000029;
  wdTableFormatWeb3 = $0000002A;

// Constants for enum WdTableFormatApply
type
  WdTableFormatApply = TOleEnum;
const
  wdTableFormatApplyBorders = $00000001;
  wdTableFormatApplyShading = $00000002;
  wdTableFormatApplyFont = $00000004;
  wdTableFormatApplyColor = $00000008;
  wdTableFormatApplyAutoFit = $00000010;
  wdTableFormatApplyHeadingRows = $00000020;
  wdTableFormatApplyLastRow = $00000040;
  wdTableFormatApplyFirstColumn = $00000080;
  wdTableFormatApplyLastColumn = $00000100;

// Constants for enum WdLanguageID
type
  WdLanguageID = TOleEnum;
const
  wdLanguageNone = $00000000;
  wdNoProofing = $00000400;
  wdAfrikaans = $00000436;
  wdAlbanian = $0000041C;
  wdArabicAlgeria = $00001401;
  wdArabicBahrain = $00003C01;
  wdArabicEgypt = $00000C01;
  wdArabicIraq = $00000801;
  wdArabicJordan = $00002C01;
  wdArabicKuwait = $00003401;
  wdArabicLebanon = $00003001;
  wdArabicLibya = $00001001;
  wdArabicMorocco = $00001801;
  wdArabicOman = $00002001;
  wdArabicQatar = $00004001;
  wdArabic = $00000401;
  wdArabicSyria = $00002801;
  wdArabicTunisia = $00001C01;
  wdArabicUAE = $00003801;
  wdArabicYemen = $00002401;
  wdArmenian = $0000042B;
  wdAssamese = $0000044D;
  wdAzeriCyrillic = $0000082C;
  wdAzeriLatin = $0000042C;
  wdBasque = $0000042D;
  wdByelorussian = $00000423;
  wdBengali = $00000445;
  wdBulgarian = $00000402;
  wdBurmese = $00000455;
  wdCatalan = $00000403;
  wdChineseHongKong = $00000C04;
  wdChineseMacao = $00001404;
  wdSimplifiedChinese = $00000804;
  wdChineseSingapore = $00001004;
  wdTraditionalChinese = $00000404;
  wdCroatian = $0000041A;
  wdCzech = $00000405;
  wdDanish = $00000406;
  wdBelgianDutch = $00000813;
  wdDutch = $00000413;
  wdEnglishAUS = $00000C09;
  wdEnglishBelize = $00002809;
  wdEnglishCanadian = $00001009;
  wdEnglishCaribbean = $00002409;
  wdEnglishIreland = $00001809;
  wdEnglishJamaica = $00002009;
  wdEnglishNewZealand = $00001409;
  wdEnglishPhilippines = $00003409;
  wdEnglishSouthAfrica = $00001C09;
  wdEnglishTrinidad = $00002C09;
  wdEnglishUK = $00000809;
  wdEnglishUS = $00000409;
  wdEnglishZimbabwe = $00003009;
  wdEstonian = $00000425;
  wdFaeroese = $00000438;
  wdFarsi = $00000429;
  wdFinnish = $0000040B;
  wdBelgianFrench = $0000080C;
  wdFrenchCameroon = $00002C0C;
  wdFrenchCanadian = $00000C0C;
  wdFrenchCotedIvoire = $0000300C;
  wdFrench = $0000040C;
  wdFrenchLuxembourg = $0000140C;
  wdFrenchMali = $0000340C;
  wdFrenchMonaco = $0000180C;
  wdFrenchReunion = $0000200C;
  wdFrenchSenegal = $0000280C;
  wdSwissFrench = $0000100C;
  wdFrenchWestIndies = $00001C0C;
  wdFrenchZaire = $0000240C;
  wdFrisianNetherlands = $00000462;
  wdGaelicIreland = $0000083C;
  wdGaelicScotland = $0000043C;
  wdGalician = $00000456;
  wdGeorgian = $00000437;
  wdGermanAustria = $00000C07;
  wdGerman = $00000407;
  wdGermanLiechtenstein = $00001407;
  wdGermanLuxembourg = $00001007;
  wdSwissGerman = $00000807;
  wdGreek = $00000408;
  wdGujarati = $00000447;
  wdHebrew = $0000040D;
  wdHindi = $00000439;
  wdHungarian = $0000040E;
  wdIcelandic = $0000040F;
  wdIndonesian = $00000421;
  wdItalian = $00000410;
  wdSwissItalian = $00000810;
  wdJapanese = $00000411;
  wdKannada = $0000044B;
  wdKashmiri = $00000460;
  wdKazakh = $0000043F;
  wdKhmer = $00000453;
  wdKirghiz = $00000440;
  wdKonkani = $00000457;
  wdKorean = $00000412;
  wdLao = $00000454;
  wdLatvian = $00000426;
  wdLithuanian = $00000427;
  wdMacedonian = $0000042F;
  wdMalaysian = $0000043E;
  wdMalayBruneiDarussalam = $0000083E;
  wdMalayalam = $0000044C;
  wdMaltese = $0000043A;
  wdManipuri = $00000458;
  wdMarathi = $0000044E;
  wdMongolian = $00000450;
  wdNepali = $00000461;
  wdNorwegianBokmol = $00000414;
  wdNorwegianNynorsk = $00000814;
  wdOriya = $00000448;
  wdPolish = $00000415;
  wdBrazilianPortuguese = $00000416;
  wdPortuguese = $00000816;
  wdPunjabi = $00000446;
  wdRhaetoRomanic = $00000417;
  wdRomanianMoldova = $00000818;
  wdRomanian = $00000418;
  wdRussianMoldova = $00000819;
  wdRussian = $00000419;
  wdSamiLappish = $0000043B;
  wdSanskrit = $0000044F;
  wdSerbianCyrillic = $00000C1A;
  wdSerbianLatin = $0000081A;
  wdSindhi = $00000459;
  wdSlovak = $0000041B;
  wdSlovenian = $00000424;
  wdSorbian = $0000042E;
  wdSpanishArgentina = $00002C0A;
  wdSpanishBolivia = $0000400A;
  wdSpanishChile = $0000340A;
  wdSpanishColombia = $0000240A;
  wdSpanishCostaRica = $0000140A;
  wdSpanishDominicanRepublic = $00001C0A;
  wdSpanishEcuador = $0000300A;
  wdSpanishElSalvador = $0000440A;
  wdSpanishGuatemala = $0000100A;
  wdSpanishHonduras = $0000480A;
  wdMexicanSpanish = $0000080A;
  wdSpanishNicaragua = $00004C0A;
  wdSpanishPanama = $0000180A;
  wdSpanishParaguay = $00003C0A;
  wdSpanishPeru = $0000280A;
  wdSpanishPuertoRico = $0000500A;
  wdSpanishModernSort = $00000C0A;
  wdSpanish = $0000040A;
  wdSpanishUruguay = $0000380A;
  wdSpanishVenezuela = $0000200A;
  wdSesotho = $00000430;
  wdSutu = $00000430;
  wdSwahili = $00000441;
  wdSwedishFinland = $0000081D;
  wdSwedish = $0000041D;
  wdTajik = $00000428;
  wdTamil = $00000449;
  wdTatar = $00000444;
  wdTelugu = $0000044A;
  wdThai = $0000041E;
  wdTibetan = $00000451;
  wdTsonga = $00000431;
  wdTswana = $00000432;
  wdTurkish = $0000041F;
  wdTurkmen = $00000442;
  wdUkrainian = $00000422;
  wdUrdu = $00000420;
  wdUzbekCyrillic = $00000843;
  wdUzbekLatin = $00000443;
  wdVenda = $00000433;
  wdVietnamese = $0000042A;
  wdWelsh = $00000452;
  wdXhosa = $00000434;
  wdZulu = $00000435;

// Constants for enum WdFieldType
type
  WdFieldType = TOleEnum;
const
  wdFieldEmpty = $FFFFFFFF;
  wdFieldRef = $00000003;
  wdFieldIndexEntry = $00000004;
  wdFieldFootnoteRef = $00000005;
  wdFieldSet = $00000006;
  wdFieldIf = $00000007;
  wdFieldIndex = $00000008;
  wdFieldTOCEntry = $00000009;
  wdFieldStyleRef = $0000000A;
  wdFieldRefDoc = $0000000B;
  wdFieldSequence = $0000000C;
  wdFieldTOC = $0000000D;
  wdFieldInfo = $0000000E;
  wdFieldTitle = $0000000F;
  wdFieldSubject = $00000010;
  wdFieldAuthor = $00000011;
  wdFieldKeyWord = $00000012;
  wdFieldComments = $00000013;
  wdFieldLastSavedBy = $00000014;
  wdFieldCreateDate = $00000015;
  wdFieldSaveDate = $00000016;
  wdFieldPrintDate = $00000017;
  wdFieldRevisionNum = $00000018;
  wdFieldEditTime = $00000019;
  wdFieldNumPages = $0000001A;
  wdFieldNumWords = $0000001B;
  wdFieldNumChars = $0000001C;
  wdFieldFileName = $0000001D;
  wdFieldTemplate = $0000001E;
  wdFieldDate = $0000001F;
  wdFieldTime = $00000020;
  wdFieldPage = $00000021;
  wdFieldExpression = $00000022;
  wdFieldQuote = $00000023;
  wdFieldInclude = $00000024;
  wdFieldPageRef = $00000025;
  wdFieldAsk = $00000026;
  wdFieldFillIn = $00000027;
  wdFieldData = $00000028;
  wdFieldNext = $00000029;
  wdFieldNextIf = $0000002A;
  wdFieldSkipIf = $0000002B;
  wdFieldMergeRec = $0000002C;
  wdFieldDDE = $0000002D;
  wdFieldDDEAuto = $0000002E;
  wdFieldGlossary = $0000002F;
  wdFieldPrint = $00000030;
  wdFieldFormula = $00000031;
  wdFieldGoToButton = $00000032;
  wdFieldMacroButton = $00000033;
  wdFieldAutoNumOutline = $00000034;
  wdFieldAutoNumLegal = $00000035;
  wdFieldAutoNum = $00000036;
  wdFieldImport = $00000037;
  wdFieldLink = $00000038;
  wdFieldSymbol = $00000039;
  wdFieldEmbed = $0000003A;
  wdFieldMergeField = $0000003B;
  wdFieldUserName = $0000003C;
  wdFieldUserInitials = $0000003D;
  wdFieldUserAddress = $0000003E;
  wdFieldBarCode = $0000003F;
  wdFieldDocVariable = $00000040;
  wdFieldSection = $00000041;
  wdFieldSectionPages = $00000042;
  wdFieldIncludePicture = $00000043;
  wdFieldIncludeText = $00000044;
  wdFieldFileSize = $00000045;
  wdFieldFormTextInput = $00000046;
  wdFieldFormCheckBox = $00000047;
  wdFieldNoteRef = $00000048;
  wdFieldTOA = $00000049;
  wdFieldTOAEntry = $0000004A;
  wdFieldMergeSeq = $0000004B;
  wdFieldPrivate = $0000004D;
  wdFieldDatabase = $0000004E;
  wdFieldAutoText = $0000004F;
  wdFieldCompare = $00000050;
  wdFieldAddin = $00000051;
  wdFieldSubscriber = $00000052;
  wdFieldFormDropDown = $00000053;
  wdFieldAdvance = $00000054;
  wdFieldDocProperty = $00000055;
  wdFieldOCX = $00000057;
  wdFieldHyperlink = $00000058;
  wdFieldAutoTextList = $00000059;
  wdFieldListNum = $0000005A;
  wdFieldHTMLActiveX = $0000005B;

// Constants for enum WdBuiltinStyle
type
  WdBuiltinStyle = TOleEnum;
const
  wdStyleNormal = $FFFFFFFF;
  wdStyleEnvelopeAddress = $FFFFFFDB;
  wdStyleEnvelopeReturn = $FFFFFFDA;
  wdStyleBodyText = $FFFFFFBD;
  wdStyleHeading1 = $FFFFFFFE;
  wdStyleHeading2 = $FFFFFFFD;
  wdStyleHeading3 = $FFFFFFFC;
  wdStyleHeading4 = $FFFFFFFB;
  wdStyleHeading5 = $FFFFFFFA;
  wdStyleHeading6 = $FFFFFFF9;
  wdStyleHeading7 = $FFFFFFF8;
  wdStyleHeading8 = $FFFFFFF7;
  wdStyleHeading9 = $FFFFFFF6;
  wdStyleIndex1 = $FFFFFFF5;
  wdStyleIndex2 = $FFFFFFF4;
  wdStyleIndex3 = $FFFFFFF3;
  wdStyleIndex4 = $FFFFFFF2;
  wdStyleIndex5 = $FFFFFFF1;
  wdStyleIndex6 = $FFFFFFF0;
  wdStyleIndex7 = $FFFFFFEF;
  wdStyleIndex8 = $FFFFFFEE;
  wdStyleIndex9 = $FFFFFFED;
  wdStyleTOC1 = $FFFFFFEC;
  wdStyleTOC2 = $FFFFFFEB;
  wdStyleTOC3 = $FFFFFFEA;
  wdStyleTOC4 = $FFFFFFE9;
  wdStyleTOC5 = $FFFFFFE8;
  wdStyleTOC6 = $FFFFFFE7;
  wdStyleTOC7 = $FFFFFFE6;
  wdStyleTOC8 = $FFFFFFE5;
  wdStyleTOC9 = $FFFFFFE4;
  wdStyleNormalIndent = $FFFFFFE3;
  wdStyleFootnoteText = $FFFFFFE2;
  wdStyleCommentText = $FFFFFFE1;
  wdStyleHeader = $FFFFFFE0;
  wdStyleFooter = $FFFFFFDF;
  wdStyleIndexHeading = $FFFFFFDE;
  wdStyleCaption = $FFFFFFDD;
  wdStyleTableOfFigures = $FFFFFFDC;
  wdStyleFootnoteReference = $FFFFFFD9;
  wdStyleCommentReference = $FFFFFFD8;
  wdStyleLineNumber = $FFFFFFD7;
  wdStylePageNumber = $FFFFFFD6;
  wdStyleEndnoteReference = $FFFFFFD5;
  wdStyleEndnoteText = $FFFFFFD4;
  wdStyleTableOfAuthorities = $FFFFFFD3;
  wdStyleMacroText = $FFFFFFD2;
  wdStyleTOAHeading = $FFFFFFD1;
  wdStyleList = $FFFFFFD0;
  wdStyleListBullet = $FFFFFFCF;
  wdStyleListNumber = $FFFFFFCE;
  wdStyleList2 = $FFFFFFCD;
  wdStyleList3 = $FFFFFFCC;
  wdStyleList4 = $FFFFFFCB;
  wdStyleList5 = $FFFFFFCA;
  wdStyleListBullet2 = $FFFFFFC9;
  wdStyleListBullet3 = $FFFFFFC8;
  wdStyleListBullet4 = $FFFFFFC7;
  wdStyleListBullet5 = $FFFFFFC6;
  wdStyleListNumber2 = $FFFFFFC5;
  wdStyleListNumber3 = $FFFFFFC4;
  wdStyleListNumber4 = $FFFFFFC3;
  wdStyleListNumber5 = $FFFFFFC2;
  wdStyleTitle = $FFFFFFC1;
  wdStyleClosing = $FFFFFFC0;
  wdStyleSignature = $FFFFFFBF;
  wdStyleDefaultParagraphFont = $FFFFFFBE;
  wdStyleBodyTextIndent = $FFFFFFBC;
  wdStyleListContinue = $FFFFFFBB;
  wdStyleListContinue2 = $FFFFFFBA;
  wdStyleListContinue3 = $FFFFFFB9;
  wdStyleListContinue4 = $FFFFFFB8;
  wdStyleListContinue5 = $FFFFFFB7;
  wdStyleMessageHeader = $FFFFFFB6;
  wdStyleSubtitle = $FFFFFFB5;
  wdStyleSalutation = $FFFFFFB4;
  wdStyleDate = $FFFFFFB3;
  wdStyleBodyTextFirstIndent = $FFFFFFB2;
  wdStyleBodyTextFirstIndent2 = $FFFFFFB1;
  wdStyleNoteHeading = $FFFFFFB0;
  wdStyleBodyText2 = $FFFFFFAF;
  wdStyleBodyText3 = $FFFFFFAE;
  wdStyleBodyTextIndent2 = $FFFFFFAD;
  wdStyleBodyTextIndent3 = $FFFFFFAC;
  wdStyleBlockQuotation = $FFFFFFAB;
  wdStyleHyperlink = $FFFFFFAA;
  wdStyleHyperlinkFollowed = $FFFFFFA9;
  wdStyleStrong = $FFFFFFA8;
  wdStyleEmphasis = $FFFFFFA7;
  wdStyleNavPane = $FFFFFFA6;
  wdStylePlainText = $FFFFFFA5;
  wdStyleHtmlNormal = $FFFFFFA1;
  wdStyleHtmlAcronym = $FFFFFFA0;
  wdStyleHtmlAddress = $FFFFFF9F;
  wdStyleHtmlCite = $FFFFFF9E;
  wdStyleHtmlCode = $FFFFFF9D;
  wdStyleHtmlDfn = $FFFFFF9C;
  wdStyleHtmlKbd = $FFFFFF9B;
  wdStyleHtmlPre = $FFFFFF9A;
  wdStyleHtmlSamp = $FFFFFF99;
  wdStyleHtmlTt = $FFFFFF98;
  wdStyleHtmlVar = $FFFFFF97;

// Constants for enum WdWordDialogTab
type
  WdWordDialogTab = TOleEnum;
const
  wdDialogToolsOptionsTabView = $000000CC;
  wdDialogToolsOptionsTabGeneral = $000000CB;
  wdDialogToolsOptionsTabEdit = $000000E0;
  wdDialogToolsOptionsTabPrint = $000000D0;
  wdDialogToolsOptionsTabSave = $000000D1;
  wdDialogToolsOptionsTabProofread = $000000D3;
  wdDialogToolsOptionsTabTrackChanges = $00000182;
  wdDialogToolsOptionsTabUserInfo = $000000D5;
  wdDialogToolsOptionsTabCompatibility = $0000020D;
  wdDialogToolsOptionsTabTypography = $000002E3;
  wdDialogToolsOptionsTabFileLocations = $000000E1;
  wdDialogToolsOptionsTabFuzzy = $00000316;
  wdDialogToolsOptionsTabHangulHanjaConversion = $00000312;
  wdDialogToolsOptionsTabBidi = $00000405;
  wdDialogFilePageSetupTabMargins = $000249F0;
  wdDialogFilePageSetupTabPaperSize = $000249F1;
  wdDialogFilePageSetupTabPaperSource = $000249F2;
  wdDialogFilePageSetupTabLayout = $000249F3;
  wdDialogFilePageSetupTabCharsLines = $000249F4;
  wdDialogInsertSymbolTabSymbols = $00030D40;
  wdDialogInsertSymbolTabSpecialCharacters = $00030D41;
  wdDialogNoteOptionsTabAllFootnotes = $000493E0;
  wdDialogNoteOptionsTabAllEndnotes = $000493E1;
  wdDialogInsertIndexAndTablesTabIndex = $00061A80;
  wdDialogInsertIndexAndTablesTabTableOfContents = $00061A81;
  wdDialogInsertIndexAndTablesTabTableOfFigures = $00061A82;
  wdDialogInsertIndexAndTablesTabTableOfAuthorities = $00061A83;
  wdDialogOrganizerTabStyles = $0007A120;
  wdDialogOrganizerTabAutoText = $0007A121;
  wdDialogOrganizerTabCommandBars = $0007A122;
  wdDialogOrganizerTabMacros = $0007A123;
  wdDialogFormatFontTabFont = $000927C0;
  wdDialogFormatFontTabCharacterSpacing = $000927C1;
  wdDialogFormatFontTabAnimation = $000927C2;
  wdDialogFormatBordersAndShadingTabBorders = $000AAE60;
  wdDialogFormatBordersAndShadingTabPageBorder = $000AAE61;
  wdDialogFormatBordersAndShadingTabShading = $000AAE62;
  wdDialogToolsEnvelopesAndLabelsTabEnvelopes = $000C3500;
  wdDialogToolsEnvelopesAndLabelsTabLabels = $000C3501;
  wdDialogFormatParagraphTabIndentsAndSpacing = $000F4240;
  wdDialogFormatParagraphTabTextFlow = $000F4241;
  wdDialogFormatParagraphTabTeisai = $000F4242;
  wdDialogFormatDrawingObjectTabColorsAndLines = $00124F80;
  wdDialogFormatDrawingObjectTabSize = $00124F81;
  wdDialogFormatDrawingObjectTabPosition = $00124F82;
  wdDialogFormatDrawingObjectTabWrapping = $00124F83;
  wdDialogFormatDrawingObjectTabPicture = $00124F84;
  wdDialogFormatDrawingObjectTabTextbox = $00124F85;
  wdDialogFormatDrawingObjectTabWeb = $00124F86;
  wdDialogFormatDrawingObjectTabHR = $00124F87;
  wdDialogToolsAutoCorrectExceptionsTabFirstLetter = $00155CC0;
  wdDialogToolsAutoCorrectExceptionsTabInitialCaps = $00155CC1;
  wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = $00155CC2;
  wdDialogToolsAutoCorrectExceptionsTabIac = $00155CC3;
  wdDialogFormatBulletsAndNumberingTabBulleted = $0016E360;
  wdDialogFormatBulletsAndNumberingTabNumbered = $0016E361;
  wdDialogFormatBulletsAndNumberingTabOutlineNumbered = $0016E362;
  wdDialogLetterWizardTabLetterFormat = $00186A00;
  wdDialogLetterWizardTabRecipientInfo = $00186A01;
  wdDialogLetterWizardTabOtherElements = $00186A02;
  wdDialogLetterWizardTabSenderInfo = $00186A03;
  wdDialogToolsAutoManagerTabAutoCorrect = $0019F0A0;
  wdDialogToolsAutoManagerTabAutoFormatAsYouType = $0019F0A1;
  wdDialogToolsAutoManagerTabAutoText = $0019F0A2;
  wdDialogToolsAutoManagerTabAutoFormat = $0019F0A3;
  wdDialogEmailOptionsTabSignature = $001CFDE0;
  wdDialogEmailOptionsTabStationary = $001CFDE1;
  wdDialogEmailOptionsTabQuoting = $001CFDE2;
  wdDialogWebOptionsGeneral = $001E8480;
  wdDialogWebOptionsFiles = $001E8481;
  wdDialogWebOptionsPictures = $001E8482;
  wdDialogWebOptionsEncoding = $001E8483;
  wdDialogWebOptionsFonts = $001E8484;

// Constants for enum WdWordDialogTabHID
type
  WdWordDialogTabHID = TOleEnum;
const
  emptyenum___________ = $00000000;

// Constants for enum WdWordDialog
type
  WdWordDialog = TOleEnum;
const
  wdDialogHelpAbout = $00000009;
  wdDialogHelpWordPerfectHelp = $0000000A;
  wdDialogHelpWordPerfectHelpOptions = $000001FF;
  wdDialogFormatChangeCase = $00000142;
  wdDialogToolsOptionsFuzzy = $00000316;
  wdDialogToolsWordCount = $000000E4;
  wdDialogDocumentStatistics = $0000004E;
  wdDialogFileNew = $0000004F;
  wdDialogFileOpen = $00000050;
  wdDialogMailMergeOpenDataSource = $00000051;
  wdDialogMailMergeOpenHeaderSource = $00000052;
  wdDialogMailMergeUseAddressBook = $0000030B;
  wdDialogFileSaveAs = $00000054;
  wdDialogFileSummaryInfo = $00000056;
  wdDialogToolsTemplates = $00000057;
  wdDialogOrganizer = $000000DE;
  wdDialogFilePrint = $00000058;
  wdDialogMailMerge = $000002A4;
  wdDialogMailMergeCheck = $000002A5;
  wdDialogMailMergeQueryOptions = $000002A9;
  wdDialogMailMergeFindRecord = $00000239;
  wdDialogMailMergeInsertIf = $00000FD1;
  wdDialogMailMergeInsertNextIf = $00000FD5;
  wdDialogMailMergeInsertSkipIf = $00000FD7;
  wdDialogMailMergeInsertFillIn = $00000FD0;
  wdDialogMailMergeInsertAsk = $00000FCF;
  wdDialogMailMergeInsertSet = $00000FD6;
  wdDialogMailMergeHelper = $000002A8;
  wdDialogLetterWizard = $00000335;
  wdDialogFilePrintSetup = $00000061;
  wdDialogFileFind = $00000063;
  wdDialogMailMergeCreateDataSource = $00000282;
  wdDialogMailMergeCreateHeaderSource = $00000283;
  wdDialogEditPasteSpecial = $0000006F;
  wdDialogEditFind = $00000070;
  wdDialogEditReplace = $00000075;
  wdDialogEditGoToOld = $0000032B;
  wdDialogEditGoTo = $00000380;
  wdDialogCreateAutoText = $00000368;
  wdDialogEditAutoText = $000003D9;
  wdDialogEditLinks = $0000007C;
  wdDialogEditObject = $0000007D;
  wdDialogConvertObject = $00000188;
  wdDialogTableToText = $00000080;
  wdDialogTextToTable = $0000007F;
  wdDialogTableInsertTable = $00000081;
  wdDialogTableInsertCells = $00000082;
  wdDialogTableInsertRow = $00000083;
  wdDialogTableDeleteCells = $00000085;
  wdDialogTableSplitCells = $00000089;
  wdDialogTableFormula = $0000015C;
  wdDialogTableAutoFormat = $00000233;
  wdDialogTableFormatCell = $00000264;
  wdDialogViewZoom = $00000241;
  wdDialogNewToolbar = $0000024A;
  wdDialogInsertBreak = $0000009F;
  wdDialogInsertFootnote = $00000172;
  wdDialogInsertSymbol = $000000A2;
  wdDialogInsertPicture = $000000A3;
  wdDialogInsertFile = $000000A4;
  wdDialogInsertDateTime = $000000A5;
  wdDialogInsertNumber = $0000032C;
  wdDialogInsertField = $000000A6;
  wdDialogInsertDatabase = $00000155;
  wdDialogInsertMergeField = $000000A7;
  wdDialogInsertBookmark = $000000A8;
  wdDialogInsertHyperlink = $0000039D;
  wdDialogMarkIndexEntry = $000000A9;
  wdDialogMarkCitation = $000001CF;
  wdDialogEditTOACategory = $00000271;
  wdDialogInsertIndexAndTables = $000001D9;
  wdDialogInsertIndex = $000000AA;
  wdDialogInsertTableOfContents = $000000AB;
  wdDialogMarkTableOfContentsEntry = $000001BA;
  wdDialogInsertTableOfFigures = $000001D8;
  wdDialogInsertTableOfAuthorities = $000001D7;
  wdDialogInsertObject = $000000AC;
  wdDialogFormatCallout = $00000262;
  wdDialogDrawSnapToGrid = $00000279;
  wdDialogDrawAlign = $0000027A;
  wdDialogToolsEnvelopesAndLabels = $0000025F;
  wdDialogToolsCreateEnvelope = $000000AD;
  wdDialogToolsCreateLabels = $000001E9;
  wdDialogToolsProtectDocument = $000001F7;
  wdDialogToolsProtectSection = $00000242;
  wdDialogToolsUnprotectDocument = $00000209;
  wdDialogFormatFont = $000000AE;
  wdDialogFormatParagraph = $000000AF;
  wdDialogFormatSectionLayout = $000000B0;
  wdDialogFormatColumns = $000000B1;
  wdDialogFileDocumentLayout = $000000B2;
  wdDialogFileMacPageSetup = $000002AD;
  wdDialogFilePrintOneCopy = $000001BD;
  wdDialogFileMacPageSetupGX = $000001BC;
  wdDialogFileMacCustomPageSetupGX = $000002E1;
  wdDialogFilePageSetup = $000000B2;
  wdDialogFormatTabs = $000000B3;
  wdDialogFormatStyle = $000000B4;
  wdDialogFormatStyleGallery = $000001F9;
  wdDialogFormatDefineStyleFont = $000000B5;
  wdDialogFormatDefineStylePara = $000000B6;
  wdDialogFormatDefineStyleTabs = $000000B7;
  wdDialogFormatDefineStyleFrame = $000000B8;
  wdDialogFormatDefineStyleBorders = $000000B9;
  wdDialogFormatDefineStyleLang = $000000BA;
  wdDialogFormatPicture = $000000BB;
  wdDialogToolsLanguage = $000000BC;
  wdDialogFormatBordersAndShading = $000000BD;
  wdDialogFormatDrawingObject = $000003C0;
  wdDialogFormatFrame = $000000BE;
  wdDialogFormatDropCap = $000001E8;
  wdDialogFormatBulletsAndNumbering = $00000338;
  wdDialogToolsHyphenation = $000000C3;
  wdDialogToolsBulletsNumbers = $000000C4;
  wdDialogToolsHighlightChanges = $000000C5;
  wdDialogToolsAcceptRejectChanges = $000001FA;
  wdDialogToolsMergeDocuments = $000001B3;
  wdDialogToolsCompareDocuments = $000000C6;
  wdDialogTableSort = $000000C7;
  wdDialogToolsCustomizeMenuBar = $00000267;
  wdDialogToolsCustomize = $00000098;
  wdDialogToolsCustomizeKeyboard = $000001B0;
  wdDialogToolsCustomizeMenus = $000001B1;
  wdDialogListCommands = $000002D3;
  wdDialogToolsOptions = $000003CE;
  wdDialogToolsOptionsGeneral = $000000CB;
  wdDialogToolsAdvancedSettings = $000000CE;
  wdDialogToolsOptionsCompatibility = $0000020D;
  wdDialogToolsOptionsPrint = $000000D0;
  wdDialogToolsOptionsSave = $000000D1;
  wdDialogToolsOptionsSpellingAndGrammar = $000000D3;
  wdDialogToolsSpellingAndGrammar = $0000033C;
  wdDialogToolsThesaurus = $000000C2;
  wdDialogToolsOptionsUserInfo = $000000D5;
  wdDialogToolsOptionsAutoFormat = $000003BF;
  wdDialogToolsOptionsTrackChanges = $00000182;
  wdDialogToolsOptionsEdit = $000000E0;
  wdDialogToolsMacro = $000000D7;
  wdDialogInsertPageNumbers = $00000126;
  wdDialogFormatPageNumber = $0000012A;
  wdDialogNoteOptions = $00000175;
  wdDialogCopyFile = $0000012C;
  wdDialogFormatAddrFonts = $00000067;
  wdDialogFormatRetAddrFonts = $000000DD;
  wdDialogToolsOptionsFileLocations = $000000E1;
  wdDialogToolsCreateDirectory = $00000341;
  wdDialogUpdateTOC = $0000014B;
  wdDialogInsertFormField = $000001E3;
  wdDialogFormFieldOptions = $00000161;
  wdDialogInsertCaption = $00000165;
  wdDialogInsertAutoCaption = $00000167;
  wdDialogInsertAddCaption = $00000192;
  wdDialogInsertCaptionNumbering = $00000166;
  wdDialogInsertCrossReference = $0000016F;
  wdDialogToolsManageFields = $00000277;
  wdDialogToolsAutoManager = $00000393;
  wdDialogToolsAutoCorrect = $0000017A;
  wdDialogToolsAutoCorrectExceptions = $000002FA;
  wdDialogConnect = $000001A4;
  wdDialogToolsOptionsBidi = $00000405;
  wdDialogToolsOptionsView = $000000CC;
  wdDialogInsertSubdocument = $00000247;
  wdDialogFileRoutingSlip = $00000270;
  wdDialogFontSubstitution = $00000245;
  wdDialogEditCreatePublisher = $000002DC;
  wdDialogEditSubscribeTo = $000002DD;
  wdDialogEditPublishOptions = $000002DF;
  wdDialogEditSubscribeOptions = $000002E0;
  wdDialogToolsOptionsTypography = $000002E3;
  wdDialogToolsOptionsAutoFormatAsYouType = $0000030A;
  wdDialogControlRun = $000000EB;
  wdDialogFileVersions = $000003B1;
  wdDialogToolsAutoSummarize = $0000036A;
  wdDialogFileSaveVersion = $000003EF;
  wdDialogWindowActivate = $000000DC;
  wdDialogToolsMacroRecord = $000000D6;
  wdDialogToolsRevisions = $000000C5;
  wdDialogEmailOptions = $0000035F;
  wdDialogWebOptions = $00000382;
  wdDialogFitText = $000003D7;
  wdDialogPhoneticGuide = $000003DA;
  wdDialogHorizontalInVertical = $00000488;
  wdDialogTwoLinesInOne = $00000489;
  wdDialogFormatEncloseCharacters = $0000048A;
  wdDialogFormatTheme = $00000357;
  wdDialogTCSCTranslator = $00000484;

// Constants for enum WdWordDialogHID
type
  WdWordDialogHID = TOleEnum;
const
  emptyenum____________ = $00000000;

// Constants for enum WdFieldKind
type
  WdFieldKind = TOleEnum;
const
  wdFieldKindNone = $00000000;
  wdFieldKindHot = $00000001;
  wdFieldKindWarm = $00000002;
  wdFieldKindCold = $00000003;

// Constants for enum WdTextFormFieldType
type
  WdTextFormFieldType = TOleEnum;
const
  wdRegularText = $00000000;
  wdNumberText = $00000001;
  wdDateText = $00000002;
  wdCurrentDateText = $00000003;
  wdCurrentTimeText = $00000004;
  wdCalculationText = $00000005;

// Constants for enum WdChevronConvertRule
type
  WdChevronConvertRule = TOleEnum;
const
  wdNeverConvert = $00000000;
  wdAlwaysConvert = $00000001;
  wdAskToNotConvert = $00000002;
  wdAskToConvert = $00000003;

// Constants for enum WdMailMergeMainDocType
type
  WdMailMergeMainDocType = TOleEnum;
const
  wdNotAMergeDocument = $FFFFFFFF;
  wdFormLetters = $00000000;
  wdMailingLabels = $00000001;
  wdEnvelopes = $00000002;
  wdCatalog = $00000003;

// Constants for enum WdMailMergeState
type
  WdMailMergeState = TOleEnum;
const
  wdNormalDocument = $00000000;
  wdMainDocumentOnly = $00000001;
  wdMainAndDataSource = $00000002;
  wdMainAndHeader = $00000003;
  wdMainAndSourceAndHeader = $00000004;
  wdDataSource = $00000005;

// Constants for enum WdMailMergeDestination
type
  WdMailMergeDestination = TOleEnum;
const
  wdSendToNewDocument = $00000000;
  wdSendToPrinter = $00000001;
  wdSendToEmail = $00000002;
  wdSendToFax = $00000003;

// Constants for enum WdMailMergeActiveRecord
type
  WdMailMergeActiveRecord = TOleEnum;
const
  wdNoActiveRecord = $FFFFFFFF;
  wdNextRecord = $FFFFFFFE;
  wdPreviousRecord = $FFFFFFFD;
  wdFirstRecord = $FFFFFFFC;
  wdLastRecord = $FFFFFFFB;

// Constants for enum WdMailMergeDefaultRecord
type
  WdMailMergeDefaultRecord = TOleEnum;
const
  wdDefaultFirstRecord = $00000001;
  wdDefaultLastRecord = $FFFFFFF0;

// Constants for enum WdMailMergeDataSource
type
  WdMailMergeDataSource = TOleEnum;
const
  wdNoMergeInfo = $FFFFFFFF;
  wdMergeInfoFromWord = $00000000;
  wdMergeInfoFromAccessDDE = $00000001;
  wdMergeInfoFromExcelDDE = $00000002;
  wdMergeInfoFromMSQueryDDE = $00000003;
  wdMergeInfoFromODBC = $00000004;

// Constants for enum WdMailMergeComparison
type
  WdMailMergeComparison = TOleEnum;
const
  wdMergeIfEqual = $00000000;
  wdMergeIfNotEqual = $00000001;
  wdMergeIfLessThan = $00000002;
  wdMergeIfGreaterThan = $00000003;
  wdMergeIfLessThanOrEqual = $00000004;
  wdMergeIfGreaterThanOrEqual = $00000005;
  wdMergeIfIsBlank = $00000006;
  wdMergeIfIsNotBlank = $00000007;

// Constants for enum WdBookmarkSortBy
type
  WdBookmarkSortBy = TOleEnum;
const
  wdSortByName = $00000000;
  wdSortByLocation = $00000001;

// Constants for enum WdWindowState
type
  WdWindowState = TOleEnum;
const
  wdWindowStateNormal = $00000000;
  wdWindowStateMaximize = $00000001;
  wdWindowStateMinimize = $00000002;

// Constants for enum WdPictureLinkType
type
  WdPictureLinkType = TOleEnum;
const
  wdLinkNone = $00000000;
  wdLinkDataInDoc = $00000001;
  wdLinkDataOnDisk = $00000002;

// Constants for enum WdLinkType
type
  WdLinkType = TOleEnum;
const
  wdLinkTypeOLE = $00000000;
  wdLinkTypePicture = $00000001;
  wdLinkTypeText = $00000002;
  wdLinkTypeReference = $00000003;
  wdLinkTypeInclude = $00000004;
  wdLinkTypeImport = $00000005;
  wdLinkTypeDDE = $00000006;
  wdLinkTypeDDEAuto = $00000007;

// Constants for enum WdWindowType
type
  WdWindowType = TOleEnum;
const
  wdWindowDocument = $00000000;
  wdWindowTemplate = $00000001;

// Constants for enum WdViewType
type
  WdViewType = TOleEnum;
const
  wdNormalView = $00000001;
  wdOutlineView = $00000002;
  wdPrintView = $00000003;
  wdPrintPreview = $00000004;
  wdMasterView = $00000005;
  wdWebView = $00000006;

// Constants for enum WdSeekView
type
  WdSeekView = TOleEnum;
const
  wdSeekMainDocument = $00000000;
  wdSeekPrimaryHeader = $00000001;
  wdSeekFirstPageHeader = $00000002;
  wdSeekEvenPagesHeader = $00000003;
  wdSeekPrimaryFooter = $00000004;
  wdSeekFirstPageFooter = $00000005;
  wdSeekEvenPagesFooter = $00000006;
  wdSeekFootnotes = $00000007;
  wdSeekEndnotes = $00000008;
  wdSeekCurrentPageHeader = $00000009;
  wdSeekCurrentPageFooter = $0000000A;

// Constants for enum WdSpecialPane
type
  WdSpecialPane = TOleEnum;
const
  wdPaneNone = $00000000;
  wdPanePrimaryHeader = $00000001;
  wdPaneFirstPageHeader = $00000002;
  wdPaneEvenPagesHeader = $00000003;
  wdPanePrimaryFooter = $00000004;
  wdPaneFirstPageFooter = $00000005;
  wdPaneEvenPagesFooter = $00000006;
  wdPaneFootnotes = $00000007;
  wdPaneEndnotes = $00000008;
  wdPaneFootnoteContinuationNotice = $00000009;
  wdPaneFootnoteContinuationSeparator = $0000000A;
  wdPaneFootnoteSeparator = $0000000B;
  wdPaneEndnoteContinuationNotice = $0000000C;
  wdPaneEndnoteContinuationSeparator = $0000000D;
  wdPaneEndnoteSeparator = $0000000E;
  wdPaneComments = $0000000F;
  wdPaneCurrentPageHeader = $00000010;
  wdPaneCurrentPageFooter = $00000011;

// Constants for enum WdPageFit
type
  WdPageFit = TOleEnum;
const
  wdPageFitNone = $00000000;
  wdPageFitFullPage = $00000001;
  wdPageFitBestFit = $00000002;
  wdPageFitTextFit = $00000003;

// Constants for enum WdBrowseTarget
type
  WdBrowseTarget = TOleEnum;
const
  wdBrowsePage = $00000001;
  wdBrowseSection = $00000002;
  wdBrowseComment = $00000003;
  wdBrowseFootnote = $00000004;
  wdBrowseEndnote = $00000005;
  wdBrowseField = $00000006;
  wdBrowseTable = $00000007;
  wdBrowseGraphic = $00000008;
  wdBrowseHeading = $00000009;
  wdBrowseEdit = $0000000A;
  wdBrowseFind = $0000000B;
  wdBrowseGoTo = $0000000C;

// Constants for enum WdPaperTray
type
  WdPaperTray = TOleEnum;
const
  wdPrinterDefaultBin = $00000000;
  wdPrinterUpperBin = $00000001;
  wdPrinterOnlyBin = $00000001;
  wdPrinterLowerBin = $00000002;
  wdPrinterMiddleBin = $00000003;
  wdPrinterManualFeed = $00000004;
  wdPrinterEnvelopeFeed = $00000005;
  wdPrinterManualEnvelopeFeed = $00000006;
  wdPrinterAutomaticSheetFeed = $00000007;
  wdPrinterTractorFeed = $00000008;
  wdPrinterSmallFormatBin = $00000009;
  wdPrinterLargeFormatBin = $0000000A;
  wdPrinterLargeCapacityBin = $0000000B;
  wdPrinterPaperCassette = $0000000E;
  wdPrinterFormSource = $0000000F;

// Constants for enum WdOrientation
type
  WdOrientation = TOleEnum;
const
  wdOrientPortrait = $00000000;
  wdOrientLandscape = $00000001;

// Constants for enum WdSelectionType
type
  WdSelectionType = TOleEnum;
const
  wdNoSelection = $00000000;
  wdSelectionIP = $00000001;
  wdSelectionNormal = $00000002;
  wdSelectionFrame = $00000003;
  wdSelectionColumn = $00000004;
  wdSelectionRow = $00000005;
  wdSelectionBlock = $00000006;
  wdSelectionInlineShape = $00000007;
  wdSelectionShape = $00000008;

// Constants for enum WdCaptionLabelID
type
  WdCaptionLabelID = TOleEnum;
const
  wdCaptionFigure = $FFFFFFFF;
  wdCaptionTable = $FFFFFFFE;
  wdCaptionEquation = $FFFFFFFD;

// Constants for enum WdReferenceType
type
  WdReferenceType = TOleEnum;
const
  wdRefTypeNumberedItem = $00000000;
  wdRefTypeHeading = $00000001;
  wdRefTypeBookmark = $00000002;
  wdRefTypeFootnote = $00000003;
  wdRefTypeEndnote = $00000004;

// Constants for enum WdReferenceKind
type
  WdReferenceKind = TOleEnum;
const
  wdContentText = $FFFFFFFF;
  wdNumberRelativeContext = $FFFFFFFE;
  wdNumberNoContext = $FFFFFFFD;
  wdNumberFullContext = $FFFFFFFC;
  wdEntireCaption = $00000002;
  wdOnlyLabelAndNumber = $00000003;
  wdOnlyCaptionText = $00000004;
  wdFootnoteNumber = $00000005;
  wdEndnoteNumber = $00000006;
  wdPageNumber = $00000007;
  wdPosition = $0000000F;
  wdFootnoteNumberFormatted = $00000010;
  wdEndnoteNumberFormatted = $00000011;

// Constants for enum WdIndexFormat
type
  WdIndexFormat = TOleEnum;
const
  wdIndexTemplate = $00000000;
  wdIndexClassic = $00000001;
  wdIndexFancy = $00000002;
  wdIndexModern = $00000003;
  wdIndexBulleted = $00000004;
  wdIndexFormal = $00000005;
  wdIndexSimple = $00000006;

// Constants for enum WdIndexType
type
  WdIndexType = TOleEnum;
const
  wdIndexIndent = $00000000;
  wdIndexRunin = $00000001;

// Constants for enum WdRevisionsWrap
type
  WdRevisionsWrap = TOleEnum;
const
  wdWrapNever = $00000000;
  wdWrapAlways = $00000001;
  wdWrapAsk = $00000002;

// Constants for enum WdRevisionType
type
  WdRevisionType = TOleEnum;
const
  wdNoRevision = $00000000;
  wdRevisionInsert = $00000001;
  wdRevisionDelete = $00000002;
  wdRevisionProperty = $00000003;
  wdRevisionParagraphNumber = $00000004;
  wdRevisionDisplayField = $00000005;
  wdRevisionReconcile = $00000006;
  wdRevisionConflict = $00000007;
  wdRevisionStyle = $00000008;
  wdRevisionReplace = $00000009;

// Constants for enum WdRoutingSlipDelivery
type
  WdRoutingSlipDelivery = TOleEnum;
const
  wdOneAfterAnother = $00000000;
  wdAllAtOnce = $00000001;

// Constants for enum WdRoutingSlipStatus
type
  WdRoutingSlipStatus = TOleEnum;
const
  wdNotYetRouted = $00000000;
  wdRouteInProgress = $00000001;
  wdRouteComplete = $00000002;

// Constants for enum WdSectionStart
type
  WdSectionStart = TOleEnum;
const
  wdSectionContinuous = $00000000;
  wdSectionNewColumn = $00000001;
  wdSectionNewPage = $00000002;
  wdSectionEvenPage = $00000003;
  wdSectionOddPage = $00000004;

// Constants for enum WdSaveOptions
type
  WdSaveOptions = TOleEnum;
const
  wdDoNotSaveChanges = $00000000;
  wdSaveChanges = $FFFFFFFF;
  wdPromptToSaveChanges = $FFFFFFFE;

// Constants for enum WdDocumentKind
type
  WdDocumentKind = TOleEnum;
const
  wdDocumentNotSpecified = $00000000;
  wdDocumentLetter = $00000001;
  wdDocumentEmail = $00000002;

// Constants for enum WdDocumentType
type
  WdDocumentType = TOleEnum;
const
  wdTypeDocument = $00000000;
  wdTypeTemplate = $00000001;
  wdTypeFrameset = $00000002;

// Constants for enum WdOriginalFormat
type
  WdOriginalFormat = TOleEnum;
const
  wdWordDocument = $00000000;
  wdOriginalDocumentFormat = $00000001;
  wdPromptUser = $00000002;

// Constants for enum WdRelocate
type
  WdRelocate = TOleEnum;
const
  wdRelocateUp = $00000000;
  wdRelocateDown = $00000001;

// Constants for enum WdInsertedTextMark
type
  WdInsertedTextMark = TOleEnum;
const
  wdInsertedTextMarkNone = $00000000;
  wdInsertedTextMarkBold = $00000001;
  wdInsertedTextMarkItalic = $00000002;
  wdInsertedTextMarkUnderline = $00000003;
  wdInsertedTextMarkDoubleUnderline = $00000004;

// Constants for enum WdRevisedLinesMark
type
  WdRevisedLinesMark = TOleEnum;
const
  wdRevisedLinesMarkNone = $00000000;
  wdRevisedLinesMarkLeftBorder = $00000001;
  wdRevisedLinesMarkRightBorder = $00000002;
  wdRevisedLinesMarkOutsideBorder = $00000003;

// Constants for enum WdDeletedTextMark
type
  WdDeletedTextMark = TOleEnum;
const
  wdDeletedTextMarkHidden = $00000000;
  wdDeletedTextMarkStrikeThrough = $00000001;
  wdDeletedTextMarkCaret = $00000002;
  wdDeletedTextMarkPound = $00000003;

// Constants for enum WdRevisedPropertiesMark
type
  WdRevisedPropertiesMark = TOleEnum;
const
  wdRevisedPropertiesMarkNone = $00000000;
  wdRevisedPropertiesMarkBold = $00000001;
  wdRevisedPropertiesMarkItalic = $00000002;
  wdRevisedPropertiesMarkUnderline = $00000003;
  wdRevisedPropertiesMarkDoubleUnderline = $00000004;

// Constants for enum WdFieldShading
type
  WdFieldShading = TOleEnum;
const
  wdFieldShadingNever = $00000000;
  wdFieldShadingAlways = $00000001;
  wdFieldShadingWhenSelected = $00000002;

// Constants for enum WdDefaultFilePath
type
  WdDefaultFilePath = TOleEnum;
const
  wdDocumentsPath = $00000000;
  wdPicturesPath = $00000001;
  wdUserTemplatesPath = $00000002;
  wdWorkgroupTemplatesPath = $00000003;
  wdUserOptionsPath = $00000004;
  wdAutoRecoverPath = $00000005;
  wdToolsPath = $00000006;
  wdTutorialPath = $00000007;
  wdStartupPath = $00000008;
  wdProgramPath = $00000009;
  wdGraphicsFiltersPath = $0000000A;
  wdTextConvertersPath = $0000000B;
  wdProofingToolsPath = $0000000C;
  wdTempFilePath = $0000000D;
  wdCurrentFolderPath = $0000000E;
  wdStyleGalleryPath = $0000000F;
  wdBorderArtPath = $00000013;

// Constants for enum WdCompatibility
type
  WdCompatibility = TOleEnum;
const
  wdNoTabHangIndent = $00000001;
  wdNoSpaceRaiseLower = $00000002;
  wdPrintColBlack = $00000003;
  wdWrapTrailSpaces = $00000004;
  wdNoColumnBalance = $00000005;
  wdConvMailMergeEsc = $00000006;
  wdSuppressSpBfAfterPgBrk = $00000007;
  wdSuppressTopSpacing = $00000008;
  wdOrigWordTableRules = $00000009;
  wdTransparentMetafiles = $0000000A;
  wdShowBreaksInFrames = $0000000B;
  wdSwapBordersFacingPages = $0000000C;
  wdLeaveBackslashAlone = $0000000D;
  wdExpandShiftReturn = $0000000E;
  wdDontULTrailSpace = $0000000F;
  wdDontBalanceSingleByteDoubleByteWidth = $00000010;
  wdSuppressTopSpacingMac5 = $00000011;
  wdSpacingInWholePoints = $00000012;
  wdPrintBodyTextBeforeHeader = $00000013;
  wdNoLeading = $00000014;
  wdNoSpaceForUL = $00000015;
  wdMWSmallCaps = $00000016;
  wdNoExtraLineSpacing = $00000017;
  wdTruncateFontHeight = $00000018;
  wdSubFontBySize = $00000019;
  wdUsePrinterMetrics = $0000001A;
  wdWW6BorderRules = $0000001B;
  wdExactOnTop = $0000001C;
  wdSuppressBottomSpacing = $0000001D;
  wdWPSpaceWidth = $0000001E;
  wdWPJustification = $0000001F;
  wdLineWrapLikeWord6 = $00000020;
  wdShapeLayoutLikeWW8 = $00000021;
  wdFootnoteLayoutLikeWW8 = $00000022;
  wdDontUseHTMLParagraphAutoSpacing = $00000023;
  wdDontAdjustLineHeightInTable = $00000024;
  wdForgetLastTabAlignment = $00000025;
  wdAutospaceLikeWW7 = $00000026;
  wdAlignTablesRowByRow = $00000027;
  wdLayoutRawTableWidth = $00000028;
  wdLayoutTableRowsApart = $00000029;
  wdUseWord97LineBreakingRules = $0000002A;

// Constants for enum WdPaperSize
type
  WdPaperSize = TOleEnum;
const
  wdPaper10x14 = $00000000;
  wdPaper11x17 = $00000001;
  wdPaperLetter = $00000002;
  wdPaperLetterSmall = $00000003;
  wdPaperLegal = $00000004;
  wdPaperExecutive = $00000005;
  wdPaperA3 = $00000006;
  wdPaperA4 = $00000007;
  wdPaperA4Small = $00000008;
  wdPaperA5 = $00000009;
  wdPaperB4 = $0000000A;
  wdPaperB5 = $0000000B;
  wdPaperCSheet = $0000000C;
  wdPaperDSheet = $0000000D;
  wdPaperESheet = $0000000E;
  wdPaperFanfoldLegalGerman = $0000000F;
  wdPaperFanfoldStdGerman = $00000010;
  wdPaperFanfoldUS = $00000011;
  wdPaperFolio = $00000012;
  wdPaperLedger = $00000013;
  wdPaperNote = $00000014;
  wdPaperQuarto = $00000015;
  wdPaperStatement = $00000016;
  wdPaperTabloid = $00000017;
  wdPaperEnvelope9 = $00000018;
  wdPaperEnvelope10 = $00000019;
  wdPaperEnvelope11 = $0000001A;
  wdPaperEnvelope12 = $0000001B;
  wdPaperEnvelope14 = $0000001C;
  wdPaperEnvelopeB4 = $0000001D;
  wdPaperEnvelopeB5 = $0000001E;
  wdPaperEnvelopeB6 = $0000001F;
  wdPaperEnvelopeC3 = $00000020;
  wdPaperEnvelopeC4 = $00000021;
  wdPaperEnvelopeC5 = $00000022;
  wdPaperEnvelopeC6 = $00000023;
  wdPaperEnvelopeC65 = $00000024;
  wdPaperEnvelopeDL = $00000025;
  wdPaperEnvelopeItaly = $00000026;
  wdPaperEnvelopeMonarch = $00000027;
  wdPaperEnvelopePersonal = $00000028;
  wdPaperCustom = $00000029;

// Constants for enum WdCustomLabelPageSize
type
  WdCustomLabelPageSize = TOleEnum;
const
  wdCustomLabelLetter = $00000000;
  wdCustomLabelLetterLS = $00000001;
  wdCustomLabelA4 = $00000002;
  wdCustomLabelA4LS = $00000003;
  wdCustomLabelA5 = $00000004;
  wdCustomLabelA5LS = $00000005;
  wdCustomLabelB5 = $00000006;
  wdCustomLabelMini = $00000007;
  wdCustomLabelFanfold = $00000008;
  wdCustomLabelVertHalfSheet = $00000009;
  wdCustomLabelVertHalfSheetLS = $0000000A;
  wdCustomLabelHigaki = $0000000B;
  wdCustomLabelHigakiLS = $0000000C;
  wdCustomLabelB4JIS = $0000000D;

// Constants for enum WdProtectionType
type
  WdProtectionType = TOleEnum;
const
  wdNoProtection = $FFFFFFFF;
  wdAllowOnlyRevisions = $00000000;
  wdAllowOnlyComments = $00000001;
  wdAllowOnlyFormFields = $00000002;

// Constants for enum WdPartOfSpeech
type
  WdPartOfSpeech = TOleEnum;
const
  wdAdjective = $00000000;
  wdNoun = $00000001;
  wdAdverb = $00000002;
  wdVerb = $00000003;
  wdPronoun = $00000004;
  wdConjunction = $00000005;
  wdPreposition = $00000006;
  wdInterjection = $00000007;
  wdIdiom = $00000008;
  wdOther = $00000009;

// Constants for enum WdSubscriberFormats
type
  WdSubscriberFormats = TOleEnum;
const
  wdSubscriberBestFormat = $00000000;
  wdSubscriberRTF = $00000001;
  wdSubscriberText = $00000002;
  wdSubscriberPict = $00000004;

// Constants for enum WdEditionType
type
  WdEditionType = TOleEnum;
const
  wdPublisher = $00000000;
  wdSubscriber = $00000001;

// Constants for enum WdEditionOption
type
  WdEditionOption = TOleEnum;
const
  wdCancelPublisher = $00000000;
  wdSendPublisher = $00000001;
  wdSelectPublisher = $00000002;
  wdAutomaticUpdate = $00000003;
  wdManualUpdate = $00000004;
  wdChangeAttributes = $00000005;
  wdUpdateSubscriber = $00000006;
  wdOpenSource = $00000007;

// Constants for enum WdRelativeHorizontalPosition
type
  WdRelativeHorizontalPosition = TOleEnum;
const
  wdRelativeHorizontalPositionMargin = $00000000;
  wdRelativeHorizontalPositionPage = $00000001;
  wdRelativeHorizontalPositionColumn = $00000002;
  wdRelativeHorizontalPositionCharacter = $00000003;

// Constants for enum WdRelativeVerticalPosition
type
  WdRelativeVerticalPosition = TOleEnum;
const
  wdRelativeVerticalPositionMargin = $00000000;
  wdRelativeVerticalPositionPage = $00000001;
  wdRelativeVerticalPositionParagraph = $00000002;
  wdRelativeVerticalPositionLine = $00000003;

// Constants for enum WdHelpType
type
  WdHelpType = TOleEnum;
const
  wdHelp = $00000000;
  wdHelpAbout = $00000001;
  wdHelpActiveWindow = $00000002;
  wdHelpContents = $00000003;
  wdHelpExamplesAndDemos = $00000004;
  wdHelpIndex = $00000005;
  wdHelpKeyboard = $00000006;
  wdHelpPSSHelp = $00000007;
  wdHelpQuickPreview = $00000008;
  wdHelpSearch = $00000009;
  wdHelpUsingHelp = $0000000A;
  wdHelpIchitaro = $0000000B;
  wdHelpPE2 = $0000000C;
  wdHelpHWP = $0000000D;

// Constants for enum WdHelpTypeHID
type
  WdHelpTypeHID = TOleEnum;
const
  emptyenum_____________ = $00000000;

// Constants for enum WdKeyCategory
type
  WdKeyCategory = TOleEnum;
const
  wdKeyCategoryNil = $FFFFFFFF;
  wdKeyCategoryDisable = $00000000;
  wdKeyCategoryCommand = $00000001;
  wdKeyCategoryMacro = $00000002;
  wdKeyCategoryFont = $00000003;
  wdKeyCategoryAutoText = $00000004;
  wdKeyCategoryStyle = $00000005;
  wdKeyCategorySymbol = $00000006;
  wdKeyCategoryPrefix = $00000007;

// Constants for enum WdKey
type
  WdKey = TOleEnum;
const
  wdNoKey = $000000FF;
  wdKeyShift = $00000100;
  wdKeyControl = $00000200;
  wdKeyCommand = $00000200;
  wdKeyAlt = $00000400;
  wdKeyOption = $00000400;
  wdKeyA = $00000041;
  wdKeyB = $00000042;
  wdKeyC = $00000043;
  wdKeyD = $00000044;
  wdKeyE = $00000045;
  wdKeyF = $00000046;
  wdKeyG = $00000047;
  wdKeyH = $00000048;
  wdKeyI = $00000049;
  wdKeyJ = $0000004A;
  wdKeyK = $0000004B;
  wdKeyL = $0000004C;
  wdKeyM = $0000004D;
  wdKeyN = $0000004E;
  wdKeyO = $0000004F;
  wdKeyP = $00000050;
  wdKeyQ = $00000051;
  wdKeyR = $00000052;
  wdKeyS = $00000053;
  wdKeyT = $00000054;
  wdKeyU = $00000055;
  wdKeyV = $00000056;
  wdKeyW = $00000057;
  wdKeyX = $00000058;
  wdKeyY = $00000059;
  wdKeyZ = $0000005A;
  wdKey0 = $00000030;
  wdKey1 = $00000031;
  wdKey2 = $00000032;
  wdKey3 = $00000033;
  wdKey4 = $00000034;
  wdKey5 = $00000035;
  wdKey6 = $00000036;
  wdKey7 = $00000037;
  wdKey8 = $00000038;
  wdKey9 = $00000039;
  wdKeyBackspace = $00000008;
  wdKeyTab = $00000009;
  wdKeyNumeric5Special = $0000000C;
  wdKeyReturn = $0000000D;
  wdKeyPause = $00000013;
  wdKeyEsc = $0000001B;
  wdKeySpacebar = $00000020;
  wdKeyPageUp = $00000021;
  wdKeyPageDown = $00000022;
  wdKeyEnd = $00000023;
  wdKeyHome = $00000024;
  wdKeyInsert = $0000002D;
  wdKeyDelete = $0000002E;
  wdKeyNumeric0 = $00000060;
  wdKeyNumeric1 = $00000061;
  wdKeyNumeric2 = $00000062;
  wdKeyNumeric3 = $00000063;
  wdKeyNumeric4 = $00000064;
  wdKeyNumeric5 = $00000065;
  wdKeyNumeric6 = $00000066;
  wdKeyNumeric7 = $00000067;
  wdKeyNumeric8 = $00000068;
  wdKeyNumeric9 = $00000069;
  wdKeyNumericMultiply = $0000006A;
  wdKeyNumericAdd = $0000006B;
  wdKeyNumericSubtract = $0000006D;
  wdKeyNumericDecimal = $0000006E;
  wdKeyNumericDivide = $0000006F;
  wdKeyF1 = $00000070;
  wdKeyF2 = $00000071;
  wdKeyF3 = $00000072;
  wdKeyF4 = $00000073;
  wdKeyF5 = $00000074;
  wdKeyF6 = $00000075;
  wdKeyF7 = $00000076;
  wdKeyF8 = $00000077;
  wdKeyF9 = $00000078;
  wdKeyF10 = $00000079;
  wdKeyF11 = $0000007A;
  wdKeyF12 = $0000007B;
  wdKeyF13 = $0000007C;
  wdKeyF14 = $0000007D;
  wdKeyF15 = $0000007E;
  wdKeyF16 = $0000007F;
  wdKeyScrollLock = $00000091;
  wdKeySemiColon = $000000BA;
  wdKeyEquals = $000000BB;
  wdKeyComma = $000000BC;
  wdKeyHyphen = $000000BD;
  wdKeyPeriod = $000000BE;
  wdKeySlash = $000000BF;
  wdKeyBackSingleQuote = $000000C0;
  wdKeyOpenSquareBrace = $000000DB;
  wdKeyBackSlash = $000000DC;
  wdKeyCloseSquareBrace = $000000DD;
  wdKeySingleQuote = $000000DE;

// Constants for enum WdOLEType
type
  WdOLEType = TOleEnum;
const
  wdOLELink = $00000000;
  wdOLEEmbed = $00000001;
  wdOLEControl = $00000002;

// Constants for enum WdOLEVerb
type
  WdOLEVerb = TOleEnum;
const
  wdOLEVerbPrimary = $00000000;
  wdOLEVerbShow = $FFFFFFFF;
  wdOLEVerbOpen = $FFFFFFFE;
  wdOLEVerbHide = $FFFFFFFD;
  wdOLEVerbUIActivate = $FFFFFFFC;
  wdOLEVerbInPlaceActivate = $FFFFFFFB;
  wdOLEVerbDiscardUndoState = $FFFFFFFA;

// Constants for enum WdOLEPlacement
type
  WdOLEPlacement = TOleEnum;
const
  wdInLine = $00000000;
  wdFloatOverText = $00000001;

// Constants for enum WdEnvelopeOrientation
type
  WdEnvelopeOrientation = TOleEnum;
const
  wdLeftPortrait = $00000000;
  wdCenterPortrait = $00000001;
  wdRightPortrait = $00000002;
  wdLeftLandscape = $00000003;
  wdCenterLandscape = $00000004;
  wdRightLandscape = $00000005;
  wdLeftClockwise = $00000006;
  wdCenterClockwise = $00000007;
  wdRightClockwise = $00000008;

// Constants for enum WdLetterStyle
type
  WdLetterStyle = TOleEnum;
const
  wdFullBlock = $00000000;
  wdModifiedBlock = $00000001;
  wdSemiBlock = $00000002;

// Constants for enum WdLetterheadLocation
type
  WdLetterheadLocation = TOleEnum;
const
  wdLetterTop = $00000000;
  wdLetterBottom = $00000001;
  wdLetterLeft = $00000002;
  wdLetterRight = $00000003;

// Constants for enum WdSalutationType
type
  WdSalutationType = TOleEnum;
const
  wdSalutationInformal = $00000000;
  wdSalutationFormal = $00000001;
  wdSalutationBusiness = $00000002;
  wdSalutationOther = $00000003;

// Constants for enum WdSalutationGender
type
  WdSalutationGender = TOleEnum;
const
  wdGenderFemale = $00000000;
  wdGenderMale = $00000001;
  wdGenderNeutral = $00000002;
  wdGenderUnknown = $00000003;

// Constants for enum WdMovementType
type
  WdMovementType = TOleEnum;
const
  wdMove = $00000000;
  wdExtend = $00000001;

// Constants for enum WdConstants
type
  WdConstants = TOleEnum;
const
  wdUndefined = $0098967F;
  wdToggle = $0098967E;
  wdForward = $3FFFFFFF;
  wdBackward = $C0000001;
  wdAutoPosition = $00000000;
  wdFirst = $00000001;
  wdCreatorCode = $4D535744;

// Constants for enum WdPasteDataType
type
  WdPasteDataType = TOleEnum;
const
  wdPasteOLEObject = $00000000;
  wdPasteRTF = $00000001;
  wdPasteText = $00000002;
  wdPasteMetafilePicture = $00000003;
  wdPasteBitmap = $00000004;
  wdPasteDeviceIndependentBitmap = $00000005;
  wdPasteHyperlink = $00000007;
  wdPasteShape = $00000008;
  wdPasteEnhancedMetafile = $00000009;
  wdPasteHTML = $0000000A;

// Constants for enum WdPrintOutItem
type
  WdPrintOutItem = TOleEnum;
const
  wdPrintDocumentContent = $00000000;
  wdPrintProperties = $00000001;
  wdPrintComments = $00000002;
  wdPrintStyles = $00000003;
  wdPrintAutoTextEntries = $00000004;
  wdPrintKeyAssignments = $00000005;
  wdPrintEnvelope = $00000006;

// Constants for enum WdPrintOutPages
type
  WdPrintOutPages = TOleEnum;
const
  wdPrintAllPages = $00000000;
  wdPrintOddPagesOnly = $00000001;
  wdPrintEvenPagesOnly = $00000002;

// Constants for enum WdPrintOutRange
type
  WdPrintOutRange = TOleEnum;
const
  wdPrintAllDocument = $00000000;
  wdPrintSelection = $00000001;
  wdPrintCurrentPage = $00000002;
  wdPrintFromTo = $00000003;
  wdPrintRangeOfPages = $00000004;

// Constants for enum WdDictionaryType
type
  WdDictionaryType = TOleEnum;
const
  wdSpelling = $00000000;
  wdGrammar = $00000001;
  wdThesaurus = $00000002;
  wdHyphenation = $00000003;
  wdSpellingComplete = $00000004;
  wdSpellingCustom = $00000005;
  wdSpellingLegal = $00000006;
  wdSpellingMedical = $00000007;
  wdHangulHanjaConversion = $00000008;
  wdHangulHanjaConversionCustom = $00000009;

// Constants for enum WdDictionaryTypeHID
type
  WdDictionaryTypeHID = TOleEnum;
const
  emptyenum______________ = $00000000;

// Constants for enum WdSpellingWordType
type
  WdSpellingWordType = TOleEnum;
const
  wdSpellword = $00000000;
  wdWildcard = $00000001;
  wdAnagram = $00000002;

// Constants for enum WdSpellingErrorType
type
  WdSpellingErrorType = TOleEnum;
const
  wdSpellingCorrect = $00000000;
  wdSpellingNotInDictionary = $00000001;
  wdSpellingCapitalization = $00000002;

// Constants for enum WdProofreadingErrorType
type
  WdProofreadingErrorType = TOleEnum;
const
  wdSpellingError = $00000000;
  wdGrammaticalError = $00000001;

// Constants for enum WdInlineShapeType
type
  WdInlineShapeType = TOleEnum;
const
  wdInlineShapeEmbeddedOLEObject = $00000001;
  wdInlineShapeLinkedOLEObject = $00000002;
  wdInlineShapePicture = $00000003;
  wdInlineShapeLinkedPicture = $00000004;
  wdInlineShapeOLEControlObject = $00000005;
  wdInlineShapeHorizontalLine = $00000006;
  wdInlineShapePictureHorizontalLine = $00000007;
  wdInlineShapeLinkedPictureHorizontalLine = $00000008;
  wdInlineShapePictureBullet = $00000009;
  wdInlineShapeScriptAnchor = $0000000A;
  wdInlineShapeOWSAnchor = $0000000B;

// Constants for enum WdArrangeStyle
type
  WdArrangeStyle = TOleEnum;
const
  wdTiled = $00000000;
  wdIcons = $00000001;

// Constants for enum WdSelectionFlags
type
  WdSelectionFlags = TOleEnum;
const
  wdSelStartActive = $00000001;
  wdSelAtEOL = $00000002;
  wdSelOvertype = $00000004;
  wdSelActive = $00000008;
  wdSelReplace = $00000010;

// Constants for enum WdAutoVersions
type
  WdAutoVersions = TOleEnum;
const
  wdAutoVersionOff = $00000000;
  wdAutoVersionOnClose = $00000001;

// Constants for enum WdOrganizerObject
type
  WdOrganizerObject = TOleEnum;
const
  wdOrganizerObjectStyles = $00000000;
  wdOrganizerObjectAutoText = $00000001;
  wdOrganizerObjectCommandBars = $00000002;
  wdOrganizerObjectProjectItems = $00000003;

// Constants for enum WdFindMatch
type
  WdFindMatch = TOleEnum;
const
  wdMatchParagraphMark = $0001000F;
  wdMatchTabCharacter = $00000009;
  wdMatchCommentMark = $00000005;
  wdMatchAnyCharacter = $0001003F;
  wdMatchAnyDigit = $0001001F;
  wdMatchAnyLetter = $0001002F;
  wdMatchCaretCharacter = $0000000B;
  wdMatchColumnBreak = $0000000E;
  wdMatchEmDash = $00002014;
  wdMatchEnDash = $00002013;
  wdMatchEndnoteMark = $00010013;
  wdMatchField = $00000013;
  wdMatchFootnoteMark = $00010012;
  wdMatchGraphic = $00000001;
  wdMatchManualLineBreak = $0001000F;
  wdMatchManualPageBreak = $0001001C;
  wdMatchNonbreakingHyphen = $0000001E;
  wdMatchNonbreakingSpace = $000000A0;
  wdMatchOptionalHyphen = $0000001F;
  wdMatchSectionBreak = $0001002C;
  wdMatchWhiteSpace = $00010077;

// Constants for enum WdFindWrap
type
  WdFindWrap = TOleEnum;
const
  wdFindStop = $00000000;
  wdFindContinue = $00000001;
  wdFindAsk = $00000002;

// Constants for enum WdInformation
type
  WdInformation = TOleEnum;
const
  wdActiveEndAdjustedPageNumber = $00000001;
  wdActiveEndSectionNumber = $00000002;
  wdActiveEndPageNumber = $00000003;
  wdNumberOfPagesInDocument = $00000004;
  wdHorizontalPositionRelativeToPage = $00000005;
  wdVerticalPositionRelativeToPage = $00000006;
  wdHorizontalPositionRelativeToTextBoundary = $00000007;
  wdVerticalPositionRelativeToTextBoundary = $00000008;
  wdFirstCharacterColumnNumber = $00000009;
  wdFirstCharacterLineNumber = $0000000A;
  wdFrameIsSelected = $0000000B;
  wdWithInTable = $0000000C;
  wdStartOfRangeRowNumber = $0000000D;
  wdEndOfRangeRowNumber = $0000000E;
  wdMaximumNumberOfRows = $0000000F;
  wdStartOfRangeColumnNumber = $00000010;
  wdEndOfRangeColumnNumber = $00000011;
  wdMaximumNumberOfColumns = $00000012;
  wdZoomPercentage = $00000013;
  wdSelectionMode = $00000014;
  wdCapsLock = $00000015;
  wdNumLock = $00000016;
  wdOverType = $00000017;
  wdRevisionMarking = $00000018;
  wdInFootnoteEndnotePane = $00000019;
  wdInCommentPane = $0000001A;
  wdInHeaderFooter = $0000001C;
  wdAtEndOfRowMarker = $0000001F;
  wdReferenceOfType = $00000020;
  wdHeaderFooterType = $00000021;
  wdInMasterDocument = $00000022;
  wdInFootnote = $00000023;
  wdInEndnote = $00000024;
  wdInWordMail = $00000025;
  wdInClipboard = $00000026;

// Constants for enum WdWrapType
type
  WdWrapType = TOleEnum;
const
  wdWrapSquare = $00000000;
  wdWrapTight = $00000001;
  wdWrapThrough = $00000002;
  wdWrapNone = $00000003;
  wdWrapTopBottom = $00000004;

// Constants for enum WdWrapSideType
type
  WdWrapSideType = TOleEnum;
const
  wdWrapBoth = $00000000;
  wdWrapLeft = $00000001;
  wdWrapRight = $00000002;
  wdWrapLargest = $00000003;

// Constants for enum WdOutlineLevel
type
  WdOutlineLevel = TOleEnum;
const
  wdOutlineLevel1 = $00000001;
  wdOutlineLevel2 = $00000002;
  wdOutlineLevel3 = $00000003;
  wdOutlineLevel4 = $00000004;
  wdOutlineLevel5 = $00000005;
  wdOutlineLevel6 = $00000006;
  wdOutlineLevel7 = $00000007;
  wdOutlineLevel8 = $00000008;
  wdOutlineLevel9 = $00000009;
  wdOutlineLevelBodyText = $0000000A;

// Constants for enum WdTextOrientation
type
  WdTextOrientation = TOleEnum;
const
  wdTextOrientationHorizontal = $00000000;
  wdTextOrientationUpward = $00000002;
  wdTextOrientationDownward = $00000003;
  wdTextOrientationVerticalFarEast = $00000001;
  wdTextOrientationHorizontalRotatedFarEast = $00000004;

// Constants for enum WdTextOrientationHID
type
  WdTextOrientationHID = TOleEnum;
const
  emptyenum_______________ = $00000000;

// Constants for enum WdPageBorderArt
type
  WdPageBorderArt = TOleEnum;
const
  wdArtApples = $00000001;
  wdArtMapleMuffins = $00000002;
  wdArtCakeSlice = $00000003;
  wdArtCandyCorn = $00000004;
  wdArtIceCreamCones = $00000005;
  wdArtChampagneBottle = $00000006;
  wdArtPartyGlass = $00000007;
  wdArtChristmasTree = $00000008;
  wdArtTrees = $00000009;
  wdArtPalmsColor = $0000000A;
  wdArtBalloons3Colors = $0000000B;
  wdArtBalloonsHotAir = $0000000C;
  wdArtPartyFavor = $0000000D;
  wdArtConfettiStreamers = $0000000E;
  wdArtHearts = $0000000F;
  wdArtHeartBalloon = $00000010;
  wdArtStars3D = $00000011;
  wdArtStarsShadowed = $00000012;
  wdArtStars = $00000013;
  wdArtSun = $00000014;
  wdArtEarth2 = $00000015;
  wdArtEarth1 = $00000016;
  wdArtPeopleHats = $00000017;
  wdArtSombrero = $00000018;
  wdArtPencils = $00000019;
  wdArtPackages = $0000001A;
  wdArtClocks = $0000001B;
  wdArtFirecrackers = $0000001C;
  wdArtRings = $0000001D;
  wdArtMapPins = $0000001E;
  wdArtConfetti = $0000001F;
  wdArtCreaturesButterfly = $00000020;
  wdArtCreaturesLadyBug = $00000021;
  wdArtCreaturesFish = $00000022;
  wdArtBirdsFlight = $00000023;
  wdArtScaredCat = $00000024;
  wdArtBats = $00000025;
  wdArtFlowersRoses = $00000026;
  wdArtFlowersRedRose = $00000027;
  wdArtPoinsettias = $00000028;
  wdArtHolly = $00000029;
  wdArtFlowersTiny = $0000002A;
  wdArtFlowersPansy = $0000002B;
  wdArtFlowersModern2 = $0000002C;
  wdArtFlowersModern1 = $0000002D;
  wdArtWhiteFlowers = $0000002E;
  wdArtVine = $0000002F;
  wdArtFlowersDaisies = $00000030;
  wdArtFlowersBlockPrint = $00000031;
  wdArtDecoArchColor = $00000032;
  wdArtFans = $00000033;
  wdArtFilm = $00000034;
  wdArtLightning1 = $00000035;
  wdArtCompass = $00000036;
  wdArtDoubleD = $00000037;
  wdArtClassicalWave = $00000038;
  wdArtShadowedSquares = $00000039;
  wdArtTwistedLines1 = $0000003A;
  wdArtWaveline = $0000003B;
  wdArtQuadrants = $0000003C;
  wdArtCheckedBarColor = $0000003D;
  wdArtSwirligig = $0000003E;
  wdArtPushPinNote1 = $0000003F;
  wdArtPushPinNote2 = $00000040;
  wdArtPumpkin1 = $00000041;
  wdArtEggsBlack = $00000042;
  wdArtCup = $00000043;
  wdArtHeartGray = $00000044;
  wdArtGingerbreadMan = $00000045;
  wdArtBabyPacifier = $00000046;
  wdArtBabyRattle = $00000047;
  wdArtCabins = $00000048;
  wdArtHouseFunky = $00000049;
  wdArtStarsBlack = $0000004A;
  wdArtSnowflakes = $0000004B;
  wdArtSnowflakeFancy = $0000004C;
  wdArtSkyrocket = $0000004D;
  wdArtSeattle = $0000004E;
  wdArtMusicNotes = $0000004F;
  wdArtPalmsBlack = $00000050;
  wdArtMapleLeaf = $00000051;
  wdArtPaperClips = $00000052;
  wdArtShorebirdTracks = $00000053;
  wdArtPeople = $00000054;
  wdArtPeopleWaving = $00000055;
  wdArtEclipsingSquares2 = $00000056;
  wdArtHypnotic = $00000057;
  wdArtDiamondsGray = $00000058;
  wdArtDecoArch = $00000059;
  wdArtDecoBlocks = $0000005A;
  wdArtCirclesLines = $0000005B;
  wdArtPapyrus = $0000005C;
  wdArtWoodwork = $0000005D;
  wdArtWeavingBraid = $0000005E;
  wdArtWeavingRibbon = $0000005F;
  wdArtWeavingAngles = $00000060;
  wdArtArchedScallops = $00000061;
  wdArtSafari = $00000062;
  wdArtCelticKnotwork = $00000063;
  wdArtCrazyMaze = $00000064;
  wdArtEclipsingSquares1 = $00000065;
  wdArtBirds = $00000066;
  wdArtFlowersTeacup = $00000067;
  wdArtNorthwest = $00000068;
  wdArtSouthwest = $00000069;
  wdArtTribal6 = $0000006A;
  wdArtTribal4 = $0000006B;
  wdArtTribal3 = $0000006C;
  wdArtTribal2 = $0000006D;
  wdArtTribal5 = $0000006E;
  wdArtXIllusions = $0000006F;
  wdArtZanyTriangles = $00000070;
  wdArtPyramids = $00000071;
  wdArtPyramidsAbove = $00000072;
  wdArtConfettiGrays = $00000073;
  wdArtConfettiOutline = $00000074;
  wdArtConfettiWhite = $00000075;
  wdArtMosaic = $00000076;
  wdArtLightning2 = $00000077;
  wdArtHeebieJeebies = $00000078;
  wdArtLightBulb = $00000079;
  wdArtGradient = $0000007A;
  wdArtTriangleParty = $0000007B;
  wdArtTwistedLines2 = $0000007C;
  wdArtMoons = $0000007D;
  wdArtOvals = $0000007E;
  wdArtDoubleDiamonds = $0000007F;
  wdArtChainLink = $00000080;
  wdArtTriangles = $00000081;
  wdArtTribal1 = $00000082;
  wdArtMarqueeToothed = $00000083;
  wdArtSharksTeeth = $00000084;
  wdArtSawtooth = $00000085;
  wdArtSawtoothGray = $00000086;
  wdArtPostageStamp = $00000087;
  wdArtWeavingStrips = $00000088;
  wdArtZigZag = $00000089;
  wdArtCrossStitch = $0000008A;
  wdArtGems = $0000008B;
  wdArtCirclesRectangles = $0000008C;
  wdArtCornerTriangles = $0000008D;
  wdArtCreaturesInsects = $0000008E;
  wdArtZigZagStitch = $0000008F;
  wdArtCheckered = $00000090;
  wdArtCheckedBarBlack = $00000091;
  wdArtMarquee = $00000092;
  wdArtBasicWhiteDots = $00000093;
  wdArtBasicWideMidline = $00000094;
  wdArtBasicWideOutline = $00000095;
  wdArtBasicWideInline = $00000096;
  wdArtBasicThinLines = $00000097;
  wdArtBasicWhiteDashes = $00000098;
  wdArtBasicWhiteSquares = $00000099;
  wdArtBasicBlackSquares = $0000009A;
  wdArtBasicBlackDashes = $0000009B;
  wdArtBasicBlackDots = $0000009C;
  wdArtStarsTop = $0000009D;
  wdArtCertificateBanner = $0000009E;
  wdArtHandmade1 = $0000009F;
  wdArtHandmade2 = $000000A0;
  wdArtTornPaper = $000000A1;
  wdArtTornPaperBlack = $000000A2;
  wdArtCouponCutoutDashes = $000000A3;
  wdArtCouponCutoutDots = $000000A4;

// Constants for enum WdBorderDistanceFrom
type
  WdBorderDistanceFrom = TOleEnum;
const
  wdBorderDistanceFromText = $00000000;
  wdBorderDistanceFromPageEdge = $00000001;

// Constants for enum WdReplace
type
  WdReplace = TOleEnum;
const
  wdReplaceNone = $00000000;
  wdReplaceOne = $00000001;
  wdReplaceAll = $00000002;

// Constants for enum WdFontBias
type
  WdFontBias = TOleEnum;
const
  wdFontBiasDontCare = $000000FF;
  wdFontBiasDefault = $00000000;
  wdFontBiasFareast = $00000001;

// Constants for enum WdBrowserLevel
type
  WdBrowserLevel = TOleEnum;
const
  wdBrowserLevelV4 = $00000000;
  wdBrowserLevelMicrosoftInternetExplorer5 = $00000001;

// Constants for enum WdEnclosureType
type
  WdEnclosureType = TOleEnum;
const
  wdEnclosureCircle = $00000000;
  wdEnclosureSquare = $00000001;
  wdEnclosureTriangle = $00000002;
  wdEnclosureDiamond = $00000003;

// Constants for enum WdEncloseStyle
type
  WdEncloseStyle = TOleEnum;
const
  wdEncloseStyleNone = $00000000;
  wdEncloseStyleSmall = $00000001;
  wdEncloseStyleLarge = $00000002;

// Constants for enum WdHighAnsiText
type
  WdHighAnsiText = TOleEnum;
const
  wdHighAnsiIsFarEast = $00000000;
  wdHighAnsiIsHighAnsi = $00000001;
  wdAutoDetectHighAnsiFarEast = $00000002;

// Constants for enum WdLayoutMode
type
  WdLayoutMode = TOleEnum;
const
  wdLayoutModeDefault = $00000000;
  wdLayoutModeGrid = $00000001;
  wdLayoutModeLineGrid = $00000002;
  wdLayoutModeGenko = $00000003;

// Constants for enum WdDocumentMedium
type
  WdDocumentMedium = TOleEnum;
const
  wdEmailMessage = $00000000;
  wdDocument = $00000001;
  wdWebPage = $00000002;

// Constants for enum WdMailerPriority
type
  WdMailerPriority = TOleEnum;
const
  wdPriorityNormal = $00000001;
  wdPriorityLow = $00000002;
  wdPriorityHigh = $00000003;

// Constants for enum WdDocumentViewDirection
type
  WdDocumentViewDirection = TOleEnum;
const
  wdDocumentViewRtl = $00000000;
  wdDocumentViewLtr = $00000001;

// Constants for enum WdArabicNumeral
type
  WdArabicNumeral = TOleEnum;
const
  wdNumeralArabic = $00000000;
  wdNumeralHindi = $00000001;
  wdNumeralContext = $00000002;
  wdNumeralSystem = $00000003;

// Constants for enum WdMonthNames
type
  WdMonthNames = TOleEnum;
const
  wdMonthNamesArabic = $00000000;
  wdMonthNamesEnglish = $00000001;
  wdMonthNamesFrench = $00000002;

// Constants for enum WdCursorMovement
type
  WdCursorMovement = TOleEnum;
const
  wdCursorMovementLogical = $00000000;
  wdCursorMovementVisual = $00000001;

// Constants for enum WdVisualSelection
type
  WdVisualSelection = TOleEnum;
const
  wdVisualSelectionBlock = $00000000;
  wdVisualSelectionContinuous = $00000001;

// Constants for enum WdTableDirection
type
  WdTableDirection = TOleEnum;
const
  wdTableDirectionRtl = $00000000;
  wdTableDirectionLtr = $00000001;

// Constants for enum WdFlowDirection
type
  WdFlowDirection = TOleEnum;
const
  wdFlowLtr = $00000000;
  wdFlowRtl = $00000001;

// Constants for enum WdDiacriticColor
type
  WdDiacriticColor = TOleEnum;
const
  wdDiacriticColorBidi = $00000000;
  wdDiacriticColorLatin = $00000001;

// Constants for enum WdGutterStyle
type
  WdGutterStyle = TOleEnum;
const
  wdGutterPosLeft = $00000000;
  wdGutterPosTop = $00000001;
  wdGutterPosRight = $00000002;

// Constants for enum WdGutterStyleOld
type
  WdGutterStyleOld = TOleEnum;
const
  wdGutterStyleLatin = $FFFFFFF6;
  wdGutterStyleBidi = $00000002;

// Constants for enum WdSectionDirection
type
  WdSectionDirection = TOleEnum;
const
  wdSectionDirectionRtl = $00000000;
  wdSectionDirectionLtr = $00000001;

// Constants for enum WdDateLanguage
type
  WdDateLanguage = TOleEnum;
const
  wdDateLanguageBidi = $0000000A;
  wdDateLanguageLatin = $00000409;

// Constants for enum WdCalendarTypeBi
type
  WdCalendarTypeBi = TOleEnum;
const
  wdCalendarTypeBidi = $00000063;
  wdCalendarTypeGregorian = $00000064;

// Constants for enum WdCalendarType
type
  WdCalendarType = TOleEnum;
const
  wdCalendarWestern = $00000000;
  wdCalendarArabic = $00000001;
  wdCalendarHebrew = $00000002;
  wdCalendarChina = $00000003;
  wdCalendarJapan = $00000004;
  wdCalendarThai = $00000005;
  wdCalendarKorean = $00000006;

// Constants for enum WdReadingOrder
type
  WdReadingOrder = TOleEnum;
const
  wdReadingOrderRtl = $00000000;
  wdReadingOrderLtr = $00000001;

// Constants for enum WdHebSpellStart
type
  WdHebSpellStart = TOleEnum;
const
  wdFullScript = $00000000;
  wdPartialScript = $00000001;
  wdMixedScript = $00000002;
  wdMixedAuthorizedScript = $00000003;

// Constants for enum WdAraSpeller
type
  WdAraSpeller = TOleEnum;
const
  wdNone = $00000000;
  wdInitialAlef = $00000001;
  wdFinalYaa = $00000002;
  wdBoth = $00000003;

// Constants for enum WdColor
type
  WdColor = TOleEnum;
const
  wdColorAutomatic = $FF000000;
  wdColorBlack = $00000000;
  wdColorBlue = $00FF0000;
  wdColorTurquoise = $00FFFF00;
  wdColorBrightGreen = $0000FF00;
  wdColorPink = $00FF00FF;
  wdColorRed = $000000FF;
  wdColorYellow = $0000FFFF;
  wdColorWhite = $00FFFFFF;
  wdColorDarkBlue = $00800000;
  wdColorTeal = $00808000;
  wdColorGreen = $00008000;
  wdColorViolet = $00800080;
  wdColorDarkRed = $00000080;
  wdColorDarkYellow = $00008080;
  wdColorBrown = $00003399;
  wdColorOliveGreen = $00003333;
  wdColorDarkGreen = $00003300;
  wdColorDarkTeal = $00663300;
  wdColorIndigo = $00993333;
  wdColorOrange = $000066FF;
  wdColorBlueGray = $00996666;
  wdColorLightOrange = $000099FF;
  wdColorLime = $0000CC99;
  wdColorSeaGreen = $00669933;
  wdColorAqua = $00CCCC33;
  wdColorLightBlue = $00FF6633;
  wdColorGold = $0000CCFF;
  wdColorSkyBlue = $00FFCC00;
  wdColorPlum = $00663399;
  wdColorRose = $00CC99FF;
  wdColorTan = $0099CCFF;
  wdColorLightYellow = $0099FFFF;
  wdColorLightGreen = $00CCFFCC;
  wdColorLightTurquoise = $00FFFFCC;
  wdColorPaleBlue = $00FFCC99;
  wdColorLavender = $00FF99CC;
  wdColorGray05 = $00F3F3F3;
  wdColorGray10 = $00E6E6E6;
  wdColorGray125 = $00E0E0E0;
  wdColorGray15 = $00D9D9D9;
  wdColorGray20 = $00CCCCCC;
  wdColorGray25 = $00C0C0C0;
  wdColorGray30 = $00B3B3B3;
  wdColorGray35 = $00A6A6A6;
  wdColorGray375 = $00A0A0A0;
  wdColorGray40 = $00999999;
  wdColorGray45 = $008C8C8C;
  wdColorGray50 = $00808080;
  wdColorGray55 = $00737373;
  wdColorGray60 = $00666666;
  wdColorGray625 = $00606060;
  wdColorGray65 = $00595959;
  wdColorGray70 = $004C4C4C;
  wdColorGray75 = $00404040;
  wdColorGray80 = $00333333;
  wdColorGray85 = $00262626;
  wdColorGray875 = $00202020;
  wdColorGray90 = $00191919;
  wdColorGray95 = $000C0C0C;

// Constants for enum WdShapePosition
type
  WdShapePosition = TOleEnum;
const
  wdShapeTop = $FFF0BDC1;
  wdShapeLeft = $FFF0BDC2;
  wdShapeBottom = $FFF0BDC3;
  wdShapeRight = $FFF0BDC4;
  wdShapeCenter = $FFF0BDC5;
  wdShapeInside = $FFF0BDC6;
  wdShapeOutside = $FFF0BDC7;

// Constants for enum WdTablePosition
type
  WdTablePosition = TOleEnum;
const
  wdTableTop = $FFF0BDC1;
  wdTableLeft = $FFF0BDC2;
  wdTableBottom = $FFF0BDC3;
  wdTableRight = $FFF0BDC4;
  wdTableCenter = $FFF0BDC5;
  wdTableInside = $FFF0BDC6;
  wdTableOutside = $FFF0BDC7;

// Constants for enum WdDefaultListBehavior
type
  WdDefaultListBehavior = TOleEnum;
const
  wdWord8ListBehavior = $00000000;
  wdWord9ListBehavior = $00000001;

// Constants for enum WdDefaultTableBehavior
type
  WdDefaultTableBehavior = TOleEnum;
const
  wdWord8TableBehavior = $00000000;
  wdWord9TableBehavior = $00000001;

// Constants for enum WdAutoFitBehavior
type
  WdAutoFitBehavior = TOleEnum;
const
  wdAutoFitFixed = $00000000;
  wdAutoFitContent = $00000001;
  wdAutoFitWindow = $00000002;

// Constants for enum WdPreferredWidthType
type
  WdPreferredWidthType = TOleEnum;
const
  wdPreferredWidthAuto = $00000001;
  wdPreferredWidthPercent = $00000002;
  wdPreferredWidthPoints = $00000003;

// Constants for enum WdFarEastLineBreakLanguageID
type
  WdFarEastLineBreakLanguageID = TOleEnum;
const
  wdLineBreakJapanese = $00000411;
  wdLineBreakKorean = $00000412;
  wdLineBreakSimplifiedChinese = $00000804;
  wdLineBreakTraditionalChinese = $00000404;

// Constants for enum WdViewTypeOld
type
  WdViewTypeOld = TOleEnum;
const
  wdPageView = $00000003;
  wdOnlineView = $00000006;

// Constants for enum WdFramesetType
type
  WdFramesetType = TOleEnum;
const
  wdFramesetTypeFrameset = $00000000;
  wdFramesetTypeFrame = $00000001;

// Constants for enum WdFramesetSizeType
type
  WdFramesetSizeType = TOleEnum;
const
  wdFramesetSizeTypePercent = $00000000;
  wdFramesetSizeTypeFixed = $00000001;
  wdFramesetSizeTypeRelative = $00000002;

// Constants for enum WdFramesetNewFrameLocation
type
  WdFramesetNewFrameLocation = TOleEnum;
const
  wdFramesetNewFrameAbove = $00000000;
  wdFramesetNewFrameBelow = $00000001;
  wdFramesetNewFrameRight = $00000002;
  wdFramesetNewFrameLeft = $00000003;

// Constants for enum WdScrollbarType
type
  WdScrollbarType = TOleEnum;
const
  wdScrollbarTypeAuto = $00000000;
  wdScrollbarTypeYes = $00000001;
  wdScrollbarTypeNo = $00000002;

// Constants for enum WdTwoLinesInOneType
type
  WdTwoLinesInOneType = TOleEnum;
const
  wdTwoLinesInOneNone = $00000000;
  wdTwoLinesInOneNoBrackets = $00000001;
  wdTwoLinesInOneParentheses = $00000002;
  wdTwoLinesInOneSquareBrackets = $00000003;
  wdTwoLinesInOneAngleBrackets = $00000004;
  wdTwoLinesInOneCurlyBrackets = $00000005;

// Constants for enum WdHorizontalInVerticalType
type
  WdHorizontalInVerticalType = TOleEnum;
const
  wdHorizontalInVerticalNone = $00000000;
  wdHorizontalInVerticalFitInLine = $00000001;
  wdHorizontalInVerticalResizeLine = $00000002;

// Constants for enum WdHorizontalLineAlignment
type
  WdHorizontalLineAlignment = TOleEnum;
const
  wdHorizontalLineAlignLeft = $00000000;
  wdHorizontalLineAlignCenter = $00000001;
  wdHorizontalLineAlignRight = $00000002;

// Constants for enum WdHorizontalLineWidthType
type
  WdHorizontalLineWidthType = TOleEnum;
const
  wdHorizontalLinePercentWidth = $FFFFFFFF;
  wdHorizontalLineFixedWidth = $FFFFFFFE;

// Constants for enum WdPhoneticGuideAlignmentType
type
  WdPhoneticGuideAlignmentType = TOleEnum;
const
  wdPhoneticGuideAlignmentCenter = $00000000;
  wdPhoneticGuideAlignmentZeroOneZero = $00000001;
  wdPhoneticGuideAlignmentOneTwoOne = $00000002;
  wdPhoneticGuideAlignmentLeft = $00000003;
  wdPhoneticGuideAlignmentRight = $00000004;

// Constants for enum WdNewDocumentType
type
  WdNewDocumentType = TOleEnum;
const
  wdNewBlankDocument = $00000000;
  wdNewWebPage = $00000001;
  wdNewEmailMessage = $00000002;
  wdNewFrameset = $00000003;

// Constants for enum WdKana
type
  WdKana = TOleEnum;
const
  wdKanaKatakana = $00000008;
  wdKanaHiragana = $00000009;

// Constants for enum WdCharacterWidth
type
  WdCharacterWidth = TOleEnum;
const
  wdWidthHalfWidth = $00000006;
  wdWidthFullWidth = $00000007;

// Constants for enum WdNumberStyleWordBasicBiDi
type
  WdNumberStyleWordBasicBiDi = TOleEnum;
const
  wdListNumberStyleBidi1 = $00000031;
  wdListNumberStyleBidi2 = $00000032;
  wdCaptionNumberStyleBidiLetter1 = $00000031;
  wdCaptionNumberStyleBidiLetter2 = $00000032;
  wdNoteNumberStyleBidiLetter1 = $00000031;
  wdNoteNumberStyleBidiLetter2 = $00000032;
  wdPageNumberStyleBidiLetter1 = $00000031;
  wdPageNumberStyleBidiLetter2 = $00000032;

// Constants for enum WdTCSCConverterDirection
type
  WdTCSCConverterDirection = TOleEnum;
const
  wdTCSCConverterDirectionSCTC = $00000000;
  wdTCSCConverterDirectionTCSC = $00000001;
  wdTCSCConverterDirectionAuto = $00000002;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  _Application = interface;
  _ApplicationDisp = dispinterface;
  _Global = interface;
  _GlobalDisp = dispinterface;
  FontNames = interface;
  FontNamesDisp = dispinterface;
  Languages = interface;
  LanguagesDisp = dispinterface;
  Language = interface;
  LanguageDisp = dispinterface;
  Documents = interface;
  DocumentsDisp = dispinterface;
  _Document = interface;
  _DocumentDisp = dispinterface;
  Template = interface;
  TemplateDisp = dispinterface;
  Templates = interface;
  TemplatesDisp = dispinterface;
  RoutingSlip = interface;
  RoutingSlipDisp = dispinterface;
  Bookmark = interface;
  BookmarkDisp = dispinterface;
  Bookmarks = interface;
  BookmarksDisp = dispinterface;
  Variable = interface;
  VariableDisp = dispinterface;
  Variables = interface;
  VariablesDisp = dispinterface;
  RecentFile = interface;
  RecentFileDisp = dispinterface;
  RecentFiles = interface;
  RecentFilesDisp = dispinterface;
  Window = interface;
  WindowDisp = dispinterface;
  Windows = interface;
  WindowsDisp = dispinterface;
  Pane = interface;
  PaneDisp = dispinterface;
  Panes = interface;
  PanesDisp = dispinterface;
  Range = interface;
  RangeDisp = dispinterface;
  ListFormat = interface;
  ListFormatDisp = dispinterface;
  Find = interface;
  FindDisp = dispinterface;
  Replacement = interface;
  ReplacementDisp = dispinterface;
  Characters = interface;
  CharactersDisp = dispinterface;
  Words = interface;
  WordsDisp = dispinterface;
  Sentences = interface;
  SentencesDisp = dispinterface;
  Sections = interface;
  SectionsDisp = dispinterface;
  Section = interface;
  SectionDisp = dispinterface;
  Paragraphs = interface;
  ParagraphsDisp = dispinterface;
  Paragraph = interface;
  ParagraphDisp = dispinterface;
  DropCap = interface;
  DropCapDisp = dispinterface;
  TabStops = interface;
  TabStopsDisp = dispinterface;
  TabStop = interface;
  TabStopDisp = dispinterface;
  _ParagraphFormat = interface;
  _ParagraphFormatDisp = dispinterface;
  _Font = interface;
  _FontDisp = dispinterface;
  Table = interface;
  TableDisp = dispinterface;
  Row = interface;
  RowDisp = dispinterface;
  Column = interface;
  ColumnDisp = dispinterface;
  Cell = interface;
  CellDisp = dispinterface;
  Tables = interface;
  TablesDisp = dispinterface;
  Rows = interface;
  RowsDisp = dispinterface;
  Columns = interface;
  ColumnsDisp = dispinterface;
  Cells = interface;
  CellsDisp = dispinterface;
  AutoCorrect = interface;
  AutoCorrectDisp = dispinterface;
  AutoCorrectEntries = interface;
  AutoCorrectEntriesDisp = dispinterface;
  AutoCorrectEntry = interface;
  AutoCorrectEntryDisp = dispinterface;
  FirstLetterExceptions = interface;
  FirstLetterExceptionsDisp = dispinterface;
  FirstLetterException = interface;
  FirstLetterExceptionDisp = dispinterface;
  TwoInitialCapsExceptions = interface;
  TwoInitialCapsExceptionsDisp = dispinterface;
  TwoInitialCapsException = interface;
  TwoInitialCapsExceptionDisp = dispinterface;
  Footnotes = interface;
  FootnotesDisp = dispinterface;
  Endnotes = interface;
  EndnotesDisp = dispinterface;
  Comments = interface;
  CommentsDisp = dispinterface;
  Footnote = interface;
  FootnoteDisp = dispinterface;
  Endnote = interface;
  EndnoteDisp = dispinterface;
  Comment = interface;
  CommentDisp = dispinterface;
  Borders = interface;
  BordersDisp = dispinterface;
  Border = interface;
  BorderDisp = dispinterface;
  Shading = interface;
  ShadingDisp = dispinterface;
  TextRetrievalMode = interface;
  TextRetrievalModeDisp = dispinterface;
  AutoTextEntries = interface;
  AutoTextEntriesDisp = dispinterface;
  AutoTextEntry = interface;
  AutoTextEntryDisp = dispinterface;
  System = interface;
  SystemDisp = dispinterface;
  OLEFormat = interface;
  OLEFormatDisp = dispinterface;
  LinkFormat = interface;
  LinkFormatDisp = dispinterface;
  _OLEControl = interface;
  _OLEControlDisp = dispinterface;
  Fields = interface;
  FieldsDisp = dispinterface;
  Field = interface;
  FieldDisp = dispinterface;
  Browser = interface;
  BrowserDisp = dispinterface;
  Styles = interface;
  StylesDisp = dispinterface;
  Style = interface;
  StyleDisp = dispinterface;
  Frames = interface;
  FramesDisp = dispinterface;
  Frame = interface;
  FrameDisp = dispinterface;
  FormFields = interface;
  FormFieldsDisp = dispinterface;
  FormField = interface;
  FormFieldDisp = dispinterface;
  TextInput = interface;
  TextInputDisp = dispinterface;
  CheckBox = interface;
  CheckBoxDisp = dispinterface;
  DropDown = interface;
  DropDownDisp = dispinterface;
  ListEntries = interface;
  ListEntriesDisp = dispinterface;
  ListEntry = interface;
  ListEntryDisp = dispinterface;
  TablesOfFigures = interface;
  TablesOfFiguresDisp = dispinterface;
  TableOfFigures = interface;
  TableOfFiguresDisp = dispinterface;
  MailMerge = interface;
  MailMergeDisp = dispinterface;
  MailMergeFields = interface;
  MailMergeFieldsDisp = dispinterface;
  MailMergeField = interface;
  MailMergeFieldDisp = dispinterface;
  MailMergeDataSource = interface;
  MailMergeDataSourceDisp = dispinterface;
  MailMergeFieldNames = interface;
  MailMergeFieldNamesDisp = dispinterface;
  MailMergeFieldName = interface;
  MailMergeFieldNameDisp = dispinterface;
  MailMergeDataFields = interface;
  MailMergeDataFieldsDisp = dispinterface;
  MailMergeDataField = interface;
  MailMergeDataFieldDisp = dispinterface;
  Envelope = interface;
  EnvelopeDisp = dispinterface;
  MailingLabel = interface;
  MailingLabelDisp = dispinterface;
  CustomLabels = interface;
  CustomLabelsDisp = dispinterface;
  CustomLabel = interface;
  CustomLabelDisp = dispinterface;
  TablesOfContents = interface;
  TablesOfContentsDisp = dispinterface;
  TableOfContents = interface;
  TableOfContentsDisp = dispinterface;
  TablesOfAuthorities = interface;
  TablesOfAuthoritiesDisp = dispinterface;
  TableOfAuthorities = interface;
  TableOfAuthoritiesDisp = dispinterface;
  Dialogs = interface;
  DialogsDisp = dispinterface;
  Dialog = interface;
  DialogDisp = dispinterface;
  PageSetup = interface;
  PageSetupDisp = dispinterface;
  LineNumbering = interface;
  LineNumberingDisp = dispinterface;
  TextColumns = interface;
  TextColumnsDisp = dispinterface;
  TextColumn = interface;
  TextColumnDisp = dispinterface;
  Selection = interface;
  SelectionDisp = dispinterface;
  TablesOfAuthoritiesCategories = interface;
  TablesOfAuthoritiesCategoriesDisp = dispinterface;
  TableOfAuthoritiesCategory = interface;
  TableOfAuthoritiesCategoryDisp = dispinterface;
  CaptionLabels = interface;
  CaptionLabelsDisp = dispinterface;
  CaptionLabel = interface;
  CaptionLabelDisp = dispinterface;
  AutoCaptions = interface;
  AutoCaptionsDisp = dispinterface;
  AutoCaption = interface;
  AutoCaptionDisp = dispinterface;
  Indexes = interface;
  IndexesDisp = dispinterface;
  Index = interface;
  IndexDisp = dispinterface;
  AddIn = interface;
  AddInDisp = dispinterface;
  AddIns = interface;
  AddInsDisp = dispinterface;
  Revisions = interface;
  RevisionsDisp = dispinterface;
  Revision = interface;
  RevisionDisp = dispinterface;
  Task = interface;
  TaskDisp = dispinterface;
  Tasks = interface;
  TasksDisp = dispinterface;
  HeadersFooters = interface;
  HeadersFootersDisp = dispinterface;
  HeaderFooter = interface;
  HeaderFooterDisp = dispinterface;
  PageNumbers = interface;
  PageNumbersDisp = dispinterface;
  PageNumber = interface;
  PageNumberDisp = dispinterface;
  Subdocuments = interface;
  SubdocumentsDisp = dispinterface;
  Subdocument = interface;
  SubdocumentDisp = dispinterface;
  HeadingStyles = interface;
  HeadingStylesDisp = dispinterface;
  HeadingStyle = interface;
  HeadingStyleDisp = dispinterface;
  StoryRanges = interface;
  StoryRangesDisp = dispinterface;
  ListLevel = interface;
  ListLevelDisp = dispinterface;
  ListLevels = interface;
  ListLevelsDisp = dispinterface;
  ListTemplate = interface;
  ListTemplateDisp = dispinterface;
  ListTemplates = interface;
  ListTemplatesDisp = dispinterface;
  ListParagraphs = interface;
  ListParagraphsDisp = dispinterface;
  List = interface;
  ListDisp = dispinterface;
  Lists = interface;
  ListsDisp = dispinterface;
  ListGallery = interface;
  ListGalleryDisp = dispinterface;
  ListGalleries = interface;
  ListGalleriesDisp = dispinterface;
  KeyBindings = interface;
  KeyBindingsDisp = dispinterface;
  KeysBoundTo = interface;
  KeysBoundToDisp = dispinterface;
  KeyBinding = interface;
  KeyBindingDisp = dispinterface;
  FileConverter = interface;
  FileConverterDisp = dispinterface;
  FileConverters = interface;
  FileConvertersDisp = dispinterface;
  SynonymInfo = interface;
  SynonymInfoDisp = dispinterface;
  Hyperlinks = interface;
  HyperlinksDisp = dispinterface;
  Hyperlink = interface;
  HyperlinkDisp = dispinterface;
  Shapes = interface;
  ShapesDisp = dispinterface;
  ShapeRange = interface;
  ShapeRangeDisp = dispinterface;
  GroupShapes = interface;
  GroupShapesDisp = dispinterface;
  Shape = interface;
  ShapeDisp = dispinterface;
  TextFrame = interface;
  TextFrameDisp = dispinterface;
  _LetterContent = interface;
  _LetterContentDisp = dispinterface;
  View = interface;
  ViewDisp = dispinterface;
  Zoom = interface;
  ZoomDisp = dispinterface;
  Zooms = interface;
  ZoomsDisp = dispinterface;
  InlineShape = interface;
  InlineShapeDisp = dispinterface;
  InlineShapes = interface;
  InlineShapesDisp = dispinterface;
  SpellingSuggestions = interface;
  SpellingSuggestionsDisp = dispinterface;
  SpellingSuggestion = interface;
  SpellingSuggestionDisp = dispinterface;
  Dictionaries = interface;
  DictionariesDisp = dispinterface;
  HangulHanjaConversionDictionaries = interface;
  HangulHanjaConversionDictionariesDisp = dispinterface;
  Dictionary = interface;
  DictionaryDisp = dispinterface;
  ReadabilityStatistics = interface;
  ReadabilityStatisticsDisp = dispinterface;
  ReadabilityStatistic = interface;
  ReadabilityStatisticDisp = dispinterface;
  Versions = interface;
  VersionsDisp = dispinterface;
  Version = interface;
  VersionDisp = dispinterface;
  Options = interface;
  OptionsDisp = dispinterface;
  MailMessage = interface;
  MailMessageDisp = dispinterface;
  ProofreadingErrors = interface;
  ProofreadingErrorsDisp = dispinterface;
  Mailer = interface;
  MailerDisp = dispinterface;
  WrapFormat = interface;
  WrapFormatDisp = dispinterface;
  HangulAndAlphabetExceptions = interface;
  HangulAndAlphabetExceptionsDisp = dispinterface;
  HangulAndAlphabetException = interface;
  HangulAndAlphabetExceptionDisp = dispinterface;
  Adjustments = interface;
  AdjustmentsDisp = dispinterface;
  CalloutFormat = interface;
  CalloutFormatDisp = dispinterface;
  ColorFormat = interface;
  ColorFormatDisp = dispinterface;
  ConnectorFormat = interface;
  ConnectorFormatDisp = dispinterface;
  FillFormat = interface;
  FillFormatDisp = dispinterface;
  FreeformBuilder = interface;
  FreeformBuilderDisp = dispinterface;
  LineFormat = interface;
  LineFormatDisp = dispinterface;
  PictureFormat = interface;
  PictureFormatDisp = dispinterface;
  ShadowFormat = interface;
  ShadowFormatDisp = dispinterface;
  ShapeNode = interface;
  ShapeNodeDisp = dispinterface;
  ShapeNodes = interface;
  ShapeNodesDisp = dispinterface;
  TextEffectFormat = interface;
  TextEffectFormatDisp = dispinterface;
  ThreeDFormat = interface;
  ThreeDFormatDisp = dispinterface;
  ApplicationEvents = dispinterface;
  ApplicationEvents2 = dispinterface;
  DocumentEvents = dispinterface;
  OCXEvents = dispinterface;
  IApplicationEvents = interface;
  IApplicationEventsDisp = dispinterface;
  IApplicationEvents2 = interface;
  IApplicationEvents2Disp = dispinterface;
  EmailAuthor = interface;
  EmailAuthorDisp = dispinterface;
  EmailOptions = interface;
  EmailOptionsDisp = dispinterface;
  EmailSignature = interface;
  EmailSignatureDisp = dispinterface;
  Email = interface;
  EmailDisp = dispinterface;
  HorizontalLineFormat = interface;
  HorizontalLineFormatDisp = dispinterface;
  Frameset = interface;
  FramesetDisp = dispinterface;
  DefaultWebOptions = interface;
  DefaultWebOptionsDisp = dispinterface;
  WebOptions = interface;
  WebOptionsDisp = dispinterface;
  OtherCorrectionsExceptions = interface;
  OtherCorrectionsExceptionsDisp = dispinterface;
  OtherCorrectionsException = interface;
  OtherCorrectionsExceptionDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  WordGlobal = _Global;
  WordDocument = _Document;
  WordFont = _Font;
  WordParagraphFormat = _ParagraphFormat;
  WordOLEControl = _OLEControl;
  WordLetterContent = _LetterContent;
  WordApplication = _Application;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  POleVariant1 = ^OleVariant; {*}
  PPSafeArray1 = ^PSafeArray; {*}
  PWordBool1 = ^WordBool; {*}
  PUserType1 = ^TGUID; {*}
  PShortint1 = ^Shortint; {*}
  PPShortint1 = ^PShortint1; {*}
  PUserType2 = ^TGUID; {*}


// *********************************************************************//
// Interface: _Application
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020970-0000-0000-C000-000000000046}
// *********************************************************************//
  _Application = interface(IDispatch)
    ['{00020970-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Documents; safecall;
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Windows; safecall;
    function  Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordDocument; safecall;
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Window; safecall;
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Selection; safecall;
    function  Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: RecentFiles; safecall;
    function  Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Template; safecall;
    function  Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: System; safecall;
    function  Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AutoCorrect; safecall;
    function  Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FontNames; safecall;
    function  Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FontNames; safecall;
    function  Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FontNames; safecall;
    function  Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Languages; safecall;
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Assistant; safecall;
    function  Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Browser; safecall;
    function  Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FileConverters; safecall;
    function  Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailingLabel; safecall;
    function  Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dialogs; safecall;
    function  Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CaptionLabels; safecall;
    function  Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AutoCaptions; safecall;
    function  Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AddIns; safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tasks; safecall;
    function  Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_29:0}Index: WdInternationalIndex): OleVariant; safecall;
    function  Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CommandBars; safecall;
    function  Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var LanguageID: OleVariant): SynonymInfo; safecall;
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:6}: VBE; safecall;
    function  Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListGalleries; safecall;
    function  Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Templates; safecall;
    function  Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_9:0}const prop: IDispatch); safecall;
    function  Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: KeyBindings; safecall;
    function  Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:6}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                   {VT_8:0}const Command: WideString; 
                                                                   {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo; safecall;
    function  Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}KeyCode: Integer; 
                                                               {VT_12:1}var KeyCode2: OleVariant): KeyBinding; safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWindowState; safecall;
    procedure Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdWindowState); safecall;
    function  Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Options; safecall;
    function  Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdAlertLevel; safecall;
    procedure Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdAlertLevel); safecall;
    function  Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionaries; safecall;
    function  Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const Param1: WideString); safecall;
    function  Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdEnableCancelKey; safecall;
    procedure Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdEnableCancelKey); safecall;
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FileSearch; safecall;
    function  Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailSystem; safecall;
    function  Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_9:0}const Object_: IDispatch): WordBool; safecall;
    function  Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HangulHanjaConversionDictionaries; safecall;
    function  Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMessage; safecall;
    function  Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Quit {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var SaveChanges: OleVariant; 
                                                        {VT_12:1}var OriginalFormat: OleVariant; 
                                                        {VT_12:1}var RouteDocument: OleVariant); safecall;
    procedure ScreenRefresh {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:6}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var FileName: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); safecall;
    procedure LookupNameProperties {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString); safecall;
    procedure SubstituteFont {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const UnavailableFont: WideString; 
                                                                  {VT_8:0}const SubstituteFont: WideString); safecall;
    function  Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Times: OleVariant): WordBool; safecall;
    procedure DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Command: WideString); safecall;
    function  DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const App: WideString; 
                                                               {VT_8:0}const Topic: WideString): Integer; safecall;
    procedure DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString); safecall;
    function  DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Item: WideString): WideString; safecall;
    procedure DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer); safecall;
    procedure DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant; 
                                                                {VT_12:1}var Arg4: OleVariant): Integer; safecall;
    function  KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}KeyCode: Integer; 
                                                             {VT_12:1}var KeyCode2: OleVariant): WideString; safecall;
    procedure OrganizerCopy {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_8:0}const Source: WideString; 
                                                                 {VT_8:0}const Destination: WideString; 
                                                                 {VT_8:0}const Name: WideString; 
                                                                 {VT_29:0}Object_: WdOrganizerObject); safecall;
    procedure OrganizerDelete {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_8:0}const Source: WideString; 
                                                                   {VT_8:0}const Name: WideString; 
                                                                   {VT_29:0}Object_: WdOrganizerObject); safecall;
    procedure OrganizerRename {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_8:0}const Source: WideString; 
                                                                   {VT_8:0}const Name: WideString; 
                                                                   {VT_8:0}const NewName: WideString; 
                                                                   {VT_29:0}Object_: WdOrganizerObject); safecall;
    procedure AddAddress {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_27:1}var TagID: PSafeArray; 
                                                              {VT_27:1}var Value: PSafeArray); safecall;
    function  GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                              {VT_12:1}var SelectDialog: OleVariant; 
                                                              {VT_12:1}var CheckNamesDialog: OleVariant; 
                                                              {VT_12:1}var RecentAddressesChoice: OleVariant; 
                                                              {VT_12:1}var UpdateRecentAddresses: OleVariant): WideString; safecall;
    function  CheckGrammar {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const String_: WideString): WordBool; safecall;
    function  CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:6}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant): WordBool; safecall;
    procedure ResetIgnoreAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:6}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; safecall;
    procedure GoBack {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Help {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var HelpType: OleVariant); safecall;
    procedure AutomaticChange {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ShowMe {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure HelpTool {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Window; safecall;
    procedure ListCommands {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_11:0}ListAllCommands: WordBool); safecall;
    procedure ShowClipboard {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OnTime {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var When: OleVariant; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var Tolerance: OleVariant); safecall;
    procedure NextLetter {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_8:0}const Zone: WideString; 
                                                               {VT_8:0}const Server: WideString; 
                                                               {VT_8:0}const Volume: WideString; 
                                                               {VT_12:1}var User: OleVariant; 
                                                               {VT_12:1}var UserPassword: OleVariant; 
                                                               {VT_12:1}var VolumePassword: OleVariant): Smallint; safecall;
    function  CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const String_: WideString): WideString; safecall;
    procedure SendFax {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Path: WideString); safecall;
    procedure RunOld {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const MacroName: WideString); safecall;
    procedure GoForward {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Move {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Left: Integer; {VT_3:0}Top: Integer); safecall;
    procedure Resize {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Width: Integer; 
                                                          {VT_3:0}Height: Integer); safecall;
    function  InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Inches: Single): Single; safecall;
    function  CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Centimeters: Single): Single; safecall;
    function  MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Millimeters: Single): Single; safecall;
    function  PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Picas: Single): Single; safecall;
    function  LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Lines: Single): Single; safecall;
    function  PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; safecall;
    function  PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_4:0}Pixels: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; safecall;
    procedure KeyboardLatin {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure KeyboardBidi {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ToggleKeyboard {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Keyboard {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}LangId: Integer): Integer; safecall;
    function  ProductCode {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WideString; safecall;
    function  DefaultWebOptions {Flags(1), (1/0) CC:0, INV:1, DBG:6}: DefaultWebOptions; safecall;
    procedure DiscussionSupport {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var Range: OleVariant; 
                                                                     {VT_12:1}var cid: OleVariant; 
                                                                     {VT_12:1}var piCSE: OleVariant); safecall;
    procedure SetDefaultTheme {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                                   {VT_29:0}DocumentType: WdDocumentMedium); safecall;
    function  GetDefaultTheme {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}DocumentType: WdDocumentMedium): WideString; safecall;
    function  Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: EmailOptions; safecall;
    function  Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoLanguageID; safecall;
    function  Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: COMAddIns; safecall;
    function  Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LanguageSettings; safecall;
    function  Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AnswerWizard; safecall;
    function  Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoFeatureInstall; safecall;
    procedure Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoFeatureInstall); safecall;
    procedure PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:6}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); safecall;
    function  Run {Flags(1), (32/31) CC:0, INV:1, DBG:6}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant; 
                                                         {VT_12:1}var varg27: OleVariant; 
                                                         {VT_12:1}var varg28: OleVariant; 
                                                         {VT_12:1}var varg29: OleVariant; 
                                                         {VT_12:1}var varg30: OleVariant): OleVariant; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Documents: Documents read Get_Documents;
    property Windows: Windows read Get_Windows;
    property ActiveDocument: WordDocument read Get_ActiveDocument;
    property ActiveWindow: Window read Get_ActiveWindow;
    property Selection: Selection read Get_Selection;
    property WordBasic: IDispatch read Get_WordBasic;
    property RecentFiles: RecentFiles read Get_RecentFiles;
    property NormalTemplate: Template read Get_NormalTemplate;
    property System_: System read Get_System_;
    property AutoCorrect: AutoCorrect read Get_AutoCorrect;
    property FontNames: FontNames read Get_FontNames;
    property LandscapeFontNames: FontNames read Get_LandscapeFontNames;
    property PortraitFontNames: FontNames read Get_PortraitFontNames;
    property Languages: Languages read Get_Languages;
    property Assistant: Assistant read Get_Assistant;
    property Browser: Browser read Get_Browser;
    property FileConverters: FileConverters read Get_FileConverters;
    property MailingLabel: MailingLabel read Get_MailingLabel;
    property Dialogs: Dialogs read Get_Dialogs;
    property CaptionLabels: CaptionLabels read Get_CaptionLabels;
    property AutoCaptions: AutoCaptions read Get_AutoCaptions;
    property AddIns: AddIns read Get_AddIns;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Version: WideString read Get_Version;
    property ScreenUpdating: WordBool read Get_ScreenUpdating write Set_ScreenUpdating;
    property PrintPreview: WordBool read Get_PrintPreview write Set_PrintPreview;
    property Tasks: Tasks read Get_Tasks;
    property DisplayStatusBar: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property SpecialMode: WordBool read Get_SpecialMode;
    property UsableWidth: Integer read Get_UsableWidth;
    property UsableHeight: Integer read Get_UsableHeight;
    property MathCoprocessorAvailable: WordBool read Get_MathCoprocessorAvailable;
    property MouseAvailable: WordBool read Get_MouseAvailable;
    property International {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_29:0}Index: WdInternationalIndex]: OleVariant read Get_International;
    property Build: WideString read Get_Build;
    property CapsLock: WordBool read Get_CapsLock;
    property NumLock: WordBool read Get_NumLock;
    property UserName: WideString read Get_UserName write Set_UserName;
    property UserInitials: WideString read Get_UserInitials write Set_UserInitials;
    property UserAddress: WideString read Get_UserAddress write Set_UserAddress;
    property MacroContainer: IDispatch read Get_MacroContainer;
    property DisplayRecentFiles: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property CommandBars: CommandBars read Get_CommandBars;
    property SynonymInfo {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_8:0}const Word: WideString; 
                                                              {VT_12:1}var LanguageID: OleVariant]: SynonymInfo read Get_SynonymInfo;
    property VBE: VBE read Get_VBE;
    property DefaultSaveFormat: WideString read Get_DefaultSaveFormat write Set_DefaultSaveFormat;
    property ListGalleries: ListGalleries read Get_ListGalleries;
    property ActivePrinter: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property Templates: Templates read Get_Templates;
    property CustomizationContext: IDispatch read Get_CustomizationContext write Set_CustomizationContext;
    property KeyBindings: KeyBindings read Get_KeyBindings;
    property KeysBoundTo {Flags(2), (4/3) CC:0, INV:2, DBG:5}[{VT_29:0}KeyCategory: WdKeyCategory; 
                                                              {VT_8:0}const Command: WideString; 
                                                              {VT_12:1}var CommandParameter: OleVariant]: KeysBoundTo read Get_KeysBoundTo;
    property FindKey {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}KeyCode: Integer; 
                                                          {VT_12:1}var KeyCode2: OleVariant]: KeyBinding read Get_FindKey;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Path: WideString read Get_Path;
    property DisplayScrollBars: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property StartupPath: WideString read Get_StartupPath write Set_StartupPath;
    property BackgroundSavingStatus: Integer read Get_BackgroundSavingStatus;
    property BackgroundPrintingStatus: Integer read Get_BackgroundPrintingStatus;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property DisplayAutoCompleteTips: WordBool read Get_DisplayAutoCompleteTips write Set_DisplayAutoCompleteTips;
    property Options: Options read Get_Options;
    property DisplayAlerts: WdAlertLevel read Get_DisplayAlerts write Set_DisplayAlerts;
    property CustomDictionaries: Dictionaries read Get_CustomDictionaries;
    property PathSeparator: WideString read Get_PathSeparator;
    property StatusBar: WideString write Set_StatusBar;
    property MAPIAvailable: WordBool read Get_MAPIAvailable;
    property DisplayScreenTips: WordBool read Get_DisplayScreenTips write Set_DisplayScreenTips;
    property EnableCancelKey: WdEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property UserControl: WordBool read Get_UserControl;
    property FileSearch: FileSearch read Get_FileSearch;
    property MailSystem: WdMailSystem read Get_MailSystem;
    property DefaultTableSeparator: WideString read Get_DefaultTableSeparator write Set_DefaultTableSeparator;
    property ShowVisualBasicEditor: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
    property BrowseExtraFileTypes: WideString read Get_BrowseExtraFileTypes write Set_BrowseExtraFileTypes;
    property IsObjectValid {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_9:0}const Object_: IDispatch]: WordBool read Get_IsObjectValid;
    property HangulHanjaDictionaries: HangulHanjaConversionDictionaries read Get_HangulHanjaDictionaries;
    property MailMessage: MailMessage read Get_MailMessage;
    property FocusInMailHeader: WordBool read Get_FocusInMailHeader;
    property EmailOptions: EmailOptions read Get_EmailOptions;
    property Language: MsoLanguageID read Get_Language;
    property COMAddIns: COMAddIns read Get_COMAddIns;
    property CheckLanguage: WordBool read Get_CheckLanguage write Set_CheckLanguage;
    property LanguageSettings: LanguageSettings read Get_LanguageSettings;
    property Dummy1: WordBool read Get_Dummy1;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
    property FeatureInstall: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
  end;

// *********************************************************************//
// DispIntf:  _ApplicationDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020970-0000-0000-C000-000000000046}
// *********************************************************************//
  _ApplicationDisp = dispinterface
    ['{00020970-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Documents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Documents readonly dispid 6;
    property Windows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Windows readonly dispid 2;
    property ActiveDocument {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordDocument readonly dispid 3;
    property ActiveWindow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Window readonly dispid 4;
    property Selection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Selection readonly dispid 5;
    property WordBasic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property RecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: RecentFiles readonly dispid 7;
    property NormalTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Template readonly dispid 8;
    property System_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: System readonly dispid 9;
    property AutoCorrect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AutoCorrect readonly dispid 10;
    property FontNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FontNames readonly dispid 11;
    property LandscapeFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FontNames readonly dispid 12;
    property PortraitFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FontNames readonly dispid 13;
    property Languages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Languages readonly dispid 14;
    property Assistant {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Assistant readonly dispid 15;
    property Browser {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Browser readonly dispid 16;
    property FileConverters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FileConverters readonly dispid 17;
    property MailingLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailingLabel readonly dispid 18;
    property Dialogs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dialogs readonly dispid 19;
    property CaptionLabels {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CaptionLabels readonly dispid 20;
    property AutoCaptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AutoCaptions readonly dispid 21;
    property AddIns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AddIns readonly dispid 22;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 23;
    property Version {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 24;
    property ScreenUpdating {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 26;
    property PrintPreview {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 27;
    property Tasks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tasks readonly dispid 28;
    property DisplayStatusBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 29;
    property SpecialMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 30;
    property UsableWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 33;
    property UsableHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 34;
    property MathCoprocessorAvailable {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 36;
    property MouseAvailable {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 37;
    property International {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_29:0}Index: WdInternationalIndex]: OleVariant readonly dispid 46;
    property Build {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 47;
    property CapsLock {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 48;
    property NumLock {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 49;
    property UserName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 52;
    property UserInitials {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 53;
    property UserAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 54;
    property MacroContainer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 55;
    property DisplayRecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 56;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CommandBars readonly dispid 57;
    property SynonymInfo {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:0}const Word: WideString; 
                                                              {VT_12:1}var LanguageID: OleVariant]: SynonymInfo readonly dispid 59;
    property VBE {Flags(2), (1/0) CC:0, INV:2, DBG:6}: VBE readonly dispid 61;
    property DefaultSaveFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 64;
    property ListGalleries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListGalleries readonly dispid 65;
    property ActivePrinter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 66;
    property Templates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Templates readonly dispid 67;
    property CustomizationContext {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch dispid 68;
    property KeyBindings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: KeyBindings readonly dispid 69;
    property KeysBoundTo {Flags(2), (4/3) CC:0, INV:2, DBG:6}[{VT_29:0}KeyCategory: WdKeyCategory; 
                                                              {VT_8:0}const Command: WideString; 
                                                              {VT_12:1}var CommandParameter: OleVariant]: KeysBoundTo readonly dispid 70;
    property FindKey {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}KeyCode: Integer; 
                                                          {VT_12:1}var KeyCode2: OleVariant]: KeyBinding readonly dispid 71;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 80;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 81;
    property DisplayScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 82;
    property StartupPath {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 83;
    property BackgroundSavingStatus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 85;
    property BackgroundPrintingStatus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 86;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 87;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 88;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 89;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 90;
    property WindowState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWindowState dispid 91;
    property DisplayAutoCompleteTips {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 92;
    property Options {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Options readonly dispid 93;
    property DisplayAlerts {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdAlertLevel dispid 94;
    property CustomDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionaries readonly dispid 95;
    property PathSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 96;
    property StatusBar {Flags(2), (1/0) CC:0, INV:4, DBG:6}: WideString writeonly dispid 97;
    property MAPIAvailable {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 98;
    property DisplayScreenTips {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 99;
    property EnableCancelKey {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdEnableCancelKey dispid 100;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 101;
    property FileSearch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FileSearch readonly dispid 103;
    property MailSystem {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailSystem readonly dispid 104;
    property DefaultTableSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 105;
    property ShowVisualBasicEditor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 106;
    property BrowseExtraFileTypes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property IsObjectValid {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_9:0}const Object_: IDispatch]: WordBool readonly dispid 109;
    property HangulHanjaDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HangulHanjaConversionDictionaries readonly dispid 110;
    property MailMessage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMessage readonly dispid 348;
    property FocusInMailHeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 386;
    procedure Quit {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var SaveChanges: OleVariant; 
                                                        {VT_12:1}var OriginalFormat: OleVariant; 
                                                        {VT_12:1}var RouteDocument: OleVariant); dispid 1105;
    procedure ScreenRefresh {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 301;
    procedure PrintOutOld {Flags(2), (15/15) CC:0, INV:1, DBG:4}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var FileName: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); dispid 302;
    procedure LookupNameProperties {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString); dispid 303;
    procedure SubstituteFont {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const UnavailableFont: WideString; 
                                                                  {VT_8:0}const SubstituteFont: WideString); dispid 304;
    function  Repeat_ {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Times: OleVariant): WordBool; dispid 305;
    procedure DDEExecute {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Command: WideString); dispid 310;
    function  DDEInitiate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const App: WideString; 
                                                               {VT_8:0}const Topic: WideString): Integer; dispid 311;
    procedure DDEPoke {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString); dispid 312;
    function  DDERequest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Item: WideString): WideString; dispid 313;
    procedure DDETerminate {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer); dispid 314;
    procedure DDETerminateAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 315;
    function  BuildKeyCode {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant; 
                                                                {VT_12:1}var Arg4: OleVariant): Integer; dispid 316;
    function  KeyString {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}KeyCode: Integer; 
                                                             {VT_12:1}var KeyCode2: OleVariant): WideString; dispid 317;
    procedure OrganizerCopy {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_8:0}const Source: WideString; 
                                                                 {VT_8:0}const Destination: WideString; 
                                                                 {VT_8:0}const Name: WideString; 
                                                                 {VT_29:0}Object_: WdOrganizerObject); dispid 318;
    procedure OrganizerDelete {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_8:0}const Source: WideString; 
                                                                   {VT_8:0}const Name: WideString; 
                                                                   {VT_29:0}Object_: WdOrganizerObject); dispid 319;
    procedure OrganizerRename {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_8:0}const Source: WideString; 
                                                                   {VT_8:0}const Name: WideString; 
                                                                   {VT_8:0}const NewName: WideString; 
                                                                   {VT_29:0}Object_: WdOrganizerObject); dispid 320;
    procedure AddAddress {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_27:1}var TagID: {??PSafeArray} OleVariant; 
                                                              {VT_27:1}var Value: {??PSafeArray} OleVariant); dispid 321;
    function  GetAddress {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                              {VT_12:1}var SelectDialog: OleVariant; 
                                                              {VT_12:1}var CheckNamesDialog: OleVariant; 
                                                              {VT_12:1}var RecentAddressesChoice: OleVariant; 
                                                              {VT_12:1}var UpdateRecentAddresses: OleVariant): WideString; dispid 322;
    function  CheckGrammar {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const String_: WideString): WordBool; dispid 323;
    function  CheckSpelling {Flags(2), (14/13) CC:0, INV:1, DBG:4}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant): WordBool; dispid 324;
    procedure ResetIgnoreAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 326;
    function  GetSpellingSuggestions {Flags(2), (15/14) CC:0, INV:1, DBG:4}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; dispid 327;
    procedure GoBack {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 328;
    procedure Help {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var HelpType: OleVariant); dispid 329;
    procedure AutomaticChange {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 330;
    procedure ShowMe {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 331;
    procedure HelpTool {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 332;
    function  NewWindow {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Window; dispid 345;
    procedure ListCommands {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_11:0}ListAllCommands: WordBool); dispid 346;
    procedure ShowClipboard {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 349;
    procedure OnTime {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var When: OleVariant; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var Tolerance: OleVariant); dispid 350;
    procedure NextLetter {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 351;
    function  MountVolume {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_8:0}const Zone: WideString; 
                                                               {VT_8:0}const Server: WideString; 
                                                               {VT_8:0}const Volume: WideString; 
                                                               {VT_12:1}var User: OleVariant; 
                                                               {VT_12:1}var UserPassword: OleVariant; 
                                                               {VT_12:1}var VolumePassword: OleVariant): Smallint; dispid 353;
    function  CleanString {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const String_: WideString): WideString; dispid 354;
    procedure SendFax {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 356;
    procedure ChangeFileOpenDirectory {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Path: WideString); dispid 357;
    procedure RunOld {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const MacroName: WideString); dispid 358;
    procedure GoForward {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 359;
    procedure Move {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Left: Integer; {VT_3:0}Top: Integer); dispid 360;
    procedure Resize {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Width: Integer; 
                                                          {VT_3:0}Height: Integer); dispid 361;
    function  InchesToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Inches: Single): Single; dispid 370;
    function  CentimetersToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Centimeters: Single): Single; dispid 371;
    function  MillimetersToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Millimeters: Single): Single; dispid 372;
    function  PicasToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Picas: Single): Single; dispid 373;
    function  LinesToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Lines: Single): Single; dispid 374;
    function  PointsToInches {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 380;
    function  PointsToCentimeters {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 381;
    function  PointsToMillimeters {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 382;
    function  PointsToPicas {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 383;
    function  PointsToLines {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 384;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 385;
    function  PointsToPixels {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; dispid 387;
    function  PixelsToPoints {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_4:0}Pixels: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; dispid 388;
    procedure KeyboardLatin {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 400;
    procedure KeyboardBidi {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 401;
    procedure ToggleKeyboard {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 402;
    function  Keyboard {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}LangId: Integer): Integer; dispid 446;
    function  ProductCode {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WideString; dispid 404;
    function  DefaultWebOptions {Flags(2), (1/0) CC:0, INV:1, DBG:4}: DefaultWebOptions; dispid 405;
    procedure DiscussionSupport {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var Range: OleVariant; 
                                                                     {VT_12:1}var cid: OleVariant; 
                                                                     {VT_12:1}var piCSE: OleVariant); dispid 407;
    procedure SetDefaultTheme {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                                   {VT_29:0}DocumentType: WdDocumentMedium); dispid 414;
    function  GetDefaultTheme {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}DocumentType: WdDocumentMedium): WideString; dispid 416;
    property EmailOptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: EmailOptions readonly dispid 389;
    property Language {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoLanguageID readonly dispid 391;
    property COMAddIns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: COMAddIns readonly dispid 111;
    property CheckLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 112;
    property LanguageSettings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LanguageSettings readonly dispid 403;
    property Dummy1 {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 406;
    property AnswerWizard {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AnswerWizard readonly dispid 409;
    property FeatureInstall {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoFeatureInstall dispid 447;
    procedure PrintOut {Flags(2), (19/19) CC:0, INV:1, DBG:4}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); dispid 444;
    function  Run {Flags(2), (32/31) CC:0, INV:1, DBG:4}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant; 
                                                         {VT_12:1}var varg27: OleVariant; 
                                                         {VT_12:1}var varg28: OleVariant; 
                                                         {VT_12:1}var varg29: OleVariant; 
                                                         {VT_12:1}var varg30: OleVariant): OleVariant; dispid 445;
  end;

// *********************************************************************//
// Interface: _Global
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B9-0000-0000-C000-000000000046}
// *********************************************************************//
  _Global = interface(IDispatch)
    ['{000209B9-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Documents; safecall;
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Windows; safecall;
    function  Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordDocument; safecall;
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Window; safecall;
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Selection; safecall;
    function  Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: RecentFiles; safecall;
    function  Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Template; safecall;
    function  Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: System; safecall;
    function  Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AutoCorrect; safecall;
    function  Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FontNames; safecall;
    function  Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FontNames; safecall;
    function  Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FontNames; safecall;
    function  Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Languages; safecall;
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Assistant; safecall;
    function  Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FileConverters; safecall;
    function  Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dialogs; safecall;
    function  Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CaptionLabels; safecall;
    function  Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AutoCaptions; safecall;
    function  Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AddIns; safecall;
    function  Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tasks; safecall;
    function  Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CommandBars; safecall;
    function  Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var LanguageID: OleVariant): SynonymInfo; safecall;
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:6}: VBE; safecall;
    function  Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListGalleries; safecall;
    function  Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Templates; safecall;
    function  Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_9:0}const prop: IDispatch); safecall;
    function  Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: KeyBindings; safecall;
    function  Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:6}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                   {VT_8:0}const Command: WideString; 
                                                                   {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo; safecall;
    function  Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_3:0}KeyCode: Integer; 
                                                               {VT_12:1}var KeyCode2: OleVariant): KeyBinding; safecall;
    function  Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Options; safecall;
    function  Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionaries; safecall;
    procedure Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const Param1: WideString); safecall;
    function  Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_9:0}const Object_: IDispatch): WordBool; safecall;
    function  Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HangulHanjaConversionDictionaries; safecall;
    function  Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Times: OleVariant): WordBool; safecall;
    procedure DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Command: WideString); safecall;
    function  DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const App: WideString; 
                                                               {VT_8:0}const Topic: WideString): Integer; safecall;
    procedure DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString); safecall;
    function  DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Item: WideString): WideString; safecall;
    procedure DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Channel: Integer); safecall;
    procedure DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant; 
                                                                {VT_12:1}var Arg4: OleVariant): Integer; safecall;
    function  KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}KeyCode: Integer; 
                                                             {VT_12:1}var KeyCode2: OleVariant): WideString; safecall;
    function  CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:6}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant): WordBool; safecall;
    function  GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:6}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; safecall;
    procedure Help {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var HelpType: OleVariant); safecall;
    function  NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Window; safecall;
    function  CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const String_: WideString): WideString; safecall;
    procedure ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Path: WideString); safecall;
    function  InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Inches: Single): Single; safecall;
    function  CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Centimeters: Single): Single; safecall;
    function  MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Millimeters: Single): Single; safecall;
    function  PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Picas: Single): Single; safecall;
    function  LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Lines: Single): Single; safecall;
    function  PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single): Single; safecall;
    function  PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_4:0}Points: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; safecall;
    function  PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_4:0}Pixels: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; safecall;
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LanguageSettings; safecall;
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AnswerWizard; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Documents: Documents read Get_Documents;
    property Windows: Windows read Get_Windows;
    property ActiveDocument: WordDocument read Get_ActiveDocument;
    property ActiveWindow: Window read Get_ActiveWindow;
    property Selection: Selection read Get_Selection;
    property WordBasic: IDispatch read Get_WordBasic;
    property PrintPreview: WordBool read Get_PrintPreview write Set_PrintPreview;
    property RecentFiles: RecentFiles read Get_RecentFiles;
    property NormalTemplate: Template read Get_NormalTemplate;
    property System_: System read Get_System_;
    property AutoCorrect: AutoCorrect read Get_AutoCorrect;
    property FontNames: FontNames read Get_FontNames;
    property LandscapeFontNames: FontNames read Get_LandscapeFontNames;
    property PortraitFontNames: FontNames read Get_PortraitFontNames;
    property Languages: Languages read Get_Languages;
    property Assistant: Assistant read Get_Assistant;
    property FileConverters: FileConverters read Get_FileConverters;
    property Dialogs: Dialogs read Get_Dialogs;
    property CaptionLabels: CaptionLabels read Get_CaptionLabels;
    property AutoCaptions: AutoCaptions read Get_AutoCaptions;
    property AddIns: AddIns read Get_AddIns;
    property Tasks: Tasks read Get_Tasks;
    property MacroContainer: IDispatch read Get_MacroContainer;
    property CommandBars: CommandBars read Get_CommandBars;
    property SynonymInfo {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_8:0}const Word: WideString; 
                                                              {VT_12:1}var LanguageID: OleVariant]: SynonymInfo read Get_SynonymInfo;
    property VBE: VBE read Get_VBE;
    property ListGalleries: ListGalleries read Get_ListGalleries;
    property ActivePrinter: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property Templates: Templates read Get_Templates;
    property CustomizationContext: IDispatch read Get_CustomizationContext write Set_CustomizationContext;
    property KeyBindings: KeyBindings read Get_KeyBindings;
    property KeysBoundTo {Flags(2), (4/3) CC:0, INV:2, DBG:5}[{VT_29:0}KeyCategory: WdKeyCategory; 
                                                              {VT_8:0}const Command: WideString; 
                                                              {VT_12:1}var CommandParameter: OleVariant]: KeysBoundTo read Get_KeysBoundTo;
    property FindKey {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_3:0}KeyCode: Integer; 
                                                          {VT_12:1}var KeyCode2: OleVariant]: KeyBinding read Get_FindKey;
    property Options: Options read Get_Options;
    property CustomDictionaries: Dictionaries read Get_CustomDictionaries;
    property StatusBar: WideString write Set_StatusBar;
    property ShowVisualBasicEditor: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
    property IsObjectValid {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_9:0}const Object_: IDispatch]: WordBool read Get_IsObjectValid;
    property HangulHanjaDictionaries: HangulHanjaConversionDictionaries read Get_HangulHanjaDictionaries;
    property LanguageSettings: LanguageSettings read Get_LanguageSettings;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
  end;

// *********************************************************************//
// DispIntf:  _GlobalDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B9-0000-0000-C000-000000000046}
// *********************************************************************//
  _GlobalDisp = dispinterface
    ['{000209B9-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Documents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Documents readonly dispid 1;
    property Windows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Windows readonly dispid 2;
    property ActiveDocument {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordDocument readonly dispid 3;
    property ActiveWindow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Window readonly dispid 4;
    property Selection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Selection readonly dispid 5;
    property WordBasic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 6;
    property PrintPreview {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 27;
    property RecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: RecentFiles readonly dispid 7;
    property NormalTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Template readonly dispid 8;
    property System_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: System readonly dispid 9;
    property AutoCorrect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AutoCorrect readonly dispid 10;
    property FontNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FontNames readonly dispid 11;
    property LandscapeFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FontNames readonly dispid 12;
    property PortraitFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FontNames readonly dispid 13;
    property Languages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Languages readonly dispid 14;
    property Assistant {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Assistant readonly dispid 15;
    property FileConverters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FileConverters readonly dispid 17;
    property Dialogs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dialogs readonly dispid 19;
    property CaptionLabels {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CaptionLabels readonly dispid 20;
    property AutoCaptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AutoCaptions readonly dispid 21;
    property AddIns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AddIns readonly dispid 22;
    property Tasks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tasks readonly dispid 28;
    property MacroContainer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 55;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CommandBars readonly dispid 57;
    property SynonymInfo {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:0}const Word: WideString; 
                                                              {VT_12:1}var LanguageID: OleVariant]: SynonymInfo readonly dispid 59;
    property VBE {Flags(2), (1/0) CC:0, INV:2, DBG:6}: VBE readonly dispid 61;
    property ListGalleries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListGalleries readonly dispid 65;
    property ActivePrinter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 66;
    property Templates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Templates readonly dispid 67;
    property CustomizationContext {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch dispid 68;
    property KeyBindings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: KeyBindings readonly dispid 69;
    property KeysBoundTo {Flags(2), (4/3) CC:0, INV:2, DBG:6}[{VT_29:0}KeyCategory: WdKeyCategory; 
                                                              {VT_8:0}const Command: WideString; 
                                                              {VT_12:1}var CommandParameter: OleVariant]: KeysBoundTo readonly dispid 70;
    property FindKey {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_3:0}KeyCode: Integer; 
                                                          {VT_12:1}var KeyCode2: OleVariant]: KeyBinding readonly dispid 71;
    property Options {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Options readonly dispid 93;
    property CustomDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionaries readonly dispid 95;
    property StatusBar {Flags(2), (1/0) CC:0, INV:4, DBG:6}: WideString writeonly dispid 97;
    property ShowVisualBasicEditor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 104;
    property IsObjectValid {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_9:0}const Object_: IDispatch]: WordBool readonly dispid 109;
    property HangulHanjaDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HangulHanjaConversionDictionaries readonly dispid 110;
    function  Repeat_ {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Times: OleVariant): WordBool; dispid 305;
    procedure DDEExecute {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Command: WideString); dispid 310;
    function  DDEInitiate {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const App: WideString; 
                                                               {VT_8:0}const Topic: WideString): Integer; dispid 311;
    procedure DDEPoke {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString); dispid 312;
    function  DDERequest {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Item: WideString): WideString; dispid 313;
    procedure DDETerminate {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Channel: Integer); dispid 314;
    procedure DDETerminateAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 315;
    function  BuildKeyCode {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant; 
                                                                {VT_12:1}var Arg4: OleVariant): Integer; dispid 316;
    function  KeyString {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}KeyCode: Integer; 
                                                             {VT_12:1}var KeyCode2: OleVariant): WideString; dispid 317;
    function  CheckSpelling {Flags(2), (14/13) CC:0, INV:1, DBG:4}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant): WordBool; dispid 324;
    function  GetSpellingSuggestions {Flags(2), (15/14) CC:0, INV:1, DBG:4}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; dispid 327;
    procedure Help {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var HelpType: OleVariant); dispid 329;
    function  NewWindow {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Window; dispid 345;
    function  CleanString {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const String_: WideString): WideString; dispid 354;
    procedure ChangeFileOpenDirectory {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Path: WideString); dispid 355;
    function  InchesToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Inches: Single): Single; dispid 370;
    function  CentimetersToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Centimeters: Single): Single; dispid 371;
    function  MillimetersToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Millimeters: Single): Single; dispid 372;
    function  PicasToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Picas: Single): Single; dispid 373;
    function  LinesToPoints {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Lines: Single): Single; dispid 374;
    function  PointsToInches {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 380;
    function  PointsToCentimeters {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 381;
    function  PointsToMillimeters {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 382;
    function  PointsToPicas {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 383;
    function  PointsToLines {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single): Single; dispid 384;
    function  PointsToPixels {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_4:0}Points: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; dispid 385;
    function  PixelsToPoints {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_4:0}Pixels: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; dispid 386;
    property LanguageSettings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LanguageSettings readonly dispid 111;
    property AnswerWizard {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AnswerWizard readonly dispid 112;
  end;

// *********************************************************************//
// Interface: FontNames
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096F-0000-0000-C000-000000000046}
// *********************************************************************//
  FontNames = interface(IDispatch)
    ['{0002096F-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): WideString; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  FontNamesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096F-0000-0000-C000-000000000046}
// *********************************************************************//
  FontNamesDisp = dispinterface
    ['{0002096F-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: Languages
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096E-0000-0000-C000-000000000046}
// *********************************************************************//
  Languages = interface(IDispatch)
    ['{0002096E-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Language; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  LanguagesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096E-0000-0000-C000-000000000046}
// *********************************************************************//
  LanguagesDisp = dispinterface
    ['{0002096E-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Language; dispid 0;
  end;

// *********************************************************************//
// Interface: Language
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096D-0000-0000-C000-000000000046}
// *********************************************************************//
  Language = interface(IDispatch)
    ['{0002096D-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    function  Get_NameLocal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_ActiveGrammarDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    function  Get_ActiveHyphenationDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    function  Get_ActiveSpellingDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    function  Get_ActiveThesaurusDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    function  Get_DefaultWritingStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultWritingStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_WritingStyleList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_SpellingDictionaryType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDictionaryType; safecall;
    procedure Set_SpellingDictionaryType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdDictionaryType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ID: WdLanguageID read Get_ID;
    property NameLocal: WideString read Get_NameLocal;
    property Name: WideString read Get_Name;
    property ActiveGrammarDictionary: Dictionary read Get_ActiveGrammarDictionary;
    property ActiveHyphenationDictionary: Dictionary read Get_ActiveHyphenationDictionary;
    property ActiveSpellingDictionary: Dictionary read Get_ActiveSpellingDictionary;
    property ActiveThesaurusDictionary: Dictionary read Get_ActiveThesaurusDictionary;
    property DefaultWritingStyle: WideString read Get_DefaultWritingStyle write Set_DefaultWritingStyle;
    property WritingStyleList: OleVariant read Get_WritingStyleList;
    property SpellingDictionaryType: WdDictionaryType read Get_SpellingDictionaryType write Set_SpellingDictionaryType;
  end;

// *********************************************************************//
// DispIntf:  LanguageDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096D-0000-0000-C000-000000000046}
// *********************************************************************//
  LanguageDisp = dispinterface
    ['{0002096D-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID readonly dispid 10;
    property NameLocal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 12;
    property ActiveGrammarDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary readonly dispid 13;
    property ActiveHyphenationDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary readonly dispid 14;
    property ActiveSpellingDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary readonly dispid 15;
    property ActiveThesaurusDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary readonly dispid 16;
    property DefaultWritingStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 17;
    property WritingStyleList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 18;
    property SpellingDictionaryType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDictionaryType dispid 19;
  end;

// *********************************************************************//
// Interface: Documents
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096C-0000-0000-C000-000000000046}
// *********************************************************************//
  Documents = interface(IDispatch)
    ['{0002096C-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): WordDocument; safecall;
    procedure Close {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var OriginalFormat: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); safecall;
    function  AddOld {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Template: OleVariant; 
                                                          {VT_12:1}var NewTemplate: OleVariant): WordDocument; safecall;
    function  OpenOld {Flags(1), (11/10) CC:0, INV:1, DBG:6}({VT_12:1}var FileName: OleVariant; 
                                                             {VT_12:1}var ConfirmConversions: OleVariant; 
                                                             {VT_12:1}var ReadOnly: OleVariant; 
                                                             {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                             {VT_12:1}var PasswordDocument: OleVariant; 
                                                             {VT_12:1}var PasswordTemplate: OleVariant; 
                                                             {VT_12:1}var Revert: OleVariant; 
                                                             {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                             {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                             {VT_12:1}var Format: OleVariant): WordDocument; safecall;
    procedure Save {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var NoPrompt: OleVariant; 
                                                        {VT_12:1}var OriginalFormat: OleVariant); safecall;
    function  Add {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_12:1}var Template: OleVariant; 
                                                       {VT_12:1}var NewTemplate: OleVariant; 
                                                       {VT_12:1}var DocumentType: OleVariant; 
                                                       {VT_12:1}var Visible: OleVariant): WordDocument; safecall;
    function  Open {Flags(1), (13/12) CC:0, INV:1, DBG:6}({VT_12:1}var FileName: OleVariant; 
                                                          {VT_12:1}var ConfirmConversions: OleVariant; 
                                                          {VT_12:1}var ReadOnly: OleVariant; 
                                                          {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                          {VT_12:1}var PasswordDocument: OleVariant; 
                                                          {VT_12:1}var PasswordTemplate: OleVariant; 
                                                          {VT_12:1}var Revert: OleVariant; 
                                                          {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                          {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                          {VT_12:1}var Format: OleVariant; 
                                                          {VT_12:1}var Encoding: OleVariant; 
                                                          {VT_12:1}var Visible: OleVariant): WordDocument; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  DocumentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096C-0000-0000-C000-000000000046}
// *********************************************************************//
  DocumentsDisp = dispinterface
    ['{0002096C-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): WordDocument; dispid 0;
    procedure Close {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var OriginalFormat: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); dispid 1105;
    function  AddOld {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Template: OleVariant; 
                                                          {VT_12:1}var NewTemplate: OleVariant): WordDocument; dispid 11;
    function  OpenOld {Flags(2), (11/10) CC:0, INV:1, DBG:4}({VT_12:1}var FileName: OleVariant; 
                                                             {VT_12:1}var ConfirmConversions: OleVariant; 
                                                             {VT_12:1}var ReadOnly: OleVariant; 
                                                             {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                             {VT_12:1}var PasswordDocument: OleVariant; 
                                                             {VT_12:1}var PasswordTemplate: OleVariant; 
                                                             {VT_12:1}var Revert: OleVariant; 
                                                             {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                             {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                             {VT_12:1}var Format: OleVariant): WordDocument; dispid 12;
    procedure Save {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var NoPrompt: OleVariant; 
                                                        {VT_12:1}var OriginalFormat: OleVariant); dispid 13;
    function  Add {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_12:1}var Template: OleVariant; 
                                                       {VT_12:1}var NewTemplate: OleVariant; 
                                                       {VT_12:1}var DocumentType: OleVariant; 
                                                       {VT_12:1}var Visible: OleVariant): WordDocument; dispid 14;
    function  Open {Flags(2), (13/12) CC:0, INV:1, DBG:4}({VT_12:1}var FileName: OleVariant; 
                                                          {VT_12:1}var ConfirmConversions: OleVariant; 
                                                          {VT_12:1}var ReadOnly: OleVariant; 
                                                          {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                          {VT_12:1}var PasswordDocument: OleVariant; 
                                                          {VT_12:1}var PasswordTemplate: OleVariant; 
                                                          {VT_12:1}var Revert: OleVariant; 
                                                          {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                          {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                          {VT_12:1}var Format: OleVariant; 
                                                          {VT_12:1}var Encoding: OleVariant; 
                                                          {VT_12:1}var Visible: OleVariant): WordDocument; dispid 15;
  end;

// *********************************************************************//
// Interface: _Document
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0002096B-0000-0000-C000-000000000046}
// *********************************************************************//
  _Document = interface(IDispatch)
    ['{0002096B-0000-0000-C000-000000000046}']
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Bookmarks; safecall;
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Footnotes; safecall;
    function  Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Endnotes; safecall;
    function  Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Comments; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDocumentType; safecall;
    function  Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Sections; safecall;
    function  Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Paragraphs; safecall;
    function  Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Words; safecall;
    function  Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Sentences; safecall;
    function  Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Characters; safecall;
    function  Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Fields; safecall;
    function  Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormFields; safecall;
    function  Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Styles; safecall;
    function  Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frames; safecall;
    function  Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TablesOfFigures; safecall;
    function  Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Variables; safecall;
    function  Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMerge; safecall;
    function  Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Envelope; safecall;
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Revisions; safecall;
    function  Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TablesOfContents; safecall;
    function  Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TablesOfAuthorities; safecall;
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PageSetup; safecall;
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: PageSetup); safecall;
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Windows; safecall;
    function  Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: RoutingSlip; safecall;
    function  Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TablesOfAuthoritiesCategories; safecall;
    function  Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Indexes; safecall;
    function  Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Window; safecall;
    function  Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDocumentKind; safecall;
    procedure Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdDocumentKind); safecall;
    function  Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Subdocuments; safecall;
    function  Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_29:0}Type_: WdCompatibility): WordBool; safecall;
    procedure Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:6}({VT_29:0}Type_: WdCompatibility; 
                                                                     {VT_11:0}prop: WordBool); safecall;
    function  Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:6}: StoryRanges; safecall;
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CommandBars; safecall;
    function  Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdProtectionType; safecall;
    function  Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Hyperlinks; safecall;
    function  Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shapes; safecall;
    function  Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListTemplates; safecall;
    function  Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Lists; safecall;
    function  Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: InlineShapes; safecall;
    function  Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shape; safecall;
    procedure Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Shape); safecall;
    function  Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Versions; safecall;
    function  Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSummaryMode; safecall;
    procedure Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSummaryMode); safecall;
    function  Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListParagraphs; safecall;
    procedure Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const Param1: WideString); safecall;
    procedure Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const Param1: WideString); safecall;
    function  Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:1}var LanguageID: OleVariant): WideString; safecall;
    procedure Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:6}({VT_12:1}var LanguageID: OleVariant; 
                                                                          {VT_8:0}const prop: WideString); safecall;
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Mailer; safecall;
    function  Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ReadabilityStatistics; safecall;
    function  Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors; safecall;
    function  Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors; safecall;
    function  Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: VBProject; safecall;
    function  Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdJustificationMode; safecall;
    procedure Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdJustificationMode); safecall;
    function  Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLevel; safecall;
    procedure Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFarEastLineBreakLevel); safecall;
    function  Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure Close {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var OriginalFormat: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); safecall;
    procedure SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:6}({VT_12:1}var FileName: OleVariant; 
                                                            {VT_12:1}var FileFormat: OleVariant; 
                                                            {VT_12:1}var LockComments: OleVariant; 
                                                            {VT_12:1}var Password: OleVariant; 
                                                            {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                            {VT_12:1}var WritePassword: OleVariant; 
                                                            {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                            {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                            {VT_12:1}var SaveNativePictureFormat: OleVariant; 
                                                            {VT_12:1}var SaveFormsData: OleVariant; 
                                                            {VT_12:1}var SaveAsAOCELetter: OleVariant); safecall;
    procedure Repaginate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure FitToPages {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ManualHyphenation {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DataForm {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Route {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Save {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:6}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); safecall;
    procedure SendMail {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Range {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Start: OleVariant; 
                                                         {VT_12:1}var End_: OleVariant): Range; safecall;
    procedure RunAutoMacro {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Which: WdAutoMacros); safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; safecall;
    function  Undo {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Times: OleVariant): WordBool; safecall;
    function  Redo {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Times: OleVariant): WordBool; safecall;
    function  ComputeStatistics {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_29:0}Statistic: WdStatistic; 
                                                                     {VT_12:1}var IncludeFootnotesAndEndnotes: OleVariant): Integer; safecall;
    procedure MakeCompatibilityDefault {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Protect {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}Type_: WdProtectionType; 
                                                           {VT_12:1}var NoReset: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant); safecall;
    procedure Unprotect {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Password: OleVariant); safecall;
    procedure EditionOptions {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}Type_: WdEditionType; 
                                                                  {VT_29:0}Option: WdEditionOption; 
                                                                  {VT_8:0}const Name: WideString; 
                                                                  {VT_12:1}var Format: OleVariant); safecall;
    procedure RunLetterWizard {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var LetterContent: OleVariant; 
                                                                   {VT_12:1}var WizardMode: OleVariant); safecall;
    function  GetLetterContent {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordLetterContent; safecall;
    procedure SetLetterContent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var LetterContent: OleVariant); safecall;
    procedure CopyStylesFromTemplate {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Template: WideString); safecall;
    procedure UpdateStyles {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CheckGrammar {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:6}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant); safecall;
    procedure FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant; 
                                                                   {VT_12:1}var AddHistory: OleVariant; 
                                                                   {VT_12:1}var ExtraInfo: OleVariant; 
                                                                   {VT_12:1}var Method: OleVariant; 
                                                                   {VT_12:1}var HeaderInfo: OleVariant); safecall;
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Reload {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_12:1}var Length: OleVariant; 
                                                                 {VT_12:1}var Mode: OleVariant; 
                                                                 {VT_12:1}var UpdateProperties: OleVariant): Range; safecall;
    procedure RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant); safecall;
    procedure ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant); safecall;
    function  CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; safecall;
    procedure Post {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ToggleFormsDesign {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Compare {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString); safecall;
    procedure UpdateSummaryProperties {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  GetCrossReferenceItems {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var ReferenceType: OleVariant): OleVariant; safecall;
    procedure AutoFormat {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ViewCode {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ViewPropertyBrowser {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ForwardMailer {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Reply {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ReplyAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SendMailer {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var FileFormat: OleVariant; 
                                                              {VT_12:1}var Priority: OleVariant); safecall;
    procedure UndoClear {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PresentIt {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SendFax {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const Address: WideString; 
                                                           {VT_12:1}var Subject: OleVariant); safecall;
    procedure Merge {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString); safecall;
    procedure ClosePrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CheckConsistency {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:6}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                         {VT_12:1}var SenderCity: OleVariant; 
                                                                         {VT_12:1}var SenderCode: OleVariant; 
                                                                         {VT_12:1}var SenderGender: OleVariant; 
                                                                         {VT_12:1}var SenderReference: OleVariant): WordLetterContent; safecall;
    procedure AcceptAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure RejectAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DetectLanguage {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString); safecall;
    procedure RemoveTheme {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure WebPagePreview {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ReloadAs {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Encoding: MsoEncoding); safecall;
    function  Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Email; safecall;
    function  Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Scripts; safecall;
    function  Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLanguageID; safecall;
    procedure Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFarEastLineBreakLanguageID); safecall;
    function  Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frameset; safecall;
    function  Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HTMLProject; safecall;
    function  Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WebOptions; safecall;
    function  Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding; safecall;
    function  Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding; safecall;
    procedure Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoEncoding); safecall;
    function  Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:6}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); safecall;
    procedure sblt {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const s: WideString); safecall;
    property Name: WideString read Get_Name;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BuiltInDocumentProperties: IDispatch read Get_BuiltInDocumentProperties;
    property CustomDocumentProperties: IDispatch read Get_CustomDocumentProperties;
    property Path: WideString read Get_Path;
    property Bookmarks: Bookmarks read Get_Bookmarks;
    property Tables: Tables read Get_Tables;
    property Footnotes: Footnotes read Get_Footnotes;
    property Endnotes: Endnotes read Get_Endnotes;
    property Comments: Comments read Get_Comments;
    property Type_: WdDocumentType read Get_Type_;
    property AutoHyphenation: WordBool read Get_AutoHyphenation write Set_AutoHyphenation;
    property HyphenateCaps: WordBool read Get_HyphenateCaps write Set_HyphenateCaps;
    property HyphenationZone: Integer read Get_HyphenationZone write Set_HyphenationZone;
    property ConsecutiveHyphensLimit: Integer read Get_ConsecutiveHyphensLimit write Set_ConsecutiveHyphensLimit;
    property Sections: Sections read Get_Sections;
    property Paragraphs: Paragraphs read Get_Paragraphs;
    property Words: Words read Get_Words;
    property Sentences: Sentences read Get_Sentences;
    property Characters: Characters read Get_Characters;
    property Fields: Fields read Get_Fields;
    property FormFields: FormFields read Get_FormFields;
    property Styles: Styles read Get_Styles;
    property Frames: Frames read Get_Frames;
    property TablesOfFigures: TablesOfFigures read Get_TablesOfFigures;
    property Variables: Variables read Get_Variables;
    property MailMerge: MailMerge read Get_MailMerge;
    property Envelope: Envelope read Get_Envelope;
    property FullName: WideString read Get_FullName;
    property Revisions: Revisions read Get_Revisions;
    property TablesOfContents: TablesOfContents read Get_TablesOfContents;
    property TablesOfAuthorities: TablesOfAuthorities read Get_TablesOfAuthorities;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property Windows: Windows read Get_Windows;
    property HasRoutingSlip: WordBool read Get_HasRoutingSlip write Set_HasRoutingSlip;
    property RoutingSlip: RoutingSlip read Get_RoutingSlip;
    property Routed: WordBool read Get_Routed;
    property TablesOfAuthoritiesCategories: TablesOfAuthoritiesCategories read Get_TablesOfAuthoritiesCategories;
    property Indexes: Indexes read Get_Indexes;
    property Saved: WordBool read Get_Saved write Set_Saved;
    property Content: Range read Get_Content;
    property ActiveWindow: Window read Get_ActiveWindow;
    property Kind: WdDocumentKind read Get_Kind write Set_Kind;
    property ReadOnly: WordBool read Get_ReadOnly;
    property Subdocuments: Subdocuments read Get_Subdocuments;
    property IsMasterDocument: WordBool read Get_IsMasterDocument;
    property DefaultTabStop: Single read Get_DefaultTabStop write Set_DefaultTabStop;
    property EmbedTrueTypeFonts: WordBool read Get_EmbedTrueTypeFonts write Set_EmbedTrueTypeFonts;
    property SaveFormsData: WordBool read Get_SaveFormsData write Set_SaveFormsData;
    property ReadOnlyRecommended: WordBool read Get_ReadOnlyRecommended write Set_ReadOnlyRecommended;
    property SaveSubsetFonts: WordBool read Get_SaveSubsetFonts write Set_SaveSubsetFonts;
    property Compatibility {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_29:0}Type_: WdCompatibility]: WordBool read Get_Compatibility write Set_Compatibility;
    property StoryRanges: StoryRanges read Get_StoryRanges;
    property CommandBars: CommandBars read Get_CommandBars;
    property IsSubdocument: WordBool read Get_IsSubdocument;
    property SaveFormat: Integer read Get_SaveFormat;
    property ProtectionType: WdProtectionType read Get_ProtectionType;
    property Hyperlinks: Hyperlinks read Get_Hyperlinks;
    property Shapes: Shapes read Get_Shapes;
    property ListTemplates: ListTemplates read Get_ListTemplates;
    property Lists: Lists read Get_Lists;
    property UpdateStylesOnOpen: WordBool read Get_UpdateStylesOnOpen write Set_UpdateStylesOnOpen;
    property InlineShapes: InlineShapes read Get_InlineShapes;
    property Background: Shape read Get_Background write Set_Background;
    property GrammarChecked: WordBool read Get_GrammarChecked write Set_GrammarChecked;
    property SpellingChecked: WordBool read Get_SpellingChecked write Set_SpellingChecked;
    property ShowGrammaticalErrors: WordBool read Get_ShowGrammaticalErrors write Set_ShowGrammaticalErrors;
    property ShowSpellingErrors: WordBool read Get_ShowSpellingErrors write Set_ShowSpellingErrors;
    property Versions: Versions read Get_Versions;
    property ShowSummary: WordBool read Get_ShowSummary write Set_ShowSummary;
    property SummaryViewMode: WdSummaryMode read Get_SummaryViewMode write Set_SummaryViewMode;
    property SummaryLength: Integer read Get_SummaryLength write Set_SummaryLength;
    property PrintFractionalWidths: WordBool read Get_PrintFractionalWidths write Set_PrintFractionalWidths;
    property PrintPostScriptOverText: WordBool read Get_PrintPostScriptOverText write Set_PrintPostScriptOverText;
    property Container: IDispatch read Get_Container;
    property PrintFormsData: WordBool read Get_PrintFormsData write Set_PrintFormsData;
    property ListParagraphs: ListParagraphs read Get_ListParagraphs;
    property Password: WideString write Set_Password;
    property WritePassword: WideString write Set_WritePassword;
    property HasPassword: WordBool read Get_HasPassword;
    property WriteReserved: WordBool read Get_WriteReserved;
    property ActiveWritingStyle {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:1}var LanguageID: OleVariant]: WideString read Get_ActiveWritingStyle write Set_ActiveWritingStyle;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property HasMailer: WordBool read Get_HasMailer write Set_HasMailer;
    property Mailer: Mailer read Get_Mailer;
    property ReadabilityStatistics: ReadabilityStatistics read Get_ReadabilityStatistics;
    property GrammaticalErrors: ProofreadingErrors read Get_GrammaticalErrors;
    property SpellingErrors: ProofreadingErrors read Get_SpellingErrors;
    property VBProject: VBProject read Get_VBProject;
    property FormsDesign: WordBool read Get_FormsDesign;
    property _CodeName: WideString read Get__CodeName write Set__CodeName;
    property CodeName: WideString read Get_CodeName;
    property SnapToGrid: WordBool read Get_SnapToGrid write Set_SnapToGrid;
    property SnapToShapes: WordBool read Get_SnapToShapes write Set_SnapToShapes;
    property GridDistanceHorizontal: Single read Get_GridDistanceHorizontal write Set_GridDistanceHorizontal;
    property GridDistanceVertical: Single read Get_GridDistanceVertical write Set_GridDistanceVertical;
    property GridOriginHorizontal: Single read Get_GridOriginHorizontal write Set_GridOriginHorizontal;
    property GridOriginVertical: Single read Get_GridOriginVertical write Set_GridOriginVertical;
    property GridSpaceBetweenHorizontalLines: Integer read Get_GridSpaceBetweenHorizontalLines write Set_GridSpaceBetweenHorizontalLines;
    property GridSpaceBetweenVerticalLines: Integer read Get_GridSpaceBetweenVerticalLines write Set_GridSpaceBetweenVerticalLines;
    property GridOriginFromMargin: WordBool read Get_GridOriginFromMargin write Set_GridOriginFromMargin;
    property KerningByAlgorithm: WordBool read Get_KerningByAlgorithm write Set_KerningByAlgorithm;
    property JustificationMode: WdJustificationMode read Get_JustificationMode write Set_JustificationMode;
    property FarEastLineBreakLevel: WdFarEastLineBreakLevel read Get_FarEastLineBreakLevel write Set_FarEastLineBreakLevel;
    property NoLineBreakBefore: WideString read Get_NoLineBreakBefore write Set_NoLineBreakBefore;
    property NoLineBreakAfter: WideString read Get_NoLineBreakAfter write Set_NoLineBreakAfter;
    property TrackRevisions: WordBool read Get_TrackRevisions write Set_TrackRevisions;
    property PrintRevisions: WordBool read Get_PrintRevisions write Set_PrintRevisions;
    property ShowRevisions: WordBool read Get_ShowRevisions write Set_ShowRevisions;
    property ActiveTheme: WideString read Get_ActiveTheme;
    property ActiveThemeDisplayName: WideString read Get_ActiveThemeDisplayName;
    property Email: Email read Get_Email;
    property Scripts: Scripts read Get_Scripts;
    property LanguageDetected: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID read Get_FarEastLineBreakLanguage write Set_FarEastLineBreakLanguage;
    property Frameset: Frameset read Get_Frameset;
    property HTMLProject: HTMLProject read Get_HTMLProject;
    property WebOptions: WebOptions read Get_WebOptions;
    property OpenEncoding: MsoEncoding read Get_OpenEncoding;
    property SaveEncoding: MsoEncoding read Get_SaveEncoding write Set_SaveEncoding;
    property OptimizeForWord97: WordBool read Get_OptimizeForWord97 write Set_OptimizeForWord97;
    property VBASigned: WordBool read Get_VBASigned;
  end;

// *********************************************************************//
// DispIntf:  _DocumentDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0002096B-0000-0000-C000-000000000046}
// *********************************************************************//
  _DocumentDisp = dispinterface
    ['{0002096B-0000-0000-C000-000000000046}']
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property BuiltInDocumentProperties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1000;
    property CustomDocumentProperties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 2;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    property Bookmarks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Bookmarks readonly dispid 4;
    property Tables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 6;
    property Footnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Footnotes readonly dispid 7;
    property Endnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Endnotes readonly dispid 8;
    property Comments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Comments readonly dispid 9;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDocumentType readonly dispid 10;
    property AutoHyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 11;
    property HyphenateCaps {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
    property HyphenationZone {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 13;
    property ConsecutiveHyphensLimit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 14;
    property Sections {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Sections readonly dispid 15;
    property Paragraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Paragraphs readonly dispid 16;
    property Words {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Words readonly dispid 17;
    property Sentences {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Sentences readonly dispid 18;
    property Characters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Characters readonly dispid 19;
    property Fields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Fields readonly dispid 20;
    property FormFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormFields readonly dispid 21;
    property Styles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Styles readonly dispid 22;
    property Frames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frames readonly dispid 23;
    property TablesOfFigures {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TablesOfFigures readonly dispid 25;
    property Variables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Variables readonly dispid 26;
    property MailMerge {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMerge readonly dispid 27;
    property Envelope {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Envelope readonly dispid 28;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 29;
    property Revisions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Revisions readonly dispid 30;
    property TablesOfContents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TablesOfContents readonly dispid 31;
    property TablesOfAuthorities {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TablesOfAuthorities readonly dispid 32;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PageSetup dispid 1101;
    property Windows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Windows readonly dispid 34;
    property HasRoutingSlip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 35;
    property RoutingSlip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: RoutingSlip readonly dispid 36;
    property Routed {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 37;
    property TablesOfAuthoritiesCategories {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TablesOfAuthoritiesCategories readonly dispid 38;
    property Indexes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Indexes readonly dispid 39;
    property Saved {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 40;
    property Content {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 41;
    property ActiveWindow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Window readonly dispid 42;
    property Kind {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDocumentKind dispid 43;
    property ReadOnly {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 44;
    property Subdocuments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Subdocuments readonly dispid 45;
    property IsMasterDocument {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 46;
    property DefaultTabStop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 48;
    property EmbedTrueTypeFonts {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 50;
    property SaveFormsData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 51;
    property ReadOnlyRecommended {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 52;
    property SaveSubsetFonts {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 53;
    property Compatibility {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_29:0}Type_: WdCompatibility]: WordBool dispid 55;
    property StoryRanges {Flags(2), (1/0) CC:0, INV:2, DBG:6}: StoryRanges readonly dispid 56;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CommandBars readonly dispid 57;
    property IsSubdocument {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 58;
    property SaveFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 59;
    property ProtectionType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdProtectionType readonly dispid 60;
    property Hyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Hyperlinks readonly dispid 61;
    property Shapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shapes readonly dispid 62;
    property ListTemplates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListTemplates readonly dispid 63;
    property Lists {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Lists readonly dispid 64;
    property UpdateStylesOnOpen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 66;
    function  AttachedTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 67;
    property InlineShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: InlineShapes readonly dispid 68;
    property Background {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shape dispid 69;
    property GrammarChecked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 70;
    property SpellingChecked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 71;
    property ShowGrammaticalErrors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 72;
    property ShowSpellingErrors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 73;
    property Versions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Versions readonly dispid 75;
    property ShowSummary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 76;
    property SummaryViewMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSummaryMode dispid 77;
    property SummaryLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 78;
    property PrintFractionalWidths {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 79;
    property PrintPostScriptOverText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 80;
    property Container {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 82;
    property PrintFormsData {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 83;
    property ListParagraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListParagraphs readonly dispid 84;
    property Password {Flags(2), (1/0) CC:0, INV:4, DBG:6}: WideString writeonly dispid 85;
    property WritePassword {Flags(2), (1/0) CC:0, INV:4, DBG:6}: WideString writeonly dispid 86;
    property HasPassword {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 87;
    property WriteReserved {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 88;
    property ActiveWritingStyle {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:1}var LanguageID: OleVariant]: WideString dispid 90;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 92;
    property HasMailer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 93;
    property Mailer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Mailer readonly dispid 94;
    property ReadabilityStatistics {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ReadabilityStatistics readonly dispid 96;
    property GrammaticalErrors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors readonly dispid 97;
    property SpellingErrors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors readonly dispid 98;
    property VBProject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: VBProject readonly dispid 99;
    property FormsDesign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 100;
    property _CodeName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property CodeName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 262;
    property SnapToGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 300;
    property SnapToShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 301;
    property GridDistanceHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 302;
    property GridDistanceVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 303;
    property GridOriginHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 304;
    property GridOriginVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 305;
    property GridSpaceBetweenHorizontalLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 306;
    property GridSpaceBetweenVerticalLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 307;
    property GridOriginFromMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 308;
    property KerningByAlgorithm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 309;
    property JustificationMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdJustificationMode dispid 310;
    property FarEastLineBreakLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLevel dispid 311;
    property NoLineBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 312;
    property NoLineBreakAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 313;
    property TrackRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 314;
    property PrintRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 315;
    property ShowRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 316;
    procedure Close {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var OriginalFormat: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); dispid 1105;
    procedure SaveAs {Flags(2), (11/11) CC:0, INV:1, DBG:4}({VT_12:1}var FileName: OleVariant; 
                                                            {VT_12:1}var FileFormat: OleVariant; 
                                                            {VT_12:1}var LockComments: OleVariant; 
                                                            {VT_12:1}var Password: OleVariant; 
                                                            {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                            {VT_12:1}var WritePassword: OleVariant; 
                                                            {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                            {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                            {VT_12:1}var SaveNativePictureFormat: OleVariant; 
                                                            {VT_12:1}var SaveFormsData: OleVariant; 
                                                            {VT_12:1}var SaveAsAOCELetter: OleVariant); dispid 102;
    procedure Repaginate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    procedure FitToPages {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 104;
    procedure ManualHyphenation {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 105;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure DataForm {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
    procedure Route {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 107;
    procedure Save {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 108;
    procedure PrintOutOld {Flags(2), (14/14) CC:0, INV:1, DBG:4}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); dispid 109;
    procedure SendMail {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 110;
    function  Range {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Start: OleVariant; 
                                                         {VT_12:1}var End_: OleVariant): Range; dispid 2000;
    procedure RunAutoMacro {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Which: WdAutoMacros); dispid 112;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 113;
    procedure PrintPreview {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 114;
    function  GoTo_ {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; dispid 115;
    function  Undo {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Times: OleVariant): WordBool; dispid 116;
    function  Redo {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Times: OleVariant): WordBool; dispid 117;
    function  ComputeStatistics {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_29:0}Statistic: WdStatistic; 
                                                                     {VT_12:1}var IncludeFootnotesAndEndnotes: OleVariant): Integer; dispid 118;
    procedure MakeCompatibilityDefault {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 119;
    procedure Protect {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}Type_: WdProtectionType; 
                                                           {VT_12:1}var NoReset: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant); dispid 120;
    procedure Unprotect {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Password: OleVariant); dispid 121;
    procedure EditionOptions {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}Type_: WdEditionType; 
                                                                  {VT_29:0}Option: WdEditionOption; 
                                                                  {VT_8:0}const Name: WideString; 
                                                                  {VT_12:1}var Format: OleVariant); dispid 122;
    procedure RunLetterWizard {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var LetterContent: OleVariant; 
                                                                   {VT_12:1}var WizardMode: OleVariant); dispid 123;
    function  GetLetterContent {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordLetterContent; dispid 124;
    procedure SetLetterContent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var LetterContent: OleVariant); dispid 125;
    procedure CopyStylesFromTemplate {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Template: WideString); dispid 126;
    procedure UpdateStyles {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 127;
    procedure CheckGrammar {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 131;
    procedure CheckSpelling {Flags(2), (12/12) CC:0, INV:1, DBG:4}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant); dispid 132;
    procedure FollowHyperlink {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant; 
                                                                   {VT_12:1}var AddHistory: OleVariant; 
                                                                   {VT_12:1}var ExtraInfo: OleVariant; 
                                                                   {VT_12:1}var Method: OleVariant; 
                                                                   {VT_12:1}var HeaderInfo: OleVariant); dispid 135;
    procedure AddToFavorites {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 136;
    procedure Reload {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 137;
    function  AutoSummarize {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_12:1}var Length: OleVariant; 
                                                                 {VT_12:1}var Mode: OleVariant; 
                                                                 {VT_12:1}var UpdateProperties: OleVariant): Range; dispid 138;
    procedure RemoveNumbers {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant); dispid 140;
    procedure ConvertNumbersToText {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant); dispid 141;
    function  CountNumberedItems {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; dispid 142;
    procedure Post {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 143;
    procedure ToggleFormsDesign {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 144;
    procedure Compare {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString); dispid 145;
    procedure UpdateSummaryProperties {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 146;
    function  GetCrossReferenceItems {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var ReferenceType: OleVariant): OleVariant; dispid 147;
    procedure AutoFormat {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 148;
    procedure ViewCode {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 149;
    procedure ViewPropertyBrowser {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 150;
    procedure ForwardMailer {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 250;
    procedure Reply {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 251;
    procedure ReplyAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 252;
    procedure SendMailer {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var FileFormat: OleVariant; 
                                                              {VT_12:1}var Priority: OleVariant); dispid 253;
    procedure UndoClear {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 254;
    procedure PresentIt {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 255;
    procedure SendFax {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const Address: WideString; 
                                                           {VT_12:1}var Subject: OleVariant); dispid 256;
    procedure Merge {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString); dispid 257;
    procedure ClosePrintPreview {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 258;
    procedure CheckConsistency {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 259;
    function  CreateLetterContent {Flags(2), (32/31) CC:0, INV:1, DBG:4}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                         {VT_12:1}var SenderCity: OleVariant; 
                                                                         {VT_12:1}var SenderCode: OleVariant; 
                                                                         {VT_12:1}var SenderGender: OleVariant; 
                                                                         {VT_12:1}var SenderReference: OleVariant): WordLetterContent; dispid 260;
    procedure AcceptAllRevisions {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 317;
    procedure RejectAllRevisions {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 318;
    procedure DetectLanguage {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 151;
    procedure ApplyTheme {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString); dispid 322;
    procedure RemoveTheme {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 323;
    procedure WebPagePreview {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 325;
    procedure ReloadAs {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Encoding: MsoEncoding); dispid 331;
    property ActiveTheme {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 540;
    property ActiveThemeDisplayName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 541;
    property Email {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Email readonly dispid 319;
    property Scripts {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Scripts readonly dispid 320;
    property LanguageDetected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 321;
    property FarEastLineBreakLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLanguageID dispid 326;
    property Frameset {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frameset readonly dispid 327;
    function  ClickAndTypeParagraphStyle {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 328;
    property HTMLProject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HTMLProject readonly dispid 329;
    property WebOptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WebOptions readonly dispid 330;
    property OpenEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding readonly dispid 332;
    property SaveEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding dispid 333;
    property OptimizeForWord97 {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 334;
    property VBASigned {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 335;
    procedure PrintOut {Flags(2), (18/18) CC:0, INV:1, DBG:4}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); dispid 444;
    procedure sblt {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const s: WideString); dispid 445;
  end;

// *********************************************************************//
// Interface: Template
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096A-0000-0000-C000-000000000046}
// *********************************************************************//
  Template = interface(IDispatch)
    ['{0002096A-0000-0000-C000-000000000046}']
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_AutoTextEntries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AutoTextEntries; safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTemplateType; safecall;
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListTemplates; safecall;
    function  Get_LanguageIDFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: VBProject; safecall;
    function  Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdJustificationMode; safecall;
    procedure Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdJustificationMode); safecall;
    function  Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLevel; safecall;
    procedure Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFarEastLineBreakLevel); safecall;
    function  Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  OpenAsDocument {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordDocument; safecall;
    procedure Save {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_NoProofing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoProofing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLanguageID; safecall;
    procedure Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFarEastLineBreakLanguageID); safecall;
    property Name: WideString read Get_Name;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Path: WideString read Get_Path;
    property AutoTextEntries: AutoTextEntries read Get_AutoTextEntries;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property Saved: WordBool read Get_Saved write Set_Saved;
    property Type_: WdTemplateType read Get_Type_;
    property FullName: WideString read Get_FullName;
    property BuiltInDocumentProperties: IDispatch read Get_BuiltInDocumentProperties;
    property CustomDocumentProperties: IDispatch read Get_CustomDocumentProperties;
    property ListTemplates: ListTemplates read Get_ListTemplates;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property VBProject: VBProject read Get_VBProject;
    property KerningByAlgorithm: WordBool read Get_KerningByAlgorithm write Set_KerningByAlgorithm;
    property JustificationMode: WdJustificationMode read Get_JustificationMode write Set_JustificationMode;
    property FarEastLineBreakLevel: WdFarEastLineBreakLevel read Get_FarEastLineBreakLevel write Set_FarEastLineBreakLevel;
    property NoLineBreakBefore: WideString read Get_NoLineBreakBefore write Set_NoLineBreakBefore;
    property NoLineBreakAfter: WideString read Get_NoLineBreakAfter write Set_NoLineBreakAfter;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID read Get_FarEastLineBreakLanguage write Set_FarEastLineBreakLanguage;
  end;

// *********************************************************************//
// DispIntf:  TemplateDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096A-0000-0000-C000-000000000046}
// *********************************************************************//
  TemplateDisp = dispinterface
    ['{0002096A-0000-0000-C000-000000000046}']
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property AutoTextEntries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AutoTextEntries readonly dispid 2;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 4;
    property Saved {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTemplateType readonly dispid 6;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 7;
    property BuiltInDocumentProperties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 8;
    property CustomDocumentProperties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 9;
    property ListTemplates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListTemplates readonly dispid 10;
    property LanguageIDFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 11;
    property VBProject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: VBProject readonly dispid 99;
    property KerningByAlgorithm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
    property JustificationMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdJustificationMode dispid 13;
    property FarEastLineBreakLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLevel dispid 14;
    property NoLineBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 15;
    property NoLineBreakAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 16;
    function  OpenAsDocument {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordDocument; dispid 100;
    procedure Save {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    property NoProofing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 17;
    property FarEastLineBreakLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFarEastLineBreakLanguageID dispid 18;
  end;

// *********************************************************************//
// Interface: Templates
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A2-0000-0000-C000-000000000046}
// *********************************************************************//
  Templates = interface(IDispatch)
    ['{000209A2-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Template; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  TemplatesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A2-0000-0000-C000-000000000046}
// *********************************************************************//
  TemplatesDisp = dispinterface
    ['{000209A2-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Template; dispid 0;
  end;

// *********************************************************************//
// Interface: RoutingSlip
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020969-0000-0000-C000-000000000046}
// *********************************************************************//
  RoutingSlip = interface(IDispatch)
    ['{00020969-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Message {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Message {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Delivery {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRoutingSlipDelivery; safecall;
    procedure Set_Delivery {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRoutingSlipDelivery); safecall;
    function  Get_TrackStatus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TrackStatus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Protect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdProtectionType; safecall;
    procedure Set_Protect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdProtectionType); safecall;
    function  Get_ReturnWhenDone {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ReturnWhenDone {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Status {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRoutingSlipStatus; safecall;
    function  Get_Recipients {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:1}var Index: OleVariant): OleVariant; safecall;
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure AddRecipient {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Recipient: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Subject: WideString read Get_Subject write Set_Subject;
    property Message: WideString read Get_Message write Set_Message;
    property Delivery: WdRoutingSlipDelivery read Get_Delivery write Set_Delivery;
    property TrackStatus: WordBool read Get_TrackStatus write Set_TrackStatus;
    property Protect: WdProtectionType read Get_Protect write Set_Protect;
    property ReturnWhenDone: WordBool read Get_ReturnWhenDone write Set_ReturnWhenDone;
    property Status: WdRoutingSlipStatus read Get_Status;
    property Recipients {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:1}var Index: OleVariant]: OleVariant read Get_Recipients;
  end;

// *********************************************************************//
// DispIntf:  RoutingSlipDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020969-0000-0000-C000-000000000046}
// *********************************************************************//
  RoutingSlipDisp = dispinterface
    ['{00020969-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Subject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1;
    property Message {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property Delivery {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRoutingSlipDelivery dispid 3;
    property TrackStatus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property Protect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdProtectionType dispid 5;
    property ReturnWhenDone {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property Status {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRoutingSlipStatus readonly dispid 7;
    property Recipients {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:1}var Index: OleVariant]: OleVariant readonly dispid 9;
    procedure Reset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure AddRecipient {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Recipient: WideString); dispid 102;
  end;

// *********************************************************************//
// Interface: Bookmark
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020968-0000-0000-C000-000000000046}
// *********************************************************************//
  Bookmark = interface(IDispatch)
    ['{00020968-0000-0000-C000-000000000046}']
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Empty {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Start {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Start {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_End_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_End_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Column {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_StoryType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdStoryType; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Copy {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): Bookmark; safecall;
    property Name: WideString read Get_Name;
    property Range: Range read Get_Range;
    property Empty: WordBool read Get_Empty;
    property Start: Integer read Get_Start write Set_Start;
    property End_: Integer read Get_End_ write Set_End_;
    property Column: WordBool read Get_Column;
    property StoryType: WdStoryType read Get_StoryType;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  BookmarkDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020968-0000-0000-C000-000000000046}
// *********************************************************************//
  BookmarkDisp = dispinterface
    ['{00020968-0000-0000-C000-000000000046}']
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1;
    property Empty {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 2;
    property Start {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property End_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property Column {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 5;
    property StoryType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdStoryType readonly dispid 6;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
    function  Copy {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): Bookmark; dispid 12;
  end;

// *********************************************************************//
// Interface: Bookmarks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020967-0000-0000-C000-000000000046}
// *********************************************************************//
  Bookmarks = interface(IDispatch)
    ['{00020967-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_DefaultSorting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBookmarkSortBy; safecall;
    procedure Set_DefaultSorting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBookmarkSortBy); safecall;
    function  Get_ShowHidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowHidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Bookmark; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Range: OleVariant): Bookmark; safecall;
    function  Exists {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): WordBool; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property DefaultSorting: WdBookmarkSortBy read Get_DefaultSorting write Set_DefaultSorting;
    property ShowHidden: WordBool read Get_ShowHidden write Set_ShowHidden;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  BookmarksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020967-0000-0000-C000-000000000046}
// *********************************************************************//
  BookmarksDisp = dispinterface
    ['{00020967-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property DefaultSorting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBookmarkSortBy dispid 3;
    property ShowHidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Bookmark; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Range: OleVariant): Bookmark; dispid 5;
    function  Exists {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): WordBool; dispid 6;
  end;

// *********************************************************************//
// Interface: Variable
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020966-0000-0000-C000-000000000046}
// *********************************************************************//
  Variable = interface(IDispatch)
    ['{00020966-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Value: WideString read Get_Value write Set_Value;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  VariableDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020966-0000-0000-C000-000000000046}
// *********************************************************************//
  VariableDisp = dispinterface
    ['{00020966-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
  end;

// *********************************************************************//
// Interface: Variables
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020965-0000-0000-C000-000000000046}
// *********************************************************************//
  Variables = interface(IDispatch)
    ['{00020965-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Variable; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Value: OleVariant): Variable; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  VariablesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020965-0000-0000-C000-000000000046}
// *********************************************************************//
  VariablesDisp = dispinterface
    ['{00020965-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Variable; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Value: OleVariant): Variable; dispid 7;
  end;

// *********************************************************************//
// Interface: RecentFile
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020964-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFile = interface(IDispatch)
    ['{00020964-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ReadOnly {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Open {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordDocument; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
    property ReadOnly: WordBool read Get_ReadOnly write Set_ReadOnly;
    property Path: WideString read Get_Path;
  end;

// *********************************************************************//
// DispIntf:  RecentFileDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020964-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFileDisp = dispinterface
    ['{00020964-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property ReadOnly {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    function  Open {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordDocument; dispid 4;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 5;
  end;

// *********************************************************************//
// Interface: RecentFiles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020963-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFiles = interface(IDispatch)
    ['{00020963-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Maximum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Maximum {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): RecentFile; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Document: OleVariant; 
                                                       {VT_12:1}var ReadOnly: OleVariant): RecentFile; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Maximum: Integer read Get_Maximum write Set_Maximum;
  end;

// *********************************************************************//
// DispIntf:  RecentFilesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020963-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFilesDisp = dispinterface
    ['{00020963-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Maximum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): RecentFile; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Document: OleVariant; 
                                                       {VT_12:1}var ReadOnly: OleVariant): RecentFile; dispid 3;
  end;

// *********************************************************************//
// Interface: Window
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020962-0000-0000-C000-000000000046}
// *********************************************************************//
  Window = interface(IDispatch)
    ['{00020962-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ActivePane {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Pane; safecall;
    function  Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordDocument; safecall;
    function  Get_Panes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Panes; safecall;
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Selection; safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Split {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Split {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SplitVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SplitVertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWindowState; safecall;
    procedure Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdWindowState); safecall;
    function  Get_DisplayRulers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayRulers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DisplayVerticalRuler {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayVerticalRuler {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_View {Flags(1), (1/0) CC:0, INV:2, DBG:6}: View; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWindowType; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Window; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Window; safecall;
    function  Get_WindowNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_DisplayVerticalScrollBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayVerticalScrollBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DisplayHorizontalScrollBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayHorizontalScrollBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_StyleAreaWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_StyleAreaWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HorizontalPercentScrolled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HorizontalPercentScrolled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_VerticalPercentScrolled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_VerticalPercentScrolled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DocumentMap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DocumentMap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Active {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_DocumentMapPercentWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DocumentMapPercentWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_IMEMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdIMEMode; safecall;
    procedure Set_IMEMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdIMEMode); safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Close {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); safecall;
    procedure LargeScroll {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); safecall;
    procedure SmallScroll {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); safecall;
    function  NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Window; safecall;
    procedure PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:6}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); safecall;
    procedure PageScroll {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var Down: OleVariant; 
                                                              {VT_12:1}var Up: OleVariant); safecall;
    procedure SetFocus {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  RangeFromPoint {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}x: Integer; 
                                                                  {VT_3:0}y: Integer): IDispatch; safecall;
    procedure ScrollIntoView {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_9:0}const obj: IDispatch; 
                                                                  {VT_12:1}var Start: OleVariant); safecall;
    procedure GetPoint {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_3:1}out ScreenPixelsLeft: Integer; 
                                                            {VT_3:1}out ScreenPixelsTop: Integer; 
                                                            {VT_3:1}out ScreenPixelsWidth: Integer; 
                                                            {VT_3:1}out ScreenPixelsHeight: Integer; 
                                                            {VT_9:0}const obj: IDispatch); safecall;
    procedure PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:6}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); safecall;
    function  Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_EnvelopeVisible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnvelopeVisible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DisplayRightRuler {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayRightRuler {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DisplayLeftScrollBar {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayLeftScrollBar {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ActivePane: Pane read Get_ActivePane;
    property Document: WordDocument read Get_Document;
    property Panes: Panes read Get_Panes;
    property Selection: Selection read Get_Selection;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property Split: WordBool read Get_Split write Set_Split;
    property SplitVertical: Integer read Get_SplitVertical write Set_SplitVertical;
    property Caption: WideString read Get_Caption write Set_Caption;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property DisplayRulers: WordBool read Get_DisplayRulers write Set_DisplayRulers;
    property DisplayVerticalRuler: WordBool read Get_DisplayVerticalRuler write Set_DisplayVerticalRuler;
    property View: View read Get_View;
    property Type_: WdWindowType read Get_Type_;
    property Next: Window read Get_Next;
    property Previous: Window read Get_Previous;
    property WindowNumber: Integer read Get_WindowNumber;
    property DisplayVerticalScrollBar: WordBool read Get_DisplayVerticalScrollBar write Set_DisplayVerticalScrollBar;
    property DisplayHorizontalScrollBar: WordBool read Get_DisplayHorizontalScrollBar write Set_DisplayHorizontalScrollBar;
    property StyleAreaWidth: Single read Get_StyleAreaWidth write Set_StyleAreaWidth;
    property DisplayScreenTips: WordBool read Get_DisplayScreenTips write Set_DisplayScreenTips;
    property HorizontalPercentScrolled: Integer read Get_HorizontalPercentScrolled write Set_HorizontalPercentScrolled;
    property VerticalPercentScrolled: Integer read Get_VerticalPercentScrolled write Set_VerticalPercentScrolled;
    property DocumentMap: WordBool read Get_DocumentMap write Set_DocumentMap;
    property Active: WordBool read Get_Active;
    property DocumentMapPercentWidth: Integer read Get_DocumentMapPercentWidth write Set_DocumentMapPercentWidth;
    property Index: Integer read Get_Index;
    property IMEMode: WdIMEMode read Get_IMEMode write Set_IMEMode;
    property UsableWidth: Integer read Get_UsableWidth;
    property UsableHeight: Integer read Get_UsableHeight;
    property EnvelopeVisible: WordBool read Get_EnvelopeVisible write Set_EnvelopeVisible;
    property DisplayRightRuler: WordBool read Get_DisplayRightRuler write Set_DisplayRightRuler;
    property DisplayLeftScrollBar: WordBool read Get_DisplayLeftScrollBar write Set_DisplayLeftScrollBar;
    property Visible: WordBool read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  WindowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020962-0000-0000-C000-000000000046}
// *********************************************************************//
  WindowDisp = dispinterface
    ['{00020962-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ActivePane {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Pane readonly dispid 1;
    property Document {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordDocument readonly dispid 2;
    property Panes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Panes readonly dispid 3;
    property Selection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Selection readonly dispid 4;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 5;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 6;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 7;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property Split {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property SplitVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 10;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    property WindowState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWindowState dispid 11;
    property DisplayRulers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
    property DisplayVerticalRuler {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 13;
    property View {Flags(2), (1/0) CC:0, INV:2, DBG:6}: View readonly dispid 14;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWindowType readonly dispid 15;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Window readonly dispid 16;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Window readonly dispid 17;
    property WindowNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 18;
    property DisplayVerticalScrollBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 19;
    property DisplayHorizontalScrollBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 20;
    property StyleAreaWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 21;
    property DisplayScreenTips {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 22;
    property HorizontalPercentScrolled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 23;
    property VerticalPercentScrolled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 24;
    property DocumentMap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property Active {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 26;
    property DocumentMapPercentWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 27;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 28;
    property IMEMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdIMEMode dispid 30;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Close {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); dispid 102;
    procedure LargeScroll {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); dispid 103;
    procedure SmallScroll {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); dispid 104;
    function  NewWindow {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Window; dispid 105;
    procedure PrintOutOld {Flags(2), (14/14) CC:0, INV:1, DBG:4}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); dispid 107;
    procedure PageScroll {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var Down: OleVariant; 
                                                              {VT_12:1}var Up: OleVariant); dispid 108;
    procedure SetFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 109;
    function  RangeFromPoint {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}x: Integer; 
                                                                  {VT_3:0}y: Integer): IDispatch; dispid 110;
    procedure ScrollIntoView {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_9:0}const obj: IDispatch; 
                                                                  {VT_12:1}var Start: OleVariant); dispid 111;
    procedure GetPoint {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_3:1}out ScreenPixelsLeft: Integer; 
                                                            {VT_3:1}out ScreenPixelsTop: Integer; 
                                                            {VT_3:1}out ScreenPixelsWidth: Integer; 
                                                            {VT_3:1}out ScreenPixelsHeight: Integer; 
                                                            {VT_9:0}const obj: IDispatch); dispid 112;
    procedure PrintOut {Flags(2), (18/18) CC:0, INV:1, DBG:4}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); dispid 444;
    property UsableWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 31;
    property UsableHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 32;
    property EnvelopeVisible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property DisplayRightRuler {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 35;
    property DisplayLeftScrollBar {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 34;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
  end;

// *********************************************************************//
// Interface: Windows
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020961-0000-0000-C000-000000000046}
// *********************************************************************//
  Windows = interface(IDispatch)
    ['{00020961-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Window; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Window: OleVariant): Window; safecall;
    procedure Arrange {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var ArrangeStyle: OleVariant); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  WindowsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020961-0000-0000-C000-000000000046}
// *********************************************************************//
  WindowsDisp = dispinterface
    ['{00020961-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Window; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Window: OleVariant): Window; dispid 10;
    procedure Arrange {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var ArrangeStyle: OleVariant); dispid 11;
  end;

// *********************************************************************//
// Interface: Pane
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020960-0000-0000-C000-000000000046}
// *********************************************************************//
  Pane = interface(IDispatch)
    ['{00020960-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordDocument; safecall;
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Selection; safecall;
    function  Get_DisplayRulers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayRulers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DisplayVerticalRuler {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayVerticalRuler {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Zooms {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Zooms; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_View {Flags(1), (1/0) CC:0, INV:2, DBG:6}: View; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Pane; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Pane; safecall;
    function  Get_HorizontalPercentScrolled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HorizontalPercentScrolled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_VerticalPercentScrolled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_VerticalPercentScrolled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_MinimumFontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_MinimumFontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_BrowseToWindow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_BrowseToWindow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_BrowseWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Close {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure LargeScroll {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); safecall;
    procedure SmallScroll {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); safecall;
    procedure AutoScroll {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Velocity: Integer); safecall;
    procedure PageScroll {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var Down: OleVariant; 
                                                              {VT_12:1}var Up: OleVariant); safecall;
    procedure NewFrameset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TOCInFrameset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frameset; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Document: WordDocument read Get_Document;
    property Selection: Selection read Get_Selection;
    property DisplayRulers: WordBool read Get_DisplayRulers write Set_DisplayRulers;
    property DisplayVerticalRuler: WordBool read Get_DisplayVerticalRuler write Set_DisplayVerticalRuler;
    property Zooms: Zooms read Get_Zooms;
    property Index: Integer read Get_Index;
    property View: View read Get_View;
    property Next: Pane read Get_Next;
    property Previous: Pane read Get_Previous;
    property HorizontalPercentScrolled: Integer read Get_HorizontalPercentScrolled write Set_HorizontalPercentScrolled;
    property VerticalPercentScrolled: Integer read Get_VerticalPercentScrolled write Set_VerticalPercentScrolled;
    property MinimumFontSize: Integer read Get_MinimumFontSize write Set_MinimumFontSize;
    property BrowseToWindow: WordBool read Get_BrowseToWindow write Set_BrowseToWindow;
    property BrowseWidth: Integer read Get_BrowseWidth;
    property Frameset: Frameset read Get_Frameset;
  end;

// *********************************************************************//
// DispIntf:  PaneDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020960-0000-0000-C000-000000000046}
// *********************************************************************//
  PaneDisp = dispinterface
    ['{00020960-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Document {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordDocument readonly dispid 1;
    property Selection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Selection readonly dispid 3;
    property DisplayRulers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property DisplayVerticalRuler {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property Zooms {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Zooms readonly dispid 7;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 9;
    property View {Flags(2), (1/0) CC:0, INV:2, DBG:6}: View readonly dispid 10;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Pane readonly dispid 11;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Pane readonly dispid 12;
    property HorizontalPercentScrolled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 13;
    property VerticalPercentScrolled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 14;
    property MinimumFontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 15;
    property BrowseToWindow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property BrowseWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 17;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Close {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure LargeScroll {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); dispid 102;
    procedure SmallScroll {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Down: OleVariant; 
                                                               {VT_12:1}var Up: OleVariant; 
                                                               {VT_12:1}var ToRight: OleVariant; 
                                                               {VT_12:1}var ToLeft: OleVariant); dispid 103;
    procedure AutoScroll {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Velocity: Integer); dispid 104;
    procedure PageScroll {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var Down: OleVariant; 
                                                              {VT_12:1}var Up: OleVariant); dispid 105;
    procedure NewFrameset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
    procedure TOCInFrameset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 107;
    property Frameset {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frameset readonly dispid 18;
  end;

// *********************************************************************//
// Interface: Panes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095F-0000-0000-C000-000000000046}
// *********************************************************************//
  Panes = interface(IDispatch)
    ['{0002095F-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Pane; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var SplitVertical: OleVariant): Pane; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  PanesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095F-0000-0000-C000-000000000046}
// *********************************************************************//
  PanesDisp = dispinterface
    ['{0002095F-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Pane; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var SplitVertical: OleVariant): Pane; dispid 3;
  end;

// *********************************************************************//
// Interface: Range
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095E-0000-0000-C000-000000000046}
// *********************************************************************//
  Range = interface(IDispatch)
    ['{0002095E-0000-0000-C000-000000000046}']
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_FormattedText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Set_FormattedText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Range); safecall;
    function  Get_Start {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Start {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_End_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_End_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Font {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    procedure Set_Font {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordFont); safecall;
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_StoryType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdStoryType; safecall;
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Words; safecall;
    function  Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Sentences; safecall;
    function  Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Characters; safecall;
    function  Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Footnotes; safecall;
    function  Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Endnotes; safecall;
    function  Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Comments; safecall;
    function  Get_Cells {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Cells; safecall;
    function  Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Sections; safecall;
    function  Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Paragraphs; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_TextRetrievalMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextRetrievalMode; safecall;
    procedure Set_TextRetrievalMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TextRetrievalMode); safecall;
    function  Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Fields; safecall;
    function  Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormFields; safecall;
    function  Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frames; safecall;
    function  Get_ParagraphFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_ListFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListFormat; safecall;
    function  Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Bookmarks; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdUnderline; safecall;
    procedure Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdUnderline); safecall;
    function  Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdEmphasisMark; safecall;
    procedure Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdEmphasisMark); safecall;
    function  Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Revisions; safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_StoryLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_SynonymInfo {Flags(1), (1/0) CC:0, INV:2, DBG:6}: SynonymInfo; safecall;
    function  Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Hyperlinks; safecall;
    function  Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListParagraphs; safecall;
    function  Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Subdocuments; safecall;
    function  Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HighlightColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_HighlightColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_Columns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Columns; safecall;
    function  Get_Rows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Rows; safecall;
    function  Get_CanEdit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_CanPaste {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_IsEndOfRowMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_BookmarkID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_PreviousBookmarkID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Find {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Find; safecall;
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PageSetup; safecall;
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: PageSetup); safecall;
    function  Get_ShapeRange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ShapeRange; safecall;
    function  Get_Case_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCharacterCase; safecall;
    procedure Set_Case_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCharacterCase); safecall;
    function  Get_Information {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_29:0}Type_: WdInformation): OleVariant; safecall;
    function  Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ReadabilityStatistics; safecall;
    function  Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors; safecall;
    function  Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors; safecall;
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTextOrientation; safecall;
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTextOrientation); safecall;
    function  Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: InlineShapes; safecall;
    function  Get_NextStoryRange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_LanguageIDFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_LanguageIDOther {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDOther {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetRange {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Start: Integer; 
                                                            {VT_3:0}End_: Integer); safecall;
    procedure Collapse {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Direction: OleVariant); safecall;
    procedure InsertBefore {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString); safecall;
    procedure InsertAfter {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString); safecall;
    function  Next {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Range; safecall;
    function  Previous {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant): Range; safecall;
    function  StartOf {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  EndOf {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                         {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  Move {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveStart {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveEnd {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveWhile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveStartWhile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveEndWhile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveUntil {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveStartUntil {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveEndUntil {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Paste {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertBreak {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Type_: OleVariant); safecall;
    procedure InsertFile {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var ConfirmConversions: OleVariant; 
                                                              {VT_12:1}var Link: OleVariant; 
                                                              {VT_12:1}var Attachment: OleVariant); safecall;
    function  InStory {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): WordBool; safecall;
    function  InRange {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): WordBool; safecall;
    function  Delete {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Count: OleVariant): Integer; safecall;
    procedure WholeStory {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Expand {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant): Integer; safecall;
    procedure InsertParagraph {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertParagraphAfter {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ConvertToTableOld {Flags(1), (15/14) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                       {VT_12:1}var NumRows: OleVariant; 
                                                                       {VT_12:1}var NumColumns: OleVariant; 
                                                                       {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                       {VT_12:1}var Format: OleVariant; 
                                                                       {VT_12:1}var ApplyBorders: OleVariant; 
                                                                       {VT_12:1}var ApplyShading: OleVariant; 
                                                                       {VT_12:1}var ApplyFont: OleVariant; 
                                                                       {VT_12:1}var ApplyColor: OleVariant; 
                                                                       {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                       {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                       {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                       {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                       {VT_12:1}var AutoFit: OleVariant): Table; safecall;
    procedure InsertDateTimeOld {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                     {VT_12:1}var InsertAsField: OleVariant; 
                                                                     {VT_12:1}var InsertAsFullWidth: OleVariant); safecall;
    procedure InsertSymbol {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_3:0}CharacterNumber: Integer; 
                                                                {VT_12:1}var Font: OleVariant; 
                                                                {VT_12:1}var Unicode: OleVariant; 
                                                                {VT_12:1}var Bias: OleVariant); safecall;
    procedure InsertCrossReference {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var ReferenceType: OleVariant; 
                                                                        {VT_29:0}ReferenceKind: WdReferenceKind; 
                                                                        {VT_12:1}var ReferenceItem: OleVariant; 
                                                                        {VT_12:1}var InsertAsHyperlink: OleVariant; 
                                                                        {VT_12:1}var IncludePosition: OleVariant); safecall;
    procedure InsertCaption {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Label_: OleVariant; 
                                                                 {VT_12:1}var Title: OleVariant; 
                                                                 {VT_12:1}var TitleAutoText: OleVariant; 
                                                                 {VT_12:1}var Position: OleVariant); safecall;
    procedure CopyAsPicture {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortOld {Flags(1), (14/14) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                             {VT_12:1}var FieldNumber: OleVariant; 
                                                             {VT_12:1}var SortFieldType: OleVariant; 
                                                             {VT_12:1}var SortOrder: OleVariant; 
                                                             {VT_12:1}var FieldNumber2: OleVariant; 
                                                             {VT_12:1}var SortFieldType2: OleVariant; 
                                                             {VT_12:1}var SortOrder2: OleVariant; 
                                                             {VT_12:1}var FieldNumber3: OleVariant; 
                                                             {VT_12:1}var SortFieldType3: OleVariant; 
                                                             {VT_12:1}var SortOrder3: OleVariant; 
                                                             {VT_12:1}var SortColumn: OleVariant; 
                                                             {VT_12:1}var Separator: OleVariant; 
                                                             {VT_12:1}var CaseSensitive: OleVariant; 
                                                             {VT_12:1}var LanguageID: OleVariant); safecall;
    procedure SortAscending {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortDescending {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  IsEqual {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): WordBool; safecall;
    function  Calculate {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Single; safecall;
    function  GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; safecall;
    function  GoToNext {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}What: WdGoToItem): Range; safecall;
    function  GoToPrevious {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}What: WdGoToItem): Range; safecall;
    procedure PasteSpecial {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_12:1}var IconIndex: OleVariant; 
                                                                {VT_12:1}var Link: OleVariant; 
                                                                {VT_12:1}var Placement: OleVariant; 
                                                                {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                {VT_12:1}var DataType: OleVariant; 
                                                                {VT_12:1}var IconFileName: OleVariant; 
                                                                {VT_12:1}var IconLabel: OleVariant); safecall;
    procedure LookupNameProperties {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ComputeStatistics {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Statistic: WdStatistic): Integer; safecall;
    procedure Relocate {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Direction: Integer); safecall;
    procedure CheckSynonyms {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SubscribeTo {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_8:0}const Edition: WideString; 
                                                               {VT_12:1}var Format: OleVariant); safecall;
    procedure CreatePublisher {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Edition: OleVariant; 
                                                                   {VT_12:1}var ContainsPICT: OleVariant; 
                                                                   {VT_12:1}var ContainsRTF: OleVariant; 
                                                                   {VT_12:1}var ContainsText: OleVariant); safecall;
    procedure InsertAutoText {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertDatabase {Flags(1), (14/14) CC:0, INV:1, DBG:6}({VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var Style: OleVariant; 
                                                                    {VT_12:1}var LinkToSource: OleVariant; 
                                                                    {VT_12:1}var Connection: OleVariant; 
                                                                    {VT_12:1}var SQLStatement: OleVariant; 
                                                                    {VT_12:1}var SQLStatement1: OleVariant; 
                                                                    {VT_12:1}var PasswordDocument: OleVariant; 
                                                                    {VT_12:1}var PasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                    {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var DataSource: OleVariant; 
                                                                    {VT_12:1}var From: OleVariant; 
                                                                    {VT_12:1}var To_: OleVariant; 
                                                                    {VT_12:1}var IncludeFields: OleVariant); safecall;
    procedure AutoFormat {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CheckGrammar {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:6}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant); safecall;
    function  GetSpellingSuggestions {Flags(1), (14/13) CC:0, INV:1, DBG:6}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; safecall;
    procedure InsertParagraphBefore {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure NextSubdocument {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PreviousSubdocument {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ConvertHangulAndHanja {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var ConversionsMode: OleVariant; 
                                                                         {VT_12:1}var FastConversion: OleVariant; 
                                                                         {VT_12:1}var CheckHangulEnding: OleVariant; 
                                                                         {VT_12:1}var EnableRecentOrdering: OleVariant; 
                                                                         {VT_12:1}var CustomDictionary: OleVariant); safecall;
    procedure PasteAsNestedTable {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ModifyEnclosure {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var Style: OleVariant; 
                                                                   {VT_12:1}var Symbol: OleVariant; 
                                                                   {VT_12:1}var EnclosedText: OleVariant); safecall;
    procedure PhoneticGuide {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString; 
                                                                 {VT_29:0}Alignment: WdPhoneticGuideAlignmentType; 
                                                                 {VT_3:0}Raise_: Integer; 
                                                                 {VT_3:0}FontSize: Integer; 
                                                                 {VT_8:0}const FontName: WideString); safecall;
    procedure InsertDateTime {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                  {VT_12:1}var InsertAsField: OleVariant; 
                                                                  {VT_12:1}var InsertAsFullWidth: OleVariant; 
                                                                  {VT_12:1}var DateLanguage: OleVariant; 
                                                                  {VT_12:1}var CalendarType: OleVariant); safecall;
    procedure Sort {Flags(1), (19/19) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var FieldNumber: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var FieldNumber2: OleVariant; 
                                                          {VT_12:1}var SortFieldType2: OleVariant; 
                                                          {VT_12:1}var SortOrder2: OleVariant; 
                                                          {VT_12:1}var FieldNumber3: OleVariant; 
                                                          {VT_12:1}var SortFieldType3: OleVariant; 
                                                          {VT_12:1}var SortOrder3: OleVariant; 
                                                          {VT_12:1}var SortColumn: OleVariant; 
                                                          {VT_12:1}var Separator: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); safecall;
    procedure DetectLanguage {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ConvertToTable {Flags(1), (17/16) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                    {VT_12:1}var NumRows: OleVariant; 
                                                                    {VT_12:1}var NumColumns: OleVariant; 
                                                                    {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                    {VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var ApplyBorders: OleVariant; 
                                                                    {VT_12:1}var ApplyShading: OleVariant; 
                                                                    {VT_12:1}var ApplyFont: OleVariant; 
                                                                    {VT_12:1}var ApplyColor: OleVariant; 
                                                                    {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                    {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                    {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                    {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                    {VT_12:1}var AutoFit: OleVariant; 
                                                                    {VT_12:1}var AutoFitBehavior: OleVariant; 
                                                                    {VT_12:1}var DefaultTableBehavior: OleVariant): Table; safecall;
    procedure TCSCConverter {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}WdTCSCConverterDirection: WdTCSCConverterDirection; 
                                                                 {VT_11:0}CommonTerms: WordBool; 
                                                                 {VT_11:0}UseVariants: WordBool); safecall;
    function  Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FitTextWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FitTextWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HorizontalInVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHorizontalInVerticalType; safecall;
    procedure Set_HorizontalInVertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdHorizontalInVerticalType); safecall;
    function  Get_TwoLinesInOne {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTwoLinesInOneType; safecall;
    procedure Set_TwoLinesInOne {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTwoLinesInOneType); safecall;
    function  Get_CombineCharacters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CombineCharacters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_NoProofing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoProofing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_TopLevelTables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Scripts; safecall;
    function  Get_CharacterWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCharacterWidth; safecall;
    procedure Set_CharacterWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCharacterWidth); safecall;
    function  Get_Kana {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdKana; safecall;
    procedure Set_Kana {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdKana); safecall;
    function  Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Text: WideString read Get_Text write Set_Text;
    property FormattedText: Range read Get_FormattedText write Set_FormattedText;
    property Start: Integer read Get_Start write Set_Start;
    property End_: Integer read Get_End_ write Set_End_;
    property Font: WordFont read Get_Font write Set_Font;
    property Duplicate: Range read Get_Duplicate;
    property StoryType: WdStoryType read Get_StoryType;
    property Tables: Tables read Get_Tables;
    property Words: Words read Get_Words;
    property Sentences: Sentences read Get_Sentences;
    property Characters: Characters read Get_Characters;
    property Footnotes: Footnotes read Get_Footnotes;
    property Endnotes: Endnotes read Get_Endnotes;
    property Comments: Comments read Get_Comments;
    property Cells: Cells read Get_Cells;
    property Sections: Sections read Get_Sections;
    property Paragraphs: Paragraphs read Get_Paragraphs;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property TextRetrievalMode: TextRetrievalMode read Get_TextRetrievalMode write Set_TextRetrievalMode;
    property Fields: Fields read Get_Fields;
    property FormFields: FormFields read Get_FormFields;
    property Frames: Frames read Get_Frames;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property ListFormat: ListFormat read Get_ListFormat;
    property Bookmarks: Bookmarks read Get_Bookmarks;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Bold: Integer read Get_Bold write Set_Bold;
    property Italic: Integer read Get_Italic write Set_Italic;
    property Underline: WdUnderline read Get_Underline write Set_Underline;
    property EmphasisMark: WdEmphasisMark read Get_EmphasisMark write Set_EmphasisMark;
    property DisableCharacterSpaceGrid: WordBool read Get_DisableCharacterSpaceGrid write Set_DisableCharacterSpaceGrid;
    property Revisions: Revisions read Get_Revisions;
    property StoryLength: Integer read Get_StoryLength;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property SynonymInfo: SynonymInfo read Get_SynonymInfo;
    property Hyperlinks: Hyperlinks read Get_Hyperlinks;
    property ListParagraphs: ListParagraphs read Get_ListParagraphs;
    property Subdocuments: Subdocuments read Get_Subdocuments;
    property GrammarChecked: WordBool read Get_GrammarChecked write Set_GrammarChecked;
    property SpellingChecked: WordBool read Get_SpellingChecked write Set_SpellingChecked;
    property HighlightColorIndex: WdColorIndex read Get_HighlightColorIndex write Set_HighlightColorIndex;
    property Columns: Columns read Get_Columns;
    property Rows: Rows read Get_Rows;
    property CanEdit: Integer read Get_CanEdit;
    property CanPaste: Integer read Get_CanPaste;
    property IsEndOfRowMark: WordBool read Get_IsEndOfRowMark;
    property BookmarkID: Integer read Get_BookmarkID;
    property PreviousBookmarkID: Integer read Get_PreviousBookmarkID;
    property Find: Find read Get_Find;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property ShapeRange: ShapeRange read Get_ShapeRange;
    property Case_: WdCharacterCase read Get_Case_ write Set_Case_;
    property Information {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_29:0}Type_: WdInformation]: OleVariant read Get_Information;
    property ReadabilityStatistics: ReadabilityStatistics read Get_ReadabilityStatistics;
    property GrammaticalErrors: ProofreadingErrors read Get_GrammaticalErrors;
    property SpellingErrors: ProofreadingErrors read Get_SpellingErrors;
    property Orientation: WdTextOrientation read Get_Orientation write Set_Orientation;
    property InlineShapes: InlineShapes read Get_InlineShapes;
    property NextStoryRange: Range read Get_NextStoryRange;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property LanguageIDOther: WdLanguageID read Get_LanguageIDOther write Set_LanguageIDOther;
    property LanguageDetected: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FitTextWidth: Single read Get_FitTextWidth write Set_FitTextWidth;
    property HorizontalInVertical: WdHorizontalInVerticalType read Get_HorizontalInVertical write Set_HorizontalInVertical;
    property TwoLinesInOne: WdTwoLinesInOneType read Get_TwoLinesInOne write Set_TwoLinesInOne;
    property CombineCharacters: WordBool read Get_CombineCharacters write Set_CombineCharacters;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property TopLevelTables: Tables read Get_TopLevelTables;
    property Scripts: Scripts read Get_Scripts;
    property CharacterWidth: WdCharacterWidth read Get_CharacterWidth write Set_CharacterWidth;
    property Kana: WdKana read Get_Kana write Set_Kana;
    property BoldBi: Integer read Get_BoldBi write Set_BoldBi;
    property ItalicBi: Integer read Get_ItalicBi write Set_ItalicBi;
    property ID: WideString read Get_ID write Set_ID;
  end;

// *********************************************************************//
// DispIntf:  RangeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095E-0000-0000-C000-000000000046}
// *********************************************************************//
  RangeDisp = dispinterface
    ['{0002095E-0000-0000-C000-000000000046}']
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    property FormattedText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range dispid 2;
    property Start {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property End_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property Font {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont dispid 5;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 6;
    property StoryType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdStoryType readonly dispid 7;
    property Tables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 50;
    property Words {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Words readonly dispid 51;
    property Sentences {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Sentences readonly dispid 52;
    property Characters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Characters readonly dispid 53;
    property Footnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Footnotes readonly dispid 54;
    property Endnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Endnotes readonly dispid 55;
    property Comments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Comments readonly dispid 56;
    property Cells {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Cells readonly dispid 57;
    property Sections {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Sections readonly dispid 58;
    property Paragraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Paragraphs readonly dispid 59;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 61;
    property TextRetrievalMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextRetrievalMode dispid 62;
    property Fields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Fields readonly dispid 64;
    property FormFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormFields readonly dispid 65;
    property Frames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frames readonly dispid 66;
    property ParagraphFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 1102;
    property ListFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListFormat readonly dispid 68;
    property Bookmarks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Bookmarks readonly dispid 75;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Bold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 130;
    property Italic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 131;
    property Underline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdUnderline dispid 139;
    property EmphasisMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdEmphasisMark dispid 140;
    property DisableCharacterSpaceGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 141;
    property Revisions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Revisions readonly dispid 150;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 151;
    property StoryLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 152;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 153;
    property SynonymInfo {Flags(2), (1/0) CC:0, INV:2, DBG:6}: SynonymInfo readonly dispid 155;
    property Hyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Hyperlinks readonly dispid 156;
    property ListParagraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListParagraphs readonly dispid 157;
    property Subdocuments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Subdocuments readonly dispid 159;
    property GrammarChecked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 260;
    property SpellingChecked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 261;
    property HighlightColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 301;
    property Columns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Columns readonly dispid 302;
    property Rows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Rows readonly dispid 303;
    property CanEdit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 304;
    property CanPaste {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 305;
    property IsEndOfRowMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 307;
    property BookmarkID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 308;
    property PreviousBookmarkID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 309;
    property Find {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Find readonly dispid 262;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PageSetup dispid 1101;
    property ShapeRange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ShapeRange readonly dispid 311;
    property Case_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCharacterCase dispid 312;
    property Information {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_29:0}Type_: WdInformation]: OleVariant readonly dispid 313;
    property ReadabilityStatistics {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ReadabilityStatistics readonly dispid 314;
    property GrammaticalErrors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors readonly dispid 315;
    property SpellingErrors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ProofreadingErrors readonly dispid 316;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTextOrientation dispid 317;
    property InlineShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: InlineShapes readonly dispid 319;
    property NextStoryRange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 320;
    property LanguageIDFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 321;
    property LanguageIDOther {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 322;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure SetRange {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Start: Integer; 
                                                            {VT_3:0}End_: Integer); dispid 100;
    procedure Collapse {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Direction: OleVariant); dispid 101;
    procedure InsertBefore {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString); dispid 102;
    procedure InsertAfter {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString); dispid 104;
    function  Next {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Range; dispid 105;
    function  Previous {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant): Range; dispid 106;
    function  StartOf {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Extend: OleVariant): Integer; dispid 107;
    function  EndOf {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                         {VT_12:1}var Extend: OleVariant): Integer; dispid 108;
    function  Move {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Integer; dispid 109;
    function  MoveStart {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; dispid 110;
    function  MoveEnd {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Count: OleVariant): Integer; dispid 111;
    function  MoveWhile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; dispid 112;
    function  MoveStartWhile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; dispid 113;
    function  MoveEndWhile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; dispid 114;
    function  MoveUntil {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; dispid 115;
    function  MoveStartUntil {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; dispid 116;
    function  MoveEndUntil {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; dispid 117;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 119;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 120;
    procedure Paste {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 121;
    procedure InsertBreak {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Type_: OleVariant); dispid 122;
    procedure InsertFile {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var ConfirmConversions: OleVariant; 
                                                              {VT_12:1}var Link: OleVariant; 
                                                              {VT_12:1}var Attachment: OleVariant); dispid 123;
    function  InStory {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): WordBool; dispid 125;
    function  InRange {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): WordBool; dispid 126;
    function  Delete {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Count: OleVariant): Integer; dispid 127;
    procedure WholeStory {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 128;
    function  Expand {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant): Integer; dispid 129;
    procedure InsertParagraph {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 160;
    procedure InsertParagraphAfter {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 161;
    function  ConvertToTableOld {Flags(2), (15/14) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                       {VT_12:1}var NumRows: OleVariant; 
                                                                       {VT_12:1}var NumColumns: OleVariant; 
                                                                       {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                       {VT_12:1}var Format: OleVariant; 
                                                                       {VT_12:1}var ApplyBorders: OleVariant; 
                                                                       {VT_12:1}var ApplyShading: OleVariant; 
                                                                       {VT_12:1}var ApplyFont: OleVariant; 
                                                                       {VT_12:1}var ApplyColor: OleVariant; 
                                                                       {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                       {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                       {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                       {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                       {VT_12:1}var AutoFit: OleVariant): Table; dispid 162;
    procedure InsertDateTimeOld {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                     {VT_12:1}var InsertAsField: OleVariant; 
                                                                     {VT_12:1}var InsertAsFullWidth: OleVariant); dispid 163;
    procedure InsertSymbol {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_3:0}CharacterNumber: Integer; 
                                                                {VT_12:1}var Font: OleVariant; 
                                                                {VT_12:1}var Unicode: OleVariant; 
                                                                {VT_12:1}var Bias: OleVariant); dispid 164;
    procedure InsertCrossReference {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var ReferenceType: OleVariant; 
                                                                        {VT_29:0}ReferenceKind: WdReferenceKind; 
                                                                        {VT_12:1}var ReferenceItem: OleVariant; 
                                                                        {VT_12:1}var InsertAsHyperlink: OleVariant; 
                                                                        {VT_12:1}var IncludePosition: OleVariant); dispid 165;
    procedure InsertCaption {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Label_: OleVariant; 
                                                                 {VT_12:1}var Title: OleVariant; 
                                                                 {VT_12:1}var TitleAutoText: OleVariant; 
                                                                 {VT_12:1}var Position: OleVariant); dispid 166;
    procedure CopyAsPicture {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 167;
    procedure SortOld {Flags(2), (14/14) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                             {VT_12:1}var FieldNumber: OleVariant; 
                                                             {VT_12:1}var SortFieldType: OleVariant; 
                                                             {VT_12:1}var SortOrder: OleVariant; 
                                                             {VT_12:1}var FieldNumber2: OleVariant; 
                                                             {VT_12:1}var SortFieldType2: OleVariant; 
                                                             {VT_12:1}var SortOrder2: OleVariant; 
                                                             {VT_12:1}var FieldNumber3: OleVariant; 
                                                             {VT_12:1}var SortFieldType3: OleVariant; 
                                                             {VT_12:1}var SortOrder3: OleVariant; 
                                                             {VT_12:1}var SortColumn: OleVariant; 
                                                             {VT_12:1}var Separator: OleVariant; 
                                                             {VT_12:1}var CaseSensitive: OleVariant; 
                                                             {VT_12:1}var LanguageID: OleVariant); dispid 168;
    procedure SortAscending {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 169;
    procedure SortDescending {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 170;
    function  IsEqual {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): WordBool; dispid 171;
    function  Calculate {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Single; dispid 172;
    function  GoTo_ {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; dispid 173;
    function  GoToNext {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}What: WdGoToItem): Range; dispid 174;
    function  GoToPrevious {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}What: WdGoToItem): Range; dispid 175;
    procedure PasteSpecial {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_12:1}var IconIndex: OleVariant; 
                                                                {VT_12:1}var Link: OleVariant; 
                                                                {VT_12:1}var Placement: OleVariant; 
                                                                {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                {VT_12:1}var DataType: OleVariant; 
                                                                {VT_12:1}var IconFileName: OleVariant; 
                                                                {VT_12:1}var IconLabel: OleVariant); dispid 176;
    procedure LookupNameProperties {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 177;
    function  ComputeStatistics {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Statistic: WdStatistic): Integer; dispid 178;
    procedure Relocate {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Direction: Integer); dispid 179;
    procedure CheckSynonyms {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 180;
    procedure SubscribeTo {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_8:0}const Edition: WideString; 
                                                               {VT_12:1}var Format: OleVariant); dispid 181;
    procedure CreatePublisher {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Edition: OleVariant; 
                                                                   {VT_12:1}var ContainsPICT: OleVariant; 
                                                                   {VT_12:1}var ContainsRTF: OleVariant; 
                                                                   {VT_12:1}var ContainsText: OleVariant); dispid 182;
    procedure InsertAutoText {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 183;
    procedure InsertDatabase {Flags(2), (14/14) CC:0, INV:1, DBG:4}({VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var Style: OleVariant; 
                                                                    {VT_12:1}var LinkToSource: OleVariant; 
                                                                    {VT_12:1}var Connection: OleVariant; 
                                                                    {VT_12:1}var SQLStatement: OleVariant; 
                                                                    {VT_12:1}var SQLStatement1: OleVariant; 
                                                                    {VT_12:1}var PasswordDocument: OleVariant; 
                                                                    {VT_12:1}var PasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                    {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var DataSource: OleVariant; 
                                                                    {VT_12:1}var From: OleVariant; 
                                                                    {VT_12:1}var To_: OleVariant; 
                                                                    {VT_12:1}var IncludeFields: OleVariant); dispid 194;
    procedure AutoFormat {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 195;
    procedure CheckGrammar {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 204;
    procedure CheckSpelling {Flags(2), (12/12) CC:0, INV:1, DBG:4}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant); dispid 205;
    function  GetSpellingSuggestions {Flags(2), (14/13) CC:0, INV:1, DBG:4}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; dispid 209;
    procedure InsertParagraphBefore {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 212;
    procedure NextSubdocument {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 219;
    procedure PreviousSubdocument {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 220;
    procedure ConvertHangulAndHanja {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var ConversionsMode: OleVariant; 
                                                                         {VT_12:1}var FastConversion: OleVariant; 
                                                                         {VT_12:1}var CheckHangulEnding: OleVariant; 
                                                                         {VT_12:1}var EnableRecentOrdering: OleVariant; 
                                                                         {VT_12:1}var CustomDictionary: OleVariant); dispid 221;
    procedure PasteAsNestedTable {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 222;
    procedure ModifyEnclosure {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var Style: OleVariant; 
                                                                   {VT_12:1}var Symbol: OleVariant; 
                                                                   {VT_12:1}var EnclosedText: OleVariant); dispid 223;
    procedure PhoneticGuide {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString; 
                                                                 {VT_29:0}Alignment: WdPhoneticGuideAlignmentType; 
                                                                 {VT_3:0}Raise_: Integer; 
                                                                 {VT_3:0}FontSize: Integer; 
                                                                 {VT_8:0}const FontName: WideString); dispid 224;
    procedure InsertDateTime {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                  {VT_12:1}var InsertAsField: OleVariant; 
                                                                  {VT_12:1}var InsertAsFullWidth: OleVariant; 
                                                                  {VT_12:1}var DateLanguage: OleVariant; 
                                                                  {VT_12:1}var CalendarType: OleVariant); dispid 444;
    procedure Sort {Flags(2), (19/19) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var FieldNumber: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var FieldNumber2: OleVariant; 
                                                          {VT_12:1}var SortFieldType2: OleVariant; 
                                                          {VT_12:1}var SortOrder2: OleVariant; 
                                                          {VT_12:1}var FieldNumber3: OleVariant; 
                                                          {VT_12:1}var SortFieldType3: OleVariant; 
                                                          {VT_12:1}var SortOrder3: OleVariant; 
                                                          {VT_12:1}var SortColumn: OleVariant; 
                                                          {VT_12:1}var Separator: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); dispid 484;
    procedure DetectLanguage {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 203;
    function  ConvertToTable {Flags(2), (17/16) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                    {VT_12:1}var NumRows: OleVariant; 
                                                                    {VT_12:1}var NumColumns: OleVariant; 
                                                                    {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                    {VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var ApplyBorders: OleVariant; 
                                                                    {VT_12:1}var ApplyShading: OleVariant; 
                                                                    {VT_12:1}var ApplyFont: OleVariant; 
                                                                    {VT_12:1}var ApplyColor: OleVariant; 
                                                                    {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                    {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                    {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                    {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                    {VT_12:1}var AutoFit: OleVariant; 
                                                                    {VT_12:1}var AutoFitBehavior: OleVariant; 
                                                                    {VT_12:1}var DefaultTableBehavior: OleVariant): Table; dispid 498;
    procedure TCSCConverter {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}WdTCSCConverterDirection: WdTCSCConverterDirection; 
                                                                 {VT_11:0}CommonTerms: WordBool; 
                                                                 {VT_11:0}UseVariants: WordBool); dispid 499;
    property LanguageDetected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 263;
    property FitTextWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 264;
    property HorizontalInVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHorizontalInVerticalType dispid 265;
    property TwoLinesInOne {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTwoLinesInOneType dispid 266;
    property CombineCharacters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 267;
    property NoProofing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 323;
    property TopLevelTables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 324;
    property Scripts {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Scripts readonly dispid 325;
    property CharacterWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCharacterWidth dispid 326;
    property Kana {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdKana dispid 327;
    property BoldBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 400;
    property ItalicBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 401;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 405;
  end;

// *********************************************************************//
// Interface: ListFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C0-0000-0000-C000-000000000046}
// *********************************************************************//
  ListFormat = interface(IDispatch)
    ['{000209C0-0000-0000-C000-000000000046}']
    function  Get_ListLevelNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ListLevelNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_List {Flags(1), (1/0) CC:0, INV:2, DBG:6}: List; safecall;
    function  Get_ListTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListTemplate; safecall;
    function  Get_ListValue {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_SingleList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_SingleListTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_ListType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdListType; safecall;
    function  Get_ListString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  CanContinuePreviousList {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate): WdContinue; safecall;
    procedure RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant); safecall;
    procedure ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant); safecall;
    function  CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; safecall;
    procedure ApplyBulletDefaultOld {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ApplyNumberDefaultOld {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ApplyOutlineNumberDefaultOld {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ApplyListTemplateOld {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                        {VT_12:1}var ContinuePreviousList: OleVariant; 
                                                                        {VT_12:1}var ApplyTo: OleVariant); safecall;
    procedure ListOutdent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ListIndent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ApplyBulletDefault {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var DefaultListBehavior: OleVariant); safecall;
    procedure ApplyNumberDefault {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var DefaultListBehavior: OleVariant); safecall;
    procedure ApplyOutlineNumberDefault {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var DefaultListBehavior: OleVariant); safecall;
    procedure ApplyListTemplate {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                     {VT_12:1}var ContinuePreviousList: OleVariant; 
                                                                     {VT_12:1}var ApplyTo: OleVariant; 
                                                                     {VT_12:1}var DefaultListBehavior: OleVariant); safecall;
    property ListLevelNumber: Integer read Get_ListLevelNumber write Set_ListLevelNumber;
    property List: List read Get_List;
    property ListTemplate: ListTemplate read Get_ListTemplate;
    property ListValue: Integer read Get_ListValue;
    property SingleList: WordBool read Get_SingleList;
    property SingleListTemplate: WordBool read Get_SingleListTemplate;
    property ListType: WdListType read Get_ListType;
    property ListString: WideString read Get_ListString;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C0-0000-0000-C000-000000000046}
// *********************************************************************//
  ListFormatDisp = dispinterface
    ['{000209C0-0000-0000-C000-000000000046}']
    property ListLevelNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 68;
    property List {Flags(2), (1/0) CC:0, INV:2, DBG:6}: List readonly dispid 69;
    property ListTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListTemplate readonly dispid 70;
    property ListValue {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 71;
    property SingleList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 72;
    property SingleListTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 73;
    property ListType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdListType readonly dispid 74;
    property ListString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 75;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  CanContinuePreviousList {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate): WdContinue; dispid 184;
    procedure RemoveNumbers {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant); dispid 185;
    procedure ConvertNumbersToText {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant); dispid 186;
    function  CountNumberedItems {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; dispid 187;
    procedure ApplyBulletDefaultOld {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 188;
    procedure ApplyNumberDefaultOld {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 189;
    procedure ApplyOutlineNumberDefaultOld {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 190;
    procedure ApplyListTemplateOld {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                        {VT_12:1}var ContinuePreviousList: OleVariant; 
                                                                        {VT_12:1}var ApplyTo: OleVariant); dispid 191;
    procedure ListOutdent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 210;
    procedure ListIndent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 211;
    procedure ApplyBulletDefault {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var DefaultListBehavior: OleVariant); dispid 212;
    procedure ApplyNumberDefault {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var DefaultListBehavior: OleVariant); dispid 213;
    procedure ApplyOutlineNumberDefault {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var DefaultListBehavior: OleVariant); dispid 214;
    procedure ApplyListTemplate {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                     {VT_12:1}var ContinuePreviousList: OleVariant; 
                                                                     {VT_12:1}var ApplyTo: OleVariant; 
                                                                     {VT_12:1}var DefaultListBehavior: OleVariant); dispid 215;
  end;

// *********************************************************************//
// Interface: Find
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B0-0000-0000-C000-000000000046}
// *********************************************************************//
  Find = interface(IDispatch)
    ['{000209B0-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Forward {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Forward {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Font {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    procedure Set_Font {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordFont); safecall;
    function  Get_Found {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_MatchAllWordForms {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchAllWordForms {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchCase {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchCase {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchWildcards {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchWildcards {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchSoundsLike {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchSoundsLike {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchWholeWord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchWholeWord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzy {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchByte {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchByte {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ParagraphFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_Highlight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Highlight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Replacement {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Replacement; safecall;
    function  Get_Frame {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frame; safecall;
    function  Get_Wrap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFindWrap; safecall;
    procedure Set_Wrap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFindWrap); safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_LanguageIDFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_LanguageIDOther {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDOther {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_CorrectHangulEndings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectHangulEndings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  ExecuteOld {Flags(1), (12/11) CC:0, INV:1, DBG:6}({VT_12:1}var FindText: OleVariant; 
                                                                {VT_12:1}var MatchCase: OleVariant; 
                                                                {VT_12:1}var MatchWholeWord: OleVariant; 
                                                                {VT_12:1}var MatchWildcards: OleVariant; 
                                                                {VT_12:1}var MatchSoundsLike: OleVariant; 
                                                                {VT_12:1}var MatchAllWordForms: OleVariant; 
                                                                {VT_12:1}var Forward: OleVariant; 
                                                                {VT_12:1}var Wrap: OleVariant; 
                                                                {VT_12:1}var Format: OleVariant; 
                                                                {VT_12:1}var ReplaceWith: OleVariant; 
                                                                {VT_12:1}var Replace: OleVariant): WordBool; safecall;
    procedure ClearFormatting {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetAllFuzzyOptions {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ClearAllFuzzyOptions {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Execute {Flags(1), (16/15) CC:0, INV:1, DBG:6}({VT_12:1}var FindText: OleVariant; 
                                                             {VT_12:1}var MatchCase: OleVariant; 
                                                             {VT_12:1}var MatchWholeWord: OleVariant; 
                                                             {VT_12:1}var MatchWildcards: OleVariant; 
                                                             {VT_12:1}var MatchSoundsLike: OleVariant; 
                                                             {VT_12:1}var MatchAllWordForms: OleVariant; 
                                                             {VT_12:1}var Forward: OleVariant; 
                                                             {VT_12:1}var Wrap: OleVariant; 
                                                             {VT_12:1}var Format: OleVariant; 
                                                             {VT_12:1}var ReplaceWith: OleVariant; 
                                                             {VT_12:1}var Replace: OleVariant; 
                                                             {VT_12:1}var MatchKashida: OleVariant; 
                                                             {VT_12:1}var MatchDiacritics: OleVariant; 
                                                             {VT_12:1}var MatchAlefHamza: OleVariant; 
                                                             {VT_12:1}var MatchControl: OleVariant): WordBool; safecall;
    function  Get_NoProofing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoProofing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_MatchKashida {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchKashida {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchDiacritics {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchDiacritics {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchAlefHamza {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchAlefHamza {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Forward: WordBool read Get_Forward write Set_Forward;
    property Font: WordFont read Get_Font write Set_Font;
    property Found: WordBool read Get_Found;
    property MatchAllWordForms: WordBool read Get_MatchAllWordForms write Set_MatchAllWordForms;
    property MatchCase: WordBool read Get_MatchCase write Set_MatchCase;
    property MatchWildcards: WordBool read Get_MatchWildcards write Set_MatchWildcards;
    property MatchSoundsLike: WordBool read Get_MatchSoundsLike write Set_MatchSoundsLike;
    property MatchWholeWord: WordBool read Get_MatchWholeWord write Set_MatchWholeWord;
    property MatchFuzzy: WordBool read Get_MatchFuzzy write Set_MatchFuzzy;
    property MatchByte: WordBool read Get_MatchByte write Set_MatchByte;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Text: WideString read Get_Text write Set_Text;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property Highlight: Integer read Get_Highlight write Set_Highlight;
    property Replacement: Replacement read Get_Replacement;
    property Frame: Frame read Get_Frame;
    property Wrap: WdFindWrap read Get_Wrap write Set_Wrap;
    property Format: WordBool read Get_Format write Set_Format;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property LanguageIDOther: WdLanguageID read Get_LanguageIDOther write Set_LanguageIDOther;
    property CorrectHangulEndings: WordBool read Get_CorrectHangulEndings write Set_CorrectHangulEndings;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property MatchKashida: WordBool read Get_MatchKashida write Set_MatchKashida;
    property MatchDiacritics: WordBool read Get_MatchDiacritics write Set_MatchDiacritics;
    property MatchAlefHamza: WordBool read Get_MatchAlefHamza write Set_MatchAlefHamza;
    property MatchControl: WordBool read Get_MatchControl write Set_MatchControl;
  end;

// *********************************************************************//
// DispIntf:  FindDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B0-0000-0000-C000-000000000046}
// *********************************************************************//
  FindDisp = dispinterface
    ['{000209B0-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Forward {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 10;
    property Font {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont dispid 11;
    property Found {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 12;
    property MatchAllWordForms {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 13;
    property MatchCase {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property MatchWildcards {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 15;
    property MatchSoundsLike {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property MatchWholeWord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 17;
    property MatchFuzzy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 40;
    property MatchByte {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 41;
    property ParagraphFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 18;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 19;
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 22;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 23;
    property Highlight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 24;
    property Replacement {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Replacement readonly dispid 25;
    property Frame {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frame readonly dispid 26;
    property Wrap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFindWrap dispid 27;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 28;
    property LanguageIDFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 29;
    property LanguageIDOther {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 60;
    property CorrectHangulEndings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 61;
    function  ExecuteOld {Flags(2), (12/11) CC:0, INV:1, DBG:4}({VT_12:1}var FindText: OleVariant; 
                                                                {VT_12:1}var MatchCase: OleVariant; 
                                                                {VT_12:1}var MatchWholeWord: OleVariant; 
                                                                {VT_12:1}var MatchWildcards: OleVariant; 
                                                                {VT_12:1}var MatchSoundsLike: OleVariant; 
                                                                {VT_12:1}var MatchAllWordForms: OleVariant; 
                                                                {VT_12:1}var Forward: OleVariant; 
                                                                {VT_12:1}var Wrap: OleVariant; 
                                                                {VT_12:1}var Format: OleVariant; 
                                                                {VT_12:1}var ReplaceWith: OleVariant; 
                                                                {VT_12:1}var Replace: OleVariant): WordBool; dispid 30;
    procedure ClearFormatting {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 31;
    procedure SetAllFuzzyOptions {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 32;
    procedure ClearAllFuzzyOptions {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 33;
    function  Execute {Flags(2), (16/15) CC:0, INV:1, DBG:4}({VT_12:1}var FindText: OleVariant; 
                                                             {VT_12:1}var MatchCase: OleVariant; 
                                                             {VT_12:1}var MatchWholeWord: OleVariant; 
                                                             {VT_12:1}var MatchWildcards: OleVariant; 
                                                             {VT_12:1}var MatchSoundsLike: OleVariant; 
                                                             {VT_12:1}var MatchAllWordForms: OleVariant; 
                                                             {VT_12:1}var Forward: OleVariant; 
                                                             {VT_12:1}var Wrap: OleVariant; 
                                                             {VT_12:1}var Format: OleVariant; 
                                                             {VT_12:1}var ReplaceWith: OleVariant; 
                                                             {VT_12:1}var Replace: OleVariant; 
                                                             {VT_12:1}var MatchKashida: OleVariant; 
                                                             {VT_12:1}var MatchDiacritics: OleVariant; 
                                                             {VT_12:1}var MatchAlefHamza: OleVariant; 
                                                             {VT_12:1}var MatchControl: OleVariant): WordBool; dispid 444;
    property NoProofing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 34;
    property MatchKashida {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 100;
    property MatchDiacritics {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 101;
    property MatchAlefHamza {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 102;
    property MatchControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 103;
  end;

// *********************************************************************//
// Interface: Replacement
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B1-0000-0000-C000-000000000046}
// *********************************************************************//
  Replacement = interface(IDispatch)
    ['{000209B1-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Font {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    procedure Set_Font {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordFont); safecall;
    function  Get_ParagraphFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_Highlight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Highlight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Frame {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frame; safecall;
    function  Get_LanguageIDFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    procedure ClearFormatting {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_NoProofing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoProofing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Font: WordFont read Get_Font write Set_Font;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Text: WideString read Get_Text write Set_Text;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property Highlight: Integer read Get_Highlight write Set_Highlight;
    property Frame: Frame read Get_Frame;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
  end;

// *********************************************************************//
// DispIntf:  ReplacementDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B1-0000-0000-C000-000000000046}
// *********************************************************************//
  ReplacementDisp = dispinterface
    ['{000209B1-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Font {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont dispid 10;
    property ParagraphFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 11;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 12;
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 15;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 16;
    property Highlight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 17;
    property Frame {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frame readonly dispid 18;
    property LanguageIDFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 19;
    procedure ClearFormatting {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 20;
    property NoProofing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 21;
  end;

// *********************************************************************//
// Interface: Characters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095D-0000-0000-C000-000000000046}
// *********************************************************************//
  Characters = interface(IDispatch)
    ['{0002095D-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Range; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Range read Get_First;
    property Last: Range read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  CharactersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095D-0000-0000-C000-000000000046}
// *********************************************************************//
  CharactersDisp = dispinterface
    ['{0002095D-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 3;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 4;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Range; dispid 0;
  end;

// *********************************************************************//
// Interface: Words
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095C-0000-0000-C000-000000000046}
// *********************************************************************//
  Words = interface(IDispatch)
    ['{0002095C-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Range; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Range read Get_First;
    property Last: Range read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  WordsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095C-0000-0000-C000-000000000046}
// *********************************************************************//
  WordsDisp = dispinterface
    ['{0002095C-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 3;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 4;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Range; dispid 0;
  end;

// *********************************************************************//
// Interface: Sentences
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095B-0000-0000-C000-000000000046}
// *********************************************************************//
  Sentences = interface(IDispatch)
    ['{0002095B-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Range; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Range read Get_First;
    property Last: Range read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SentencesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095B-0000-0000-C000-000000000046}
// *********************************************************************//
  SentencesDisp = dispinterface
    ['{0002095B-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 3;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 4;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Range; dispid 0;
  end;

// *********************************************************************//
// Interface: Sections
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095A-0000-0000-C000-000000000046}
// *********************************************************************//
  Sections = interface(IDispatch)
    ['{0002095A-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Section; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Section; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PageSetup; safecall;
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: PageSetup); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Section; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Range: OleVariant; 
                                                       {VT_12:1}var Start: OleVariant): Section; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Section read Get_First;
    property Last: Section read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
  end;

// *********************************************************************//
// DispIntf:  SectionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095A-0000-0000-C000-000000000046}
// *********************************************************************//
  SectionsDisp = dispinterface
    ['{0002095A-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Section readonly dispid 3;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Section readonly dispid 4;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PageSetup dispid 1101;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Section; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Range: OleVariant; 
                                                       {VT_12:1}var Start: OleVariant): Section; dispid 5;
  end;

// *********************************************************************//
// Interface: Section
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020959-0000-0000-C000-000000000046}
// *********************************************************************//
  Section = interface(IDispatch)
    ['{00020959-0000-0000-C000-000000000046}']
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PageSetup; safecall;
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: PageSetup); safecall;
    function  Get_Headers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HeadersFooters; safecall;
    function  Get_Footers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HeadersFooters; safecall;
    function  Get_ProtectedForForms {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ProtectedForForms {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    property Range: Range read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property Headers: HeadersFooters read Get_Headers;
    property Footers: HeadersFooters read Get_Footers;
    property ProtectedForForms: WordBool read Get_ProtectedForForms write Set_ProtectedForForms;
    property Index: Integer read Get_Index;
    property Borders: Borders read Get_Borders write Set_Borders;
  end;

// *********************************************************************//
// DispIntf:  SectionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020959-0000-0000-C000-000000000046}
// *********************************************************************//
  SectionDisp = dispinterface
    ['{00020959-0000-0000-C000-000000000046}']
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PageSetup dispid 1101;
    property Headers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HeadersFooters readonly dispid 121;
    property Footers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HeadersFooters readonly dispid 122;
    property ProtectedForForms {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 123;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 124;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
  end;

// *********************************************************************//
// Interface: Paragraphs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020958-0000-0000-C000-000000000046}
// *********************************************************************//
  Paragraphs = interface(IDispatch)
    ['{00020958-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Paragraph; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Paragraph; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TabStops; safecall;
    procedure Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TabStops); safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdParagraphAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdParagraphAlignment); safecall;
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineSpacing; safecall;
    procedure Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineSpacing); safecall;
    function  Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBaselineAlignment; safecall;
    procedure Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBaselineAlignment); safecall;
    function  Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdOutlineLevel; safecall;
    procedure Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdOutlineLevel); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Paragraph; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Range: OleVariant): Paragraph; safecall;
    procedure CloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenOrCloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TabHangingIndent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure TabIndent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space1 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space15 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space2 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure IndentCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure IndentFirstLineCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure OutlinePromote {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OutlineDemote {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OutlineDemoteToBody {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Indent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Outdent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdReadingOrder; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdReadingOrder); safecall;
    function  Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Paragraph read Get_First;
    property Last: Paragraph read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Format: WordParagraphFormat read Get_Format write Set_Format;
    property TabStops: TabStops read Get_TabStops write Set_TabStops;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Alignment: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl: Integer read Get_WidowControl write Set_WidowControl;
    property Shading: Shading read Get_Shading;
    property FarEastLineBreakControl: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property OutlineLevel: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property SpaceBeforeAuto: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
  end;

// *********************************************************************//
// DispIntf:  ParagraphsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020958-0000-0000-C000-000000000046}
// *********************************************************************//
  ParagraphsDisp = dispinterface
    ['{00020958-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Paragraph readonly dispid 3;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Paragraph readonly dispid 4;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 1102;
    property TabStops {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TabStops dispid 1103;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 100;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdParagraphAlignment dispid 101;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property KeepWithNext {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 103;
    property PageBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 104;
    property NoLineNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 105;
    property RightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 106;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 107;
    property FirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 108;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property LineSpacingRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineSpacing dispid 110;
    property SpaceBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property SpaceAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 112;
    property Hyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 113;
    property WidowControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 114;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 116;
    property FarEastLineBreakControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 117;
    property WordWrap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 118;
    property HangingPunctuation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 119;
    property HalfWidthPunctuationOnTopOfLine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 120;
    property AddSpaceBetweenFarEastAndAlpha {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 121;
    property AddSpaceBetweenFarEastAndDigit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 122;
    property BaseLineAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBaselineAlignment dispid 123;
    property AutoAdjustRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 124;
    property DisableLineHeightGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 125;
    property OutlineLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdOutlineLevel dispid 202;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Paragraph; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Range: OleVariant): Paragraph; dispid 5;
    procedure CloseUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 301;
    procedure OpenUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 302;
    procedure OpenOrCloseUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 303;
    procedure TabHangingIndent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 304;
    procedure TabIndent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 306;
    procedure Reset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 312;
    procedure Space1 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 313;
    procedure Space15 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 314;
    procedure Space2 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 315;
    procedure IndentCharWidth {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 320;
    procedure IndentFirstLineCharWidth {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 322;
    procedure OutlinePromote {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 324;
    procedure OutlineDemote {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 325;
    procedure OutlineDemoteToBody {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 326;
    procedure Indent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 333;
    procedure Outdent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 334;
    property CharacterUnitRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 126;
    property CharacterUnitLeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 127;
    property CharacterUnitFirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 128;
    property LineUnitBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 129;
    property LineUnitAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 130;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdReadingOrder dispid 131;
    property SpaceBeforeAuto {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 132;
    property SpaceAfterAuto {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 133;
  end;

// *********************************************************************//
// Interface: Paragraph
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020957-0000-0000-C000-000000000046}
// *********************************************************************//
  Paragraph = interface(IDispatch)
    ['{00020957-0000-0000-C000-000000000046}']
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TabStops; safecall;
    procedure Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TabStops); safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_DropCap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DropCap; safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdParagraphAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdParagraphAlignment); safecall;
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineSpacing; safecall;
    procedure Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineSpacing); safecall;
    function  Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBaselineAlignment; safecall;
    procedure Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBaselineAlignment); safecall;
    function  Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdOutlineLevel; safecall;
    procedure Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdOutlineLevel); safecall;
    procedure CloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenOrCloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TabHangingIndent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure TabIndent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space1 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space15 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space2 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure IndentCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure IndentFirstLineCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    function  Next {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Count: OleVariant): Paragraph; safecall;
    function  Previous {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Count: OleVariant): Paragraph; safecall;
    procedure OutlinePromote {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OutlineDemote {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OutlineDemoteToBody {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Indent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Outdent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdReadingOrder; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdReadingOrder); safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Range: Range read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Format: WordParagraphFormat read Get_Format write Set_Format;
    property TabStops: TabStops read Get_TabStops write Set_TabStops;
    property Borders: Borders read Get_Borders write Set_Borders;
    property DropCap: DropCap read Get_DropCap;
    property Alignment: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl: Integer read Get_WidowControl write Set_WidowControl;
    property Shading: Shading read Get_Shading;
    property FarEastLineBreakControl: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property OutlineLevel: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property ID: WideString read Get_ID write Set_ID;
    property SpaceBeforeAuto: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
  end;

// *********************************************************************//
// DispIntf:  ParagraphDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020957-0000-0000-C000-000000000046}
// *********************************************************************//
  ParagraphDisp = dispinterface
    ['{00020957-0000-0000-C000-000000000046}']
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 1102;
    property TabStops {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TabStops dispid 1103;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property DropCap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DropCap readonly dispid 13;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 100;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdParagraphAlignment dispid 101;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property KeepWithNext {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 103;
    property PageBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 104;
    property NoLineNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 105;
    property RightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 106;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 107;
    property FirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 108;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property LineSpacingRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineSpacing dispid 110;
    property SpaceBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property SpaceAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 112;
    property Hyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 113;
    property WidowControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 114;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 116;
    property FarEastLineBreakControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 117;
    property WordWrap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 118;
    property HangingPunctuation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 119;
    property HalfWidthPunctuationOnTopOfLine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 120;
    property AddSpaceBetweenFarEastAndAlpha {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 121;
    property AddSpaceBetweenFarEastAndDigit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 122;
    property BaseLineAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBaselineAlignment dispid 123;
    property AutoAdjustRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 124;
    property DisableLineHeightGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 125;
    property OutlineLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdOutlineLevel dispid 202;
    procedure CloseUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 301;
    procedure OpenUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 302;
    procedure OpenOrCloseUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 303;
    procedure TabHangingIndent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 304;
    procedure TabIndent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 306;
    procedure Reset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 312;
    procedure Space1 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 313;
    procedure Space15 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 314;
    procedure Space2 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 315;
    procedure IndentCharWidth {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 320;
    procedure IndentFirstLineCharWidth {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 322;
    function  Next {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Count: OleVariant): Paragraph; dispid 324;
    function  Previous {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Count: OleVariant): Paragraph; dispid 325;
    procedure OutlinePromote {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 326;
    procedure OutlineDemote {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 327;
    procedure OutlineDemoteToBody {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 328;
    procedure Indent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 333;
    procedure Outdent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 334;
    property CharacterUnitRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 126;
    property CharacterUnitLeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 127;
    property CharacterUnitFirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 128;
    property LineUnitBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 129;
    property LineUnitAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 130;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdReadingOrder dispid 203;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 204;
    property SpaceBeforeAuto {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 132;
    property SpaceAfterAuto {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 133;
  end;

// *********************************************************************//
// Interface: DropCap
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020956-0000-0000-C000-000000000046}
// *********************************************************************//
  DropCap = interface(IDispatch)
    ['{00020956-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDropPosition; safecall;
    procedure Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdDropPosition); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_LinesToDrop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LinesToDrop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DistanceFromText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceFromText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    procedure Clear {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Enable {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Position: WdDropPosition read Get_Position write Set_Position;
    property FontName: WideString read Get_FontName write Set_FontName;
    property LinesToDrop: Integer read Get_LinesToDrop write Set_LinesToDrop;
    property DistanceFromText: Single read Get_DistanceFromText write Set_DistanceFromText;
  end;

// *********************************************************************//
// DispIntf:  DropCapDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020956-0000-0000-C000-000000000046}
// *********************************************************************//
  DropCapDisp = dispinterface
    ['{00020956-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Position {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDropPosition dispid 10;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 11;
    property LinesToDrop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 12;
    property DistanceFromText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 13;
    procedure Clear {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Enable {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: TabStops
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020955-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStops = interface(IDispatch)
    ['{00020955-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): TabStop; safecall;
    function  Add {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_4:0}Position: Single; 
                                                       {VT_12:1}var Alignment: OleVariant; 
                                                       {VT_12:1}var Leader: OleVariant): TabStop; safecall;
    procedure ClearAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Before {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Position: Single): TabStop; safecall;
    function  After {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_4:0}Position: Single): TabStop; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  TabStopsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020955-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStopsDisp = dispinterface
    ['{00020955-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): TabStop; dispid 0;
    function  Add {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_4:0}Position: Single; 
                                                       {VT_12:1}var Alignment: OleVariant; 
                                                       {VT_12:1}var Leader: OleVariant): TabStop; dispid 100;
    procedure ClearAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    function  Before {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Position: Single): TabStop; dispid 102;
    function  After {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_4:0}Position: Single): TabStop; dispid 103;
  end;

// *********************************************************************//
// Interface: TabStop
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020954-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStop = interface(IDispatch)
    ['{00020954-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTabAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTabAlignment); safecall;
    function  Get_Leader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader; safecall;
    procedure Set_Leader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTabLeader); safecall;
    function  Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CustomTab {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TabStop; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TabStop; safecall;
    procedure Clear {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Alignment: WdTabAlignment read Get_Alignment write Set_Alignment;
    property Leader: WdTabLeader read Get_Leader write Set_Leader;
    property Position: Single read Get_Position write Set_Position;
    property CustomTab: WordBool read Get_CustomTab;
    property Next: TabStop read Get_Next;
    property Previous: TabStop read Get_Previous;
  end;

// *********************************************************************//
// DispIntf:  TabStopDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020954-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStopDisp = dispinterface
    ['{00020954-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTabAlignment dispid 100;
    property Leader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader dispid 101;
    property Position {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property CustomTab {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 103;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TabStop readonly dispid 104;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TabStop readonly dispid 105;
    procedure Clear {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 200;
  end;

// *********************************************************************//
// Interface: _ParagraphFormat
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020953-0000-0000-C000-000000000046}
// *********************************************************************//
  _ParagraphFormat = interface(IDispatch)
    ['{00020953-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdParagraphAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdParagraphAlignment); safecall;
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineSpacing; safecall;
    procedure Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineSpacing); safecall;
    function  Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBaselineAlignment; safecall;
    procedure Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBaselineAlignment); safecall;
    function  Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TabStops; safecall;
    procedure Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TabStops); safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdOutlineLevel; safecall;
    procedure Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdOutlineLevel); safecall;
    procedure CloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OpenOrCloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TabHangingIndent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure TabIndent {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space1 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space15 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Space2 {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure IndentCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    procedure IndentFirstLineCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_2:0}Count: Smallint); safecall;
    function  Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdReadingOrder; safecall;
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdReadingOrder); safecall;
    function  Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Duplicate: WordParagraphFormat read Get_Duplicate;
    property Alignment: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl: Integer read Get_WidowControl write Set_WidowControl;
    property FarEastLineBreakControl: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property TabStops: TabStops read Get_TabStops write Set_TabStops;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property OutlineLevel: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property SpaceBeforeAuto: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
  end;

// *********************************************************************//
// DispIntf:  _ParagraphFormatDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020953-0000-0000-C000-000000000046}
// *********************************************************************//
  _ParagraphFormatDisp = dispinterface
    ['{00020953-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat readonly dispid 10;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 100;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdParagraphAlignment dispid 101;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property KeepWithNext {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 103;
    property PageBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 104;
    property NoLineNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 105;
    property RightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 106;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 107;
    property FirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 108;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property LineSpacingRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineSpacing dispid 110;
    property SpaceBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property SpaceAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 112;
    property Hyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 113;
    property WidowControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 114;
    property FarEastLineBreakControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 117;
    property WordWrap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 118;
    property HangingPunctuation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 119;
    property HalfWidthPunctuationOnTopOfLine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 120;
    property AddSpaceBetweenFarEastAndAlpha {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 121;
    property AddSpaceBetweenFarEastAndDigit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 122;
    property BaseLineAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBaselineAlignment dispid 123;
    property AutoAdjustRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 124;
    property DisableLineHeightGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 125;
    property TabStops {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TabStops dispid 1103;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 1101;
    property OutlineLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdOutlineLevel dispid 202;
    procedure CloseUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 301;
    procedure OpenUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 302;
    procedure OpenOrCloseUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 303;
    procedure TabHangingIndent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 304;
    procedure TabIndent {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 306;
    procedure Reset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 312;
    procedure Space1 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 313;
    procedure Space15 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 314;
    procedure Space2 {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 315;
    procedure IndentCharWidth {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 320;
    procedure IndentFirstLineCharWidth {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_2:0}Count: Smallint); dispid 322;
    property CharacterUnitRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 126;
    property CharacterUnitLeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 127;
    property CharacterUnitFirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 128;
    property LineUnitBefore {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 129;
    property LineUnitAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 130;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdReadingOrder dispid 131;
    property SpaceBeforeAuto {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 132;
    property SpaceAfterAuto {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 133;
  end;

// *********************************************************************//
// Interface: _Font
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020952-0000-0000-C000-000000000046}
// *********************************************************************//
  _Font = interface(IDispatch)
    ['{00020952-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    function  Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdUnderline; safecall;
    procedure Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdUnderline); safecall;
    function  Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdAnimation; safecall;
    procedure Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdAnimation); safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdEmphasisMark; safecall;
    procedure Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdEmphasisMark); safecall;
    function  Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    procedure Grow {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Shrink {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetAsTemplateDefault {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Duplicate: WordFont read Get_Duplicate;
    property Bold: Integer read Get_Bold write Set_Bold;
    property Italic: Integer read Get_Italic write Set_Italic;
    property Hidden: Integer read Get_Hidden write Set_Hidden;
    property SmallCaps: Integer read Get_SmallCaps write Set_SmallCaps;
    property AllCaps: Integer read Get_AllCaps write Set_AllCaps;
    property StrikeThrough: Integer read Get_StrikeThrough write Set_StrikeThrough;
    property DoubleStrikeThrough: Integer read Get_DoubleStrikeThrough write Set_DoubleStrikeThrough;
    property ColorIndex: WdColorIndex read Get_ColorIndex write Set_ColorIndex;
    property Subscript: Integer read Get_Subscript write Set_Subscript;
    property Superscript: Integer read Get_Superscript write Set_Superscript;
    property Underline: WdUnderline read Get_Underline write Set_Underline;
    property Size: Single read Get_Size write Set_Size;
    property Name: WideString read Get_Name write Set_Name;
    property Position: Integer read Get_Position write Set_Position;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property Scaling: Integer read Get_Scaling write Set_Scaling;
    property Shadow: Integer read Get_Shadow write Set_Shadow;
    property Outline: Integer read Get_Outline write Set_Outline;
    property Emboss: Integer read Get_Emboss write Set_Emboss;
    property Kerning: Single read Get_Kerning write Set_Kerning;
    property Engrave: Integer read Get_Engrave write Set_Engrave;
    property Animation: WdAnimation read Get_Animation write Set_Animation;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property EmphasisMark: WdEmphasisMark read Get_EmphasisMark write Set_EmphasisMark;
    property DisableCharacterSpaceGrid: WordBool read Get_DisableCharacterSpaceGrid write Set_DisableCharacterSpaceGrid;
    property NameFarEast: WideString read Get_NameFarEast write Set_NameFarEast;
    property NameAscii: WideString read Get_NameAscii write Set_NameAscii;
    property NameOther: WideString read Get_NameOther write Set_NameOther;
    property Color: WdColor read Get_Color write Set_Color;
    property BoldBi: Integer read Get_BoldBi write Set_BoldBi;
    property ItalicBi: Integer read Get_ItalicBi write Set_ItalicBi;
    property SizeBi: Single read Get_SizeBi write Set_SizeBi;
    property NameBi: WideString read Get_NameBi write Set_NameBi;
    property ColorIndexBi: WdColorIndex read Get_ColorIndexBi write Set_ColorIndexBi;
    property DiacriticColor: WdColor read Get_DiacriticColor write Set_DiacriticColor;
    property UnderlineColor: WdColor read Get_UnderlineColor write Set_UnderlineColor;
  end;

// *********************************************************************//
// DispIntf:  _FontDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020952-0000-0000-C000-000000000046}
// *********************************************************************//
  _FontDisp = dispinterface
    ['{00020952-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont readonly dispid 10;
    property Bold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 130;
    property Italic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 131;
    property Hidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 132;
    property SmallCaps {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 133;
    property AllCaps {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 134;
    property StrikeThrough {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 135;
    property DoubleStrikeThrough {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 136;
    property ColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 137;
    property Subscript {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 138;
    property Superscript {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 139;
    property Underline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdUnderline dispid 140;
    property Size {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 141;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 142;
    property Position {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 143;
    property Spacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 144;
    property Scaling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 145;
    property Shadow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 146;
    property Outline {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 147;
    property Emboss {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 148;
    property Kerning {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 149;
    property Engrave {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 150;
    property Animation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdAnimation dispid 151;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 153;
    property EmphasisMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdEmphasisMark dispid 154;
    property DisableCharacterSpaceGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 155;
    property NameFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 156;
    property NameAscii {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 157;
    property NameOther {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 158;
    procedure Grow {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Shrink {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Reset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure SetAsTemplateDefault {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    property Color {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 159;
    property BoldBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 160;
    property ItalicBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 161;
    property SizeBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 162;
    property NameBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 163;
    property ColorIndexBi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 164;
    property DiacriticColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 165;
    property UnderlineColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 166;
  end;

// *********************************************************************//
// Interface: Table
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020951-0000-0000-C000-000000000046}
// *********************************************************************//
  Table = interface(IDispatch)
    ['{00020951-0000-0000-C000-000000000046}']
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Columns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Columns; safecall;
    function  Get_Rows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Rows; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Uniform {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_AutoFormatType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortOld {Flags(1), (12/12) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                             {VT_12:1}var FieldNumber: OleVariant; 
                                                             {VT_12:1}var SortFieldType: OleVariant; 
                                                             {VT_12:1}var SortOrder: OleVariant; 
                                                             {VT_12:1}var FieldNumber2: OleVariant; 
                                                             {VT_12:1}var SortFieldType2: OleVariant; 
                                                             {VT_12:1}var SortOrder2: OleVariant; 
                                                             {VT_12:1}var FieldNumber3: OleVariant; 
                                                             {VT_12:1}var SortFieldType3: OleVariant; 
                                                             {VT_12:1}var SortOrder3: OleVariant; 
                                                             {VT_12:1}var CaseSensitive: OleVariant; 
                                                             {VT_12:1}var LanguageID: OleVariant); safecall;
    procedure SortAscending {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortDescending {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure AutoFormat {Flags(1), (10/10) CC:0, INV:1, DBG:6}({VT_12:1}var Format: OleVariant; 
                                                                {VT_12:1}var ApplyBorders: OleVariant; 
                                                                {VT_12:1}var ApplyShading: OleVariant; 
                                                                {VT_12:1}var ApplyFont: OleVariant; 
                                                                {VT_12:1}var ApplyColor: OleVariant; 
                                                                {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                {VT_12:1}var AutoFit: OleVariant); safecall;
    procedure UpdateAutoFormat {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ConvertToTextOld {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant): Range; safecall;
    function  Cell {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}Row: Integer; 
                                                        {VT_3:0}Column: Integer): Cell; safecall;
    function  Split {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var BeforeRow: OleVariant): Table; safecall;
    function  ConvertToText {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                 {VT_12:1}var NestedTables: OleVariant): Range; safecall;
    procedure AutoFitBehavior {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Behavior: WdAutoFitBehavior); safecall;
    procedure Sort {Flags(1), (17/17) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var FieldNumber: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var FieldNumber2: OleVariant; 
                                                          {VT_12:1}var SortFieldType2: OleVariant; 
                                                          {VT_12:1}var SortOrder2: OleVariant; 
                                                          {VT_12:1}var FieldNumber3: OleVariant; 
                                                          {VT_12:1}var SortFieldType3: OleVariant; 
                                                          {VT_12:1}var SortOrder3: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); safecall;
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_AllowPageBreaks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowPageBreaks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowAutoFit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowAutoFit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PreferredWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PreferredWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PreferredWidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPreferredWidthType); safecall;
    function  Get_TopPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_TopPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_BottomPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_BottomPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LeftPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_RightPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RightPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_TableDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTableDirection; safecall;
    procedure Set_TableDirection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTableDirection); safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Range: Range read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Columns: Columns read Get_Columns;
    property Rows: Rows read Get_Rows;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Uniform: WordBool read Get_Uniform;
    property AutoFormatType: Integer read Get_AutoFormatType;
    property Tables: Tables read Get_Tables;
    property NestingLevel: Integer read Get_NestingLevel;
    property AllowPageBreaks: WordBool read Get_AllowPageBreaks write Set_AllowPageBreaks;
    property AllowAutoFit: WordBool read Get_AllowAutoFit write Set_AllowAutoFit;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
    property TopPadding: Single read Get_TopPadding write Set_TopPadding;
    property BottomPadding: Single read Get_BottomPadding write Set_BottomPadding;
    property LeftPadding: Single read Get_LeftPadding write Set_LeftPadding;
    property RightPadding: Single read Get_RightPadding write Set_RightPadding;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property TableDirection: WdTableDirection read Get_TableDirection write Set_TableDirection;
    property ID: WideString read Get_ID write Set_ID;
  end;

// *********************************************************************//
// DispIntf:  TableDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020951-0000-0000-C000-000000000046}
// *********************************************************************//
  TableDisp = dispinterface
    ['{00020951-0000-0000-C000-000000000046}']
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Columns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Columns readonly dispid 100;
    property Rows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Rows readonly dispid 101;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 104;
    property Uniform {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 105;
    property AutoFormatType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 106;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 200;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 9;
    procedure SortOld {Flags(2), (12/12) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                             {VT_12:1}var FieldNumber: OleVariant; 
                                                             {VT_12:1}var SortFieldType: OleVariant; 
                                                             {VT_12:1}var SortOrder: OleVariant; 
                                                             {VT_12:1}var FieldNumber2: OleVariant; 
                                                             {VT_12:1}var SortFieldType2: OleVariant; 
                                                             {VT_12:1}var SortOrder2: OleVariant; 
                                                             {VT_12:1}var FieldNumber3: OleVariant; 
                                                             {VT_12:1}var SortFieldType3: OleVariant; 
                                                             {VT_12:1}var SortOrder3: OleVariant; 
                                                             {VT_12:1}var CaseSensitive: OleVariant; 
                                                             {VT_12:1}var LanguageID: OleVariant); dispid 10;
    procedure SortAscending {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 12;
    procedure SortDescending {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 13;
    procedure AutoFormat {Flags(2), (10/10) CC:0, INV:1, DBG:4}({VT_12:1}var Format: OleVariant; 
                                                                {VT_12:1}var ApplyBorders: OleVariant; 
                                                                {VT_12:1}var ApplyShading: OleVariant; 
                                                                {VT_12:1}var ApplyFont: OleVariant; 
                                                                {VT_12:1}var ApplyColor: OleVariant; 
                                                                {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                {VT_12:1}var AutoFit: OleVariant); dispid 14;
    procedure UpdateAutoFormat {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 15;
    function  ConvertToTextOld {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant): Range; dispid 16;
    function  Cell {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}Row: Integer; 
                                                        {VT_3:0}Column: Integer): Cell; dispid 17;
    function  Split {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var BeforeRow: OleVariant): Table; dispid 18;
    function  ConvertToText {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                 {VT_12:1}var NestedTables: OleVariant): Range; dispid 19;
    procedure AutoFitBehavior {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Behavior: WdAutoFitBehavior); dispid 20;
    procedure Sort {Flags(2), (17/17) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var FieldNumber: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var FieldNumber2: OleVariant; 
                                                          {VT_12:1}var SortFieldType2: OleVariant; 
                                                          {VT_12:1}var SortOrder2: OleVariant; 
                                                          {VT_12:1}var FieldNumber3: OleVariant; 
                                                          {VT_12:1}var SortFieldType3: OleVariant; 
                                                          {VT_12:1}var SortOrder3: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); dispid 23;
    property Tables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 107;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 108;
    property AllowPageBreaks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 109;
    property AllowAutoFit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 110;
    property PreferredWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property PreferredWidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType dispid 112;
    property TopPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 113;
    property BottomPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 114;
    property LeftPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 115;
    property RightPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 116;
    property Spacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 117;
    property TableDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTableDirection dispid 118;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 119;
  end;

// *********************************************************************//
// Interface: Row
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020950-0000-0000-C000-000000000046}
// *********************************************************************//
  Row = interface(IDispatch)
    ['{00020950-0000-0000-C000-000000000046}']
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_AllowBreakAcrossPages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AllowBreakAcrossPages {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRowAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRowAlignment); safecall;
    function  Get_HeadingFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HeadingFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SpaceBetweenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceBetweenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HeightRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule; safecall;
    procedure Set_HeightRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRowHeightRule); safecall;
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_IsLast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_IsFirst {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Cells {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Cells; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Row; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Row; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetLeftIndent {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}LeftIndent: Single; 
                                                                 {VT_29:0}RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}RowHeight: Single; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); safecall;
    function  ConvertToTextOld {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant): Range; safecall;
    function  ConvertToText {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                 {VT_12:1}var NestedTables: OleVariant): Range; safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Range: Range read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AllowBreakAcrossPages: Integer read Get_AllowBreakAcrossPages write Set_AllowBreakAcrossPages;
    property Alignment: WdRowAlignment read Get_Alignment write Set_Alignment;
    property HeadingFormat: Integer read Get_HeadingFormat write Set_HeadingFormat;
    property SpaceBetweenColumns: Single read Get_SpaceBetweenColumns write Set_SpaceBetweenColumns;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property IsLast: WordBool read Get_IsLast;
    property IsFirst: WordBool read Get_IsFirst;
    property Index: Integer read Get_Index;
    property Cells: Cells read Get_Cells;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Next: Row read Get_Next;
    property Previous: Row read Get_Previous;
    property NestingLevel: Integer read Get_NestingLevel;
    property ID: WideString read Get_ID write Set_ID;
  end;

// *********************************************************************//
// DispIntf:  RowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020950-0000-0000-C000-000000000046}
// *********************************************************************//
  RowDisp = dispinterface
    ['{00020950-0000-0000-C000-000000000046}']
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property AllowBreakAcrossPages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRowAlignment dispid 4;
    property HeadingFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 5;
    property SpaceBetweenColumns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 6;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property HeightRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule dispid 8;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 9;
    property IsLast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 10;
    property IsFirst {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 11;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 12;
    property Cells {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Cells readonly dispid 100;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 103;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Row readonly dispid 104;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Row readonly dispid 105;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 200;
    procedure SetLeftIndent {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}LeftIndent: Single; 
                                                                 {VT_29:0}RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}RowHeight: Single; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); dispid 203;
    function  ConvertToTextOld {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant): Range; dispid 16;
    function  ConvertToText {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                 {VT_12:1}var NestedTables: OleVariant): Range; dispid 18;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 106;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
  end;

// *********************************************************************//
// Interface: Column
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094F-0000-0000-C000-000000000046}
// *********************************************************************//
  Column = interface(IDispatch)
    ['{0002094F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_IsFirst {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_IsLast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Cells {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Cells; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Column; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Column; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetWidth {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); safecall;
    procedure AutoFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortOld {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                           {VT_12:1}var SortFieldType: OleVariant; 
                                                           {VT_12:1}var SortOrder: OleVariant; 
                                                           {VT_12:1}var CaseSensitive: OleVariant; 
                                                           {VT_12:1}var LanguageID: OleVariant); safecall;
    procedure Sort {Flags(1), (10/10) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_PreferredWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PreferredWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PreferredWidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPreferredWidthType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Width: Single read Get_Width write Set_Width;
    property IsFirst: WordBool read Get_IsFirst;
    property IsLast: WordBool read Get_IsLast;
    property Index: Integer read Get_Index;
    property Cells: Cells read Get_Cells;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Next: Column read Get_Next;
    property Previous: Column read Get_Previous;
    property NestingLevel: Integer read Get_NestingLevel;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  ColumnDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094F-0000-0000-C000-000000000046}
// *********************************************************************//
  ColumnDisp = dispinterface
    ['{0002094F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 3;
    property IsFirst {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 4;
    property IsLast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 5;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 6;
    property Cells {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Cells readonly dispid 100;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 102;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Column readonly dispid 103;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Column readonly dispid 104;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 200;
    procedure SetWidth {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); dispid 201;
    procedure AutoFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 202;
    procedure SortOld {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                           {VT_12:1}var SortFieldType: OleVariant; 
                                                           {VT_12:1}var SortOrder: OleVariant; 
                                                           {VT_12:1}var CaseSensitive: OleVariant; 
                                                           {VT_12:1}var LanguageID: OleVariant); dispid 203;
    procedure Sort {Flags(2), (10/10) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); dispid 204;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 105;
    property PreferredWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 106;
    property PreferredWidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType dispid 107;
  end;

// *********************************************************************//
// Interface: Cell
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094E-0000-0000-C000-000000000046}
// *********************************************************************//
  Cell = interface(IDispatch)
    ['{0002094E-0000-0000-C000-000000000046}']
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_RowIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ColumnIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HeightRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule; safecall;
    procedure Set_HeightRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRowHeightRule); safecall;
    function  Get_VerticalAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCellVerticalAlignment; safecall;
    procedure Set_VerticalAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCellVerticalAlignment); safecall;
    function  Get_Column {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Column; safecall;
    function  Get_Row {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Row; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Cell; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Cell; safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var ShiftCells: OleVariant); safecall;
    procedure Formula {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var Formula: OleVariant; 
                                                           {VT_12:1}var NumFormat: OleVariant); safecall;
    procedure SetWidth {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var RowHeight: OleVariant; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); safecall;
    procedure Merge {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const MergeTo: Cell); safecall;
    procedure Split {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var NumRows: OleVariant; 
                                                         {VT_12:1}var NumColumns: OleVariant); safecall;
    procedure AutoSum {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PreferredWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PreferredWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_FitText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FitText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_TopPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_TopPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_BottomPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_BottomPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LeftPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_RightPadding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RightPadding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_PreferredWidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPreferredWidthType); safecall;
    property Range: Range read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RowIndex: Integer read Get_RowIndex;
    property ColumnIndex: Integer read Get_ColumnIndex;
    property Width: Single read Get_Width write Set_Width;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property VerticalAlignment: WdCellVerticalAlignment read Get_VerticalAlignment write Set_VerticalAlignment;
    property Column: Column read Get_Column;
    property Row: Row read Get_Row;
    property Next: Cell read Get_Next;
    property Previous: Cell read Get_Previous;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Tables: Tables read Get_Tables;
    property NestingLevel: Integer read Get_NestingLevel;
    property WordWrap: WordBool read Get_WordWrap write Set_WordWrap;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property FitText: WordBool read Get_FitText write Set_FitText;
    property TopPadding: Single read Get_TopPadding write Set_TopPadding;
    property BottomPadding: Single read Get_BottomPadding write Set_BottomPadding;
    property LeftPadding: Single read Get_LeftPadding write Set_LeftPadding;
    property RightPadding: Single read Get_RightPadding write Set_RightPadding;
    property ID: WideString read Get_ID write Set_ID;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  CellDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094E-0000-0000-C000-000000000046}
// *********************************************************************//
  CellDisp = dispinterface
    ['{0002094E-0000-0000-C000-000000000046}']
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 0;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property RowIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 4;
    property ColumnIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 5;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 6;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property HeightRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule dispid 8;
    property VerticalAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCellVerticalAlignment dispid 1104;
    property Column {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Column readonly dispid 101;
    property Row {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Row readonly dispid 102;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Cell readonly dispid 103;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Cell readonly dispid 104;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 105;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Delete {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var ShiftCells: OleVariant); dispid 200;
    procedure Formula {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var Formula: OleVariant; 
                                                           {VT_12:1}var NumFormat: OleVariant); dispid 201;
    procedure SetWidth {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var RowHeight: OleVariant; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); dispid 203;
    procedure Merge {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const MergeTo: Cell); dispid 204;
    procedure Split {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var NumRows: OleVariant; 
                                                         {VT_12:1}var NumColumns: OleVariant); dispid 205;
    procedure AutoSum {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 206;
    property Tables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 106;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 107;
    property WordWrap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 108;
    property PreferredWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property FitText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 110;
    property TopPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property BottomPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 112;
    property LeftPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 113;
    property RightPadding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 114;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property PreferredWidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType dispid 116;
  end;

// *********************************************************************//
// Interface: Tables
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094D-0000-0000-C000-000000000046}
// *********************************************************************//
  Tables = interface(IDispatch)
    ['{0002094D-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Table; safecall;
    function  AddOld {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                          {VT_3:0}NumRows: Integer; 
                                                          {VT_3:0}NumColumns: Integer): Table; safecall;
    function  Add {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_3:0}NumRows: Integer; 
                                                       {VT_3:0}NumColumns: Integer; 
                                                       {VT_12:1}var DefaultTableBehavior: OleVariant; 
                                                       {VT_12:1}var AutoFitBehavior: OleVariant): Table; safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NestingLevel: Integer read Get_NestingLevel;
  end;

// *********************************************************************//
// DispIntf:  TablesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094D-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesDisp = dispinterface
    ['{0002094D-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Table; dispid 0;
    function  AddOld {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                          {VT_3:0}NumRows: Integer; 
                                                          {VT_3:0}NumColumns: Integer): Table; dispid 4;
    function  Add {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_3:0}NumRows: Integer; 
                                                       {VT_3:0}NumColumns: Integer; 
                                                       {VT_12:1}var DefaultTableBehavior: OleVariant; 
                                                       {VT_12:1}var AutoFitBehavior: OleVariant): Table; dispid 200;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 100;
  end;

// *********************************************************************//
// Interface: Rows
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094C-0000-0000-C000-000000000046}
// *********************************************************************//
  Rows = interface(IDispatch)
    ['{0002094C-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_AllowBreakAcrossPages {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AllowBreakAcrossPages {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRowAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRowAlignment); safecall;
    function  Get_HeadingFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HeadingFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SpaceBetweenColumns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceBetweenColumns {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HeightRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule; safecall;
    procedure Set_HeightRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRowHeightRule); safecall;
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Row; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Row; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Row; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var BeforeRow: OleVariant): Row; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetLeftIndent {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}LeftIndent: Single; 
                                                                 {VT_29:0}RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}RowHeight: Single; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); safecall;
    function  ConvertToTextOld {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant): Range; safecall;
    procedure DistributeHeight {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ConvertToText {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                 {VT_12:1}var NestedTables: OleVariant): Range; safecall;
    function  Get_WrapAroundText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_WrapAroundText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DistanceTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DistanceBottom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceBottom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DistanceLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DistanceRight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceRight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HorizontalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_HorizontalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_VerticalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_VerticalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_RelativeHorizontalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeHorizontalPosition); safecall;
    function  Get_RelativeVerticalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeVerticalPosition); safecall;
    function  Get_AllowOverlap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AllowOverlap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_TableDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTableDirection; safecall;
    procedure Set_TableDirection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTableDirection); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property AllowBreakAcrossPages: Integer read Get_AllowBreakAcrossPages write Set_AllowBreakAcrossPages;
    property Alignment: WdRowAlignment read Get_Alignment write Set_Alignment;
    property HeadingFormat: Integer read Get_HeadingFormat write Set_HeadingFormat;
    property SpaceBetweenColumns: Single read Get_SpaceBetweenColumns write Set_SpaceBetweenColumns;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property First: Row read Get_First;
    property Last: Row read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property WrapAroundText: Integer read Get_WrapAroundText write Set_WrapAroundText;
    property DistanceTop: Single read Get_DistanceTop write Set_DistanceTop;
    property DistanceBottom: Single read Get_DistanceBottom write Set_DistanceBottom;
    property DistanceLeft: Single read Get_DistanceLeft write Set_DistanceLeft;
    property DistanceRight: Single read Get_DistanceRight write Set_DistanceRight;
    property HorizontalPosition: Single read Get_HorizontalPosition write Set_HorizontalPosition;
    property VerticalPosition: Single read Get_VerticalPosition write Set_VerticalPosition;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property AllowOverlap: Integer read Get_AllowOverlap write Set_AllowOverlap;
    property NestingLevel: Integer read Get_NestingLevel;
    property TableDirection: WdTableDirection read Get_TableDirection write Set_TableDirection;
  end;

// *********************************************************************//
// DispIntf:  RowsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094C-0000-0000-C000-000000000046}
// *********************************************************************//
  RowsDisp = dispinterface
    ['{0002094C-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property AllowBreakAcrossPages {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRowAlignment dispid 4;
    property HeadingFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 5;
    property SpaceBetweenColumns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 6;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property HeightRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule dispid 8;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 9;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Row readonly dispid 10;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Row readonly dispid 11;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 102;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Row; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var BeforeRow: OleVariant): Row; dispid 100;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 199;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 200;
    procedure SetLeftIndent {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}LeftIndent: Single; 
                                                                 {VT_29:0}RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}RowHeight: Single; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); dispid 203;
    function  ConvertToTextOld {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant): Range; dispid 16;
    procedure DistributeHeight {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 206;
    function  ConvertToText {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                 {VT_12:1}var NestedTables: OleVariant): Range; dispid 210;
    property WrapAroundText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 12;
    property DistanceTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 13;
    property DistanceBottom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 14;
    property DistanceLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 20;
    property DistanceRight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 21;
    property HorizontalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 15;
    property VerticalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 17;
    property RelativeHorizontalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition dispid 18;
    property RelativeVerticalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition dispid 19;
    property AllowOverlap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 22;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 103;
    property TableDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTableDirection dispid 104;
  end;

// *********************************************************************//
// Interface: Columns
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094B-0000-0000-C000-000000000046}
// *********************************************************************//
  Columns = interface(IDispatch)
    ['{0002094B-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_First {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Column; safecall;
    function  Get_Last {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Column; safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Column; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var BeforeColumn: OleVariant): Column; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetWidth {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); safecall;
    procedure AutoFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DistributeWidth {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_PreferredWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PreferredWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PreferredWidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPreferredWidthType); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property First: Column read Get_First;
    property Last: Column read Get_Last;
    property Width: Single read Get_Width write Set_Width;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property NestingLevel: Integer read Get_NestingLevel;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  ColumnsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094B-0000-0000-C000-000000000046}
// *********************************************************************//
  ColumnsDisp = dispinterface
    ['{0002094B-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property First {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Column readonly dispid 100;
    property Last {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Column readonly dispid 101;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 3;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 103;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Column; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var BeforeColumn: OleVariant): Column; dispid 5;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 199;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 200;
    procedure SetWidth {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); dispid 201;
    procedure AutoFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 202;
    procedure DistributeWidth {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 203;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 104;
    property PreferredWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 105;
    property PreferredWidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType dispid 106;
  end;

// *********************************************************************//
// Interface: Cells
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094A-0000-0000-C000-000000000046}
// *********************************************************************//
  Cells = interface(IDispatch)
    ['{0002094A-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HeightRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule; safecall;
    procedure Set_HeightRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRowHeightRule); safecall;
    function  Get_VerticalAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCellVerticalAlignment; safecall;
    procedure Set_VerticalAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCellVerticalAlignment); safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Cell; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var BeforeCell: OleVariant): Cell; safecall;
    procedure Delete {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var ShiftCells: OleVariant); safecall;
    procedure SetWidth {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var RowHeight: OleVariant; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); safecall;
    procedure Merge {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Split {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var NumRows: OleVariant; 
                                                         {VT_12:1}var NumColumns: OleVariant; 
                                                         {VT_12:1}var MergeBeforeSplit: OleVariant); safecall;
    procedure DistributeHeight {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DistributeWidth {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure AutoFit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_NestingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_PreferredWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PreferredWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PreferredWidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPreferredWidthType); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Width: Single read Get_Width write Set_Width;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property VerticalAlignment: WdCellVerticalAlignment read Get_VerticalAlignment write Set_VerticalAlignment;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property NestingLevel: Integer read Get_NestingLevel;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  CellsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094A-0000-0000-C000-000000000046}
// *********************************************************************//
  CellsDisp = dispinterface
    ['{0002094A-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 6;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property HeightRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRowHeightRule dispid 8;
    property VerticalAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCellVerticalAlignment dispid 1104;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 101;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Cell; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var BeforeCell: OleVariant): Cell; dispid 4;
    procedure Delete {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var ShiftCells: OleVariant); dispid 200;
    procedure SetWidth {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_4:0}ColumnWidth: Single; 
                                                            {VT_29:0}RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var RowHeight: OleVariant; 
                                                             {VT_29:0}HeightRule: WdRowHeightRule); dispid 203;
    procedure Merge {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 204;
    procedure Split {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var NumRows: OleVariant; 
                                                         {VT_12:1}var NumColumns: OleVariant; 
                                                         {VT_12:1}var MergeBeforeSplit: OleVariant); dispid 205;
    procedure DistributeHeight {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 206;
    procedure DistributeWidth {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 207;
    procedure AutoFit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 208;
    property NestingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 102;
    property PreferredWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    property PreferredWidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPreferredWidthType dispid 104;
  end;

// *********************************************************************//
// Interface: AutoCorrect
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020949-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrect = interface(IDispatch)
    ['{00020949-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_CorrectDays {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectDays {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CorrectInitialCaps {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectInitialCaps {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CorrectSentenceCaps {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectSentenceCaps {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ReplaceText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ReplaceText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Entries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: AutoCorrectEntries; safecall;
    function  Get_FirstLetterExceptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FirstLetterExceptions; safecall;
    function  Get_FirstLetterAutoAdd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FirstLetterAutoAdd {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_TwoInitialCapsExceptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TwoInitialCapsExceptions; safecall;
    function  Get_TwoInitialCapsAutoAdd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TwoInitialCapsAutoAdd {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CorrectCapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectCapsLock {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CorrectHangulAndAlphabet {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectHangulAndAlphabet {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HangulAndAlphabetExceptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HangulAndAlphabetExceptions; safecall;
    function  Get_HangulAndAlphabetAutoAdd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HangulAndAlphabetAutoAdd {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ReplaceTextFromSpellingChecker {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ReplaceTextFromSpellingChecker {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_OtherCorrectionsAutoAdd {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OtherCorrectionsAutoAdd {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_OtherCorrectionsExceptions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OtherCorrectionsExceptions; safecall;
    function  Get_CorrectKeyboardSetting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CorrectKeyboardSetting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property CorrectDays: WordBool read Get_CorrectDays write Set_CorrectDays;
    property CorrectInitialCaps: WordBool read Get_CorrectInitialCaps write Set_CorrectInitialCaps;
    property CorrectSentenceCaps: WordBool read Get_CorrectSentenceCaps write Set_CorrectSentenceCaps;
    property ReplaceText: WordBool read Get_ReplaceText write Set_ReplaceText;
    property Entries: AutoCorrectEntries read Get_Entries;
    property FirstLetterExceptions: FirstLetterExceptions read Get_FirstLetterExceptions;
    property FirstLetterAutoAdd: WordBool read Get_FirstLetterAutoAdd write Set_FirstLetterAutoAdd;
    property TwoInitialCapsExceptions: TwoInitialCapsExceptions read Get_TwoInitialCapsExceptions;
    property TwoInitialCapsAutoAdd: WordBool read Get_TwoInitialCapsAutoAdd write Set_TwoInitialCapsAutoAdd;
    property CorrectCapsLock: WordBool read Get_CorrectCapsLock write Set_CorrectCapsLock;
    property CorrectHangulAndAlphabet: WordBool read Get_CorrectHangulAndAlphabet write Set_CorrectHangulAndAlphabet;
    property HangulAndAlphabetExceptions: HangulAndAlphabetExceptions read Get_HangulAndAlphabetExceptions;
    property HangulAndAlphabetAutoAdd: WordBool read Get_HangulAndAlphabetAutoAdd write Set_HangulAndAlphabetAutoAdd;
    property ReplaceTextFromSpellingChecker: WordBool read Get_ReplaceTextFromSpellingChecker write Set_ReplaceTextFromSpellingChecker;
    property OtherCorrectionsAutoAdd: WordBool read Get_OtherCorrectionsAutoAdd write Set_OtherCorrectionsAutoAdd;
    property OtherCorrectionsExceptions: OtherCorrectionsExceptions read Get_OtherCorrectionsExceptions;
    property CorrectKeyboardSetting: WordBool read Get_CorrectKeyboardSetting write Set_CorrectKeyboardSetting;
  end;

// *********************************************************************//
// DispIntf:  AutoCorrectDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020949-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectDisp = dispinterface
    ['{00020949-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property CorrectDays {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property CorrectInitialCaps {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property CorrectSentenceCaps {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property ReplaceText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property Entries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: AutoCorrectEntries readonly dispid 6;
    property FirstLetterExceptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FirstLetterExceptions readonly dispid 7;
    property FirstLetterAutoAdd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 8;
    property TwoInitialCapsExceptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TwoInitialCapsExceptions readonly dispid 9;
    property TwoInitialCapsAutoAdd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 10;
    property CorrectCapsLock {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 11;
    property CorrectHangulAndAlphabet {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
    property HangulAndAlphabetExceptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HangulAndAlphabetExceptions readonly dispid 13;
    property HangulAndAlphabetAutoAdd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property ReplaceTextFromSpellingChecker {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 15;
    property OtherCorrectionsAutoAdd {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property OtherCorrectionsExceptions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OtherCorrectionsExceptions readonly dispid 17;
    property CorrectKeyboardSetting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 18;
  end;

// *********************************************************************//
// Interface: AutoCorrectEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020948-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntries = interface(IDispatch)
    ['{00020948-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): AutoCorrectEntry; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_8:0}const Value: WideString): AutoCorrectEntry; safecall;
    function  AddRichText {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                               {VT_29:1}const Range: Range): AutoCorrectEntry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AutoCorrectEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020948-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntriesDisp = dispinterface
    ['{00020948-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): AutoCorrectEntry; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_8:0}const Value: WideString): AutoCorrectEntry; dispid 101;
    function  AddRichText {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                               {VT_29:1}const Range: Range): AutoCorrectEntry; dispid 102;
  end;

// *********************************************************************//
// Interface: AutoCorrectEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020947-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntry = interface(IDispatch)
    ['{00020947-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_RichText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Apply {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property Value: WideString read Get_Value write Set_Value;
    property RichText: WordBool read Get_RichText;
  end;

// *********************************************************************//
// DispIntf:  AutoCorrectEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020947-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntryDisp = dispinterface
    ['{00020947-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 3;
    property RichText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 4;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Apply {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range); dispid 102;
  end;

// *********************************************************************//
// Interface: FirstLetterExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020946-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterExceptions = interface(IDispatch)
    ['{00020946-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): FirstLetterException; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): FirstLetterException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  FirstLetterExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020946-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterExceptionsDisp = dispinterface
    ['{00020946-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): FirstLetterException; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): FirstLetterException; dispid 101;
  end;

// *********************************************************************//
// Interface: FirstLetterException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020945-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterException = interface(IDispatch)
    ['{00020945-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  FirstLetterExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020945-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterExceptionDisp = dispinterface
    ['{00020945-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: TwoInitialCapsExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020944-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsExceptions = interface(IDispatch)
    ['{00020944-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): TwoInitialCapsException; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): TwoInitialCapsException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  TwoInitialCapsExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020944-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsExceptionsDisp = dispinterface
    ['{00020944-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): TwoInitialCapsException; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): TwoInitialCapsException; dispid 101;
  end;

// *********************************************************************//
// Interface: TwoInitialCapsException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020943-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsException = interface(IDispatch)
    ['{00020943-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  TwoInitialCapsExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020943-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsExceptionDisp = dispinterface
    ['{00020943-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: Footnotes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020942-0000-0000-C000-000000000046}
// *********************************************************************//
  Footnotes = interface(IDispatch)
    ['{00020942-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Location {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFootnoteLocation; safecall;
    procedure Set_Location {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFootnoteLocation); safecall;
    function  Get_NumberStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdNoteNumberStyle; safecall;
    procedure Set_NumberStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdNoteNumberStyle); safecall;
    function  Get_StartingNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_StartingNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NumberingRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdNumberingRule; safecall;
    procedure Set_NumberingRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdNumberingRule); safecall;
    function  Get_Separator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ContinuationSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ContinuationNotice {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Footnote; safecall;
    function  Add {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Reference: OleVariant; 
                                                       {VT_12:1}var Text: OleVariant): Footnote; safecall;
    procedure Convert {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SwapWithEndnotes {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ResetSeparator {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ResetContinuationSeparator {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ResetContinuationNotice {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Location: WdFootnoteLocation read Get_Location write Set_Location;
    property NumberStyle: WdNoteNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property NumberingRule: WdNumberingRule read Get_NumberingRule write Set_NumberingRule;
    property Separator: Range read Get_Separator;
    property ContinuationSeparator: Range read Get_ContinuationSeparator;
    property ContinuationNotice: Range read Get_ContinuationNotice;
  end;

// *********************************************************************//
// DispIntf:  FootnotesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020942-0000-0000-C000-000000000046}
// *********************************************************************//
  FootnotesDisp = dispinterface
    ['{00020942-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Location {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFootnoteLocation dispid 100;
    property NumberStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdNoteNumberStyle dispid 101;
    property StartingNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property NumberingRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdNumberingRule dispid 103;
    property Separator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 104;
    property ContinuationSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 105;
    property ContinuationNotice {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 106;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Footnote; dispid 0;
    function  Add {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Reference: OleVariant; 
                                                       {VT_12:1}var Text: OleVariant): Footnote; dispid 4;
    procedure Convert {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 5;
    procedure SwapWithEndnotes {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 6;
    procedure ResetSeparator {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 7;
    procedure ResetContinuationSeparator {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 8;
    procedure ResetContinuationNotice {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 9;
  end;

// *********************************************************************//
// Interface: Endnotes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020941-0000-0000-C000-000000000046}
// *********************************************************************//
  Endnotes = interface(IDispatch)
    ['{00020941-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Location {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdEndnoteLocation; safecall;
    procedure Set_Location {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdEndnoteLocation); safecall;
    function  Get_NumberStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdNoteNumberStyle; safecall;
    procedure Set_NumberStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdNoteNumberStyle); safecall;
    function  Get_StartingNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_StartingNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NumberingRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdNumberingRule; safecall;
    procedure Set_NumberingRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdNumberingRule); safecall;
    function  Get_Separator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ContinuationSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ContinuationNotice {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Endnote; safecall;
    function  Add {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Reference: OleVariant; 
                                                       {VT_12:1}var Text: OleVariant): Endnote; safecall;
    procedure Convert {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SwapWithFootnotes {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ResetSeparator {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ResetContinuationSeparator {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ResetContinuationNotice {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Location: WdEndnoteLocation read Get_Location write Set_Location;
    property NumberStyle: WdNoteNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property NumberingRule: WdNumberingRule read Get_NumberingRule write Set_NumberingRule;
    property Separator: Range read Get_Separator;
    property ContinuationSeparator: Range read Get_ContinuationSeparator;
    property ContinuationNotice: Range read Get_ContinuationNotice;
  end;

// *********************************************************************//
// DispIntf:  EndnotesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020941-0000-0000-C000-000000000046}
// *********************************************************************//
  EndnotesDisp = dispinterface
    ['{00020941-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Location {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdEndnoteLocation dispid 100;
    property NumberStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdNoteNumberStyle dispid 101;
    property StartingNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 102;
    property NumberingRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdNumberingRule dispid 103;
    property Separator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 104;
    property ContinuationSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 105;
    property ContinuationNotice {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 106;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Endnote; dispid 0;
    function  Add {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Reference: OleVariant; 
                                                       {VT_12:1}var Text: OleVariant): Endnote; dispid 4;
    procedure Convert {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 5;
    procedure SwapWithFootnotes {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 6;
    procedure ResetSeparator {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 7;
    procedure ResetContinuationSeparator {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 8;
    procedure ResetContinuationNotice {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 9;
  end;

// *********************************************************************//
// Interface: Comments
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020940-0000-0000-C000-000000000046}
// *********************************************************************//
  Comments = interface(IDispatch)
    ['{00020940-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ShowBy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ShowBy {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Comment; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Text: OleVariant): Comment; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ShowBy: WideString read Get_ShowBy write Set_ShowBy;
  end;

// *********************************************************************//
// DispIntf:  CommentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020940-0000-0000-C000-000000000046}
// *********************************************************************//
  CommentsDisp = dispinterface
    ['{00020940-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ShowBy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1003;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Comment; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Text: OleVariant): Comment; dispid 4;
  end;

// *********************************************************************//
// Interface: Footnote
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093F-0000-0000-C000-000000000046}
// *********************************************************************//
  Footnote = interface(IDispatch)
    ['{0002093F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Reference {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: Range read Get_Range;
    property Reference: Range read Get_Reference;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  FootnoteDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093F-0000-0000-C000-000000000046}
// *********************************************************************//
  FootnoteDisp = dispinterface
    ['{0002093F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 4;
    property Reference {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 5;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 6;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
  end;

// *********************************************************************//
// Interface: Endnote
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093E-0000-0000-C000-000000000046}
// *********************************************************************//
  Endnote = interface(IDispatch)
    ['{0002093E-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Reference {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: Range read Get_Range;
    property Reference: Range read Get_Reference;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  EndnoteDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093E-0000-0000-C000-000000000046}
// *********************************************************************//
  EndnoteDisp = dispinterface
    ['{0002093E-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 4;
    property Reference {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 5;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 6;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
  end;

// *********************************************************************//
// Interface: Comment
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093D-0000-0000-C000-000000000046}
// *********************************************************************//
  Comment = interface(IDispatch)
    ['{0002093D-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Reference {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Scope {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Author {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Author {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Initial {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Initial {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ShowTip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowTip {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: Range read Get_Range;
    property Reference: Range read Get_Reference;
    property Scope: Range read Get_Scope;
    property Index: Integer read Get_Index;
    property Author: WideString read Get_Author write Set_Author;
    property Initial: WideString read Get_Initial write Set_Initial;
    property ShowTip: WordBool read Get_ShowTip write Set_ShowTip;
  end;

// *********************************************************************//
// DispIntf:  CommentDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093D-0000-0000-C000-000000000046}
// *********************************************************************//
  CommentDisp = dispinterface
    ['{0002093D-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1003;
    property Reference {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1004;
    property Scope {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1005;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1006;
    property Author {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1007;
    property Initial {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1008;
    property ShowTip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1009;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
  end;

// *********************************************************************//
// Interface: Borders
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093C-0000-0000-C000-000000000046}
// *********************************************************************//
  Borders = interface(IDispatch)
    ['{0002093C-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Enable {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Enable {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DistanceFromTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DistanceFromTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_InsideLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle; safecall;
    procedure Set_InsideLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineStyle); safecall;
    function  Get_OutsideLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle; safecall;
    procedure Set_OutsideLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineStyle); safecall;
    function  Get_InsideLineWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth; safecall;
    procedure Set_InsideLineWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineWidth); safecall;
    function  Get_OutsideLineWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth; safecall;
    procedure Set_OutsideLineWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineWidth); safecall;
    function  Get_InsideColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_InsideColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_OutsideColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_OutsideColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_DistanceFromLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DistanceFromLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DistanceFromBottom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DistanceFromBottom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DistanceFromRight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DistanceFromRight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_AlwaysInFront {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AlwaysInFront {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SurroundHeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SurroundHeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SurroundFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SurroundFooter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_JoinBorders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_JoinBorders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HasHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_HasVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_DistanceFrom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBorderDistanceFrom; safecall;
    procedure Set_DistanceFrom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBorderDistanceFrom); safecall;
    function  Get_EnableFirstPageInSection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnableFirstPageInSection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EnableOtherPagesInSection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnableOtherPagesInSection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Index: WdBorderType): Border; safecall;
    procedure ApplyPageBordersToAllSections {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_InsideColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_InsideColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_OutsideColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_OutsideColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Enable: Integer read Get_Enable write Set_Enable;
    property DistanceFromTop: Integer read Get_DistanceFromTop write Set_DistanceFromTop;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property InsideLineStyle: WdLineStyle read Get_InsideLineStyle write Set_InsideLineStyle;
    property OutsideLineStyle: WdLineStyle read Get_OutsideLineStyle write Set_OutsideLineStyle;
    property InsideLineWidth: WdLineWidth read Get_InsideLineWidth write Set_InsideLineWidth;
    property OutsideLineWidth: WdLineWidth read Get_OutsideLineWidth write Set_OutsideLineWidth;
    property InsideColorIndex: WdColorIndex read Get_InsideColorIndex write Set_InsideColorIndex;
    property OutsideColorIndex: WdColorIndex read Get_OutsideColorIndex write Set_OutsideColorIndex;
    property DistanceFromLeft: Integer read Get_DistanceFromLeft write Set_DistanceFromLeft;
    property DistanceFromBottom: Integer read Get_DistanceFromBottom write Set_DistanceFromBottom;
    property DistanceFromRight: Integer read Get_DistanceFromRight write Set_DistanceFromRight;
    property AlwaysInFront: WordBool read Get_AlwaysInFront write Set_AlwaysInFront;
    property SurroundHeader: WordBool read Get_SurroundHeader write Set_SurroundHeader;
    property SurroundFooter: WordBool read Get_SurroundFooter write Set_SurroundFooter;
    property JoinBorders: WordBool read Get_JoinBorders write Set_JoinBorders;
    property HasHorizontal: WordBool read Get_HasHorizontal;
    property HasVertical: WordBool read Get_HasVertical;
    property DistanceFrom: WdBorderDistanceFrom read Get_DistanceFrom write Set_DistanceFrom;
    property EnableFirstPageInSection: WordBool read Get_EnableFirstPageInSection write Set_EnableFirstPageInSection;
    property EnableOtherPagesInSection: WordBool read Get_EnableOtherPagesInSection write Set_EnableOtherPagesInSection;
    property InsideColor: WdColor read Get_InsideColor write Set_InsideColor;
    property OutsideColor: WdColor read Get_OutsideColor write Set_OutsideColor;
  end;

// *********************************************************************//
// DispIntf:  BordersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093C-0000-0000-C000-000000000046}
// *********************************************************************//
  BordersDisp = dispinterface
    ['{0002093C-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Enable {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 2;
    property DistanceFromTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property Shadow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property InsideLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle dispid 6;
    property OutsideLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle dispid 7;
    property InsideLineWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth dispid 8;
    property OutsideLineWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth dispid 9;
    property InsideColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 10;
    property OutsideColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 11;
    property DistanceFromLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 20;
    property DistanceFromBottom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 21;
    property DistanceFromRight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 22;
    property AlwaysInFront {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 23;
    property SurroundHeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 24;
    property SurroundFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property JoinBorders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 26;
    property HasHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 27;
    property HasVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 28;
    property DistanceFrom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBorderDistanceFrom dispid 29;
    property EnableFirstPageInSection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 30;
    property EnableOtherPagesInSection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 31;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Index: WdBorderType): Border; dispid 0;
    procedure ApplyPageBordersToAllSections {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2000;
    property InsideColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 32;
    property OutsideColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 33;
  end;

// *********************************************************************//
// Interface: Border
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093B-0000-0000-C000-000000000046}
// *********************************************************************//
  Border = interface(IDispatch)
    ['{0002093B-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_Inside {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_LineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle; safecall;
    procedure Set_LineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineStyle); safecall;
    function  Get_LineWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth; safecall;
    procedure Set_LineWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineWidth); safecall;
    function  Get_ArtStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPageBorderArt; safecall;
    procedure Set_ArtStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPageBorderArt); safecall;
    function  Get_ArtWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ArtWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property ColorIndex: WdColorIndex read Get_ColorIndex write Set_ColorIndex;
    property Inside: WordBool read Get_Inside;
    property LineStyle: WdLineStyle read Get_LineStyle write Set_LineStyle;
    property LineWidth: WdLineWidth read Get_LineWidth write Set_LineWidth;
    property ArtStyle: WdPageBorderArt read Get_ArtStyle write Set_ArtStyle;
    property ArtWidth: Integer read Get_ArtWidth write Set_ArtWidth;
    property Color: WdColor read Get_Color write Set_Color;
  end;

// *********************************************************************//
// DispIntf:  BorderDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093B-0000-0000-C000-000000000046}
// *********************************************************************//
  BorderDisp = dispinterface
    ['{0002093B-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 0;
    property ColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 1;
    property Inside {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 2;
    property LineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle dispid 3;
    property LineWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth dispid 4;
    property ArtStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPageBorderArt dispid 5;
    property ArtWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 6;
    property Color {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 7;
  end;

// *********************************************************************//
// Interface: Shading
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093A-0000-0000-C000-000000000046}
// *********************************************************************//
  Shading = interface(IDispatch)
    ['{0002093A-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ForegroundPatternColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_ForegroundPatternColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_BackgroundPatternColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_BackgroundPatternColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_Texture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTextureIndex; safecall;
    procedure Set_Texture {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTextureIndex); safecall;
    function  Get_ForegroundPatternColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_ForegroundPatternColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_BackgroundPatternColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_BackgroundPatternColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ForegroundPatternColorIndex: WdColorIndex read Get_ForegroundPatternColorIndex write Set_ForegroundPatternColorIndex;
    property BackgroundPatternColorIndex: WdColorIndex read Get_BackgroundPatternColorIndex write Set_BackgroundPatternColorIndex;
    property Texture: WdTextureIndex read Get_Texture write Set_Texture;
    property ForegroundPatternColor: WdColor read Get_ForegroundPatternColor write Set_ForegroundPatternColor;
    property BackgroundPatternColor: WdColor read Get_BackgroundPatternColor write Set_BackgroundPatternColor;
  end;

// *********************************************************************//
// DispIntf:  ShadingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093A-0000-0000-C000-000000000046}
// *********************************************************************//
  ShadingDisp = dispinterface
    ['{0002093A-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ForegroundPatternColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 1;
    property BackgroundPatternColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 2;
    property Texture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTextureIndex dispid 3;
    property ForegroundPatternColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 4;
    property BackgroundPatternColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 5;
  end;

// *********************************************************************//
// Interface: TextRetrievalMode
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020939-0000-0000-C000-000000000046}
// *********************************************************************//
  TextRetrievalMode = interface(IDispatch)
    ['{00020939-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ViewType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdViewType; safecall;
    procedure Set_ViewType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdViewType); safecall;
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextRetrievalMode; safecall;
    function  Get_IncludeHiddenText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeHiddenText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IncludeFieldCodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeFieldCodes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ViewType: WdViewType read Get_ViewType write Set_ViewType;
    property Duplicate: TextRetrievalMode read Get_Duplicate;
    property IncludeHiddenText: WordBool read Get_IncludeHiddenText write Set_IncludeHiddenText;
    property IncludeFieldCodes: WordBool read Get_IncludeFieldCodes write Set_IncludeFieldCodes;
  end;

// *********************************************************************//
// DispIntf:  TextRetrievalModeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020939-0000-0000-C000-000000000046}
// *********************************************************************//
  TextRetrievalModeDisp = dispinterface
    ['{00020939-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ViewType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdViewType dispid 0;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextRetrievalMode readonly dispid 1;
    property IncludeHiddenText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property IncludeFieldCodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
  end;

// *********************************************************************//
// Interface: AutoTextEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020937-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntries = interface(IDispatch)
    ['{00020937-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): AutoTextEntry; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_29:1}const Range: Range): AutoTextEntry; safecall;
    function  AppendToSpike {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): AutoTextEntry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AutoTextEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020937-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntriesDisp = dispinterface
    ['{00020937-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): AutoTextEntry; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_29:1}const Range: Range): AutoTextEntry; dispid 101;
    function  AppendToSpike {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): AutoTextEntry; dispid 102;
  end;

// *********************************************************************//
// Interface: AutoTextEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020936-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntry = interface(IDispatch)
    ['{00020936-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_StyleName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Insert {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_29:1}const Where: Range; 
                                                          {VT_12:1}var RichText: OleVariant): Range; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property StyleName: WideString read Get_StyleName;
    property Value: WideString read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  AutoTextEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020936-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntryDisp = dispinterface
    ['{00020936-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property StyleName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    function  Insert {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_29:1}const Where: Range; 
                                                          {VT_12:1}var RichText: OleVariant): Range; dispid 102;
  end;

// *********************************************************************//
// Interface: System
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020935-0000-0000-C000-000000000046}
// *********************************************************************//
  System = interface(IDispatch)
    ['{00020935-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OperatingSystem {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_ProcessorType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_FreeDiskSpace {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Country {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCountry; safecall;
    function  Get_LanguageDesignation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_HorizontalResolution {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_VerticalResolution {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ProfileString {Flags(1), (3/2) CC:0, INV:2, DBG:6}({VT_8:0}const Section: WideString; 
                                                                     {VT_8:0}const Key: WideString): WideString; safecall;
    procedure Set_ProfileString {Flags(1), (3/3) CC:0, INV:4, DBG:6}({VT_8:0}const Section: WideString; 
                                                                     {VT_8:0}const Key: WideString; 
                                                                     {VT_8:0}const prop: WideString); safecall;
    function  Get_PrivateProfileString {Flags(1), (4/3) CC:0, INV:2, DBG:6}({VT_8:0}const FileName: WideString; 
                                                                            {VT_8:0}const Section: WideString; 
                                                                            {VT_8:0}const Key: WideString): WideString; safecall;
    procedure Set_PrivateProfileString {Flags(1), (4/4) CC:0, INV:4, DBG:6}({VT_8:0}const FileName: WideString; 
                                                                            {VT_8:0}const Section: WideString; 
                                                                            {VT_8:0}const Key: WideString; 
                                                                            {VT_8:0}const prop: WideString); safecall;
    function  Get_MathCoprocessorInstalled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_ComputerType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_MacintoshName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_QuickDrawInstalled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Cursor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCursorType; safecall;
    procedure Set_Cursor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCursorType); safecall;
    procedure MSInfo {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Connect {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_8:0}const Path: WideString; 
                                                           {VT_12:1}var Drive: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OperatingSystem: WideString read Get_OperatingSystem;
    property ProcessorType: WideString read Get_ProcessorType;
    property Version: WideString read Get_Version;
    property FreeDiskSpace: Integer read Get_FreeDiskSpace;
    property Country: WdCountry read Get_Country;
    property LanguageDesignation: WideString read Get_LanguageDesignation;
    property HorizontalResolution: Integer read Get_HorizontalResolution;
    property VerticalResolution: Integer read Get_VerticalResolution;
    property ProfileString {Flags(2), (3/2) CC:0, INV:2, DBG:5}[{VT_8:0}const Section: WideString; 
                                                                {VT_8:0}const Key: WideString]: WideString read Get_ProfileString write Set_ProfileString;
    property PrivateProfileString {Flags(2), (4/3) CC:0, INV:2, DBG:5}[{VT_8:0}const FileName: WideString; 
                                                                       {VT_8:0}const Section: WideString; 
                                                                       {VT_8:0}const Key: WideString]: WideString read Get_PrivateProfileString write Set_PrivateProfileString;
    property MathCoprocessorInstalled: WordBool read Get_MathCoprocessorInstalled;
    property ComputerType: WideString read Get_ComputerType;
    property MacintoshName: WideString read Get_MacintoshName;
    property QuickDrawInstalled: WordBool read Get_QuickDrawInstalled;
    property Cursor: WdCursorType read Get_Cursor write Set_Cursor;
  end;

// *********************************************************************//
// DispIntf:  SystemDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020935-0000-0000-C000-000000000046}
// *********************************************************************//
  SystemDisp = dispinterface
    ['{00020935-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property OperatingSystem {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property ProcessorType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    property Version {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    property FreeDiskSpace {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 4;
    property Country {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCountry readonly dispid 5;
    property LanguageDesignation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 6;
    property HorizontalResolution {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 7;
    property VerticalResolution {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8;
    property ProfileString {Flags(2), (3/2) CC:0, INV:2, DBG:6}[{VT_8:0}const Section: WideString; 
                                                                {VT_8:0}const Key: WideString]: WideString dispid 9;
    property PrivateProfileString {Flags(2), (4/3) CC:0, INV:2, DBG:6}[{VT_8:0}const FileName: WideString; 
                                                                       {VT_8:0}const Section: WideString; 
                                                                       {VT_8:0}const Key: WideString]: WideString dispid 10;
    property MathCoprocessorInstalled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 11;
    property ComputerType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 12;
    property MacintoshName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 14;
    property QuickDrawInstalled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 15;
    property Cursor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCursorType dispid 16;
    procedure MSInfo {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Connect {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_8:0}const Path: WideString; 
                                                           {VT_12:1}var Drive: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant); dispid 102;
  end;

// *********************************************************************//
// Interface: OLEFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020933-0000-0000-C000-000000000046}
// *********************************************************************//
  OLEFormat = interface(IDispatch)
    ['{00020933-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ClassType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ClassType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_DisplayAsIcon {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayAsIcon {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IconName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_IconName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_IconPath {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_IconIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_IconIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_IconLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_IconLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Label_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Object_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ProgID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Edit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Open {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DoVerb {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var VerbIndex: OleVariant); safecall;
    procedure ConvertTo {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var ClassType: OleVariant; 
                                                             {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                             {VT_12:1}var IconFileName: OleVariant; 
                                                             {VT_12:1}var IconIndex: OleVariant; 
                                                             {VT_12:1}var IconLabel: OleVariant); safecall;
    procedure ActivateAs {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const ClassType: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ClassType: WideString read Get_ClassType write Set_ClassType;
    property DisplayAsIcon: WordBool read Get_DisplayAsIcon write Set_DisplayAsIcon;
    property IconName: WideString read Get_IconName write Set_IconName;
    property IconPath: WideString read Get_IconPath;
    property IconIndex: Integer read Get_IconIndex write Set_IconIndex;
    property IconLabel: WideString read Get_IconLabel write Set_IconLabel;
    property Label_: WideString read Get_Label_;
    property Object_: IDispatch read Get_Object_;
    property ProgID: WideString read Get_ProgID;
  end;

// *********************************************************************//
// DispIntf:  OLEFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020933-0000-0000-C000-000000000046}
// *********************************************************************//
  OLEFormatDisp = dispinterface
    ['{00020933-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ClassType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property DisplayAsIcon {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property IconName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property IconPath {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 8;
    property IconIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 9;
    property IconLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 10;
    property Label_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 12;
    property Object_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 14;
    property ProgID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 22;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 104;
    procedure Edit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
    procedure Open {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 107;
    procedure DoVerb {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var VerbIndex: OleVariant); dispid 109;
    procedure ConvertTo {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var ClassType: OleVariant; 
                                                             {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                             {VT_12:1}var IconFileName: OleVariant; 
                                                             {VT_12:1}var IconIndex: OleVariant; 
                                                             {VT_12:1}var IconLabel: OleVariant); dispid 110;
    procedure ActivateAs {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const ClassType: WideString); dispid 111;
  end;

// *********************************************************************//
// Interface: LinkFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020931-0000-0000-C000-000000000046}
// *********************************************************************//
  LinkFormat = interface(IDispatch)
    ['{00020931-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_AutoUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SourceName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_SourcePath {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLinkType; safecall;
    function  Get_SourceFullName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SourceFullName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SavePictureWithDocument {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SavePictureWithDocument {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure BreakLink {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Update {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AutoUpdate: WordBool read Get_AutoUpdate write Set_AutoUpdate;
    property SourceName: WideString read Get_SourceName;
    property SourcePath: WideString read Get_SourcePath;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Type_: WdLinkType read Get_Type_;
    property SourceFullName: WideString read Get_SourceFullName write Set_SourceFullName;
    property SavePictureWithDocument: WordBool read Get_SavePictureWithDocument write Set_SavePictureWithDocument;
  end;

// *********************************************************************//
// DispIntf:  LinkFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020931-0000-0000-C000-000000000046}
// *********************************************************************//
  LinkFormatDisp = dispinterface
    ['{00020931-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property AutoUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property SourceName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 4;
    property SourcePath {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 5;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 13;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLinkType readonly dispid 16;
    property SourceFullName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 21;
    property SavePictureWithDocument {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 22;
    procedure BreakLink {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 104;
    procedure Update {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 105;
  end;

// *********************************************************************//
// Interface: _OLEControl
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {000209A4-0000-0000-C000-000000000046}
// *********************************************************************//
  _OLEControl = interface(IDispatch)
    ['{000209A4-0000-0000-C000-000000000046}']
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Automation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_AltHTML {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AltHTML {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Left: Single read Get_Left write Set_Left;
    property Top: Single read Get_Top write Set_Top;
    property Height: Single read Get_Height write Set_Height;
    property Width: Single read Get_Width write Set_Width;
    property Name: WideString read Get_Name write Set_Name;
    property Automation: IDispatch read Get_Automation;
    property AltHTML: WideString read Get_AltHTML write Set_AltHTML;
  end;

// *********************************************************************//
// DispIntf:  _OLEControlDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {000209A4-0000-0000-C000-000000000046}
// *********************************************************************//
  _OLEControlDisp = dispinterface
    ['{000209A4-0000-0000-C000-000000000046}']
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid -2147417853;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid -2147417852;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid -2147417851;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid -2147417850;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147418112;
    property Automation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid -2147417849;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417568;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417560;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417559;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417520;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417519;
    property AltHTML {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid -2147415101;
  end;

// *********************************************************************//
// Interface: Fields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020930-0000-0000-C000-000000000046}
// *********************************************************************//
  Fields = interface(IDispatch)
    ['{00020930-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Field; safecall;
    procedure ToggleShowCodes {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Update {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Integer; safecall;
    procedure Unlink {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure UpdateSource {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Add {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Type_: OleVariant; 
                                                       {VT_12:1}var Text: OleVariant; 
                                                       {VT_12:1}var PreserveFormatting: OleVariant): Field; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Locked: Integer read Get_Locked write Set_Locked;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  FieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020930-0000-0000-C000-000000000046}
// *********************************************************************//
  FieldsDisp = dispinterface
    ['{00020930-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 2;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Field; dispid 0;
    procedure ToggleShowCodes {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    function  Update {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Integer; dispid 101;
    procedure Unlink {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure UpdateSource {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 104;
    function  Add {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var Type_: OleVariant; 
                                                       {VT_12:1}var Text: OleVariant; 
                                                       {VT_12:1}var PreserveFormatting: OleVariant): Field; dispid 105;
  end;

// *********************************************************************//
// Interface: Field
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092F-0000-0000-C000-000000000046}
// *********************************************************************//
  Field = interface(IDispatch)
    ['{0002092F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Code {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Set_Code {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Range); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFieldType; safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFieldKind; safecall;
    function  Get_Result {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Set_Result {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Range); safecall;
    function  Get_Data {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Data {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Field; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Field; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ShowCodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowCodes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_LinkFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LinkFormat; safecall;
    function  Get_OLEFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OLEFormat; safecall;
    function  Get_InlineShape {Flags(1), (1/0) CC:0, INV:2, DBG:6}: InlineShape; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Update {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordBool; safecall;
    procedure Unlink {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure UpdateSource {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DoClick {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Code: Range read Get_Code write Set_Code;
    property Type_: WdFieldType read Get_Type_;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Kind: WdFieldKind read Get_Kind;
    property Result: Range read Get_Result write Set_Result;
    property Data: WideString read Get_Data write Set_Data;
    property Next: Field read Get_Next;
    property Previous: Field read Get_Previous;
    property Index: Integer read Get_Index;
    property ShowCodes: WordBool read Get_ShowCodes write Set_ShowCodes;
    property LinkFormat: LinkFormat read Get_LinkFormat;
    property OLEFormat: OLEFormat read Get_OLEFormat;
    property InlineShape: InlineShape read Get_InlineShape;
  end;

// *********************************************************************//
// DispIntf:  FieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092F-0000-0000-C000-000000000046}
// *********************************************************************//
  FieldDisp = dispinterface
    ['{0002092F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Code {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range dispid 0;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFieldType readonly dispid 1;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property Kind {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFieldKind readonly dispid 3;
    property Result {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range dispid 4;
    property Data {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 5;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Field readonly dispid 6;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Field readonly dispid 7;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8;
    property ShowCodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property LinkFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LinkFormat readonly dispid 10;
    property OLEFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OLEFormat readonly dispid 11;
    property InlineShape {Flags(2), (1/0) CC:0, INV:2, DBG:6}: InlineShape readonly dispid 12;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    function  Update {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordBool; dispid 101;
    procedure Unlink {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure UpdateSource {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    procedure DoClick {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 104;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 105;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 107;
  end;

// *********************************************************************//
// Interface: Browser
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092E-0000-0000-C000-000000000046}
// *********************************************************************//
  Browser = interface(IDispatch)
    ['{0002092E-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Target {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBrowseTarget; safecall;
    procedure Set_Target {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBrowseTarget); safecall;
    procedure Next {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Previous {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Target: WdBrowseTarget read Get_Target write Set_Target;
  end;

// *********************************************************************//
// DispIntf:  BrowserDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092E-0000-0000-C000-000000000046}
// *********************************************************************//
  BrowserDisp = dispinterface
    ['{0002092E-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Target {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBrowseTarget dispid 1;
    procedure Next {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Previous {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: Styles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092D-0000-0000-C000-000000000046}
// *********************************************************************//
  Styles = interface(IDispatch)
    ['{0002092D-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Style; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Type_: OleVariant): Style; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  StylesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092D-0000-0000-C000-000000000046}
// *********************************************************************//
  StylesDisp = dispinterface
    ['{0002092D-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Style; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Type_: OleVariant): Style; dispid 100;
  end;

// *********************************************************************//
// Interface: Style
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092C-0000-0000-C000-000000000046}
// *********************************************************************//
  Style = interface(IDispatch)
    ['{0002092C-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_NameLocal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NameLocal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_BaseStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_BaseStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Description {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdStyleType; safecall;
    function  Get_BuiltIn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_NextParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_NextParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_InUse {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_ParagraphFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_Font {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    procedure Set_Font {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordFont); safecall;
    function  Get_Frame {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frame; safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_AutomaticallyUpdate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutomaticallyUpdate {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ListTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListTemplate; safecall;
    function  Get_ListLevelNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_LanguageIDFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure LinkToListTemplate {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                      {VT_12:1}var ListLevelNumber: OleVariant); safecall;
    function  Get_NoProofing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoProofing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NameLocal: WideString read Get_NameLocal write Set_NameLocal;
    property Description: WideString read Get_Description;
    property Type_: WdStyleType read Get_Type_;
    property BuiltIn: WordBool read Get_BuiltIn;
    property InUse: WordBool read Get_InUse;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Font: WordFont read Get_Font write Set_Font;
    property Frame: Frame read Get_Frame;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property AutomaticallyUpdate: WordBool read Get_AutomaticallyUpdate write Set_AutomaticallyUpdate;
    property ListTemplate: ListTemplate read Get_ListTemplate;
    property ListLevelNumber: Integer read Get_ListLevelNumber;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property Hidden: WordBool read Get_Hidden write Set_Hidden;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
  end;

// *********************************************************************//
// DispIntf:  StyleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092C-0000-0000-C000-000000000046}
// *********************************************************************//
  StyleDisp = dispinterface
    ['{0002092C-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property NameLocal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    function  BaseStyle {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 1;
    property Description {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdStyleType readonly dispid 3;
    property BuiltIn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 4;
    function  NextParagraphStyle {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 5;
    property InUse {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 6;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 7;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 8;
    property ParagraphFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 9;
    property Font {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont dispid 10;
    property Frame {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frame readonly dispid 11;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 12;
    property AutomaticallyUpdate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 13;
    property ListTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListTemplate readonly dispid 14;
    property ListLevelNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 15;
    property LanguageIDFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 16;
    property Hidden {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 17;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure LinkToListTemplate {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                      {VT_12:1}var ListLevelNumber: OleVariant); dispid 101;
    property NoProofing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 18;
  end;

// *********************************************************************//
// Interface: Frames
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092B-0000-0000-C000-000000000046}
// *********************************************************************//
  Frames = interface(IDispatch)
    ['{0002092B-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Frame; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): Frame; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  FramesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092B-0000-0000-C000-000000000046}
// *********************************************************************//
  FramesDisp = dispinterface
    ['{0002092B-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Frame; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): Frame; dispid 100;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: Frame
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092A-0000-0000-C000-000000000046}
// *********************************************************************//
  Frame = interface(IDispatch)
    ['{0002092A-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_HeightRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFrameSizeRule; safecall;
    procedure Set_HeightRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFrameSizeRule); safecall;
    function  Get_WidthRule {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFrameSizeRule; safecall;
    procedure Set_WidthRule {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFrameSizeRule); safecall;
    function  Get_HorizontalDistanceFromText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_HorizontalDistanceFromText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HorizontalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_HorizontalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LockAnchor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LockAnchor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RelativeHorizontalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeHorizontalPosition); safecall;
    function  Get_RelativeVerticalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeVerticalPosition); safecall;
    function  Get_VerticalDistanceFromText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_VerticalDistanceFromText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_VerticalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_VerticalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_TextWrap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TextWrap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property HeightRule: WdFrameSizeRule read Get_HeightRule write Set_HeightRule;
    property WidthRule: WdFrameSizeRule read Get_WidthRule write Set_WidthRule;
    property HorizontalDistanceFromText: Single read Get_HorizontalDistanceFromText write Set_HorizontalDistanceFromText;
    property Height: Single read Get_Height write Set_Height;
    property HorizontalPosition: Single read Get_HorizontalPosition write Set_HorizontalPosition;
    property LockAnchor: WordBool read Get_LockAnchor write Set_LockAnchor;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property VerticalDistanceFromText: Single read Get_VerticalDistanceFromText write Set_VerticalDistanceFromText;
    property VerticalPosition: Single read Get_VerticalPosition write Set_VerticalPosition;
    property Width: Single read Get_Width write Set_Width;
    property TextWrap: WordBool read Get_TextWrap write Set_TextWrap;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Range: Range read Get_Range;
  end;

// *********************************************************************//
// DispIntf:  FrameDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092A-0000-0000-C000-000000000046}
// *********************************************************************//
  FrameDisp = dispinterface
    ['{0002092A-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property HeightRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFrameSizeRule dispid 1;
    property WidthRule {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFrameSizeRule dispid 2;
    property HorizontalDistanceFromText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 3;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 4;
    property HorizontalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 5;
    property LockAnchor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property RelativeHorizontalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition dispid 7;
    property RelativeVerticalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition dispid 8;
    property VerticalDistanceFromText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 9;
    property VerticalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 10;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 11;
    property TextWrap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 13;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 15;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: FormFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020929-0000-0000-C000-000000000046}
// *********************************************************************//
  FormFields = interface(IDispatch)
    ['{00020929-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Shaded {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Shaded {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): FormField; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_29:0}Type_: WdFieldType): FormField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Shaded: WordBool read Get_Shaded write Set_Shaded;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  FormFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020929-0000-0000-C000-000000000046}
// *********************************************************************//
  FormFieldsDisp = dispinterface
    ['{00020929-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Shaded {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): FormField; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_29:0}Type_: WdFieldType): FormField; dispid 101;
  end;

// *********************************************************************//
// Interface: FormField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020928-0000-0000-C000-000000000046}
// *********************************************************************//
  FormField = interface(IDispatch)
    ['{00020928-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFieldType; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_EntryMacro {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EntryMacro {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ExitMacro {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ExitMacro {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_OwnHelp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OwnHelp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_OwnStatus {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OwnStatus {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HelpText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_HelpText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_StatusText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_StatusText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Enabled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Enabled {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Result {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Result {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_TextInput {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextInput; safecall;
    function  Get_CheckBox {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CheckBox; safecall;
    function  Get_DropDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: DropDown; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormField; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormField; safecall;
    function  Get_CalculateOnExit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CalculateOnExit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Type_: WdFieldType read Get_Type_;
    property Name: WideString read Get_Name write Set_Name;
    property EntryMacro: WideString read Get_EntryMacro write Set_EntryMacro;
    property ExitMacro: WideString read Get_ExitMacro write Set_ExitMacro;
    property OwnHelp: WordBool read Get_OwnHelp write Set_OwnHelp;
    property OwnStatus: WordBool read Get_OwnStatus write Set_OwnStatus;
    property HelpText: WideString read Get_HelpText write Set_HelpText;
    property StatusText: WideString read Get_StatusText write Set_StatusText;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Result: WideString read Get_Result write Set_Result;
    property TextInput: TextInput read Get_TextInput;
    property CheckBox: CheckBox read Get_CheckBox;
    property DropDown: DropDown read Get_DropDown;
    property Next: FormField read Get_Next;
    property Previous: FormField read Get_Previous;
    property CalculateOnExit: WordBool read Get_CalculateOnExit write Set_CalculateOnExit;
    property Range: Range read Get_Range;
  end;

// *********************************************************************//
// DispIntf:  FormFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020928-0000-0000-C000-000000000046}
// *********************************************************************//
  FormFieldDisp = dispinterface
    ['{00020928-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFieldType readonly dispid 0;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property EntryMacro {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 3;
    property ExitMacro {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 4;
    property OwnHelp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property OwnStatus {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property HelpText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property StatusText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 8;
    property Enabled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property Result {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 10;
    property TextInput {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextInput readonly dispid 11;
    property CheckBox {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CheckBox readonly dispid 12;
    property DropDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: DropDown readonly dispid 13;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormField readonly dispid 14;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormField readonly dispid 15;
    property CalculateOnExit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 17;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
  end;

// *********************************************************************//
// Interface: TextInput
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020927-0000-0000-C000-000000000046}
// *********************************************************************//
  TextInput = interface(IDispatch)
    ['{00020927-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Valid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Default {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Default {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTextFormFieldType; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    procedure Clear {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure EditType {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_29:0}Type_: WdTextFormFieldType; 
                                                            {VT_12:1}var Default: OleVariant; 
                                                            {VT_12:1}var Format: OleVariant; 
                                                            {VT_12:1}var Enabled: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Valid: WordBool read Get_Valid;
    property Default: WideString read Get_Default write Set_Default;
    property Type_: WdTextFormFieldType read Get_Type_;
    property Format: WideString read Get_Format;
    property Width: Integer read Get_Width write Set_Width;
  end;

// *********************************************************************//
// DispIntf:  TextInputDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020927-0000-0000-C000-000000000046}
// *********************************************************************//
  TextInputDisp = dispinterface
    ['{00020927-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Valid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 0;
    property Default {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTextFormFieldType readonly dispid 2;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    procedure Clear {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure EditType {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_29:0}Type_: WdTextFormFieldType; 
                                                            {VT_12:1}var Default: OleVariant; 
                                                            {VT_12:1}var Format: OleVariant; 
                                                            {VT_12:1}var Enabled: OleVariant); dispid 102;
  end;

// *********************************************************************//
// Interface: CheckBox
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020926-0000-0000-C000-000000000046}
// *********************************************************************//
  CheckBox = interface(IDispatch)
    ['{00020926-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Valid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_AutoSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Default {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Default {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Valid: WordBool read Get_Valid;
    property AutoSize: WordBool read Get_AutoSize write Set_AutoSize;
    property Size: Single read Get_Size write Set_Size;
    property Default: WordBool read Get_Default write Set_Default;
    property Value: WordBool read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  CheckBoxDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020926-0000-0000-C000-000000000046}
// *********************************************************************//
  CheckBoxDisp = dispinterface
    ['{00020926-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Valid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 0;
    property AutoSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property Size {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 2;
    property Default {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
  end;

// *********************************************************************//
// Interface: DropDown
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020925-0000-0000-C000-000000000046}
// *********************************************************************//
  DropDown = interface(IDispatch)
    ['{00020925-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Valid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Default {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Default {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Value {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ListEntries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListEntries; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Valid: WordBool read Get_Valid;
    property Default: Integer read Get_Default write Set_Default;
    property Value: Integer read Get_Value write Set_Value;
    property ListEntries: ListEntries read Get_ListEntries;
  end;

// *********************************************************************//
// DispIntf:  DropDownDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020925-0000-0000-C000-000000000046}
// *********************************************************************//
  DropDownDisp = dispinterface
    ['{00020925-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Valid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 0;
    property Default {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 1;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 2;
    property ListEntries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListEntries readonly dispid 3;
  end;

// *********************************************************************//
// Interface: ListEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020924-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntries = interface(IDispatch)
    ['{00020924-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): ListEntry; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Index: OleVariant): ListEntry; safecall;
    procedure Clear {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ListEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020924-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntriesDisp = dispinterface
    ['{00020924-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): ListEntry; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var Index: OleVariant): ListEntry; dispid 101;
    procedure Clear {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: ListEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020923-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntry = interface(IDispatch)
    ['{00020923-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  ListEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020923-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntryDisp = dispinterface
    ['{00020923-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
  end;

// *********************************************************************//
// Interface: TablesOfFigures
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020922-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfFigures = interface(IDispatch)
    ['{00020922-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTofFormat; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTofFormat); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): TableOfFigures; safecall;
    function  AddOld {Flags(1), (12/11) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                            {VT_12:1}var Caption: OleVariant; 
                                                            {VT_12:1}var IncludeLabel: OleVariant; 
                                                            {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                            {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                            {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                            {VT_12:1}var UseFields: OleVariant; 
                                                            {VT_12:1}var TableID: OleVariant; 
                                                            {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                            {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                            {VT_12:1}var AddedStyles: OleVariant): TableOfFigures; safecall;
    function  MarkEntry {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                             {VT_12:1}var Entry: OleVariant; 
                                                             {VT_12:1}var EntryAutoText: OleVariant; 
                                                             {VT_12:1}var TableID: OleVariant; 
                                                             {VT_12:1}var Level: OleVariant): Field; safecall;
    function  Add {Flags(1), (14/13) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                         {VT_12:1}var Caption: OleVariant; 
                                                         {VT_12:1}var IncludeLabel: OleVariant; 
                                                         {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                         {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                         {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                         {VT_12:1}var UseFields: OleVariant; 
                                                         {VT_12:1}var TableID: OleVariant; 
                                                         {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                         {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                         {VT_12:1}var AddedStyles: OleVariant; 
                                                         {VT_12:1}var UseHyperlinks: OleVariant; 
                                                         {VT_12:1}var HidePageNumbersInWeb: OleVariant): TableOfFigures; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdTofFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  TablesOfFiguresDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020922-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfFiguresDisp = dispinterface
    ['{00020922-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTofFormat dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): TableOfFigures; dispid 0;
    function  AddOld {Flags(2), (12/11) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                            {VT_12:1}var Caption: OleVariant; 
                                                            {VT_12:1}var IncludeLabel: OleVariant; 
                                                            {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                            {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                            {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                            {VT_12:1}var UseFields: OleVariant; 
                                                            {VT_12:1}var TableID: OleVariant; 
                                                            {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                            {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                            {VT_12:1}var AddedStyles: OleVariant): TableOfFigures; dispid 100;
    function  MarkEntry {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                             {VT_12:1}var Entry: OleVariant; 
                                                             {VT_12:1}var EntryAutoText: OleVariant; 
                                                             {VT_12:1}var TableID: OleVariant; 
                                                             {VT_12:1}var Level: OleVariant): Field; dispid 101;
    function  Add {Flags(2), (14/13) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                         {VT_12:1}var Caption: OleVariant; 
                                                         {VT_12:1}var IncludeLabel: OleVariant; 
                                                         {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                         {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                         {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                         {VT_12:1}var UseFields: OleVariant; 
                                                         {VT_12:1}var TableID: OleVariant; 
                                                         {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                         {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                         {VT_12:1}var AddedStyles: OleVariant; 
                                                         {VT_12:1}var UseHyperlinks: OleVariant; 
                                                         {VT_12:1}var HidePageNumbersInWeb: OleVariant): TableOfFigures; dispid 444;
  end;

// *********************************************************************//
// Interface: TableOfFigures
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020921-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfFigures = interface(IDispatch)
    ['{00020921-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_IncludeLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RightAlignPageNumbers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RightAlignPageNumbers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseHeadingStyles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseHeadingStyles {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_LowerHeadingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LowerHeadingLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_UpperHeadingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_UpperHeadingLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_IncludePageNumbers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludePageNumbers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_UseFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseFields {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_TableID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_TableID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_HeadingStyles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HeadingStyles; safecall;
    function  Get_TabLeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader; safecall;
    procedure Set_TabLeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTabLeader); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure UpdatePageNumbers {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Update {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_UseHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HidePageNumbersInWeb {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HidePageNumbersInWeb {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Caption: WideString read Get_Caption write Set_Caption;
    property IncludeLabel: WordBool read Get_IncludeLabel write Set_IncludeLabel;
    property RightAlignPageNumbers: WordBool read Get_RightAlignPageNumbers write Set_RightAlignPageNumbers;
    property UseHeadingStyles: WordBool read Get_UseHeadingStyles write Set_UseHeadingStyles;
    property LowerHeadingLevel: Integer read Get_LowerHeadingLevel write Set_LowerHeadingLevel;
    property UpperHeadingLevel: Integer read Get_UpperHeadingLevel write Set_UpperHeadingLevel;
    property IncludePageNumbers: WordBool read Get_IncludePageNumbers write Set_IncludePageNumbers;
    property Range: Range read Get_Range;
    property UseFields: WordBool read Get_UseFields write Set_UseFields;
    property TableID: WideString read Get_TableID write Set_TableID;
    property HeadingStyles: HeadingStyles read Get_HeadingStyles;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
    property UseHyperlinks: WordBool read Get_UseHyperlinks write Set_UseHyperlinks;
    property HidePageNumbersInWeb: WordBool read Get_HidePageNumbersInWeb write Set_HidePageNumbersInWeb;
  end;

// *********************************************************************//
// DispIntf:  TableOfFiguresDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020921-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfFiguresDisp = dispinterface
    ['{00020921-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1;
    property IncludeLabel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property RightAlignPageNumbers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property UseHeadingStyles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property LowerHeadingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 5;
    property UpperHeadingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 6;
    property IncludePageNumbers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 8;
    property UseFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property TableID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 10;
    property HeadingStyles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HeadingStyles readonly dispid 11;
    property TabLeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader dispid 12;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure UpdatePageNumbers {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Update {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    property UseHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 13;
    property HidePageNumbersInWeb {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
  end;

// *********************************************************************//
// Interface: MailMerge
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020920-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMerge = interface(IDispatch)
    ['{00020920-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_MainDocumentType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeMainDocType; safecall;
    procedure Set_MainDocumentType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdMailMergeMainDocType); safecall;
    function  Get_State {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeState; safecall;
    function  Get_Destination {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeDestination; safecall;
    procedure Set_Destination {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdMailMergeDestination); safecall;
    function  Get_DataSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMergeDataSource; safecall;
    function  Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMergeFields; safecall;
    function  Get_ViewMailMergeFieldCodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ViewMailMergeFieldCodes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SuppressBlankLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SuppressBlankLines {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MailAsAttachment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MailAsAttachment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MailAddressFieldName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MailAddressFieldName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_MailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    procedure CreateDataSource {Flags(1), (9/9) CC:0, INV:1, DBG:6}({VT_12:1}var Name: OleVariant; 
                                                                    {VT_12:1}var PasswordDocument: OleVariant; 
                                                                    {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                    {VT_12:1}var HeaderRecord: OleVariant; 
                                                                    {VT_12:1}var MSQuery: OleVariant; 
                                                                    {VT_12:1}var SQLStatement: OleVariant; 
                                                                    {VT_12:1}var SQLStatement1: OleVariant; 
                                                                    {VT_12:1}var Connection: OleVariant; 
                                                                    {VT_12:1}var LinkToSource: OleVariant); safecall;
    procedure CreateHeaderSource {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                                      {VT_12:1}var PasswordDocument: OleVariant; 
                                                                      {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                      {VT_12:1}var HeaderRecord: OleVariant); safecall;
    procedure OpenDataSource {Flags(1), (14/14) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                                    {VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var ConfirmConversions: OleVariant; 
                                                                    {VT_12:1}var ReadOnly: OleVariant; 
                                                                    {VT_12:1}var LinkToSource: OleVariant; 
                                                                    {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                    {VT_12:1}var PasswordDocument: OleVariant; 
                                                                    {VT_12:1}var PasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var Revert: OleVariant; 
                                                                    {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                    {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var Connection: OleVariant; 
                                                                    {VT_12:1}var SQLStatement: OleVariant; 
                                                                    {VT_12:1}var SQLStatement1: OleVariant); safecall;
    procedure OpenHeaderSource {Flags(1), (10/10) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                                      {VT_12:1}var Format: OleVariant; 
                                                                      {VT_12:1}var ConfirmConversions: OleVariant; 
                                                                      {VT_12:1}var ReadOnly: OleVariant; 
                                                                      {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                      {VT_12:1}var PasswordDocument: OleVariant; 
                                                                      {VT_12:1}var PasswordTemplate: OleVariant; 
                                                                      {VT_12:1}var Revert: OleVariant; 
                                                                      {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                      {VT_12:1}var WritePasswordTemplate: OleVariant); safecall;
    procedure Execute {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Pause: OleVariant); safecall;
    procedure Check {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure EditDataSource {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure EditHeaderSource {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure EditMainDocument {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure UseAddressBook {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Type_: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property MainDocumentType: WdMailMergeMainDocType read Get_MainDocumentType write Set_MainDocumentType;
    property State: WdMailMergeState read Get_State;
    property Destination: WdMailMergeDestination read Get_Destination write Set_Destination;
    property DataSource: MailMergeDataSource read Get_DataSource;
    property Fields: MailMergeFields read Get_Fields;
    property ViewMailMergeFieldCodes: Integer read Get_ViewMailMergeFieldCodes write Set_ViewMailMergeFieldCodes;
    property SuppressBlankLines: WordBool read Get_SuppressBlankLines write Set_SuppressBlankLines;
    property MailAsAttachment: WordBool read Get_MailAsAttachment write Set_MailAsAttachment;
    property MailAddressFieldName: WideString read Get_MailAddressFieldName write Set_MailAddressFieldName;
    property MailSubject: WideString read Get_MailSubject write Set_MailSubject;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020920-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDisp = dispinterface
    ['{00020920-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property MainDocumentType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeMainDocType dispid 1;
    property State {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeState readonly dispid 2;
    property Destination {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeDestination dispid 3;
    property DataSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMergeDataSource readonly dispid 4;
    property Fields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMergeFields readonly dispid 5;
    property ViewMailMergeFieldCodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 6;
    property SuppressBlankLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property MailAsAttachment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 8;
    property MailAddressFieldName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 9;
    property MailSubject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 10;
    procedure CreateDataSource {Flags(2), (9/9) CC:0, INV:1, DBG:4}({VT_12:1}var Name: OleVariant; 
                                                                    {VT_12:1}var PasswordDocument: OleVariant; 
                                                                    {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                    {VT_12:1}var HeaderRecord: OleVariant; 
                                                                    {VT_12:1}var MSQuery: OleVariant; 
                                                                    {VT_12:1}var SQLStatement: OleVariant; 
                                                                    {VT_12:1}var SQLStatement1: OleVariant; 
                                                                    {VT_12:1}var Connection: OleVariant; 
                                                                    {VT_12:1}var LinkToSource: OleVariant); dispid 101;
    procedure CreateHeaderSource {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                                      {VT_12:1}var PasswordDocument: OleVariant; 
                                                                      {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                      {VT_12:1}var HeaderRecord: OleVariant); dispid 102;
    procedure OpenDataSource {Flags(2), (14/14) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                                    {VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var ConfirmConversions: OleVariant; 
                                                                    {VT_12:1}var ReadOnly: OleVariant; 
                                                                    {VT_12:1}var LinkToSource: OleVariant; 
                                                                    {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                    {VT_12:1}var PasswordDocument: OleVariant; 
                                                                    {VT_12:1}var PasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var Revert: OleVariant; 
                                                                    {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                    {VT_12:1}var WritePasswordTemplate: OleVariant; 
                                                                    {VT_12:1}var Connection: OleVariant; 
                                                                    {VT_12:1}var SQLStatement: OleVariant; 
                                                                    {VT_12:1}var SQLStatement1: OleVariant); dispid 103;
    procedure OpenHeaderSource {Flags(2), (10/10) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                                      {VT_12:1}var Format: OleVariant; 
                                                                      {VT_12:1}var ConfirmConversions: OleVariant; 
                                                                      {VT_12:1}var ReadOnly: OleVariant; 
                                                                      {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                      {VT_12:1}var PasswordDocument: OleVariant; 
                                                                      {VT_12:1}var PasswordTemplate: OleVariant; 
                                                                      {VT_12:1}var Revert: OleVariant; 
                                                                      {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                                      {VT_12:1}var WritePasswordTemplate: OleVariant); dispid 104;
    procedure Execute {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Pause: OleVariant); dispid 105;
    procedure Check {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
    procedure EditDataSource {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 107;
    procedure EditHeaderSource {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 108;
    procedure EditMainDocument {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 109;
    procedure UseAddressBook {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Type_: WideString); dispid 111;
  end;

// *********************************************************************//
// Interface: MailMergeFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091F-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFields = interface(IDispatch)
    ['{0002091F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): MailMergeField; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_8:0}const Name: WideString): MailMergeField; safecall;
    function  AddAsk {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var Prompt: OleVariant; 
                                                          {VT_12:1}var DefaultAskText: OleVariant; 
                                                          {VT_12:1}var AskOnce: OleVariant): MailMergeField; safecall;
    function  AddFillIn {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                             {VT_12:1}var Prompt: OleVariant; 
                                                             {VT_12:1}var DefaultFillInText: OleVariant; 
                                                             {VT_12:1}var AskOnce: OleVariant): MailMergeField; safecall;
    function  AddIf {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                         {VT_8:0}const MergeField: WideString; 
                                                         {VT_29:0}Comparison: WdMailMergeComparison; 
                                                         {VT_12:1}var CompareTo: OleVariant; 
                                                         {VT_12:1}var TrueAutoText: OleVariant; 
                                                         {VT_12:1}var TrueText: OleVariant; 
                                                         {VT_12:1}var FalseAutoText: OleVariant; 
                                                         {VT_12:1}var FalseText: OleVariant): MailMergeField; safecall;
    function  AddMergeRec {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): MailMergeField; safecall;
    function  AddMergeSeq {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): MailMergeField; safecall;
    function  AddNext {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): MailMergeField; safecall;
    function  AddNextIf {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                             {VT_8:0}const MergeField: WideString; 
                                                             {VT_29:0}Comparison: WdMailMergeComparison; 
                                                             {VT_12:1}var CompareTo: OleVariant): MailMergeField; safecall;
    function  AddSet {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var ValueText: OleVariant; 
                                                          {VT_12:1}var ValueAutoText: OleVariant): MailMergeField; safecall;
    function  AddSkipIf {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                             {VT_8:0}const MergeField: WideString; 
                                                             {VT_29:0}Comparison: WdMailMergeComparison; 
                                                             {VT_12:1}var CompareTo: OleVariant): MailMergeField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091F-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldsDisp = dispinterface
    ['{0002091F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): MailMergeField; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_8:0}const Name: WideString): MailMergeField; dispid 101;
    function  AddAsk {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var Prompt: OleVariant; 
                                                          {VT_12:1}var DefaultAskText: OleVariant; 
                                                          {VT_12:1}var AskOnce: OleVariant): MailMergeField; dispid 102;
    function  AddFillIn {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                             {VT_12:1}var Prompt: OleVariant; 
                                                             {VT_12:1}var DefaultFillInText: OleVariant; 
                                                             {VT_12:1}var AskOnce: OleVariant): MailMergeField; dispid 103;
    function  AddIf {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                         {VT_8:0}const MergeField: WideString; 
                                                         {VT_29:0}Comparison: WdMailMergeComparison; 
                                                         {VT_12:1}var CompareTo: OleVariant; 
                                                         {VT_12:1}var TrueAutoText: OleVariant; 
                                                         {VT_12:1}var TrueText: OleVariant; 
                                                         {VT_12:1}var FalseAutoText: OleVariant; 
                                                         {VT_12:1}var FalseText: OleVariant): MailMergeField; dispid 104;
    function  AddMergeRec {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): MailMergeField; dispid 105;
    function  AddMergeSeq {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): MailMergeField; dispid 106;
    function  AddNext {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): MailMergeField; dispid 107;
    function  AddNextIf {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                             {VT_8:0}const MergeField: WideString; 
                                                             {VT_29:0}Comparison: WdMailMergeComparison; 
                                                             {VT_12:1}var CompareTo: OleVariant): MailMergeField; dispid 108;
    function  AddSet {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var ValueText: OleVariant; 
                                                          {VT_12:1}var ValueAutoText: OleVariant): MailMergeField; dispid 109;
    function  AddSkipIf {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                             {VT_8:0}const MergeField: WideString; 
                                                             {VT_29:0}Comparison: WdMailMergeComparison; 
                                                             {VT_12:1}var CompareTo: OleVariant): MailMergeField; dispid 110;
  end;

// *********************************************************************//
// Interface: MailMergeField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091E-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeField = interface(IDispatch)
    ['{0002091E-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFieldType; safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Code {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Set_Code {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Range); safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMergeField; safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMergeField; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Type_: WdFieldType read Get_Type_;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Code: Range read Get_Code write Set_Code;
    property Next: MailMergeField read Get_Next;
    property Previous: MailMergeField read Get_Previous;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091E-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldDisp = dispinterface
    ['{0002091E-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFieldType readonly dispid 0;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property Code {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range dispid 5;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMergeField readonly dispid 8;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMergeField readonly dispid 9;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 105;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 107;
  end;

// *********************************************************************//
// Interface: MailMergeDataSource
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091D-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataSource = interface(IDispatch)
    ['{0002091D-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_HeaderSourceName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeDataSource; safecall;
    function  Get_HeaderSourceType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeDataSource; safecall;
    function  Get_ConnectString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_QueryString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_QueryString {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ActiveRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeActiveRecord; safecall;
    procedure Set_ActiveRecord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdMailMergeActiveRecord); safecall;
    function  Get_FirstRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_FirstRecord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_LastRecord {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LastRecord {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_FieldNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMergeFieldNames; safecall;
    function  Get_DataFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MailMergeDataFields; safecall;
    function  FindRecord {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const FindText: WideString; 
                                                              {VT_8:0}const Field: WideString): WordBool; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property HeaderSourceName: WideString read Get_HeaderSourceName;
    property Type_: WdMailMergeDataSource read Get_Type_;
    property HeaderSourceType: WdMailMergeDataSource read Get_HeaderSourceType;
    property ConnectString: WideString read Get_ConnectString;
    property QueryString: WideString read Get_QueryString write Set_QueryString;
    property ActiveRecord: WdMailMergeActiveRecord read Get_ActiveRecord write Set_ActiveRecord;
    property FirstRecord: Integer read Get_FirstRecord write Set_FirstRecord;
    property LastRecord: Integer read Get_LastRecord write Set_LastRecord;
    property FieldNames: MailMergeFieldNames read Get_FieldNames;
    property DataFields: MailMergeDataFields read Get_DataFields;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDataSourceDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091D-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataSourceDisp = dispinterface
    ['{0002091D-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property HeaderSourceName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeDataSource readonly dispid 3;
    property HeaderSourceType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeDataSource readonly dispid 4;
    property ConnectString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 5;
    property QueryString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 6;
    property ActiveRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMailMergeActiveRecord dispid 7;
    property FirstRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 8;
    property LastRecord {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 9;
    property FieldNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMergeFieldNames readonly dispid 10;
    property DataFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MailMergeDataFields readonly dispid 11;
    function  FindRecord {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const FindText: WideString; 
                                                              {VT_8:0}const Field: WideString): WordBool; dispid 101;
  end;

// *********************************************************************//
// Interface: MailMergeFieldNames
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091C-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldNames = interface(IDispatch)
    ['{0002091C-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): MailMergeFieldName; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldNamesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091C-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldNamesDisp = dispinterface
    ['{0002091C-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): MailMergeFieldName; dispid 0;
  end;

// *********************************************************************//
// Interface: MailMergeFieldName
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091B-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldName = interface(IDispatch)
    ['{0002091B-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldNameDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091B-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldNameDisp = dispinterface
    ['{0002091B-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: MailMergeDataFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091A-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataFields = interface(IDispatch)
    ['{0002091A-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): MailMergeDataField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDataFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091A-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataFieldsDisp = dispinterface
    ['{0002091A-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): MailMergeDataField; dispid 0;
  end;

// *********************************************************************//
// Interface: MailMergeDataField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020919-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataField = interface(IDispatch)
    ['{00020919-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Value: WideString read Get_Value;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDataFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020919-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataFieldDisp = dispinterface
    ['{00020919-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
  end;

// *********************************************************************//
// Interface: Envelope
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020918-0000-0000-C000-000000000046}
// *********************************************************************//
  Envelope = interface(IDispatch)
    ['{00020918-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_DefaultPrintBarCode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DefaultPrintBarCode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultPrintFIMA {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DefaultPrintFIMA {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DefaultHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DefaultWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DefaultWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DefaultSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_DefaultOmitReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DefaultOmitReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FeedSource {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray; safecall;
    procedure Set_FeedSource {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPaperTray); safecall;
    function  Get_AddressFromLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_AddressFromLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_AddressFromTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_AddressFromTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ReturnAddressFromLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ReturnAddressFromLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ReturnAddressFromTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ReturnAddressFromTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_AddressStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Style; safecall;
    function  Get_ReturnAddressStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Style; safecall;
    function  Get_DefaultOrientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdEnvelopeOrientation; safecall;
    procedure Set_DefaultOrientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdEnvelopeOrientation); safecall;
    function  Get_DefaultFaceUp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DefaultFaceUp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure Insert {Flags(1), (18/18) CC:0, INV:1, DBG:6}({VT_12:1}var ExtractAddress: OleVariant; 
                                                            {VT_12:1}var Address: OleVariant; 
                                                            {VT_12:1}var AutoText: OleVariant; 
                                                            {VT_12:1}var OmitReturnAddress: OleVariant; 
                                                            {VT_12:1}var ReturnAddress: OleVariant; 
                                                            {VT_12:1}var ReturnAutoText: OleVariant; 
                                                            {VT_12:1}var PrintBarCode: OleVariant; 
                                                            {VT_12:1}var PrintFIMA: OleVariant; 
                                                            {VT_12:1}var Size: OleVariant; 
                                                            {VT_12:1}var Height: OleVariant; 
                                                            {VT_12:1}var Width: OleVariant; 
                                                            {VT_12:1}var FeedSource: OleVariant; 
                                                            {VT_12:1}var AddressFromLeft: OleVariant; 
                                                            {VT_12:1}var AddressFromTop: OleVariant; 
                                                            {VT_12:1}var ReturnAddressFromLeft: OleVariant; 
                                                            {VT_12:1}var ReturnAddressFromTop: OleVariant; 
                                                            {VT_12:1}var DefaultFaceUp: OleVariant; 
                                                            {VT_12:1}var DefaultOrientation: OleVariant); safecall;
    procedure PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:6}({VT_12:1}var ExtractAddress: OleVariant; 
                                                              {VT_12:1}var Address: OleVariant; 
                                                              {VT_12:1}var AutoText: OleVariant; 
                                                              {VT_12:1}var OmitReturnAddress: OleVariant; 
                                                              {VT_12:1}var ReturnAddress: OleVariant; 
                                                              {VT_12:1}var ReturnAutoText: OleVariant; 
                                                              {VT_12:1}var PrintBarCode: OleVariant; 
                                                              {VT_12:1}var PrintFIMA: OleVariant; 
                                                              {VT_12:1}var Size: OleVariant; 
                                                              {VT_12:1}var Height: OleVariant; 
                                                              {VT_12:1}var Width: OleVariant; 
                                                              {VT_12:1}var FeedSource: OleVariant; 
                                                              {VT_12:1}var AddressFromLeft: OleVariant; 
                                                              {VT_12:1}var AddressFromTop: OleVariant; 
                                                              {VT_12:1}var ReturnAddressFromLeft: OleVariant; 
                                                              {VT_12:1}var ReturnAddressFromTop: OleVariant; 
                                                              {VT_12:1}var DefaultFaceUp: OleVariant; 
                                                              {VT_12:1}var DefaultOrientation: OleVariant); safecall;
    procedure UpdateDocument {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Address: Range read Get_Address;
    property ReturnAddress: Range read Get_ReturnAddress;
    property DefaultPrintBarCode: WordBool read Get_DefaultPrintBarCode write Set_DefaultPrintBarCode;
    property DefaultPrintFIMA: WordBool read Get_DefaultPrintFIMA write Set_DefaultPrintFIMA;
    property DefaultHeight: Single read Get_DefaultHeight write Set_DefaultHeight;
    property DefaultWidth: Single read Get_DefaultWidth write Set_DefaultWidth;
    property DefaultSize: WideString read Get_DefaultSize write Set_DefaultSize;
    property DefaultOmitReturnAddress: WordBool read Get_DefaultOmitReturnAddress write Set_DefaultOmitReturnAddress;
    property FeedSource: WdPaperTray read Get_FeedSource write Set_FeedSource;
    property AddressFromLeft: Single read Get_AddressFromLeft write Set_AddressFromLeft;
    property AddressFromTop: Single read Get_AddressFromTop write Set_AddressFromTop;
    property ReturnAddressFromLeft: Single read Get_ReturnAddressFromLeft write Set_ReturnAddressFromLeft;
    property ReturnAddressFromTop: Single read Get_ReturnAddressFromTop write Set_ReturnAddressFromTop;
    property AddressStyle: Style read Get_AddressStyle;
    property ReturnAddressStyle: Style read Get_ReturnAddressStyle;
    property DefaultOrientation: WdEnvelopeOrientation read Get_DefaultOrientation write Set_DefaultOrientation;
    property DefaultFaceUp: WordBool read Get_DefaultFaceUp write Set_DefaultFaceUp;
  end;

// *********************************************************************//
// DispIntf:  EnvelopeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020918-0000-0000-C000-000000000046}
// *********************************************************************//
  EnvelopeDisp = dispinterface
    ['{00020918-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Address {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1;
    property ReturnAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 2;
    property DefaultPrintBarCode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property DefaultPrintFIMA {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property DefaultHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 6;
    property DefaultWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property DefaultSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    property DefaultOmitReturnAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property FeedSource {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray dispid 12;
    property AddressFromLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 13;
    property AddressFromTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 14;
    property ReturnAddressFromLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 15;
    property ReturnAddressFromTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 16;
    property AddressStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Style readonly dispid 17;
    property ReturnAddressStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Style readonly dispid 18;
    property DefaultOrientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdEnvelopeOrientation dispid 19;
    property DefaultFaceUp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 20;
    procedure Insert {Flags(2), (18/18) CC:0, INV:1, DBG:4}({VT_12:1}var ExtractAddress: OleVariant; 
                                                            {VT_12:1}var Address: OleVariant; 
                                                            {VT_12:1}var AutoText: OleVariant; 
                                                            {VT_12:1}var OmitReturnAddress: OleVariant; 
                                                            {VT_12:1}var ReturnAddress: OleVariant; 
                                                            {VT_12:1}var ReturnAutoText: OleVariant; 
                                                            {VT_12:1}var PrintBarCode: OleVariant; 
                                                            {VT_12:1}var PrintFIMA: OleVariant; 
                                                            {VT_12:1}var Size: OleVariant; 
                                                            {VT_12:1}var Height: OleVariant; 
                                                            {VT_12:1}var Width: OleVariant; 
                                                            {VT_12:1}var FeedSource: OleVariant; 
                                                            {VT_12:1}var AddressFromLeft: OleVariant; 
                                                            {VT_12:1}var AddressFromTop: OleVariant; 
                                                            {VT_12:1}var ReturnAddressFromLeft: OleVariant; 
                                                            {VT_12:1}var ReturnAddressFromTop: OleVariant; 
                                                            {VT_12:1}var DefaultFaceUp: OleVariant; 
                                                            {VT_12:1}var DefaultOrientation: OleVariant); dispid 101;
    procedure PrintOut {Flags(2), (18/18) CC:0, INV:1, DBG:4}({VT_12:1}var ExtractAddress: OleVariant; 
                                                              {VT_12:1}var Address: OleVariant; 
                                                              {VT_12:1}var AutoText: OleVariant; 
                                                              {VT_12:1}var OmitReturnAddress: OleVariant; 
                                                              {VT_12:1}var ReturnAddress: OleVariant; 
                                                              {VT_12:1}var ReturnAutoText: OleVariant; 
                                                              {VT_12:1}var PrintBarCode: OleVariant; 
                                                              {VT_12:1}var PrintFIMA: OleVariant; 
                                                              {VT_12:1}var Size: OleVariant; 
                                                              {VT_12:1}var Height: OleVariant; 
                                                              {VT_12:1}var Width: OleVariant; 
                                                              {VT_12:1}var FeedSource: OleVariant; 
                                                              {VT_12:1}var AddressFromLeft: OleVariant; 
                                                              {VT_12:1}var AddressFromTop: OleVariant; 
                                                              {VT_12:1}var ReturnAddressFromLeft: OleVariant; 
                                                              {VT_12:1}var ReturnAddressFromTop: OleVariant; 
                                                              {VT_12:1}var DefaultFaceUp: OleVariant; 
                                                              {VT_12:1}var DefaultOrientation: OleVariant); dispid 102;
    procedure UpdateDocument {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
  end;

// *********************************************************************//
// Interface: MailingLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020917-0000-0000-C000-000000000046}
// *********************************************************************//
  MailingLabel = interface(IDispatch)
    ['{00020917-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_DefaultPrintBarCode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DefaultPrintBarCode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultLaserTray {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray; safecall;
    procedure Set_DefaultLaserTray {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPaperTray); safecall;
    function  Get_CustomLabels {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CustomLabels; safecall;
    function  Get_DefaultLabelName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultLabelName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  CreateNewDocument {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_12:1}var Name: OleVariant; 
                                                                     {VT_12:1}var Address: OleVariant; 
                                                                     {VT_12:1}var AutoText: OleVariant; 
                                                                     {VT_12:1}var ExtractAddress: OleVariant; 
                                                                     {VT_12:1}var LaserTray: OleVariant): WordDocument; safecall;
    procedure PrintOut {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_12:1}var Name: OleVariant; 
                                                            {VT_12:1}var Address: OleVariant; 
                                                            {VT_12:1}var ExtractAddress: OleVariant; 
                                                            {VT_12:1}var LaserTray: OleVariant; 
                                                            {VT_12:1}var SingleLabel: OleVariant; 
                                                            {VT_12:1}var Row: OleVariant; 
                                                            {VT_12:1}var Column: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property DefaultPrintBarCode: WordBool read Get_DefaultPrintBarCode write Set_DefaultPrintBarCode;
    property DefaultLaserTray: WdPaperTray read Get_DefaultLaserTray write Set_DefaultLaserTray;
    property CustomLabels: CustomLabels read Get_CustomLabels;
    property DefaultLabelName: WideString read Get_DefaultLabelName write Set_DefaultLabelName;
  end;

// *********************************************************************//
// DispIntf:  MailingLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020917-0000-0000-C000-000000000046}
// *********************************************************************//
  MailingLabelDisp = dispinterface
    ['{00020917-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property DefaultPrintBarCode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property DefaultLaserTray {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray dispid 4;
    property CustomLabels {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CustomLabels readonly dispid 8;
    property DefaultLabelName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 9;
    function  CreateNewDocument {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_12:1}var Name: OleVariant; 
                                                                     {VT_12:1}var Address: OleVariant; 
                                                                     {VT_12:1}var AutoText: OleVariant; 
                                                                     {VT_12:1}var ExtractAddress: OleVariant; 
                                                                     {VT_12:1}var LaserTray: OleVariant): WordDocument; dispid 101;
    procedure PrintOut {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_12:1}var Name: OleVariant; 
                                                            {VT_12:1}var Address: OleVariant; 
                                                            {VT_12:1}var ExtractAddress: OleVariant; 
                                                            {VT_12:1}var LaserTray: OleVariant; 
                                                            {VT_12:1}var SingleLabel: OleVariant; 
                                                            {VT_12:1}var Row: OleVariant; 
                                                            {VT_12:1}var Column: OleVariant); dispid 102;
  end;

// *********************************************************************//
// Interface: CustomLabels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020916-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabels = interface(IDispatch)
    ['{00020916-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): CustomLabel; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var DotMatrix: OleVariant): CustomLabel; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  CustomLabelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020916-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabelsDisp = dispinterface
    ['{00020916-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): CustomLabel; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                       {VT_12:1}var DotMatrix: OleVariant): CustomLabel; dispid 101;
  end;

// *********************************************************************//
// Interface: CustomLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020915-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabel = interface(IDispatch)
    ['{00020915-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_TopMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_TopMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_SideMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SideMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_VerticalPitch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_VerticalPitch {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HorizontalPitch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_HorizontalPitch {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_NumberAcross {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NumberAcross {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_NumberDown {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NumberDown {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DotMatrix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_PageSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCustomLabelPageSize; safecall;
    procedure Set_PageSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCustomLabelPageSize); safecall;
    function  Get_Valid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property TopMargin: Single read Get_TopMargin write Set_TopMargin;
    property SideMargin: Single read Get_SideMargin write Set_SideMargin;
    property Height: Single read Get_Height write Set_Height;
    property Width: Single read Get_Width write Set_Width;
    property VerticalPitch: Single read Get_VerticalPitch write Set_VerticalPitch;
    property HorizontalPitch: Single read Get_HorizontalPitch write Set_HorizontalPitch;
    property NumberAcross: Integer read Get_NumberAcross write Set_NumberAcross;
    property NumberDown: Integer read Get_NumberDown write Set_NumberDown;
    property DotMatrix: WordBool read Get_DotMatrix;
    property PageSize: WdCustomLabelPageSize read Get_PageSize write Set_PageSize;
    property Valid: WordBool read Get_Valid;
  end;

// *********************************************************************//
// DispIntf:  CustomLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020915-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabelDisp = dispinterface
    ['{00020915-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property TopMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 3;
    property SideMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 4;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 5;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 6;
    property VerticalPitch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property HorizontalPitch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 8;
    property NumberAcross {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 9;
    property NumberDown {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 10;
    property DotMatrix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 11;
    property PageSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCustomLabelPageSize dispid 12;
    property Valid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 13;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: TablesOfContents
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020914-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfContents = interface(IDispatch)
    ['{00020914-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTocFormat; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTocFormat); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): TableOfContents; safecall;
    function  AddOld {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                           {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                           {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                           {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                           {VT_12:1}var UseFields: OleVariant; 
                                                           {VT_12:1}var TableID: OleVariant; 
                                                           {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                           {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                           {VT_12:1}var AddedStyles: OleVariant): TableOfContents; safecall;
    function  MarkEntry {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                             {VT_12:1}var Entry: OleVariant; 
                                                             {VT_12:1}var EntryAutoText: OleVariant; 
                                                             {VT_12:1}var TableID: OleVariant; 
                                                             {VT_12:1}var Level: OleVariant): Field; safecall;
    function  Add {Flags(1), (12/11) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                         {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                         {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                         {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                         {VT_12:1}var UseFields: OleVariant; 
                                                         {VT_12:1}var TableID: OleVariant; 
                                                         {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                         {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                         {VT_12:1}var AddedStyles: OleVariant; 
                                                         {VT_12:1}var UseHyperlinks: OleVariant; 
                                                         {VT_12:1}var HidePageNumbersInWeb: OleVariant): TableOfContents; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdTocFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  TablesOfContentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020914-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfContentsDisp = dispinterface
    ['{00020914-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTocFormat dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): TableOfContents; dispid 0;
    function  AddOld {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                           {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                           {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                           {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                           {VT_12:1}var UseFields: OleVariant; 
                                                           {VT_12:1}var TableID: OleVariant; 
                                                           {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                           {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                           {VT_12:1}var AddedStyles: OleVariant): TableOfContents; dispid 100;
    function  MarkEntry {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                             {VT_12:1}var Entry: OleVariant; 
                                                             {VT_12:1}var EntryAutoText: OleVariant; 
                                                             {VT_12:1}var TableID: OleVariant; 
                                                             {VT_12:1}var Level: OleVariant): Field; dispid 101;
    function  Add {Flags(2), (12/11) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                         {VT_12:1}var UseHeadingStyles: OleVariant; 
                                                         {VT_12:1}var UpperHeadingLevel: OleVariant; 
                                                         {VT_12:1}var LowerHeadingLevel: OleVariant; 
                                                         {VT_12:1}var UseFields: OleVariant; 
                                                         {VT_12:1}var TableID: OleVariant; 
                                                         {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                         {VT_12:1}var IncludePageNumbers: OleVariant; 
                                                         {VT_12:1}var AddedStyles: OleVariant; 
                                                         {VT_12:1}var UseHyperlinks: OleVariant; 
                                                         {VT_12:1}var HidePageNumbersInWeb: OleVariant): TableOfContents; dispid 102;
  end;

// *********************************************************************//
// Interface: TableOfContents
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020913-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfContents = interface(IDispatch)
    ['{00020913-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_UseHeadingStyles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseHeadingStyles {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseFields {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UpperHeadingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_UpperHeadingLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_LowerHeadingLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LowerHeadingLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_TableID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_TableID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_HeadingStyles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HeadingStyles; safecall;
    function  Get_RightAlignPageNumbers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RightAlignPageNumbers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IncludePageNumbers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludePageNumbers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_TabLeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader; safecall;
    procedure Set_TabLeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTabLeader); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure UpdatePageNumbers {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Update {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_UseHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HidePageNumbersInWeb {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HidePageNumbersInWeb {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property UseHeadingStyles: WordBool read Get_UseHeadingStyles write Set_UseHeadingStyles;
    property UseFields: WordBool read Get_UseFields write Set_UseFields;
    property UpperHeadingLevel: Integer read Get_UpperHeadingLevel write Set_UpperHeadingLevel;
    property LowerHeadingLevel: Integer read Get_LowerHeadingLevel write Set_LowerHeadingLevel;
    property TableID: WideString read Get_TableID write Set_TableID;
    property HeadingStyles: HeadingStyles read Get_HeadingStyles;
    property RightAlignPageNumbers: WordBool read Get_RightAlignPageNumbers write Set_RightAlignPageNumbers;
    property IncludePageNumbers: WordBool read Get_IncludePageNumbers write Set_IncludePageNumbers;
    property Range: Range read Get_Range;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
    property UseHyperlinks: WordBool read Get_UseHyperlinks write Set_UseHyperlinks;
    property HidePageNumbersInWeb: WordBool read Get_HidePageNumbersInWeb write Set_HidePageNumbersInWeb;
  end;

// *********************************************************************//
// DispIntf:  TableOfContentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020913-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfContentsDisp = dispinterface
    ['{00020913-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property UseHeadingStyles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property UseFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property UpperHeadingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property LowerHeadingLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property TableID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 5;
    property HeadingStyles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HeadingStyles readonly dispid 6;
    property RightAlignPageNumbers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property IncludePageNumbers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 8;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 9;
    property TabLeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader dispid 10;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure UpdatePageNumbers {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Update {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    property UseHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 11;
    property HidePageNumbersInWeb {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
  end;

// *********************************************************************//
// Interface: TablesOfAuthorities
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020912-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthorities = interface(IDispatch)
    ['{00020912-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdToaFormat; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdToaFormat); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): TableOfAuthorities; safecall;
    function  Add {Flags(1), (12/11) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                         {VT_12:1}var Category: OleVariant; 
                                                         {VT_12:1}var Bookmark: OleVariant; 
                                                         {VT_12:1}var Passim: OleVariant; 
                                                         {VT_12:1}var KeepEntryFormatting: OleVariant; 
                                                         {VT_12:1}var Separator: OleVariant; 
                                                         {VT_12:1}var IncludeSequenceName: OleVariant; 
                                                         {VT_12:1}var EntrySeparator: OleVariant; 
                                                         {VT_12:1}var PageRangeSeparator: OleVariant; 
                                                         {VT_12:1}var IncludeCategoryHeader: OleVariant; 
                                                         {VT_12:1}var PageNumberSeparator: OleVariant): TableOfAuthorities; safecall;
    procedure NextCitation {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const ShortCitation: WideString); safecall;
    function  MarkCitation {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                                {VT_8:0}const ShortCitation: WideString; 
                                                                {VT_12:1}var LongCitation: OleVariant; 
                                                                {VT_12:1}var LongCitationAutoText: OleVariant; 
                                                                {VT_12:1}var Category: OleVariant): Field; safecall;
    procedure MarkAllCitations {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_8:0}const ShortCitation: WideString; 
                                                                    {VT_12:1}var LongCitation: OleVariant; 
                                                                    {VT_12:1}var LongCitationAutoText: OleVariant; 
                                                                    {VT_12:1}var Category: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdToaFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  TablesOfAuthoritiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020912-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthoritiesDisp = dispinterface
    ['{00020912-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdToaFormat dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): TableOfAuthorities; dispid 0;
    function  Add {Flags(2), (12/11) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                         {VT_12:1}var Category: OleVariant; 
                                                         {VT_12:1}var Bookmark: OleVariant; 
                                                         {VT_12:1}var Passim: OleVariant; 
                                                         {VT_12:1}var KeepEntryFormatting: OleVariant; 
                                                         {VT_12:1}var Separator: OleVariant; 
                                                         {VT_12:1}var IncludeSequenceName: OleVariant; 
                                                         {VT_12:1}var EntrySeparator: OleVariant; 
                                                         {VT_12:1}var PageRangeSeparator: OleVariant; 
                                                         {VT_12:1}var IncludeCategoryHeader: OleVariant; 
                                                         {VT_12:1}var PageNumberSeparator: OleVariant): TableOfAuthorities; dispid 100;
    procedure NextCitation {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const ShortCitation: WideString); dispid 103;
    function  MarkCitation {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                                {VT_8:0}const ShortCitation: WideString; 
                                                                {VT_12:1}var LongCitation: OleVariant; 
                                                                {VT_12:1}var LongCitationAutoText: OleVariant; 
                                                                {VT_12:1}var Category: OleVariant): Field; dispid 101;
    procedure MarkAllCitations {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_8:0}const ShortCitation: WideString; 
                                                                    {VT_12:1}var LongCitation: OleVariant; 
                                                                    {VT_12:1}var LongCitationAutoText: OleVariant; 
                                                                    {VT_12:1}var Category: OleVariant); dispid 102;
  end;

// *********************************************************************//
// Interface: TableOfAuthorities
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020911-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthorities = interface(IDispatch)
    ['{00020911-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Passim {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Passim {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_KeepEntryFormatting {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_KeepEntryFormatting {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Category {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Category {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Bookmark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Bookmark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Separator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Separator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_IncludeSequenceName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_IncludeSequenceName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_EntrySeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EntrySeparator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_PageRangeSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PageRangeSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_IncludeCategoryHeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeCategoryHeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PageNumberSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PageNumberSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_TabLeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader; safecall;
    procedure Set_TabLeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTabLeader); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Update {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Passim: WordBool read Get_Passim write Set_Passim;
    property KeepEntryFormatting: WordBool read Get_KeepEntryFormatting write Set_KeepEntryFormatting;
    property Category: Integer read Get_Category write Set_Category;
    property Bookmark: WideString read Get_Bookmark write Set_Bookmark;
    property Separator: WideString read Get_Separator write Set_Separator;
    property IncludeSequenceName: WideString read Get_IncludeSequenceName write Set_IncludeSequenceName;
    property EntrySeparator: WideString read Get_EntrySeparator write Set_EntrySeparator;
    property PageRangeSeparator: WideString read Get_PageRangeSeparator write Set_PageRangeSeparator;
    property IncludeCategoryHeader: WordBool read Get_IncludeCategoryHeader write Set_IncludeCategoryHeader;
    property PageNumberSeparator: WideString read Get_PageNumberSeparator write Set_PageNumberSeparator;
    property Range: Range read Get_Range;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
  end;

// *********************************************************************//
// DispIntf:  TableOfAuthoritiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020911-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthoritiesDisp = dispinterface
    ['{00020911-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Passim {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property KeepEntryFormatting {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property Category {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property Bookmark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 4;
    property Separator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 5;
    property IncludeSequenceName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 6;
    property EntrySeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 7;
    property PageRangeSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 8;
    property IncludeCategoryHeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property PageNumberSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 10;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 11;
    property TabLeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader dispid 12;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Update {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: Dialogs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020910-0000-0000-C000-000000000046}
// *********************************************************************//
  Dialogs = interface(IDispatch)
    ['{00020910-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Index: WdWordDialog): Dialog; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  DialogsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020910-0000-0000-C000-000000000046}
// *********************************************************************//
  DialogsDisp = dispinterface
    ['{00020910-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Index: WdWordDialog): Dialog; dispid 0;
  end;

// *********************************************************************//
// Interface: Dialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000209B8-0000-0000-C000-000000000046}
// *********************************************************************//
  Dialog = interface(IDispatch)
    ['{000209B8-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_DefaultTab {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWordDialogTab; safecall;
    procedure Set_DefaultTab {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdWordDialogTab); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWordDialog; safecall;
    function  Show {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var TimeOut: OleVariant): Integer; safecall;
    function  Display {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var TimeOut: OleVariant): Integer; safecall;
    procedure Execute {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Update {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_CommandName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property DefaultTab: WdWordDialogTab read Get_DefaultTab write Set_DefaultTab;
    property Type_: WdWordDialog read Get_Type_;
    property CommandName: WideString read Get_CommandName;
  end;

// *********************************************************************//
// DispIntf:  DialogDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000209B8-0000-0000-C000-000000000046}
// *********************************************************************//
  DialogDisp = dispinterface
    ['{000209B8-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 32003;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 32004;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 32005;
    property DefaultTab {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWordDialogTab dispid 32002;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWordDialog readonly dispid 0;
    function  Show {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var TimeOut: OleVariant): Integer; dispid 336;
    function  Display {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var TimeOut: OleVariant): Integer; dispid 338;
    procedure Execute {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 32001;
    procedure Update {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 302;
    property CommandName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 32006;
  end;

// *********************************************************************//
// Interface: PageSetup
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020971-0000-0000-C000-000000000046}
// *********************************************************************//
  PageSetup = interface(IDispatch)
    ['{00020971-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_TopMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_TopMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_BottomMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_BottomMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LeftMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LeftMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_RightMargin {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RightMargin {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Gutter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Gutter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PageWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PageWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PageHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PageHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdOrientation; safecall;
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdOrientation); safecall;
    function  Get_FirstPageTray {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray; safecall;
    procedure Set_FirstPageTray {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPaperTray); safecall;
    function  Get_OtherPagesTray {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray; safecall;
    procedure Set_OtherPagesTray {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPaperTray); safecall;
    function  Get_VerticalAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdVerticalAlignment; safecall;
    procedure Set_VerticalAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdVerticalAlignment); safecall;
    function  Get_MirrorMargins {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_MirrorMargins {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_HeaderDistance {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_HeaderDistance {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_FooterDistance {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FooterDistance {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_SectionStart {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSectionStart; safecall;
    procedure Set_SectionStart {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSectionStart); safecall;
    function  Get_OddAndEvenPagesHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_OddAndEvenPagesHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DifferentFirstPageHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DifferentFirstPageHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SuppressEndnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SuppressEndnotes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_LineNumbering {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LineNumbering; safecall;
    procedure Set_LineNumbering {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: LineNumbering); safecall;
    function  Get_TextColumns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextColumns; safecall;
    procedure Set_TextColumns {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TextColumns); safecall;
    function  Get_PaperSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPaperSize; safecall;
    procedure Set_PaperSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPaperSize); safecall;
    function  Get_TwoPagesOnOne {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TwoPagesOnOne {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_GutterOnTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_GutterOnTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CharsLine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CharsLine {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LinesPage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LinesPage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ShowGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure TogglePortrait {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetAsTemplateDefault {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_GutterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdGutterStyleOld; safecall;
    procedure Set_GutterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdGutterStyleOld); safecall;
    function  Get_SectionDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSectionDirection; safecall;
    procedure Set_SectionDirection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSectionDirection); safecall;
    function  Get_LayoutMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLayoutMode; safecall;
    procedure Set_LayoutMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLayoutMode); safecall;
    function  Get_GutterPos {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdGutterStyle; safecall;
    procedure Set_GutterPos {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdGutterStyle); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property TopMargin: Single read Get_TopMargin write Set_TopMargin;
    property BottomMargin: Single read Get_BottomMargin write Set_BottomMargin;
    property LeftMargin: Single read Get_LeftMargin write Set_LeftMargin;
    property RightMargin: Single read Get_RightMargin write Set_RightMargin;
    property Gutter: Single read Get_Gutter write Set_Gutter;
    property PageWidth: Single read Get_PageWidth write Set_PageWidth;
    property PageHeight: Single read Get_PageHeight write Set_PageHeight;
    property Orientation: WdOrientation read Get_Orientation write Set_Orientation;
    property FirstPageTray: WdPaperTray read Get_FirstPageTray write Set_FirstPageTray;
    property OtherPagesTray: WdPaperTray read Get_OtherPagesTray write Set_OtherPagesTray;
    property VerticalAlignment: WdVerticalAlignment read Get_VerticalAlignment write Set_VerticalAlignment;
    property MirrorMargins: Integer read Get_MirrorMargins write Set_MirrorMargins;
    property HeaderDistance: Single read Get_HeaderDistance write Set_HeaderDistance;
    property FooterDistance: Single read Get_FooterDistance write Set_FooterDistance;
    property SectionStart: WdSectionStart read Get_SectionStart write Set_SectionStart;
    property OddAndEvenPagesHeaderFooter: Integer read Get_OddAndEvenPagesHeaderFooter write Set_OddAndEvenPagesHeaderFooter;
    property DifferentFirstPageHeaderFooter: Integer read Get_DifferentFirstPageHeaderFooter write Set_DifferentFirstPageHeaderFooter;
    property SuppressEndnotes: Integer read Get_SuppressEndnotes write Set_SuppressEndnotes;
    property LineNumbering: LineNumbering read Get_LineNumbering write Set_LineNumbering;
    property TextColumns: TextColumns read Get_TextColumns write Set_TextColumns;
    property PaperSize: WdPaperSize read Get_PaperSize write Set_PaperSize;
    property TwoPagesOnOne: WordBool read Get_TwoPagesOnOne write Set_TwoPagesOnOne;
    property GutterOnTop: WordBool read Get_GutterOnTop write Set_GutterOnTop;
    property CharsLine: Single read Get_CharsLine write Set_CharsLine;
    property LinesPage: Single read Get_LinesPage write Set_LinesPage;
    property ShowGrid: WordBool read Get_ShowGrid write Set_ShowGrid;
    property GutterStyle: WdGutterStyleOld read Get_GutterStyle write Set_GutterStyle;
    property SectionDirection: WdSectionDirection read Get_SectionDirection write Set_SectionDirection;
    property LayoutMode: WdLayoutMode read Get_LayoutMode write Set_LayoutMode;
    property GutterPos: WdGutterStyle read Get_GutterPos write Set_GutterPos;
  end;

// *********************************************************************//
// DispIntf:  PageSetupDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020971-0000-0000-C000-000000000046}
// *********************************************************************//
  PageSetupDisp = dispinterface
    ['{00020971-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property TopMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 100;
    property BottomMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 101;
    property LeftMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property RightMargin {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    property Gutter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 104;
    property PageWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 105;
    property PageHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 106;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdOrientation dispid 107;
    property FirstPageTray {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray dispid 108;
    property OtherPagesTray {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPaperTray dispid 109;
    property VerticalAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdVerticalAlignment dispid 110;
    property MirrorMargins {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 111;
    property HeaderDistance {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 112;
    property FooterDistance {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 113;
    property SectionStart {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSectionStart dispid 114;
    property OddAndEvenPagesHeaderFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 115;
    property DifferentFirstPageHeaderFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 116;
    property SuppressEndnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 117;
    property LineNumbering {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LineNumbering dispid 118;
    property TextColumns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextColumns dispid 119;
    property PaperSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPaperSize dispid 120;
    property TwoPagesOnOne {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 121;
    property GutterOnTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 122;
    property CharsLine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 123;
    property LinesPage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 124;
    property ShowGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 128;
    procedure TogglePortrait {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 201;
    procedure SetAsTemplateDefault {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 202;
    property GutterStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdGutterStyleOld dispid 129;
    property SectionDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSectionDirection dispid 130;
    property LayoutMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLayoutMode dispid 131;
    property GutterPos {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdGutterStyle dispid 1222;
  end;

// *********************************************************************//
// Interface: LineNumbering
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020972-0000-0000-C000-000000000046}
// *********************************************************************//
  LineNumbering = interface(IDispatch)
    ['{00020972-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_RestartMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdNumberingRule; safecall;
    procedure Set_RestartMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdNumberingRule); safecall;
    function  Get_StartingNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_StartingNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_DistanceFromText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceFromText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CountBy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_CountBy {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Active {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Active {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RestartMode: WdNumberingRule read Get_RestartMode write Set_RestartMode;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property DistanceFromText: Single read Get_DistanceFromText write Set_DistanceFromText;
    property CountBy: Integer read Get_CountBy write Set_CountBy;
    property Active: Integer read Get_Active write Set_Active;
  end;

// *********************************************************************//
// DispIntf:  LineNumberingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020972-0000-0000-C000-000000000046}
// *********************************************************************//
  LineNumberingDisp = dispinterface
    ['{00020972-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property RestartMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdNumberingRule dispid 100;
    property StartingNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 101;
    property DistanceFromText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property CountBy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 103;
    property Active {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 104;
  end;

// *********************************************************************//
// Interface: TextColumns
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020973-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumns = interface(IDispatch)
    ['{00020973-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_EvenlySpaced {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_EvenlySpaced {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_LineBetween {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LineBetween {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): TextColumn; safecall;
    function  Add {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_12:1}var Width: OleVariant; 
                                                       {VT_12:1}var Spacing: OleVariant; 
                                                       {VT_12:1}var EvenlySpaced: OleVariant): TextColumn; safecall;
    procedure SetCount {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}NumColumns: Integer); safecall;
    function  Get_FlowDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFlowDirection; safecall;
    procedure Set_FlowDirection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFlowDirection); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property EvenlySpaced: Integer read Get_EvenlySpaced write Set_EvenlySpaced;
    property LineBetween: Integer read Get_LineBetween write Set_LineBetween;
    property Width: Single read Get_Width write Set_Width;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property FlowDirection: WdFlowDirection read Get_FlowDirection write Set_FlowDirection;
  end;

// *********************************************************************//
// DispIntf:  TextColumnsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020973-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumnsDisp = dispinterface
    ['{00020973-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property EvenlySpaced {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 100;
    property LineBetween {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 101;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property Spacing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): TextColumn; dispid 0;
    function  Add {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_12:1}var Width: OleVariant; 
                                                       {VT_12:1}var Spacing: OleVariant; 
                                                       {VT_12:1}var EvenlySpaced: OleVariant): TextColumn; dispid 201;
    procedure SetCount {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}NumColumns: Integer); dispid 202;
    property FlowDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFlowDirection dispid 104;
  end;

// *********************************************************************//
// Interface: TextColumn
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020974-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumn = interface(IDispatch)
    ['{00020974-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Width: Single read Get_Width write Set_Width;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
  end;

// *********************************************************************//
// DispIntf:  TextColumnDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020974-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumnDisp = dispinterface
    ['{00020974-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 100;
    property SpaceAfter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 101;
  end;

// *********************************************************************//
// Interface: Selection
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020975-0000-0000-C000-000000000046}
// *********************************************************************//
  Selection = interface(IDispatch)
    ['{00020975-0000-0000-C000-000000000046}']
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_FormattedText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    procedure Set_FormattedText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Range); safecall;
    function  Get_Start {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Start {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_End_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_End_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Font {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    procedure Set_Font {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordFont); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSelectionType; safecall;
    function  Get_StoryType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdStoryType; safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Words; safecall;
    function  Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Sentences; safecall;
    function  Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Characters; safecall;
    function  Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Footnotes; safecall;
    function  Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Endnotes; safecall;
    function  Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Comments; safecall;
    function  Get_Cells {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Cells; safecall;
    function  Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Sections; safecall;
    function  Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Paragraphs; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shading; safecall;
    function  Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Fields; safecall;
    function  Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FormFields; safecall;
    function  Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frames; safecall;
    function  Get_ParagraphFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordParagraphFormat); safecall;
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PageSetup; safecall;
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: PageSetup); safecall;
    function  Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Bookmarks; safecall;
    function  Get_StoryLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_LanguageIDFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_LanguageIDOther {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageIDOther {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Hyperlinks; safecall;
    function  Get_Columns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Columns; safecall;
    function  Get_Rows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Rows; safecall;
    function  Get_HeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HeaderFooter; safecall;
    function  Get_IsEndOfRowMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_BookmarkID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_PreviousBookmarkID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Find {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Find; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Information {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_29:0}Type_: WdInformation): OleVariant; safecall;
    function  Get_Flags {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSelectionFlags; safecall;
    procedure Set_Flags {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSelectionFlags); safecall;
    function  Get_Active {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_StartIsActive {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_StartIsActive {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IPAtEndOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_ExtendMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ExtendMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ColumnSelectMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ColumnSelectMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTextOrientation; safecall;
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTextOrientation); safecall;
    function  Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: InlineShapes; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Document {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordDocument; safecall;
    function  Get_ShapeRange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ShapeRange; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetRange {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Start: Integer; 
                                                            {VT_3:0}End_: Integer); safecall;
    procedure Collapse {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Direction: OleVariant); safecall;
    procedure InsertBefore {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString); safecall;
    procedure InsertAfter {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString); safecall;
    function  Next {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Range; safecall;
    function  Previous {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant): Range; safecall;
    function  StartOf {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  EndOf {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                         {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  Move {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveStart {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveEnd {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveWhile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveStartWhile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveEndWhile {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveUntil {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveStartUntil {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  MoveEndUntil {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Paste {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertBreak {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Type_: OleVariant); safecall;
    procedure InsertFile {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var ConfirmConversions: OleVariant; 
                                                              {VT_12:1}var Link: OleVariant; 
                                                              {VT_12:1}var Attachment: OleVariant); safecall;
    function  InStory {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): WordBool; safecall;
    function  InRange {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): WordBool; safecall;
    function  Delete {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Count: OleVariant): Integer; safecall;
    function  Expand {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant): Integer; safecall;
    procedure InsertParagraph {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertParagraphAfter {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ConvertToTableOld {Flags(1), (15/14) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                       {VT_12:1}var NumRows: OleVariant; 
                                                                       {VT_12:1}var NumColumns: OleVariant; 
                                                                       {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                       {VT_12:1}var Format: OleVariant; 
                                                                       {VT_12:1}var ApplyBorders: OleVariant; 
                                                                       {VT_12:1}var ApplyShading: OleVariant; 
                                                                       {VT_12:1}var ApplyFont: OleVariant; 
                                                                       {VT_12:1}var ApplyColor: OleVariant; 
                                                                       {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                       {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                       {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                       {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                       {VT_12:1}var AutoFit: OleVariant): Table; safecall;
    procedure InsertDateTimeOld {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                     {VT_12:1}var InsertAsField: OleVariant; 
                                                                     {VT_12:1}var InsertAsFullWidth: OleVariant); safecall;
    procedure InsertSymbol {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_3:0}CharacterNumber: Integer; 
                                                                {VT_12:1}var Font: OleVariant; 
                                                                {VT_12:1}var Unicode: OleVariant; 
                                                                {VT_12:1}var Bias: OleVariant); safecall;
    procedure InsertCrossReference {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var ReferenceType: OleVariant; 
                                                                        {VT_29:0}ReferenceKind: WdReferenceKind; 
                                                                        {VT_12:1}var ReferenceItem: OleVariant; 
                                                                        {VT_12:1}var InsertAsHyperlink: OleVariant; 
                                                                        {VT_12:1}var IncludePosition: OleVariant); safecall;
    procedure InsertCaption {Flags(1), (4/4) CC:0, INV:1, DBG:6}({VT_12:1}var Label_: OleVariant; 
                                                                 {VT_12:1}var Title: OleVariant; 
                                                                 {VT_12:1}var TitleAutoText: OleVariant; 
                                                                 {VT_12:1}var Position: OleVariant); safecall;
    procedure CopyAsPicture {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortOld {Flags(1), (14/14) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                             {VT_12:1}var FieldNumber: OleVariant; 
                                                             {VT_12:1}var SortFieldType: OleVariant; 
                                                             {VT_12:1}var SortOrder: OleVariant; 
                                                             {VT_12:1}var FieldNumber2: OleVariant; 
                                                             {VT_12:1}var SortFieldType2: OleVariant; 
                                                             {VT_12:1}var SortOrder2: OleVariant; 
                                                             {VT_12:1}var FieldNumber3: OleVariant; 
                                                             {VT_12:1}var SortFieldType3: OleVariant; 
                                                             {VT_12:1}var SortOrder3: OleVariant; 
                                                             {VT_12:1}var SortColumn: OleVariant; 
                                                             {VT_12:1}var Separator: OleVariant; 
                                                             {VT_12:1}var CaseSensitive: OleVariant; 
                                                             {VT_12:1}var LanguageID: OleVariant); safecall;
    procedure SortAscending {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SortDescending {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  IsEqual {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): WordBool; safecall;
    function  Calculate {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Single; safecall;
    function  GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; safecall;
    function  GoToNext {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}What: WdGoToItem): Range; safecall;
    function  GoToPrevious {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}What: WdGoToItem): Range; safecall;
    procedure PasteSpecial {Flags(1), (7/7) CC:0, INV:1, DBG:6}({VT_12:1}var IconIndex: OleVariant; 
                                                                {VT_12:1}var Link: OleVariant; 
                                                                {VT_12:1}var Placement: OleVariant; 
                                                                {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                {VT_12:1}var DataType: OleVariant; 
                                                                {VT_12:1}var IconFileName: OleVariant; 
                                                                {VT_12:1}var IconLabel: OleVariant); safecall;
    function  PreviousField {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Field; safecall;
    function  NextField {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Field; safecall;
    procedure InsertParagraphBefore {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertCells {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var ShiftCells: OleVariant); safecall;
    procedure Extend {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Character: OleVariant); safecall;
    procedure Shrink {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  MoveLeft {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant; 
                                                            {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  MoveRight {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant; 
                                                             {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  MoveUp {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Count: OleVariant; 
                                                          {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  MoveDown {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant; 
                                                            {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  HomeKey {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Extend: OleVariant): Integer; safecall;
    function  EndKey {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Extend: OleVariant): Integer; safecall;
    procedure EscapeKey {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TypeText {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const Text: WideString); safecall;
    procedure CopyFormat {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PasteFormat {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TypeParagraph {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TypeBackspace {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure NextSubdocument {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure PreviousSubdocument {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectColumn {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCurrentFont {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCurrentAlignment {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCurrentSpacing {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCurrentIndent {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCurrentTabs {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCurrentColor {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CreateTextbox {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure WholeStory {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectRow {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SplitTable {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertRows {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumRows: OleVariant); safecall;
    procedure InsertColumns {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertFormula {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var Formula: OleVariant; 
                                                                 {VT_12:1}var NumberFormat: OleVariant); safecall;
    function  NextRevision {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Wrap: OleVariant): Revision; safecall;
    function  PreviousRevision {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Wrap: OleVariant): Revision; safecall;
    procedure PasteAsNestedTable {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  CreateAutoTextEntry {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString; 
                                                                       {VT_8:0}const StyleName: WideString): AutoTextEntry; safecall;
    procedure DetectLanguage {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SelectCell {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertRowsBelow {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumRows: OleVariant); safecall;
    procedure InsertColumnsRight {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertRowsAbove {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumRows: OleVariant); safecall;
    procedure RtlRun {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure LtrRun {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure BoldRun {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ItalicRun {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure RtlPara {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure LtrPara {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure InsertDateTime {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                  {VT_12:1}var InsertAsField: OleVariant; 
                                                                  {VT_12:1}var InsertAsFullWidth: OleVariant; 
                                                                  {VT_12:1}var DateLanguage: OleVariant; 
                                                                  {VT_12:1}var CalendarType: OleVariant); safecall;
    procedure Sort {Flags(1), (19/19) CC:0, INV:1, DBG:6}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var FieldNumber: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var FieldNumber2: OleVariant; 
                                                          {VT_12:1}var SortFieldType2: OleVariant; 
                                                          {VT_12:1}var SortOrder2: OleVariant; 
                                                          {VT_12:1}var FieldNumber3: OleVariant; 
                                                          {VT_12:1}var SortFieldType3: OleVariant; 
                                                          {VT_12:1}var SortOrder3: OleVariant; 
                                                          {VT_12:1}var SortColumn: OleVariant; 
                                                          {VT_12:1}var Separator: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); safecall;
    function  ConvertToTable {Flags(1), (17/16) CC:0, INV:1, DBG:6}({VT_12:1}var Separator: OleVariant; 
                                                                    {VT_12:1}var NumRows: OleVariant; 
                                                                    {VT_12:1}var NumColumns: OleVariant; 
                                                                    {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                    {VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var ApplyBorders: OleVariant; 
                                                                    {VT_12:1}var ApplyShading: OleVariant; 
                                                                    {VT_12:1}var ApplyFont: OleVariant; 
                                                                    {VT_12:1}var ApplyColor: OleVariant; 
                                                                    {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                    {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                    {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                    {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                    {VT_12:1}var AutoFit: OleVariant; 
                                                                    {VT_12:1}var AutoFitBehavior: OleVariant; 
                                                                    {VT_12:1}var DefaultTableBehavior: OleVariant): Table; safecall;
    function  Get_NoProofing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NoProofing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_TopLevelTables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Tables; safecall;
    function  Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FitTextWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FitTextWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    property Text: WideString read Get_Text write Set_Text;
    property FormattedText: Range read Get_FormattedText write Set_FormattedText;
    property Start: Integer read Get_Start write Set_Start;
    property End_: Integer read Get_End_ write Set_End_;
    property Font: WordFont read Get_Font write Set_Font;
    property Type_: WdSelectionType read Get_Type_;
    property StoryType: WdStoryType read Get_StoryType;
    property Tables: Tables read Get_Tables;
    property Words: Words read Get_Words;
    property Sentences: Sentences read Get_Sentences;
    property Characters: Characters read Get_Characters;
    property Footnotes: Footnotes read Get_Footnotes;
    property Endnotes: Endnotes read Get_Endnotes;
    property Comments: Comments read Get_Comments;
    property Cells: Cells read Get_Cells;
    property Sections: Sections read Get_Sections;
    property Paragraphs: Paragraphs read Get_Paragraphs;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Fields: Fields read Get_Fields;
    property FormFields: FormFields read Get_FormFields;
    property Frames: Frames read Get_Frames;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property Bookmarks: Bookmarks read Get_Bookmarks;
    property StoryLength: Integer read Get_StoryLength;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property LanguageIDOther: WdLanguageID read Get_LanguageIDOther write Set_LanguageIDOther;
    property Hyperlinks: Hyperlinks read Get_Hyperlinks;
    property Columns: Columns read Get_Columns;
    property Rows: Rows read Get_Rows;
    property HeaderFooter: HeaderFooter read Get_HeaderFooter;
    property IsEndOfRowMark: WordBool read Get_IsEndOfRowMark;
    property BookmarkID: Integer read Get_BookmarkID;
    property PreviousBookmarkID: Integer read Get_PreviousBookmarkID;
    property Find: Find read Get_Find;
    property Range: Range read Get_Range;
    property Information {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_29:0}Type_: WdInformation]: OleVariant read Get_Information;
    property Flags: WdSelectionFlags read Get_Flags write Set_Flags;
    property Active: WordBool read Get_Active;
    property StartIsActive: WordBool read Get_StartIsActive write Set_StartIsActive;
    property IPAtEndOfLine: WordBool read Get_IPAtEndOfLine;
    property ExtendMode: WordBool read Get_ExtendMode write Set_ExtendMode;
    property ColumnSelectMode: WordBool read Get_ColumnSelectMode write Set_ColumnSelectMode;
    property Orientation: WdTextOrientation read Get_Orientation write Set_Orientation;
    property InlineShapes: InlineShapes read Get_InlineShapes;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Document: WordDocument read Get_Document;
    property ShapeRange: ShapeRange read Get_ShapeRange;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property TopLevelTables: Tables read Get_TopLevelTables;
    property LanguageDetected: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FitTextWidth: Single read Get_FitTextWidth write Set_FitTextWidth;
  end;

// *********************************************************************//
// DispIntf:  SelectionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020975-0000-0000-C000-000000000046}
// *********************************************************************//
  SelectionDisp = dispinterface
    ['{00020975-0000-0000-C000-000000000046}']
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    property FormattedText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range dispid 2;
    property Start {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property End_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property Font {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont dispid 5;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSelectionType readonly dispid 6;
    property StoryType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdStoryType readonly dispid 7;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 8;
    property Tables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 50;
    property Words {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Words readonly dispid 51;
    property Sentences {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Sentences readonly dispid 52;
    property Characters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Characters readonly dispid 53;
    property Footnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Footnotes readonly dispid 54;
    property Endnotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Endnotes readonly dispid 55;
    property Comments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Comments readonly dispid 56;
    property Cells {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Cells readonly dispid 57;
    property Sections {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Sections readonly dispid 58;
    property Paragraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Paragraphs readonly dispid 59;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shading readonly dispid 61;
    property Fields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Fields readonly dispid 64;
    property FormFields {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FormFields readonly dispid 65;
    property Frames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frames readonly dispid 66;
    property ParagraphFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordParagraphFormat dispid 1102;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PageSetup dispid 1101;
    property Bookmarks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Bookmarks readonly dispid 75;
    property StoryLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 152;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 153;
    property LanguageIDFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 154;
    property LanguageIDOther {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 155;
    property Hyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Hyperlinks readonly dispid 156;
    property Columns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Columns readonly dispid 302;
    property Rows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Rows readonly dispid 303;
    property HeaderFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HeaderFooter readonly dispid 306;
    property IsEndOfRowMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 307;
    property BookmarkID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 308;
    property PreviousBookmarkID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 309;
    property Find {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Find readonly dispid 262;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 400;
    property Information {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_29:0}Type_: WdInformation]: OleVariant readonly dispid 401;
    property Flags {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSelectionFlags dispid 402;
    property Active {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 403;
    property StartIsActive {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 404;
    property IPAtEndOfLine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 405;
    property ExtendMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 406;
    property ColumnSelectMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 407;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTextOrientation dispid 410;
    property InlineShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: InlineShapes readonly dispid 411;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Document {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordDocument readonly dispid 1003;
    property ShapeRange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ShapeRange readonly dispid 1004;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure SetRange {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Start: Integer; 
                                                            {VT_3:0}End_: Integer); dispid 100;
    procedure Collapse {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Direction: OleVariant); dispid 101;
    procedure InsertBefore {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString); dispid 102;
    procedure InsertAfter {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString); dispid 104;
    function  Next {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Range; dispid 105;
    function  Previous {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant): Range; dispid 106;
    function  StartOf {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Extend: OleVariant): Integer; dispid 107;
    function  EndOf {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                         {VT_12:1}var Extend: OleVariant): Integer; dispid 108;
    function  Move {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                        {VT_12:1}var Count: OleVariant): Integer; dispid 109;
    function  MoveStart {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; dispid 110;
    function  MoveEnd {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Count: OleVariant): Integer; dispid 111;
    function  MoveWhile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; dispid 112;
    function  MoveStartWhile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; dispid 113;
    function  MoveEndWhile {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; dispid 114;
    function  MoveUntil {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant): Integer; dispid 115;
    function  MoveStartUntil {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                  {VT_12:1}var Count: OleVariant): Integer; dispid 116;
    function  MoveEndUntil {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Cset: OleVariant; 
                                                                {VT_12:1}var Count: OleVariant): Integer; dispid 117;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 119;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 120;
    procedure Paste {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 121;
    procedure InsertBreak {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Type_: OleVariant); dispid 122;
    procedure InsertFile {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var ConfirmConversions: OleVariant; 
                                                              {VT_12:1}var Link: OleVariant; 
                                                              {VT_12:1}var Attachment: OleVariant); dispid 123;
    function  InStory {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): WordBool; dispid 125;
    function  InRange {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): WordBool; dispid 126;
    function  Delete {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Count: OleVariant): Integer; dispid 127;
    function  Expand {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant): Integer; dispid 129;
    procedure InsertParagraph {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 160;
    procedure InsertParagraphAfter {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 161;
    function  ConvertToTableOld {Flags(2), (15/14) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                       {VT_12:1}var NumRows: OleVariant; 
                                                                       {VT_12:1}var NumColumns: OleVariant; 
                                                                       {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                       {VT_12:1}var Format: OleVariant; 
                                                                       {VT_12:1}var ApplyBorders: OleVariant; 
                                                                       {VT_12:1}var ApplyShading: OleVariant; 
                                                                       {VT_12:1}var ApplyFont: OleVariant; 
                                                                       {VT_12:1}var ApplyColor: OleVariant; 
                                                                       {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                       {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                       {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                       {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                       {VT_12:1}var AutoFit: OleVariant): Table; dispid 162;
    procedure InsertDateTimeOld {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                     {VT_12:1}var InsertAsField: OleVariant; 
                                                                     {VT_12:1}var InsertAsFullWidth: OleVariant); dispid 163;
    procedure InsertSymbol {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_3:0}CharacterNumber: Integer; 
                                                                {VT_12:1}var Font: OleVariant; 
                                                                {VT_12:1}var Unicode: OleVariant; 
                                                                {VT_12:1}var Bias: OleVariant); dispid 164;
    procedure InsertCrossReference {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var ReferenceType: OleVariant; 
                                                                        {VT_29:0}ReferenceKind: WdReferenceKind; 
                                                                        {VT_12:1}var ReferenceItem: OleVariant; 
                                                                        {VT_12:1}var InsertAsHyperlink: OleVariant; 
                                                                        {VT_12:1}var IncludePosition: OleVariant); dispid 165;
    procedure InsertCaption {Flags(2), (4/4) CC:0, INV:1, DBG:4}({VT_12:1}var Label_: OleVariant; 
                                                                 {VT_12:1}var Title: OleVariant; 
                                                                 {VT_12:1}var TitleAutoText: OleVariant; 
                                                                 {VT_12:1}var Position: OleVariant); dispid 166;
    procedure CopyAsPicture {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 167;
    procedure SortOld {Flags(2), (14/14) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                             {VT_12:1}var FieldNumber: OleVariant; 
                                                             {VT_12:1}var SortFieldType: OleVariant; 
                                                             {VT_12:1}var SortOrder: OleVariant; 
                                                             {VT_12:1}var FieldNumber2: OleVariant; 
                                                             {VT_12:1}var SortFieldType2: OleVariant; 
                                                             {VT_12:1}var SortOrder2: OleVariant; 
                                                             {VT_12:1}var FieldNumber3: OleVariant; 
                                                             {VT_12:1}var SortFieldType3: OleVariant; 
                                                             {VT_12:1}var SortOrder3: OleVariant; 
                                                             {VT_12:1}var SortColumn: OleVariant; 
                                                             {VT_12:1}var Separator: OleVariant; 
                                                             {VT_12:1}var CaseSensitive: OleVariant; 
                                                             {VT_12:1}var LanguageID: OleVariant); dispid 168;
    procedure SortAscending {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 169;
    procedure SortDescending {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 170;
    function  IsEqual {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): WordBool; dispid 171;
    function  Calculate {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Single; dispid 172;
    function  GoTo_ {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; dispid 173;
    function  GoToNext {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}What: WdGoToItem): Range; dispid 174;
    function  GoToPrevious {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}What: WdGoToItem): Range; dispid 175;
    procedure PasteSpecial {Flags(2), (7/7) CC:0, INV:1, DBG:4}({VT_12:1}var IconIndex: OleVariant; 
                                                                {VT_12:1}var Link: OleVariant; 
                                                                {VT_12:1}var Placement: OleVariant; 
                                                                {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                {VT_12:1}var DataType: OleVariant; 
                                                                {VT_12:1}var IconFileName: OleVariant; 
                                                                {VT_12:1}var IconLabel: OleVariant); dispid 176;
    function  PreviousField {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Field; dispid 177;
    function  NextField {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Field; dispid 178;
    procedure InsertParagraphBefore {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 212;
    procedure InsertCells {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var ShiftCells: OleVariant); dispid 214;
    procedure Extend {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Character: OleVariant); dispid 300;
    procedure Shrink {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 301;
    function  MoveLeft {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant; 
                                                            {VT_12:1}var Extend: OleVariant): Integer; dispid 500;
    function  MoveRight {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                             {VT_12:1}var Count: OleVariant; 
                                                             {VT_12:1}var Extend: OleVariant): Integer; dispid 501;
    function  MoveUp {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Count: OleVariant; 
                                                          {VT_12:1}var Extend: OleVariant): Integer; dispid 502;
    function  MoveDown {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                            {VT_12:1}var Count: OleVariant; 
                                                            {VT_12:1}var Extend: OleVariant): Integer; dispid 503;
    function  HomeKey {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                           {VT_12:1}var Extend: OleVariant): Integer; dispid 504;
    function  EndKey {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Unit_: OleVariant; 
                                                          {VT_12:1}var Extend: OleVariant): Integer; dispid 505;
    procedure EscapeKey {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 506;
    procedure TypeText {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const Text: WideString); dispid 507;
    procedure CopyFormat {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 509;
    procedure PasteFormat {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 510;
    procedure TypeParagraph {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 512;
    procedure TypeBackspace {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 513;
    procedure NextSubdocument {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 514;
    procedure PreviousSubdocument {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 515;
    procedure SelectColumn {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 516;
    procedure SelectCurrentFont {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 517;
    procedure SelectCurrentAlignment {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 518;
    procedure SelectCurrentSpacing {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 519;
    procedure SelectCurrentIndent {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 520;
    procedure SelectCurrentTabs {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 521;
    procedure SelectCurrentColor {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 522;
    procedure CreateTextbox {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 523;
    procedure WholeStory {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 524;
    procedure SelectRow {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 525;
    procedure SplitTable {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 526;
    procedure InsertRows {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumRows: OleVariant); dispid 528;
    procedure InsertColumns {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 529;
    procedure InsertFormula {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var Formula: OleVariant; 
                                                                 {VT_12:1}var NumberFormat: OleVariant); dispid 530;
    function  NextRevision {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Wrap: OleVariant): Revision; dispid 531;
    function  PreviousRevision {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Wrap: OleVariant): Revision; dispid 532;
    procedure PasteAsNestedTable {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 533;
    function  CreateAutoTextEntry {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString; 
                                                                       {VT_8:0}const StyleName: WideString): AutoTextEntry; dispid 534;
    procedure DetectLanguage {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 535;
    procedure SelectCell {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 536;
    procedure InsertRowsBelow {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumRows: OleVariant); dispid 537;
    procedure InsertColumnsRight {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 538;
    procedure InsertRowsAbove {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumRows: OleVariant); dispid 539;
    procedure RtlRun {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 600;
    procedure LtrRun {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 601;
    procedure BoldRun {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 602;
    procedure ItalicRun {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 603;
    procedure RtlPara {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 605;
    procedure LtrPara {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 606;
    procedure InsertDateTime {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var DateTimeFormat: OleVariant; 
                                                                  {VT_12:1}var InsertAsField: OleVariant; 
                                                                  {VT_12:1}var InsertAsFullWidth: OleVariant; 
                                                                  {VT_12:1}var DateLanguage: OleVariant; 
                                                                  {VT_12:1}var CalendarType: OleVariant); dispid 444;
    procedure Sort {Flags(2), (19/19) CC:0, INV:1, DBG:4}({VT_12:1}var ExcludeHeader: OleVariant; 
                                                          {VT_12:1}var FieldNumber: OleVariant; 
                                                          {VT_12:1}var SortFieldType: OleVariant; 
                                                          {VT_12:1}var SortOrder: OleVariant; 
                                                          {VT_12:1}var FieldNumber2: OleVariant; 
                                                          {VT_12:1}var SortFieldType2: OleVariant; 
                                                          {VT_12:1}var SortOrder2: OleVariant; 
                                                          {VT_12:1}var FieldNumber3: OleVariant; 
                                                          {VT_12:1}var SortFieldType3: OleVariant; 
                                                          {VT_12:1}var SortOrder3: OleVariant; 
                                                          {VT_12:1}var SortColumn: OleVariant; 
                                                          {VT_12:1}var Separator: OleVariant; 
                                                          {VT_12:1}var CaseSensitive: OleVariant; 
                                                          {VT_12:1}var BidiSort: OleVariant; 
                                                          {VT_12:1}var IgnoreThe: OleVariant; 
                                                          {VT_12:1}var IgnoreKashida: OleVariant; 
                                                          {VT_12:1}var IgnoreDiacritics: OleVariant; 
                                                          {VT_12:1}var IgnoreHe: OleVariant; 
                                                          {VT_12:1}var LanguageID: OleVariant); dispid 445;
    function  ConvertToTable {Flags(2), (17/16) CC:0, INV:1, DBG:4}({VT_12:1}var Separator: OleVariant; 
                                                                    {VT_12:1}var NumRows: OleVariant; 
                                                                    {VT_12:1}var NumColumns: OleVariant; 
                                                                    {VT_12:1}var InitialColumnWidth: OleVariant; 
                                                                    {VT_12:1}var Format: OleVariant; 
                                                                    {VT_12:1}var ApplyBorders: OleVariant; 
                                                                    {VT_12:1}var ApplyShading: OleVariant; 
                                                                    {VT_12:1}var ApplyFont: OleVariant; 
                                                                    {VT_12:1}var ApplyColor: OleVariant; 
                                                                    {VT_12:1}var ApplyHeadingRows: OleVariant; 
                                                                    {VT_12:1}var ApplyLastRow: OleVariant; 
                                                                    {VT_12:1}var ApplyFirstColumn: OleVariant; 
                                                                    {VT_12:1}var ApplyLastColumn: OleVariant; 
                                                                    {VT_12:1}var AutoFit: OleVariant; 
                                                                    {VT_12:1}var AutoFitBehavior: OleVariant; 
                                                                    {VT_12:1}var DefaultTableBehavior: OleVariant): Table; dispid 457;
    property NoProofing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 1005;
    property TopLevelTables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Tables readonly dispid 1006;
    property LanguageDetected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1007;
    property FitTextWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 1008;
  end;

// *********************************************************************//
// Interface: TablesOfAuthoritiesCategories
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020976-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthoritiesCategories = interface(IDispatch)
    ['{00020976-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): TableOfAuthoritiesCategory; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  TablesOfAuthoritiesCategoriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020976-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthoritiesCategoriesDisp = dispinterface
    ['{00020976-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): TableOfAuthoritiesCategory; dispid 0;
  end;

// *********************************************************************//
// Interface: TableOfAuthoritiesCategory
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020977-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthoritiesCategory = interface(IDispatch)
    ['{00020977-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name write Set_Name;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  TableOfAuthoritiesCategoryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020977-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthoritiesCategoryDisp = dispinterface
    ['{00020977-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 0;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: CaptionLabels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020978-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabels = interface(IDispatch)
    ['{00020978-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): CaptionLabel; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): CaptionLabel; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  CaptionLabelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020978-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabelsDisp = dispinterface
    ['{00020978-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): CaptionLabel; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): CaptionLabel; dispid 100;
  end;

// *********************************************************************//
// Interface: CaptionLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020979-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabel = interface(IDispatch)
    ['{00020979-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_BuiltIn {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_ID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCaptionLabelID; safecall;
    function  Get_IncludeChapterNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeChapterNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_NumberStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCaptionNumberStyle; safecall;
    procedure Set_NumberStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCaptionNumberStyle); safecall;
    function  Get_ChapterStyleLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ChapterStyleLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Separator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSeparatorType; safecall;
    procedure Set_Separator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSeparatorType); safecall;
    function  Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCaptionPosition; safecall;
    procedure Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCaptionPosition); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property BuiltIn: WordBool read Get_BuiltIn;
    property ID: WdCaptionLabelID read Get_ID;
    property IncludeChapterNumber: WordBool read Get_IncludeChapterNumber write Set_IncludeChapterNumber;
    property NumberStyle: WdCaptionNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property ChapterStyleLevel: Integer read Get_ChapterStyleLevel write Set_ChapterStyleLevel;
    property Separator: WdSeparatorType read Get_Separator write Set_Separator;
    property Position: WdCaptionPosition read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  CaptionLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020979-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabelDisp = dispinterface
    ['{00020979-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property BuiltIn {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 1;
    property ID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCaptionLabelID readonly dispid 2;
    property IncludeChapterNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property NumberStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCaptionNumberStyle dispid 4;
    property ChapterStyleLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 5;
    property Separator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSeparatorType dispid 6;
    property Position {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCaptionPosition dispid 7;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
  end;

// *********************************************************************//
// Interface: AutoCaptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097A-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaptions = interface(IDispatch)
    ['{0002097A-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): AutoCaption; safecall;
    procedure CancelAutoInsert {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AutoCaptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097A-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaptionsDisp = dispinterface
    ['{0002097A-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): AutoCaption; dispid 0;
    procedure CancelAutoInsert {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
  end;

// *********************************************************************//
// Interface: AutoCaption
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097B-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaption = interface(IDispatch)
    ['{0002097B-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_AutoInsert {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoInsert {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_CaptionLabel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_CaptionLabel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property AutoInsert: WordBool read Get_AutoInsert write Set_AutoInsert;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  AutoCaptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097B-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaptionDisp = dispinterface
    ['{0002097B-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property AutoInsert {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    function  CaptionLabel {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 3;
  end;

// *********************************************************************//
// Interface: Indexes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097C-0000-0000-C000-000000000046}
// *********************************************************************//
  Indexes = interface(IDispatch)
    ['{0002097C-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Format {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdIndexFormat; safecall;
    procedure Set_Format {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdIndexFormat); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Index; safecall;
    function  AddOld {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                          {VT_12:1}var HeadingSeparator: OleVariant; 
                                                          {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                          {VT_12:1}var Type_: OleVariant; 
                                                          {VT_12:1}var NumberOfColumns: OleVariant; 
                                                          {VT_12:1}var AccentedLetters: OleVariant): Index; safecall;
    function  MarkEntry {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                              {VT_12:1}var Entry: OleVariant; 
                                                              {VT_12:1}var EntryAutoText: OleVariant; 
                                                              {VT_12:1}var CrossReference: OleVariant; 
                                                              {VT_12:1}var CrossReferenceAutoText: OleVariant; 
                                                              {VT_12:1}var BookmarkName: OleVariant; 
                                                              {VT_12:1}var Bold: OleVariant; 
                                                              {VT_12:1}var Italic: OleVariant; 
                                                              {VT_12:1}var Reading: OleVariant): Field; safecall;
    procedure MarkAllEntries {Flags(1), (8/8) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                                  {VT_12:1}var Entry: OleVariant; 
                                                                  {VT_12:1}var EntryAutoText: OleVariant; 
                                                                  {VT_12:1}var CrossReference: OleVariant; 
                                                                  {VT_12:1}var CrossReferenceAutoText: OleVariant; 
                                                                  {VT_12:1}var BookmarkName: OleVariant; 
                                                                  {VT_12:1}var Bold: OleVariant; 
                                                                  {VT_12:1}var Italic: OleVariant); safecall;
    procedure AutoMarkEntries {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const ConcordanceFileName: WideString); safecall;
    function  Add {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var HeadingSeparator: OleVariant; 
                                                       {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                       {VT_12:1}var Type_: OleVariant; 
                                                       {VT_12:1}var NumberOfColumns: OleVariant; 
                                                       {VT_12:1}var AccentedLetters: OleVariant; 
                                                       {VT_12:1}var SortBy: OleVariant; 
                                                       {VT_12:1}var IndexLanguage: OleVariant): Index; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdIndexFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  IndexesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097C-0000-0000-C000-000000000046}
// *********************************************************************//
  IndexesDisp = dispinterface
    ['{0002097C-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Format {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdIndexFormat dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Index; dispid 0;
    function  AddOld {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                          {VT_12:1}var HeadingSeparator: OleVariant; 
                                                          {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                          {VT_12:1}var Type_: OleVariant; 
                                                          {VT_12:1}var NumberOfColumns: OleVariant; 
                                                          {VT_12:1}var AccentedLetters: OleVariant): Index; dispid 100;
    function  MarkEntry {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                              {VT_12:1}var Entry: OleVariant; 
                                                              {VT_12:1}var EntryAutoText: OleVariant; 
                                                              {VT_12:1}var CrossReference: OleVariant; 
                                                              {VT_12:1}var CrossReferenceAutoText: OleVariant; 
                                                              {VT_12:1}var BookmarkName: OleVariant; 
                                                              {VT_12:1}var Bold: OleVariant; 
                                                              {VT_12:1}var Italic: OleVariant; 
                                                              {VT_12:1}var Reading: OleVariant): Field; dispid 101;
    procedure MarkAllEntries {Flags(2), (8/8) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                                  {VT_12:1}var Entry: OleVariant; 
                                                                  {VT_12:1}var EntryAutoText: OleVariant; 
                                                                  {VT_12:1}var CrossReference: OleVariant; 
                                                                  {VT_12:1}var CrossReferenceAutoText: OleVariant; 
                                                                  {VT_12:1}var BookmarkName: OleVariant; 
                                                                  {VT_12:1}var Bold: OleVariant; 
                                                                  {VT_12:1}var Italic: OleVariant); dispid 102;
    procedure AutoMarkEntries {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const ConcordanceFileName: WideString); dispid 103;
    function  Add {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range; 
                                                       {VT_12:1}var HeadingSeparator: OleVariant; 
                                                       {VT_12:1}var RightAlignPageNumbers: OleVariant; 
                                                       {VT_12:1}var Type_: OleVariant; 
                                                       {VT_12:1}var NumberOfColumns: OleVariant; 
                                                       {VT_12:1}var AccentedLetters: OleVariant; 
                                                       {VT_12:1}var SortBy: OleVariant; 
                                                       {VT_12:1}var IndexLanguage: OleVariant): Index; dispid 104;
  end;

// *********************************************************************//
// Interface: Index
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097D-0000-0000-C000-000000000046}
// *********************************************************************//
  Index = interface(IDispatch)
    ['{0002097D-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_HeadingSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHeadingSeparator; safecall;
    procedure Set_HeadingSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdHeadingSeparator); safecall;
    function  Get_RightAlignPageNumbers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RightAlignPageNumbers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdIndexType; safecall;
    procedure Set_Type_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdIndexType); safecall;
    function  Get_NumberOfColumns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_NumberOfColumns {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_TabLeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader; safecall;
    procedure Set_TabLeader {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTabLeader); safecall;
    function  Get_AccentedLetters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AccentedLetters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SortBy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdIndexSortBy; safecall;
    procedure Set_SortBy {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdIndexSortBy); safecall;
    function  Get_Filter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdIndexFilter; safecall;
    procedure Set_Filter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdIndexFilter); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Update {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_IndexLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_IndexLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property HeadingSeparator: WdHeadingSeparator read Get_HeadingSeparator write Set_HeadingSeparator;
    property RightAlignPageNumbers: WordBool read Get_RightAlignPageNumbers write Set_RightAlignPageNumbers;
    property Type_: WdIndexType read Get_Type_ write Set_Type_;
    property NumberOfColumns: Integer read Get_NumberOfColumns write Set_NumberOfColumns;
    property Range: Range read Get_Range;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
    property AccentedLetters: WordBool read Get_AccentedLetters write Set_AccentedLetters;
    property SortBy: WdIndexSortBy read Get_SortBy write Set_SortBy;
    property Filter: WdIndexFilter read Get_Filter write Set_Filter;
    property IndexLanguage: WdLanguageID read Get_IndexLanguage write Set_IndexLanguage;
  end;

// *********************************************************************//
// DispIntf:  IndexDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097D-0000-0000-C000-000000000046}
// *********************************************************************//
  IndexDisp = dispinterface
    ['{0002097D-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property HeadingSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHeadingSeparator dispid 1;
    property RightAlignPageNumbers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdIndexType dispid 3;
    property NumberOfColumns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 5;
    property TabLeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTabLeader dispid 6;
    property AccentedLetters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property SortBy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdIndexSortBy dispid 8;
    property Filter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdIndexFilter dispid 9;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Update {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    property IndexLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 10;
  end;

// *********************************************************************//
// Interface: AddIn
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097E-0000-0000-C000-000000000046}
// *********************************************************************//
  AddIn = interface(IDispatch)
    ['{0002097E-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Installed {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Installed {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Compiled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Autoload {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
    property Path: WideString read Get_Path;
    property Installed: WordBool read Get_Installed write Set_Installed;
    property Compiled: WordBool read Get_Compiled;
    property Autoload: WordBool read Get_Autoload;
  end;

// *********************************************************************//
// DispIntf:  AddInDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097E-0000-0000-C000-000000000046}
// *********************************************************************//
  AddInDisp = dispinterface
    ['{0002097E-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    property Installed {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property Compiled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 5;
    property Autoload {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 6;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: AddIns
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097F-0000-0000-C000-000000000046}
// *********************************************************************//
  AddIns = interface(IDispatch)
    ['{0002097F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): AddIn; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                       {VT_12:1}var Install: OleVariant): AddIn; safecall;
    procedure Unload {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_11:0}RemoveFromList: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AddInsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097F-0000-0000-C000-000000000046}
// *********************************************************************//
  AddInsDisp = dispinterface
    ['{0002097F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): AddIn; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                       {VT_12:1}var Install: OleVariant): AddIn; dispid 2;
    procedure Unload {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_11:0}RemoveFromList: WordBool); dispid 3;
  end;

// *********************************************************************//
// Interface: Revisions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020980-0000-0000-C000-000000000046}
// *********************************************************************//
  Revisions = interface(IDispatch)
    ['{00020980-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Revision; safecall;
    procedure AcceptAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure RejectAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  RevisionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020980-0000-0000-C000-000000000046}
// *********************************************************************//
  RevisionsDisp = dispinterface
    ['{00020980-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 5;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Revision; dispid 0;
    procedure AcceptAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure RejectAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: Revision
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020981-0000-0000-C000-000000000046}
// *********************************************************************//
  Revision = interface(IDispatch)
    ['{00020981-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Author {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Date {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TDateTime; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRevisionType; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Accept {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Reject {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Author: WideString read Get_Author;
    property Date: TDateTime read Get_Date;
    property Range: Range read Get_Range;
    property Type_: WdRevisionType read Get_Type_;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  RevisionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020981-0000-0000-C000-000000000046}
// *********************************************************************//
  RevisionDisp = dispinterface
    ['{00020981-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Author {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property Date {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TDateTime readonly dispid 2;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 3;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRevisionType readonly dispid 4;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 5;
    procedure Accept {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Reject {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: Task
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020982-0000-0000-C000-000000000046}
// *********************************************************************//
  Task = interface(IDispatch)
    ['{00020982-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWindowState; safecall;
    procedure Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdWindowState); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure Activate {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Wait: OleVariant); safecall;
    procedure Close {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Move {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Left: Integer; {VT_3:0}Top: Integer); safecall;
    procedure Resize {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Width: Integer; 
                                                          {VT_3:0}Height: Integer); safecall;
    procedure SendWindowMessage {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_3:0}Message: Integer; 
                                                                     {VT_3:0}wParam: Integer; 
                                                                     {VT_3:0}lParam: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property Visible: WordBool read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  TaskDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020982-0000-0000-C000-000000000046}
// *********************************************************************//
  TaskDisp = dispinterface
    ['{00020982-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 1;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 2;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property WindowState {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWindowState dispid 5;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    procedure Activate {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Wait: OleVariant); dispid 10;
    procedure Close {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
    procedure Move {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Left: Integer; {VT_3:0}Top: Integer); dispid 12;
    procedure Resize {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Width: Integer; 
                                                          {VT_3:0}Height: Integer); dispid 13;
    procedure SendWindowMessage {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_3:0}Message: Integer; 
                                                                     {VT_3:0}wParam: Integer; 
                                                                     {VT_3:0}lParam: Integer); dispid 14;
  end;

// *********************************************************************//
// Interface: Tasks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020983-0000-0000-C000-000000000046}
// *********************************************************************//
  Tasks = interface(IDispatch)
    ['{00020983-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Task; safecall;
    function  Exists {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): WordBool; safecall;
    procedure ExitWindows {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  TasksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020983-0000-0000-C000-000000000046}
// *********************************************************************//
  TasksDisp = dispinterface
    ['{00020983-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Task; dispid 0;
    function  Exists {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): WordBool; dispid 2;
    procedure ExitWindows {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 3;
  end;

// *********************************************************************//
// Interface: HeadersFooters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020984-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadersFooters = interface(IDispatch)
    ['{00020984-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Index: WdHeaderFooterIndex): HeaderFooter; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  HeadersFootersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020984-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadersFootersDisp = dispinterface
    ['{00020984-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Index: WdHeaderFooterIndex): HeaderFooter; dispid 0;
  end;

// *********************************************************************//
// Interface: HeaderFooter
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020985-0000-0000-C000-000000000046}
// *********************************************************************//
  HeaderFooter = interface(IDispatch)
    ['{00020985-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHeaderFooterIndex; safecall;
    function  Get_IsHeader {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Exists {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Exists {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PageNumbers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PageNumbers; safecall;
    function  Get_LinkToPrevious {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LinkToPrevious {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shapes; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: Range read Get_Range;
    property Index: WdHeaderFooterIndex read Get_Index;
    property IsHeader: WordBool read Get_IsHeader;
    property Exists: WordBool read Get_Exists write Set_Exists;
    property PageNumbers: PageNumbers read Get_PageNumbers;
    property LinkToPrevious: WordBool read Get_LinkToPrevious write Set_LinkToPrevious;
    property Shapes: Shapes read Get_Shapes;
  end;

// *********************************************************************//
// DispIntf:  HeaderFooterDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020985-0000-0000-C000-000000000046}
// *********************************************************************//
  HeaderFooterDisp = dispinterface
    ['{00020985-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 0;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHeaderFooterIndex readonly dispid 2;
    property IsHeader {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 3;
    property Exists {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property PageNumbers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PageNumbers readonly dispid 5;
    property LinkToPrevious {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property Shapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shapes readonly dispid 7;
  end;

// *********************************************************************//
// Interface: PageNumbers
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020986-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumbers = interface(IDispatch)
    ['{00020986-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_NumberStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPageNumberStyle; safecall;
    procedure Set_NumberStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPageNumberStyle); safecall;
    function  Get_IncludeChapterNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeChapterNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HeadingLevelForChapter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_HeadingLevelForChapter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ChapterPageSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSeparatorType; safecall;
    procedure Set_ChapterPageSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSeparatorType); safecall;
    function  Get_RestartNumberingAtSection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RestartNumberingAtSection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_StartingNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_StartingNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ShowFirstPageNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowFirstPageNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): PageNumber; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var PageNumberAlignment: OleVariant; 
                                                       {VT_12:1}var FirstPage: OleVariant): PageNumber; safecall;
    function  Get_DoubleQuote {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DoubleQuote {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property NumberStyle: WdPageNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property IncludeChapterNumber: WordBool read Get_IncludeChapterNumber write Set_IncludeChapterNumber;
    property HeadingLevelForChapter: Integer read Get_HeadingLevelForChapter write Set_HeadingLevelForChapter;
    property ChapterPageSeparator: WdSeparatorType read Get_ChapterPageSeparator write Set_ChapterPageSeparator;
    property RestartNumberingAtSection: WordBool read Get_RestartNumberingAtSection write Set_RestartNumberingAtSection;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property ShowFirstPageNumber: WordBool read Get_ShowFirstPageNumber write Set_ShowFirstPageNumber;
    property DoubleQuote: WordBool read Get_DoubleQuote write Set_DoubleQuote;
  end;

// *********************************************************************//
// DispIntf:  PageNumbersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020986-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumbersDisp = dispinterface
    ['{00020986-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property NumberStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPageNumberStyle dispid 2;
    property IncludeChapterNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property HeadingLevelForChapter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property ChapterPageSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSeparatorType dispid 5;
    property RestartNumberingAtSection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property StartingNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 7;
    property ShowFirstPageNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 8;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): PageNumber; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var PageNumberAlignment: OleVariant; 
                                                       {VT_12:1}var FirstPage: OleVariant): PageNumber; dispid 101;
    property DoubleQuote {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 10;
  end;

// *********************************************************************//
// Interface: PageNumber
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020987-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumber = interface(IDispatch)
    ['{00020987-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPageNumberAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPageNumberAlignment); safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Copy {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Cut {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Alignment: WdPageNumberAlignment read Get_Alignment write Set_Alignment;
  end;

// *********************************************************************//
// DispIntf:  PageNumberDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020987-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumberDisp = dispinterface
    ['{00020987-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPageNumberAlignment dispid 3;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    procedure Copy {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Cut {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
  end;

// *********************************************************************//
// Interface: Subdocuments
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020988-0000-0000-C000-000000000046}
// *********************************************************************//
  Subdocuments = interface(IDispatch)
    ['{00020988-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Expanded {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Expanded {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Subdocument; safecall;
    function  AddFromFile {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_12:1}var Name: OleVariant; 
                                                               {VT_12:1}var ConfirmConversions: OleVariant; 
                                                               {VT_12:1}var ReadOnly: OleVariant; 
                                                               {VT_12:1}var PasswordDocument: OleVariant; 
                                                               {VT_12:1}var PasswordTemplate: OleVariant; 
                                                               {VT_12:1}var Revert: OleVariant; 
                                                               {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                               {VT_12:1}var WritePasswordTemplate: OleVariant): Subdocument; safecall;
    function  AddFromRange {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): Subdocument; safecall;
    procedure Merge {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_12:1}var FirstSubdocument: OleVariant; 
                                                         {VT_12:1}var LastSubdocument: OleVariant); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Expanded: WordBool read Get_Expanded write Set_Expanded;
  end;

// *********************************************************************//
// DispIntf:  SubdocumentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020988-0000-0000-C000-000000000046}
// *********************************************************************//
  SubdocumentsDisp = dispinterface
    ['{00020988-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Expanded {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Subdocument; dispid 0;
    function  AddFromFile {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_12:1}var Name: OleVariant; 
                                                               {VT_12:1}var ConfirmConversions: OleVariant; 
                                                               {VT_12:1}var ReadOnly: OleVariant; 
                                                               {VT_12:1}var PasswordDocument: OleVariant; 
                                                               {VT_12:1}var PasswordTemplate: OleVariant; 
                                                               {VT_12:1}var Revert: OleVariant; 
                                                               {VT_12:1}var WritePasswordDocument: OleVariant; 
                                                               {VT_12:1}var WritePasswordTemplate: OleVariant): Subdocument; dispid 100;
    function  AddFromRange {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): Subdocument; dispid 101;
    procedure Merge {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_12:1}var FirstSubdocument: OleVariant; 
                                                         {VT_12:1}var LastSubdocument: OleVariant); dispid 102;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 104;
  end;

// *********************************************************************//
// Interface: Subdocument
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020989-0000-0000-C000-000000000046}
// *********************************************************************//
  Subdocument = interface(IDispatch)
    ['{00020989-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Locked {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Locked {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_HasFile {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Level {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Split {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range); safecall;
    function  Open {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordDocument; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Range: Range read Get_Range;
    property Name: WideString read Get_Name;
    property Path: WideString read Get_Path;
    property HasFile: WordBool read Get_HasFile;
    property Level: Integer read Get_Level;
  end;

// *********************************************************************//
// DispIntf:  SubdocumentDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020989-0000-0000-C000-000000000046}
// *********************************************************************//
  SubdocumentDisp = dispinterface
    ['{00020989-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Locked {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 2;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 3;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 4;
    property HasFile {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 5;
    property Level {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 6;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Split {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range); dispid 101;
    function  Open {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordDocument; dispid 102;
  end;

// *********************************************************************//
// Interface: HeadingStyles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098A-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStyles = interface(IDispatch)
    ['{0002098A-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): HeadingStyle; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var Style: OleVariant; 
                                                       {VT_2:0}Level: Smallint): HeadingStyle; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  HeadingStylesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098A-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStylesDisp = dispinterface
    ['{0002098A-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): HeadingStyle; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var Style: OleVariant; 
                                                       {VT_2:0}Level: Smallint): HeadingStyle; dispid 100;
  end;

// *********************************************************************//
// Interface: HeadingStyle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098B-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStyle = interface(IDispatch)
    ['{0002098B-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Level {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Smallint; safecall;
    procedure Set_Level {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_2:0}prop: Smallint); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Level: Smallint read Get_Level write Set_Level;
  end;

// *********************************************************************//
// DispIntf:  HeadingStyleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098B-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStyleDisp = dispinterface
    ['{0002098B-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Style {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 0;
    property Level {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Smallint dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
  end;

// *********************************************************************//
// Interface: StoryRanges
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098C-0000-0000-C000-000000000046}
// *********************************************************************//
  StoryRanges = interface(IDispatch)
    ['{0002098C-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Index: WdStoryType): Range; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  StoryRangesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098C-0000-0000-C000-000000000046}
// *********************************************************************//
  StoryRangesDisp = dispinterface
    ['{0002098C-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Index: WdStoryType): Range; dispid 0;
  end;

// *********************************************************************//
// Interface: ListLevel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098D-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevel = interface(IDispatch)
    ['{0002098D-0000-0000-C000-000000000046}']
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_NumberFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NumberFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_TrailingCharacter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdTrailingCharacter; safecall;
    procedure Set_TrailingCharacter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdTrailingCharacter); safecall;
    function  Get_NumberStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdListNumberStyle; safecall;
    procedure Set_NumberStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdListNumberStyle); safecall;
    function  Get_NumberPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_NumberPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdListLevelAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdListLevelAlignment); safecall;
    function  Get_TextPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_TextPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_TabPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_TabPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ResetOnHigherOld {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ResetOnHigherOld {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_StartAt {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_StartAt {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_LinkedStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_LinkedStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Font {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordFont; safecall;
    procedure Set_Font {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: WordFont); safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ResetOnHigher {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ResetOnHigher {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Index: Integer read Get_Index;
    property NumberFormat: WideString read Get_NumberFormat write Set_NumberFormat;
    property TrailingCharacter: WdTrailingCharacter read Get_TrailingCharacter write Set_TrailingCharacter;
    property NumberStyle: WdListNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property NumberPosition: Single read Get_NumberPosition write Set_NumberPosition;
    property Alignment: WdListLevelAlignment read Get_Alignment write Set_Alignment;
    property TextPosition: Single read Get_TextPosition write Set_TextPosition;
    property TabPosition: Single read Get_TabPosition write Set_TabPosition;
    property ResetOnHigherOld: WordBool read Get_ResetOnHigherOld write Set_ResetOnHigherOld;
    property StartAt: Integer read Get_StartAt write Set_StartAt;
    property LinkedStyle: WideString read Get_LinkedStyle write Set_LinkedStyle;
    property Font: WordFont read Get_Font write Set_Font;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ResetOnHigher: Integer read Get_ResetOnHigher write Set_ResetOnHigher;
  end;

// *********************************************************************//
// DispIntf:  ListLevelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098D-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevelDisp = dispinterface
    ['{0002098D-0000-0000-C000-000000000046}']
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property NumberFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 2;
    property TrailingCharacter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdTrailingCharacter dispid 3;
    property NumberStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdListNumberStyle dispid 4;
    property NumberPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 5;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdListLevelAlignment dispid 6;
    property TextPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 7;
    property TabPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 8;
    property ResetOnHigherOld {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property StartAt {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 10;
    property LinkedStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 11;
    property Font {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordFont dispid 12;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property ResetOnHigher {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 13;
  end;

// *********************************************************************//
// Interface: ListLevels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098E-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevels = interface(IDispatch)
    ['{0002098E-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): ListLevel; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListLevelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098E-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevelsDisp = dispinterface
    ['{0002098E-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): ListLevel; dispid 0;
  end;

// *********************************************************************//
// Interface: ListTemplate
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098F-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplate = interface(IDispatch)
    ['{0002098F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OutlineNumbered {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OutlineNumbered {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ListLevels {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListLevels; safecall;
    function  Convert {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Level: OleVariant): ListTemplate; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OutlineNumbered: WordBool read Get_OutlineNumbered write Set_OutlineNumbered;
    property Name: WideString read Get_Name write Set_Name;
    property ListLevels: ListLevels read Get_ListLevels;
  end;

// *********************************************************************//
// DispIntf:  ListTemplateDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098F-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplateDisp = dispinterface
    ['{0002098F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property OutlineNumbered {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 3;
    property ListLevels {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListLevels readonly dispid 2;
    function  Convert {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Level: OleVariant): ListTemplate; dispid 101;
  end;

// *********************************************************************//
// Interface: ListTemplates
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020990-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplates = interface(IDispatch)
    ['{00020990-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): ListTemplate; safecall;
    function  Add {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var OutlineNumbered: OleVariant; 
                                                       {VT_12:1}var Name: OleVariant): ListTemplate; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListTemplatesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020990-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplatesDisp = dispinterface
    ['{00020990-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): ListTemplate; dispid 0;
    function  Add {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var OutlineNumbered: OleVariant; 
                                                       {VT_12:1}var Name: OleVariant): ListTemplate; dispid 100;
  end;

// *********************************************************************//
// Interface: ListParagraphs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020991-0000-0000-C000-000000000046}
// *********************************************************************//
  ListParagraphs = interface(IDispatch)
    ['{00020991-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Paragraph; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListParagraphsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020991-0000-0000-C000-000000000046}
// *********************************************************************//
  ListParagraphsDisp = dispinterface
    ['{00020991-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Paragraph; dispid 0;
  end;

// *********************************************************************//
// Interface: List
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020992-0000-0000-C000-000000000046}
// *********************************************************************//
  List = interface(IDispatch)
    ['{00020992-0000-0000-C000-000000000046}']
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListParagraphs; safecall;
    function  Get_SingleListTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant); safecall;
    procedure RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant); safecall;
    function  CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; safecall;
    procedure ApplyListTemplateOld {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                        {VT_12:1}var ContinuePreviousList: OleVariant); safecall;
    function  CanContinuePreviousList {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate): WdContinue; safecall;
    procedure ApplyListTemplate {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                     {VT_12:1}var ContinuePreviousList: OleVariant; 
                                                                     {VT_12:1}var DefaultListBehavior: OleVariant); safecall;
    property Range: Range read Get_Range;
    property ListParagraphs: ListParagraphs read Get_ListParagraphs;
    property SingleListTemplate: WordBool read Get_SingleListTemplate;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020992-0000-0000-C000-000000000046}
// *********************************************************************//
  ListDisp = dispinterface
    ['{00020992-0000-0000-C000-000000000046}']
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1;
    property ListParagraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListParagraphs readonly dispid 2;
    property SingleListTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 3;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    procedure ConvertNumbersToText {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant); dispid 101;
    procedure RemoveNumbers {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant); dispid 102;
    function  CountNumberedItems {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; dispid 103;
    procedure ApplyListTemplateOld {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                        {VT_12:1}var ContinuePreviousList: OleVariant); dispid 104;
    function  CanContinuePreviousList {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate): WdContinue; dispid 105;
    procedure ApplyListTemplate {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:1}const ListTemplate: ListTemplate; 
                                                                     {VT_12:1}var ContinuePreviousList: OleVariant; 
                                                                     {VT_12:1}var DefaultListBehavior: OleVariant); dispid 106;
  end;

// *********************************************************************//
// Interface: Lists
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020993-0000-0000-C000-000000000046}
// *********************************************************************//
  Lists = interface(IDispatch)
    ['{00020993-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): List; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020993-0000-0000-C000-000000000046}
// *********************************************************************//
  ListsDisp = dispinterface
    ['{00020993-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): List; dispid 0;
  end;

// *********************************************************************//
// Interface: ListGallery
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020994-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGallery = interface(IDispatch)
    ['{00020994-0000-0000-C000-000000000046}']
    function  Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ListTemplates; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Modified {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): WordBool; safecall;
    procedure Reset {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer); safecall;
    property ListTemplates: ListTemplates read Get_ListTemplates;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Modified {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: WordBool read Get_Modified;
  end;

// *********************************************************************//
// DispIntf:  ListGalleryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020994-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGalleryDisp = dispinterface
    ['{00020994-0000-0000-C000-000000000046}']
    property ListTemplates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ListTemplates readonly dispid 1;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Modified {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: WordBool readonly dispid 101;
    procedure Reset {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer); dispid 100;
  end;

// *********************************************************************//
// Interface: ListGalleries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020995-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGalleries = interface(IDispatch)
    ['{00020995-0000-0000-C000-000000000046}']
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Index: WdListGalleryType): ListGallery; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListGalleriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020995-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGalleriesDisp = dispinterface
    ['{00020995-0000-0000-C000-000000000046}']
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Index: WdListGalleryType): ListGallery; dispid 0;
  end;

// *********************************************************************//
// Interface: KeyBindings
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020996-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBindings = interface(IDispatch)
    ['{00020996-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Context {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): KeyBinding; safecall;
    function  Add {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                       {VT_8:0}const Command: WideString; 
                                                       {VT_3:0}KeyCode: Integer; 
                                                       {VT_12:1}var KeyCode2: OleVariant; 
                                                       {VT_12:1}var CommandParameter: OleVariant): KeyBinding; safecall;
    procedure ClearAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Key {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}KeyCode: Integer; 
                                                       {VT_12:1}var KeyCode2: OleVariant): KeyBinding; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Context: IDispatch read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  KeyBindingsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020996-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBindingsDisp = dispinterface
    ['{00020996-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Context {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 10;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): KeyBinding; dispid 0;
    function  Add {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                       {VT_8:0}const Command: WideString; 
                                                       {VT_3:0}KeyCode: Integer; 
                                                       {VT_12:1}var KeyCode2: OleVariant; 
                                                       {VT_12:1}var CommandParameter: OleVariant): KeyBinding; dispid 101;
    procedure ClearAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    function  Key {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}KeyCode: Integer; 
                                                       {VT_12:1}var KeyCode2: OleVariant): KeyBinding; dispid 110;
  end;

// *********************************************************************//
// Interface: KeysBoundTo
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020997-0000-0000-C000-000000000046}
// *********************************************************************//
  KeysBoundTo = interface(IDispatch)
    ['{00020997-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_KeyCategory {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdKeyCategory; safecall;
    function  Get_Command {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_CommandParameter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Context {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): KeyBinding; safecall;
    function  Key {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_3:0}KeyCode: Integer; 
                                                       {VT_12:1}var KeyCode2: OleVariant): KeyBinding; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property KeyCategory: WdKeyCategory read Get_KeyCategory;
    property Command: WideString read Get_Command;
    property CommandParameter: WideString read Get_CommandParameter;
    property Context: IDispatch read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  KeysBoundToDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020997-0000-0000-C000-000000000046}
// *********************************************************************//
  KeysBoundToDisp = dispinterface
    ['{00020997-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property KeyCategory {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdKeyCategory readonly dispid 3;
    property Command {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 4;
    property CommandParameter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 5;
    property Context {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 10;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): KeyBinding; dispid 0;
    function  Key {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_3:0}KeyCode: Integer; 
                                                       {VT_12:1}var KeyCode2: OleVariant): KeyBinding; dispid 1;
  end;

// *********************************************************************//
// Interface: KeyBinding
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020998-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBinding = interface(IDispatch)
    ['{00020998-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Command {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_KeyString {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Protected_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_KeyCategory {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdKeyCategory; safecall;
    function  Get_KeyCode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_KeyCode2 {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_CommandParameter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Context {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure Clear {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Disable {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Execute {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Rebind {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                          {VT_8:0}const Command: WideString; 
                                                          {VT_12:1}var CommandParameter: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Command: WideString read Get_Command;
    property KeyString: WideString read Get_KeyString;
    property Protected_: WordBool read Get_Protected_;
    property KeyCategory: WdKeyCategory read Get_KeyCategory;
    property KeyCode: Integer read Get_KeyCode;
    property KeyCode2: Integer read Get_KeyCode2;
    property CommandParameter: WideString read Get_CommandParameter;
    property Context: IDispatch read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  KeyBindingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020998-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBindingDisp = dispinterface
    ['{00020998-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Command {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property KeyString {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    property Protected_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 3;
    property KeyCategory {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdKeyCategory readonly dispid 4;
    property KeyCode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 6;
    property KeyCode2 {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 7;
    property CommandParameter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 8;
    property Context {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 10;
    procedure Clear {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Disable {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure Execute {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    procedure Rebind {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                          {VT_8:0}const Command: WideString; 
                                                          {VT_12:1}var CommandParameter: OleVariant); dispid 104;
  end;

// *********************************************************************//
// Interface: FileConverter
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020999-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConverter = interface(IDispatch)
    ['{00020999-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_FormatName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_ClassName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_OpenFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_CanSave {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_CanOpen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Extensions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property FormatName: WideString read Get_FormatName;
    property ClassName: WideString read Get_ClassName;
    property SaveFormat: Integer read Get_SaveFormat;
    property OpenFormat: Integer read Get_OpenFormat;
    property CanSave: WordBool read Get_CanSave;
    property CanOpen: WordBool read Get_CanOpen;
    property Path: WideString read Get_Path;
    property Name: WideString read Get_Name;
    property Extensions: WideString read Get_Extensions;
  end;

// *********************************************************************//
// DispIntf:  FileConverterDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020999-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConverterDisp = dispinterface
    ['{00020999-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property FormatName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property ClassName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property SaveFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property OpenFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 3;
    property CanSave {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 4;
    property CanOpen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 5;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 6;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 7;
    property Extensions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 8;
  end;

// *********************************************************************//
// Interface: FileConverters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099A-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConverters = interface(IDispatch)
    ['{0002099A-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_ConvertMacWordChevrons {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdChevronConvertRule; safecall;
    procedure Set_ConvertMacWordChevrons {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdChevronConvertRule); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): FileConverter; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property ConvertMacWordChevrons: WdChevronConvertRule read Get_ConvertMacWordChevrons write Set_ConvertMacWordChevrons;
  end;

// *********************************************************************//
// DispIntf:  FileConvertersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099A-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConvertersDisp = dispinterface
    ['{0002099A-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property ConvertMacWordChevrons {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdChevronConvertRule dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): FileConverter; dispid 0;
  end;

// *********************************************************************//
// Interface: SynonymInfo
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099B-0000-0000-C000-000000000046}
// *********************************************************************//
  SynonymInfo = interface(IDispatch)
    ['{0002099B-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Word {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Found {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_MeaningCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_MeaningList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_PartOfSpeechList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_SynonymList {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_12:1}var Meaning: OleVariant): OleVariant; safecall;
    function  Get_AntonymList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_RelatedExpressionList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_RelatedWordList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Word: WideString read Get_Word;
    property Found: WordBool read Get_Found;
    property MeaningCount: Integer read Get_MeaningCount;
    property MeaningList: OleVariant read Get_MeaningList;
    property PartOfSpeechList: OleVariant read Get_PartOfSpeechList;
    property SynonymList {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_12:1}var Meaning: OleVariant]: OleVariant read Get_SynonymList;
    property AntonymList: OleVariant read Get_AntonymList;
    property RelatedExpressionList: OleVariant read Get_RelatedExpressionList;
    property RelatedWordList: OleVariant read Get_RelatedWordList;
  end;

// *********************************************************************//
// DispIntf:  SynonymInfoDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099B-0000-0000-C000-000000000046}
// *********************************************************************//
  SynonymInfoDisp = dispinterface
    ['{0002099B-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Word {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property Found {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 2;
    property MeaningCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 3;
    property MeaningList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 4;
    property PartOfSpeechList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 5;
    property SynonymList {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_12:1}var Meaning: OleVariant]: OleVariant readonly dispid 7;
    property AntonymList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 8;
    property RelatedExpressionList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 9;
    property RelatedWordList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 10;
  end;

// *********************************************************************//
// Interface: Hyperlinks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099C-0000-0000-C000-000000000046}
// *********************************************************************//
  Hyperlinks = interface(IDispatch)
    ['{0002099C-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Hyperlink; safecall;
    function  _Add {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_9:0}const Anchor: IDispatch; 
                                                        {VT_12:1}var Address: OleVariant; 
                                                        {VT_12:1}var SubAddress: OleVariant): Hyperlink; safecall;
    function  Add {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_9:0}const Anchor: IDispatch; 
                                                       {VT_12:1}var Address: OleVariant; 
                                                       {VT_12:1}var SubAddress: OleVariant; 
                                                       {VT_12:1}var ScreenTip: OleVariant; 
                                                       {VT_12:1}var TextToDisplay: OleVariant; 
                                                       {VT_12:1}var Target: OleVariant): Hyperlink; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  HyperlinksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099C-0000-0000-C000-000000000046}
// *********************************************************************//
  HyperlinksDisp = dispinterface
    ['{0002099C-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Hyperlink; dispid 0;
    function  _Add {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_9:0}const Anchor: IDispatch; 
                                                        {VT_12:1}var Address: OleVariant; 
                                                        {VT_12:1}var SubAddress: OleVariant): Hyperlink; dispid 100;
    function  Add {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_9:0}const Anchor: IDispatch; 
                                                       {VT_12:1}var Address: OleVariant; 
                                                       {VT_12:1}var SubAddress: OleVariant; 
                                                       {VT_12:1}var ScreenTip: OleVariant; 
                                                       {VT_12:1}var TextToDisplay: OleVariant; 
                                                       {VT_12:1}var Target: OleVariant): Hyperlink; dispid 101;
  end;

// *********************************************************************//
// Interface: Hyperlink
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099D-0000-0000-C000-000000000046}
// *********************************************************************//
  Hyperlink = interface(IDispatch)
    ['{0002099D-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_AddressOld {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoHyperlinkType; safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Shape {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shape; safecall;
    function  Get_SubAddressOld {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_ExtraInfoRequired {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Follow {Flags(1), (5/5) CC:0, INV:1, DBG:6}({VT_12:1}var NewWindow: OleVariant; 
                                                          {VT_12:1}var AddHistory: OleVariant; 
                                                          {VT_12:1}var ExtraInfo: OleVariant; 
                                                          {VT_12:1}var Method: OleVariant; 
                                                          {VT_12:1}var HeaderInfo: OleVariant); safecall;
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CreateNewDocument {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                                     {VT_11:0}EditNow: WordBool; 
                                                                     {VT_11:0}Overwrite: WordBool); safecall;
    function  Get_Address {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Address {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SubAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SubAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_EmailSubject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_EmailSubject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ScreenTip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ScreenTip {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_TextToDisplay {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_TextToDisplay {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Target {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Target {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property AddressOld: WideString read Get_AddressOld;
    property Type_: MsoHyperlinkType read Get_Type_;
    property Range: Range read Get_Range;
    property Shape: Shape read Get_Shape;
    property SubAddressOld: WideString read Get_SubAddressOld;
    property ExtraInfoRequired: WordBool read Get_ExtraInfoRequired;
    property Address: WideString read Get_Address write Set_Address;
    property SubAddress: WideString read Get_SubAddress write Set_SubAddress;
    property EmailSubject: WideString read Get_EmailSubject write Set_EmailSubject;
    property ScreenTip: WideString read Get_ScreenTip write Set_ScreenTip;
    property TextToDisplay: WideString read Get_TextToDisplay write Set_TextToDisplay;
    property Target: WideString read Get_Target write Set_Target;
  end;

// *********************************************************************//
// DispIntf:  HyperlinkDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099D-0000-0000-C000-000000000046}
// *********************************************************************//
  HyperlinkDisp = dispinterface
    ['{0002099D-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1003;
    property AddressOld {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1004;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoHyperlinkType readonly dispid 1005;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1006;
    property Shape {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shape readonly dispid 1007;
    property SubAddressOld {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1008;
    property ExtraInfoRequired {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 1009;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    procedure Follow {Flags(2), (5/5) CC:0, INV:1, DBG:4}({VT_12:1}var NewWindow: OleVariant; 
                                                          {VT_12:1}var AddHistory: OleVariant; 
                                                          {VT_12:1}var ExtraInfo: OleVariant; 
                                                          {VT_12:1}var Method: OleVariant; 
                                                          {VT_12:1}var HeaderInfo: OleVariant); dispid 104;
    procedure AddToFavorites {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 105;
    procedure CreateNewDocument {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                                     {VT_11:0}EditNow: WordBool; 
                                                                     {VT_11:0}Overwrite: WordBool); dispid 106;
    property Address {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1100;
    property SubAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1101;
    property EmailSubject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1010;
    property ScreenTip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1011;
    property TextToDisplay {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1012;
    property Target {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: Shapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099F-0000-0000-C000-000000000046}
// *********************************************************************//
  Shapes = interface(IDispatch)
    ['{0002099F-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Shape; safecall;
    function  AddCallout {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_29:0}Type_: MsoCalloutType; 
                                                              {VT_4:0}Left: Single; 
                                                              {VT_4:0}Top: Single; 
                                                              {VT_4:0}Width: Single; 
                                                              {VT_4:0}Height: Single; 
                                                              {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddConnector {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_29:0}Type_: MsoConnectorType; 
                                                                {VT_4:0}BeginX: Single; 
                                                                {VT_4:0}BeginY: Single; 
                                                                {VT_4:0}EndX: Single; 
                                                                {VT_4:0}EndY: Single): Shape; safecall;
    function  AddCurve {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var SafeArrayOfPoints: OleVariant; 
                                                            {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddLabel {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_29:0}Orientation: MsoTextOrientation; 
                                                            {VT_4:0}Left: Single; 
                                                            {VT_4:0}Top: Single; 
                                                            {VT_4:0}Width: Single; 
                                                            {VT_4:0}Height: Single; 
                                                            {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddLine {Flags(1), (6/5) CC:0, INV:1, DBG:6}({VT_4:0}BeginX: Single; 
                                                           {VT_4:0}BeginY: Single; 
                                                           {VT_4:0}EndX: Single; 
                                                           {VT_4:0}EndY: Single; 
                                                           {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddPicture {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var LinkToFile: OleVariant; 
                                                              {VT_12:1}var SaveWithDocument: OleVariant; 
                                                              {VT_12:1}var Left: OleVariant; 
                                                              {VT_12:1}var Top: OleVariant; 
                                                              {VT_12:1}var Width: OleVariant; 
                                                              {VT_12:1}var Height: OleVariant; 
                                                              {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddPolyline {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var SafeArrayOfPoints: OleVariant; 
                                                               {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddShape {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_3:0}Type_: Integer; 
                                                            {VT_4:0}Left: Single; 
                                                            {VT_4:0}Top: Single; 
                                                            {VT_4:0}Width: Single; 
                                                            {VT_4:0}Height: Single; 
                                                            {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddTextEffect {Flags(1), (10/9) CC:0, INV:1, DBG:6}({VT_29:0}PresetTextEffect: MsoPresetTextEffect; 
                                                                  {VT_8:0}const Text: WideString; 
                                                                  {VT_8:0}const FontName: WideString; 
                                                                  {VT_4:0}FontSize: Single; 
                                                                  {VT_29:0}FontBold: MsoTriState; 
                                                                  {VT_29:0}FontItalic: MsoTriState; 
                                                                  {VT_4:0}Left: Single; 
                                                                  {VT_4:0}Top: Single; 
                                                                  {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddTextbox {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_29:0}Orientation: MsoTextOrientation; 
                                                              {VT_4:0}Left: Single; 
                                                              {VT_4:0}Top: Single; 
                                                              {VT_4:0}Width: Single; 
                                                              {VT_4:0}Height: Single; 
                                                              {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  BuildFreeform {Flags(1), (4/3) CC:0, INV:1, DBG:6}({VT_29:0}EditingType: MsoEditingType; 
                                                                 {VT_4:0}X1: Single; 
                                                                 {VT_4:0}Y1: Single): FreeformBuilder; safecall;
    function  Range {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): ShapeRange; safecall;
    procedure SelectAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  AddOLEObject {Flags(1), (13/12) CC:0, INV:1, DBG:6}({VT_12:1}var ClassType: OleVariant; 
                                                                  {VT_12:1}var FileName: OleVariant; 
                                                                  {VT_12:1}var LinkToFile: OleVariant; 
                                                                  {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                  {VT_12:1}var IconFileName: OleVariant; 
                                                                  {VT_12:1}var IconIndex: OleVariant; 
                                                                  {VT_12:1}var IconLabel: OleVariant; 
                                                                  {VT_12:1}var Left: OleVariant; 
                                                                  {VT_12:1}var Top: OleVariant; 
                                                                  {VT_12:1}var Width: OleVariant; 
                                                                  {VT_12:1}var Height: OleVariant; 
                                                                  {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    function  AddOLEControl {Flags(1), (7/6) CC:0, INV:1, DBG:6}({VT_12:1}var ClassType: OleVariant; 
                                                                 {VT_12:1}var Left: OleVariant; 
                                                                 {VT_12:1}var Top: OleVariant; 
                                                                 {VT_12:1}var Width: OleVariant; 
                                                                 {VT_12:1}var Height: OleVariant; 
                                                                 {VT_12:1}var Anchor: OleVariant): Shape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  ShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099F-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapesDisp = dispinterface
    ['{0002099F-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 8000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Shape; dispid 0;
    function  AddCallout {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_29:0}Type_: MsoCalloutType; 
                                                              {VT_4:0}Left: Single; 
                                                              {VT_4:0}Top: Single; 
                                                              {VT_4:0}Width: Single; 
                                                              {VT_4:0}Height: Single; 
                                                              {VT_12:1}var Anchor: OleVariant): Shape; dispid 10;
    function  AddConnector {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_29:0}Type_: MsoConnectorType; 
                                                                {VT_4:0}BeginX: Single; 
                                                                {VT_4:0}BeginY: Single; 
                                                                {VT_4:0}EndX: Single; 
                                                                {VT_4:0}EndY: Single): Shape; dispid 11;
    function  AddCurve {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var SafeArrayOfPoints: OleVariant; 
                                                            {VT_12:1}var Anchor: OleVariant): Shape; dispid 12;
    function  AddLabel {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_29:0}Orientation: MsoTextOrientation; 
                                                            {VT_4:0}Left: Single; 
                                                            {VT_4:0}Top: Single; 
                                                            {VT_4:0}Width: Single; 
                                                            {VT_4:0}Height: Single; 
                                                            {VT_12:1}var Anchor: OleVariant): Shape; dispid 13;
    function  AddLine {Flags(2), (6/5) CC:0, INV:1, DBG:4}({VT_4:0}BeginX: Single; 
                                                           {VT_4:0}BeginY: Single; 
                                                           {VT_4:0}EndX: Single; 
                                                           {VT_4:0}EndY: Single; 
                                                           {VT_12:1}var Anchor: OleVariant): Shape; dispid 14;
    function  AddPicture {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var LinkToFile: OleVariant; 
                                                              {VT_12:1}var SaveWithDocument: OleVariant; 
                                                              {VT_12:1}var Left: OleVariant; 
                                                              {VT_12:1}var Top: OleVariant; 
                                                              {VT_12:1}var Width: OleVariant; 
                                                              {VT_12:1}var Height: OleVariant; 
                                                              {VT_12:1}var Anchor: OleVariant): Shape; dispid 15;
    function  AddPolyline {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var SafeArrayOfPoints: OleVariant; 
                                                               {VT_12:1}var Anchor: OleVariant): Shape; dispid 16;
    function  AddShape {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_3:0}Type_: Integer; 
                                                            {VT_4:0}Left: Single; 
                                                            {VT_4:0}Top: Single; 
                                                            {VT_4:0}Width: Single; 
                                                            {VT_4:0}Height: Single; 
                                                            {VT_12:1}var Anchor: OleVariant): Shape; dispid 17;
    function  AddTextEffect {Flags(2), (10/9) CC:0, INV:1, DBG:4}({VT_29:0}PresetTextEffect: MsoPresetTextEffect; 
                                                                  {VT_8:0}const Text: WideString; 
                                                                  {VT_8:0}const FontName: WideString; 
                                                                  {VT_4:0}FontSize: Single; 
                                                                  {VT_29:0}FontBold: MsoTriState; 
                                                                  {VT_29:0}FontItalic: MsoTriState; 
                                                                  {VT_4:0}Left: Single; 
                                                                  {VT_4:0}Top: Single; 
                                                                  {VT_12:1}var Anchor: OleVariant): Shape; dispid 18;
    function  AddTextbox {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_29:0}Orientation: MsoTextOrientation; 
                                                              {VT_4:0}Left: Single; 
                                                              {VT_4:0}Top: Single; 
                                                              {VT_4:0}Width: Single; 
                                                              {VT_4:0}Height: Single; 
                                                              {VT_12:1}var Anchor: OleVariant): Shape; dispid 19;
    function  BuildFreeform {Flags(2), (4/3) CC:0, INV:1, DBG:4}({VT_29:0}EditingType: MsoEditingType; 
                                                                 {VT_4:0}X1: Single; 
                                                                 {VT_4:0}Y1: Single): FreeformBuilder; dispid 20;
    function  Range {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): ShapeRange; dispid 21;
    procedure SelectAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 22;
    function  AddOLEObject {Flags(2), (13/12) CC:0, INV:1, DBG:4}({VT_12:1}var ClassType: OleVariant; 
                                                                  {VT_12:1}var FileName: OleVariant; 
                                                                  {VT_12:1}var LinkToFile: OleVariant; 
                                                                  {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                  {VT_12:1}var IconFileName: OleVariant; 
                                                                  {VT_12:1}var IconIndex: OleVariant; 
                                                                  {VT_12:1}var IconLabel: OleVariant; 
                                                                  {VT_12:1}var Left: OleVariant; 
                                                                  {VT_12:1}var Top: OleVariant; 
                                                                  {VT_12:1}var Width: OleVariant; 
                                                                  {VT_12:1}var Height: OleVariant; 
                                                                  {VT_12:1}var Anchor: OleVariant): Shape; dispid 24;
    function  AddOLEControl {Flags(2), (7/6) CC:0, INV:1, DBG:4}({VT_12:1}var ClassType: OleVariant; 
                                                                 {VT_12:1}var Left: OleVariant; 
                                                                 {VT_12:1}var Top: OleVariant; 
                                                                 {VT_12:1}var Width: OleVariant; 
                                                                 {VT_12:1}var Height: OleVariant; 
                                                                 {VT_12:1}var Anchor: OleVariant): Shape; dispid 102;
  end;

// *********************************************************************//
// Interface: ShapeRange
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B5-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeRange = interface(IDispatch)
    ['{000209B5-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Adjustments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Adjustments; safecall;
    function  Get_AutoShapeType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoAutoShapeType; safecall;
    procedure Set_AutoShapeType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoAutoShapeType); safecall;
    function  Get_Callout {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CalloutFormat; safecall;
    function  Get_ConnectionSiteCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Connector {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_ConnectorFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ConnectorFormat; safecall;
    function  Get_Fill {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FillFormat; safecall;
    function  Get_GroupItems {Flags(1), (1/0) CC:0, INV:2, DBG:6}: GroupShapes; safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HorizontalFlip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Line {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LineFormat; safecall;
    function  Get_LockAspectRatio {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_LockAspectRatio {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Nodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ShapeNodes; safecall;
    function  Get_Rotation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Rotation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PictureFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PictureFormat; safecall;
    function  Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ShadowFormat; safecall;
    function  Get_TextEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextEffectFormat; safecall;
    function  Get_TextFrame {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextFrame; safecall;
    function  Get_ThreeD {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ThreeDFormat; safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoShapeType; safecall;
    function  Get_VerticalFlip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_Vertices {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ZOrderPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Hyperlink; safecall;
    function  Get_RelativeHorizontalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeHorizontalPosition); safecall;
    function  Get_RelativeVerticalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeVerticalPosition); safecall;
    function  Get_LockAnchor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LockAnchor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WrapFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WrapFormat; safecall;
    function  Get_Anchor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Shape; safecall;
    procedure Align {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:0}Align: MsoAlignCmd; 
                                                         {VT_3:0}RelativeTo: Integer); safecall;
    procedure Apply {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Distribute {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:0}Distribute: MsoDistributeCmd; 
                                                              {VT_3:0}RelativeTo: Integer); safecall;
    function  Duplicate {Flags(1), (1/0) CC:0, INV:1, DBG:6}: ShapeRange; safecall;
    procedure Flip {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}FlipCmd: MsoFlipCmd); safecall;
    procedure IncrementLeft {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementRotation {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementTop {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    function  Group {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Shape; safecall;
    procedure PickUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Regroup {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Shape; safecall;
    procedure RerouteConnections {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ScaleHeight {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_4:0}Factor: Single; 
                                                               {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                               {VT_29:0}Scale: MsoScaleFrom); safecall;
    procedure ScaleWidth {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_4:0}Factor: Single; 
                                                              {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                              {VT_29:0}Scale: MsoScaleFrom); safecall;
    procedure Select {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Replace: OleVariant); safecall;
    procedure SetShapesDefaultProperties {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Ungroup {Flags(1), (1/0) CC:0, INV:1, DBG:6}: ShapeRange; safecall;
    procedure ZOrder {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}ZOrderCmd: MsoZOrderCmd); safecall;
    function  ConvertToFrame {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Frame; safecall;
    function  ConvertToInlineShape {Flags(1), (1/0) CC:0, INV:1, DBG:6}: InlineShape; safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_AlternativeText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AlternativeText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Adjustments: Adjustments read Get_Adjustments;
    property AutoShapeType: MsoAutoShapeType read Get_AutoShapeType write Set_AutoShapeType;
    property Callout: CalloutFormat read Get_Callout;
    property ConnectionSiteCount: Integer read Get_ConnectionSiteCount;
    property Connector: MsoTriState read Get_Connector;
    property ConnectorFormat: ConnectorFormat read Get_ConnectorFormat;
    property Fill: FillFormat read Get_Fill;
    property GroupItems: GroupShapes read Get_GroupItems;
    property Height: Single read Get_Height write Set_Height;
    property HorizontalFlip: MsoTriState read Get_HorizontalFlip;
    property Left: Single read Get_Left write Set_Left;
    property Line: LineFormat read Get_Line;
    property LockAspectRatio: MsoTriState read Get_LockAspectRatio write Set_LockAspectRatio;
    property Name: WideString read Get_Name write Set_Name;
    property Nodes: ShapeNodes read Get_Nodes;
    property Rotation: Single read Get_Rotation write Set_Rotation;
    property PictureFormat: PictureFormat read Get_PictureFormat;
    property Shadow: ShadowFormat read Get_Shadow;
    property TextEffect: TextEffectFormat read Get_TextEffect;
    property TextFrame: TextFrame read Get_TextFrame;
    property ThreeD: ThreeDFormat read Get_ThreeD;
    property Top: Single read Get_Top write Set_Top;
    property Type_: MsoShapeType read Get_Type_;
    property VerticalFlip: MsoTriState read Get_VerticalFlip;
    property Vertices: OleVariant read Get_Vertices;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Width: Single read Get_Width write Set_Width;
    property ZOrderPosition: Integer read Get_ZOrderPosition;
    property Hyperlink: Hyperlink read Get_Hyperlink;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property LockAnchor: Integer read Get_LockAnchor write Set_LockAnchor;
    property WrapFormat: WrapFormat read Get_WrapFormat;
    property Anchor: Range read Get_Anchor;
    property AlternativeText: WideString read Get_AlternativeText write Set_AlternativeText;
  end;

// *********************************************************************//
// DispIntf:  ShapeRangeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B5-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeRangeDisp = dispinterface
    ['{000209B5-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 8000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Adjustments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Adjustments readonly dispid 100;
    property AutoShapeType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoAutoShapeType dispid 101;
    property Callout {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CalloutFormat readonly dispid 103;
    property ConnectionSiteCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 104;
    property Connector {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 105;
    property ConnectorFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ConnectorFormat readonly dispid 106;
    property Fill {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FillFormat readonly dispid 107;
    property GroupItems {Flags(2), (1/0) CC:0, INV:2, DBG:6}: GroupShapes readonly dispid 108;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property HorizontalFlip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 110;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property Line {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LineFormat readonly dispid 112;
    property LockAspectRatio {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 113;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property Nodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ShapeNodes readonly dispid 116;
    property Rotation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 117;
    property PictureFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PictureFormat readonly dispid 118;
    property Shadow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ShadowFormat readonly dispid 119;
    property TextEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextEffectFormat readonly dispid 120;
    property TextFrame {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextFrame readonly dispid 121;
    property ThreeD {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ThreeDFormat readonly dispid 122;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 123;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoShapeType readonly dispid 124;
    property VerticalFlip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 125;
    property Vertices {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 126;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 127;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 128;
    property ZOrderPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 129;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Hyperlink readonly dispid 1001;
    property RelativeHorizontalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition dispid 300;
    property RelativeVerticalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition dispid 301;
    property LockAnchor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 302;
    property WrapFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WrapFormat readonly dispid 303;
    property Anchor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 304;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Shape; dispid 0;
    procedure Align {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:0}Align: MsoAlignCmd; 
                                                         {VT_3:0}RelativeTo: Integer); dispid 10;
    procedure Apply {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 12;
    procedure Distribute {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:0}Distribute: MsoDistributeCmd; 
                                                              {VT_3:0}RelativeTo: Integer); dispid 13;
    function  Duplicate {Flags(2), (1/0) CC:0, INV:1, DBG:4}: ShapeRange; dispid 14;
    procedure Flip {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}FlipCmd: MsoFlipCmd); dispid 15;
    procedure IncrementLeft {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 16;
    procedure IncrementRotation {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 17;
    procedure IncrementTop {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 18;
    function  Group {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Shape; dispid 19;
    procedure PickUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 20;
    function  Regroup {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Shape; dispid 21;
    procedure RerouteConnections {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 22;
    procedure ScaleHeight {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_4:0}Factor: Single; 
                                                               {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                               {VT_29:0}Scale: MsoScaleFrom); dispid 23;
    procedure ScaleWidth {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_4:0}Factor: Single; 
                                                              {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                              {VT_29:0}Scale: MsoScaleFrom); dispid 24;
    procedure Select {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Replace: OleVariant); dispid 25;
    procedure SetShapesDefaultProperties {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 26;
    function  Ungroup {Flags(2), (1/0) CC:0, INV:1, DBG:4}: ShapeRange; dispid 27;
    procedure ZOrder {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}ZOrderCmd: MsoZOrderCmd); dispid 28;
    function  ConvertToFrame {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Frame; dispid 29;
    function  ConvertToInlineShape {Flags(2), (1/0) CC:0, INV:1, DBG:4}: InlineShape; dispid 30;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 50;
    property AlternativeText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 131;
  end;

// *********************************************************************//
// Interface: GroupShapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B6-0000-0000-C000-000000000046}
// *********************************************************************//
  GroupShapes = interface(IDispatch)
    ['{000209B6-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Shape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  GroupShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B6-0000-0000-C000-000000000046}
// *********************************************************************//
  GroupShapesDisp = dispinterface
    ['{000209B6-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 8000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Shape; dispid 0;
  end;

// *********************************************************************//
// Interface: Shape
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A0-0000-0000-C000-000000000046}
// *********************************************************************//
  Shape = interface(IDispatch)
    ['{000209A0-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Adjustments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Adjustments; safecall;
    function  Get_AutoShapeType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoAutoShapeType; safecall;
    procedure Set_AutoShapeType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoAutoShapeType); safecall;
    function  Get_Callout {Flags(1), (1/0) CC:0, INV:2, DBG:6}: CalloutFormat; safecall;
    function  Get_ConnectionSiteCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Connector {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_ConnectorFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ConnectorFormat; safecall;
    function  Get_Fill {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FillFormat; safecall;
    function  Get_GroupItems {Flags(1), (1/0) CC:0, INV:2, DBG:6}: GroupShapes; safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_HorizontalFlip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Line {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LineFormat; safecall;
    function  Get_LockAspectRatio {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_LockAspectRatio {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Nodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ShapeNodes; safecall;
    function  Get_Rotation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Rotation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_PictureFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PictureFormat; safecall;
    function  Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ShadowFormat; safecall;
    function  Get_TextEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextEffectFormat; safecall;
    function  Get_TextFrame {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextFrame; safecall;
    function  Get_ThreeD {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ThreeDFormat; safecall;
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoShapeType; safecall;
    function  Get_VerticalFlip {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_Vertices {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ZOrderPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Hyperlink; safecall;
    function  Get_RelativeHorizontalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeHorizontalPosition); safecall;
    function  Get_RelativeVerticalPosition {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRelativeVerticalPosition); safecall;
    function  Get_LockAnchor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_LockAnchor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_WrapFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WrapFormat; safecall;
    function  Get_OLEFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OLEFormat; safecall;
    function  Get_Anchor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_LinkFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LinkFormat; safecall;
    procedure Apply {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Duplicate {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Shape; safecall;
    procedure Flip {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}FlipCmd: MsoFlipCmd); safecall;
    procedure IncrementLeft {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementRotation {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementTop {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure PickUp {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure RerouteConnections {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ScaleHeight {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_4:0}Factor: Single; 
                                                               {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                               {VT_29:0}Scale: MsoScaleFrom); safecall;
    procedure ScaleWidth {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_4:0}Factor: Single; 
                                                              {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                              {VT_29:0}Scale: MsoScaleFrom); safecall;
    procedure Select {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Replace: OleVariant); safecall;
    procedure SetShapesDefaultProperties {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Ungroup {Flags(1), (1/0) CC:0, INV:1, DBG:6}: ShapeRange; safecall;
    procedure ZOrder {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}ZOrderCmd: MsoZOrderCmd); safecall;
    function  ConvertToInlineShape {Flags(1), (1/0) CC:0, INV:1, DBG:6}: InlineShape; safecall;
    function  ConvertToFrame {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Frame; safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Get_AlternativeText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AlternativeText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Script {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Script; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Adjustments: Adjustments read Get_Adjustments;
    property AutoShapeType: MsoAutoShapeType read Get_AutoShapeType write Set_AutoShapeType;
    property Callout: CalloutFormat read Get_Callout;
    property ConnectionSiteCount: Integer read Get_ConnectionSiteCount;
    property Connector: MsoTriState read Get_Connector;
    property ConnectorFormat: ConnectorFormat read Get_ConnectorFormat;
    property Fill: FillFormat read Get_Fill;
    property GroupItems: GroupShapes read Get_GroupItems;
    property Height: Single read Get_Height write Set_Height;
    property HorizontalFlip: MsoTriState read Get_HorizontalFlip;
    property Left: Single read Get_Left write Set_Left;
    property Line: LineFormat read Get_Line;
    property LockAspectRatio: MsoTriState read Get_LockAspectRatio write Set_LockAspectRatio;
    property Name: WideString read Get_Name write Set_Name;
    property Nodes: ShapeNodes read Get_Nodes;
    property Rotation: Single read Get_Rotation write Set_Rotation;
    property PictureFormat: PictureFormat read Get_PictureFormat;
    property Shadow: ShadowFormat read Get_Shadow;
    property TextEffect: TextEffectFormat read Get_TextEffect;
    property TextFrame: TextFrame read Get_TextFrame;
    property ThreeD: ThreeDFormat read Get_ThreeD;
    property Top: Single read Get_Top write Set_Top;
    property Type_: MsoShapeType read Get_Type_;
    property VerticalFlip: MsoTriState read Get_VerticalFlip;
    property Vertices: OleVariant read Get_Vertices;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Width: Single read Get_Width write Set_Width;
    property ZOrderPosition: Integer read Get_ZOrderPosition;
    property Hyperlink: Hyperlink read Get_Hyperlink;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property LockAnchor: Integer read Get_LockAnchor write Set_LockAnchor;
    property WrapFormat: WrapFormat read Get_WrapFormat;
    property OLEFormat: OLEFormat read Get_OLEFormat;
    property Anchor: Range read Get_Anchor;
    property LinkFormat: LinkFormat read Get_LinkFormat;
    property AlternativeText: WideString read Get_AlternativeText write Set_AlternativeText;
    property Script: Script read Get_Script;
  end;

// *********************************************************************//
// DispIntf:  ShapeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A0-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeDisp = dispinterface
    ['{000209A0-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 8000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Adjustments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Adjustments readonly dispid 100;
    property AutoShapeType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoAutoShapeType dispid 101;
    property Callout {Flags(2), (1/0) CC:0, INV:2, DBG:6}: CalloutFormat readonly dispid 103;
    property ConnectionSiteCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 104;
    property Connector {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 105;
    property ConnectorFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ConnectorFormat readonly dispid 106;
    property Fill {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FillFormat readonly dispid 107;
    property GroupItems {Flags(2), (1/0) CC:0, INV:2, DBG:6}: GroupShapes readonly dispid 108;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property HorizontalFlip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 110;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property Line {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LineFormat readonly dispid 112;
    property LockAspectRatio {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 113;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property Nodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ShapeNodes readonly dispid 116;
    property Rotation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 117;
    property PictureFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PictureFormat readonly dispid 118;
    property Shadow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ShadowFormat readonly dispid 119;
    property TextEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextEffectFormat readonly dispid 120;
    property TextFrame {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextFrame readonly dispid 121;
    property ThreeD {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ThreeDFormat readonly dispid 122;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 123;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoShapeType readonly dispid 124;
    property VerticalFlip {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 125;
    property Vertices {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 126;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 127;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 128;
    property ZOrderPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 129;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Hyperlink readonly dispid 1001;
    property RelativeHorizontalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeHorizontalPosition dispid 300;
    property RelativeVerticalPosition {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRelativeVerticalPosition dispid 301;
    property LockAnchor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 302;
    property WrapFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WrapFormat readonly dispid 303;
    property OLEFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OLEFormat readonly dispid 500;
    property Anchor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 501;
    property LinkFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LinkFormat readonly dispid 502;
    procedure Apply {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
    function  Duplicate {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Shape; dispid 12;
    procedure Flip {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}FlipCmd: MsoFlipCmd); dispid 13;
    procedure IncrementLeft {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 14;
    procedure IncrementRotation {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 15;
    procedure IncrementTop {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 16;
    procedure PickUp {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 17;
    procedure RerouteConnections {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 18;
    procedure ScaleHeight {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_4:0}Factor: Single; 
                                                               {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                               {VT_29:0}Scale: MsoScaleFrom); dispid 19;
    procedure ScaleWidth {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_4:0}Factor: Single; 
                                                              {VT_29:0}RelativeToOriginalSize: MsoTriState; 
                                                              {VT_29:0}Scale: MsoScaleFrom); dispid 20;
    procedure Select {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Replace: OleVariant); dispid 21;
    procedure SetShapesDefaultProperties {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 22;
    function  Ungroup {Flags(2), (1/0) CC:0, INV:1, DBG:4}: ShapeRange; dispid 23;
    procedure ZOrder {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}ZOrderCmd: MsoZOrderCmd); dispid 24;
    function  ConvertToInlineShape {Flags(2), (1/0) CC:0, INV:1, DBG:4}: InlineShape; dispid 25;
    function  ConvertToFrame {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Frame; dispid 29;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 50;
    property AlternativeText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 131;
    property Script {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Script readonly dispid 503;
  end;

// *********************************************************************//
// Interface: TextFrame
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B2-0000-0000-C000-000000000046}
// *********************************************************************//
  TextFrame = interface(IDispatch)
    ['{000209B2-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shape; safecall;
    function  Get_MarginBottom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_MarginBottom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_MarginLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_MarginLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_MarginRight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_MarginRight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_MarginTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_MarginTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Orientation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTextOrientation; safecall;
    procedure Set_Orientation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTextOrientation); safecall;
    function  Get_TextRange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_ContainingRange {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_Next {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextFrame; safecall;
    procedure Set_Next {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TextFrame); safecall;
    function  Get_Previous {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextFrame; safecall;
    procedure Set_Previous {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TextFrame); safecall;
    function  Get_Overflowing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_HasText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure BreakForwardLink {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ValidLinkTarget {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const TargetTextFrame: TextFrame): WordBool; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: Shape read Get_Parent;
    property MarginBottom: Single read Get_MarginBottom write Set_MarginBottom;
    property MarginLeft: Single read Get_MarginLeft write Set_MarginLeft;
    property MarginRight: Single read Get_MarginRight write Set_MarginRight;
    property MarginTop: Single read Get_MarginTop write Set_MarginTop;
    property Orientation: MsoTextOrientation read Get_Orientation write Set_Orientation;
    property TextRange: Range read Get_TextRange;
    property ContainingRange: Range read Get_ContainingRange;
    property Next: TextFrame read Get_Next write Set_Next;
    property Previous: TextFrame read Get_Previous write Set_Previous;
    property Overflowing: WordBool read Get_Overflowing;
    property HasText: Integer read Get_HasText;
  end;

// *********************************************************************//
// DispIntf:  TextFrameDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B2-0000-0000-C000-000000000046}
// *********************************************************************//
  TextFrameDisp = dispinterface
    ['{000209B2-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 8000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 8001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shape readonly dispid 1;
    property MarginBottom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 100;
    property MarginLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 101;
    property MarginRight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property MarginTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    property Orientation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTextOrientation dispid 104;
    property TextRange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1001;
    property ContainingRange {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 1002;
    property Next {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextFrame dispid 5001;
    property Previous {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextFrame dispid 5002;
    property Overflowing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 5003;
    property HasText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 5008;
    procedure BreakForwardLink {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 5004;
    function  ValidLinkTarget {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const TargetTextFrame: TextFrame): WordBool; dispid 5006;
  end;

// *********************************************************************//
// Interface: _LetterContent
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A1-0000-0000-C000-000000000046}
// *********************************************************************//
  _LetterContent = interface(IDispatch)
    ['{000209A1-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordLetterContent; safecall;
    function  Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLetterStyle; safecall;
    procedure Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLetterStyle); safecall;
    function  Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLetterheadLocation; safecall;
    procedure Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLetterheadLocation); safecall;
    function  Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSalutationType; safecall;
    procedure Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSalutationType); safecall;
    function  Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSalutationGender; safecall;
    procedure Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSalutationGender); safecall;
    function  Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSalutationGender; safecall;
    procedure Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSalutationGender); safecall;
    function  Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Duplicate: WordLetterContent read Get_Duplicate;
    property DateFormat: WideString read Get_DateFormat write Set_DateFormat;
    property IncludeHeaderFooter: WordBool read Get_IncludeHeaderFooter write Set_IncludeHeaderFooter;
    property PageDesign: WideString read Get_PageDesign write Set_PageDesign;
    property LetterStyle: WdLetterStyle read Get_LetterStyle write Set_LetterStyle;
    property Letterhead: WordBool read Get_Letterhead write Set_Letterhead;
    property LetterheadLocation: WdLetterheadLocation read Get_LetterheadLocation write Set_LetterheadLocation;
    property LetterheadSize: Single read Get_LetterheadSize write Set_LetterheadSize;
    property RecipientName: WideString read Get_RecipientName write Set_RecipientName;
    property RecipientAddress: WideString read Get_RecipientAddress write Set_RecipientAddress;
    property Salutation: WideString read Get_Salutation write Set_Salutation;
    property SalutationType: WdSalutationType read Get_SalutationType write Set_SalutationType;
    property RecipientReference: WideString read Get_RecipientReference write Set_RecipientReference;
    property MailingInstructions: WideString read Get_MailingInstructions write Set_MailingInstructions;
    property AttentionLine: WideString read Get_AttentionLine write Set_AttentionLine;
    property Subject: WideString read Get_Subject write Set_Subject;
    property EnclosureNumber: Integer read Get_EnclosureNumber write Set_EnclosureNumber;
    property CCList: WideString read Get_CCList write Set_CCList;
    property ReturnAddress: WideString read Get_ReturnAddress write Set_ReturnAddress;
    property SenderName: WideString read Get_SenderName write Set_SenderName;
    property Closing: WideString read Get_Closing write Set_Closing;
    property SenderCompany: WideString read Get_SenderCompany write Set_SenderCompany;
    property SenderJobTitle: WideString read Get_SenderJobTitle write Set_SenderJobTitle;
    property SenderInitials: WideString read Get_SenderInitials write Set_SenderInitials;
    property InfoBlock: WordBool read Get_InfoBlock write Set_InfoBlock;
    property RecipientCode: WideString read Get_RecipientCode write Set_RecipientCode;
    property RecipientGender: WdSalutationGender read Get_RecipientGender write Set_RecipientGender;
    property ReturnAddressShortForm: WideString read Get_ReturnAddressShortForm write Set_ReturnAddressShortForm;
    property SenderCity: WideString read Get_SenderCity write Set_SenderCity;
    property SenderCode: WideString read Get_SenderCode write Set_SenderCode;
    property SenderGender: WdSalutationGender read Get_SenderGender write Set_SenderGender;
    property SenderReference: WideString read Get_SenderReference write Set_SenderReference;
  end;

// *********************************************************************//
// DispIntf:  _LetterContentDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A1-0000-0000-C000-000000000046}
// *********************************************************************//
  _LetterContentDisp = dispinterface
    ['{000209A1-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordLetterContent readonly dispid 10;
    property DateFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 101;
    property IncludeHeaderFooter {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 102;
    property PageDesign {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 103;
    property LetterStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLetterStyle dispid 104;
    property Letterhead {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 105;
    property LetterheadLocation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLetterheadLocation dispid 106;
    property LetterheadSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 107;
    property RecipientName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 108;
    property RecipientAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 109;
    property Salutation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 110;
    property SalutationType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSalutationType dispid 111;
    property RecipientReference {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 112;
    property MailingInstructions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 114;
    property AttentionLine {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 115;
    property Subject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 116;
    property EnclosureNumber {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 117;
    property CCList {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 118;
    property ReturnAddress {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 119;
    property SenderName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 120;
    property Closing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 121;
    property SenderCompany {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 122;
    property SenderJobTitle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 123;
    property SenderInitials {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 124;
    property InfoBlock {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 125;
    property RecipientCode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 126;
    property RecipientGender {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSalutationGender dispid 127;
    property ReturnAddressShortForm {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 128;
    property SenderCity {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 129;
    property SenderCode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 130;
    property SenderGender {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSalutationGender dispid 131;
    property SenderReference {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 132;
  end;

// *********************************************************************//
// Interface: View
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A5-0000-0000-C000-000000000046}
// *********************************************************************//
  View = interface(IDispatch)
    ['{000209A5-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdViewType; safecall;
    procedure Set_Type_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdViewType); safecall;
    function  Get_FullScreen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FullScreen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Draft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Draft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowAll {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowAll {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowFieldCodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowFieldCodes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MailMergeDataView {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MailMergeDataView {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Magnifier {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Magnifier {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowFirstLineOnly {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowFirstLineOnly {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Zoom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Zoom; safecall;
    function  Get_ShowObjectAnchors {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowObjectAnchors {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowTextBoundaries {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowTextBoundaries {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowHighlight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowHighlight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowDrawings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowDrawings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowTabs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowTabs {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowSpaces {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowSpaces {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowParagraphs {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowHyphens {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowHyphens {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowHiddenText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowHiddenText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_WrapToWindow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_WrapToWindow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowPicturePlaceHolders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowPicturePlaceHolders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowBookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowBookmarks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FieldShading {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFieldShading; safecall;
    procedure Set_FieldShading {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFieldShading); safecall;
    function  Get_ShowAnimation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowAnimation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_TableGridlines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TableGridlines {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EnlargeFontsLessThan {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_EnlargeFontsLessThan {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ShowMainTextLayer {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowMainTextLayer {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SeekView {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSeekView; safecall;
    procedure Set_SeekView {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSeekView); safecall;
    function  Get_SplitSpecial {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSpecialPane; safecall;
    procedure Set_SplitSpecial {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdSpecialPane); safecall;
    function  Get_BrowseToWindow {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_BrowseToWindow {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ShowOptionalBreaks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowOptionalBreaks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure CollapseOutline {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Range: OleVariant); safecall;
    procedure ExpandOutline {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Range: OleVariant); safecall;
    procedure ShowAllHeadings {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ShowHeading {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Level: Integer); safecall;
    procedure PreviousHeaderFooter {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure NextHeaderFooter {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Type_: WdViewType read Get_Type_ write Set_Type_;
    property FullScreen: WordBool read Get_FullScreen write Set_FullScreen;
    property Draft: WordBool read Get_Draft write Set_Draft;
    property ShowAll: WordBool read Get_ShowAll write Set_ShowAll;
    property ShowFieldCodes: WordBool read Get_ShowFieldCodes write Set_ShowFieldCodes;
    property MailMergeDataView: WordBool read Get_MailMergeDataView write Set_MailMergeDataView;
    property Magnifier: WordBool read Get_Magnifier write Set_Magnifier;
    property ShowFirstLineOnly: WordBool read Get_ShowFirstLineOnly write Set_ShowFirstLineOnly;
    property ShowFormat: WordBool read Get_ShowFormat write Set_ShowFormat;
    property Zoom: Zoom read Get_Zoom;
    property ShowObjectAnchors: WordBool read Get_ShowObjectAnchors write Set_ShowObjectAnchors;
    property ShowTextBoundaries: WordBool read Get_ShowTextBoundaries write Set_ShowTextBoundaries;
    property ShowHighlight: WordBool read Get_ShowHighlight write Set_ShowHighlight;
    property ShowDrawings: WordBool read Get_ShowDrawings write Set_ShowDrawings;
    property ShowTabs: WordBool read Get_ShowTabs write Set_ShowTabs;
    property ShowSpaces: WordBool read Get_ShowSpaces write Set_ShowSpaces;
    property ShowParagraphs: WordBool read Get_ShowParagraphs write Set_ShowParagraphs;
    property ShowHyphens: WordBool read Get_ShowHyphens write Set_ShowHyphens;
    property ShowHiddenText: WordBool read Get_ShowHiddenText write Set_ShowHiddenText;
    property WrapToWindow: WordBool read Get_WrapToWindow write Set_WrapToWindow;
    property ShowPicturePlaceHolders: WordBool read Get_ShowPicturePlaceHolders write Set_ShowPicturePlaceHolders;
    property ShowBookmarks: WordBool read Get_ShowBookmarks write Set_ShowBookmarks;
    property FieldShading: WdFieldShading read Get_FieldShading write Set_FieldShading;
    property ShowAnimation: WordBool read Get_ShowAnimation write Set_ShowAnimation;
    property TableGridlines: WordBool read Get_TableGridlines write Set_TableGridlines;
    property EnlargeFontsLessThan: Integer read Get_EnlargeFontsLessThan write Set_EnlargeFontsLessThan;
    property ShowMainTextLayer: WordBool read Get_ShowMainTextLayer write Set_ShowMainTextLayer;
    property SeekView: WdSeekView read Get_SeekView write Set_SeekView;
    property SplitSpecial: WdSpecialPane read Get_SplitSpecial write Set_SplitSpecial;
    property BrowseToWindow: Integer read Get_BrowseToWindow write Set_BrowseToWindow;
    property ShowOptionalBreaks: WordBool read Get_ShowOptionalBreaks write Set_ShowOptionalBreaks;
  end;

// *********************************************************************//
// DispIntf:  ViewDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A5-0000-0000-C000-000000000046}
// *********************************************************************//
  ViewDisp = dispinterface
    ['{000209A5-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdViewType dispid 0;
    property FullScreen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property Draft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 2;
    property ShowAll {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property ShowFieldCodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property MailMergeDataView {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property Magnifier {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property ShowFirstLineOnly {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 8;
    property ShowFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property Zoom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Zoom readonly dispid 10;
    property ShowObjectAnchors {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 11;
    property ShowTextBoundaries {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 12;
    property ShowHighlight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 13;
    property ShowDrawings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property ShowTabs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 15;
    property ShowSpaces {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 16;
    property ShowParagraphs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 17;
    property ShowHyphens {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 18;
    property ShowHiddenText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 19;
    property WrapToWindow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 20;
    property ShowPicturePlaceHolders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 21;
    property ShowBookmarks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 22;
    property FieldShading {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFieldShading dispid 23;
    property ShowAnimation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 24;
    property TableGridlines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 25;
    property EnlargeFontsLessThan {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 26;
    property ShowMainTextLayer {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 27;
    property SeekView {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSeekView dispid 28;
    property SplitSpecial {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSpecialPane dispid 29;
    property BrowseToWindow {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 30;
    property ShowOptionalBreaks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 31;
    procedure CollapseOutline {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Range: OleVariant); dispid 101;
    procedure ExpandOutline {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Range: OleVariant); dispid 102;
    procedure ShowAllHeadings {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 103;
    procedure ShowHeading {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Level: Integer); dispid 104;
    procedure PreviousHeaderFooter {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 105;
    procedure NextHeaderFooter {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 106;
  end;

// *********************************************************************//
// Interface: Zoom
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A6-0000-0000-C000-000000000046}
// *********************************************************************//
  Zoom = interface(IDispatch)
    ['{000209A6-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Percentage {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Percentage {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_PageFit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdPageFit; safecall;
    procedure Set_PageFit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdPageFit); safecall;
    function  Get_PageRows {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PageRows {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_PageColumns {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PageColumns {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Percentage: Integer read Get_Percentage write Set_Percentage;
    property PageFit: WdPageFit read Get_PageFit write Set_PageFit;
    property PageRows: Integer read Get_PageRows write Set_PageRows;
    property PageColumns: Integer read Get_PageColumns write Set_PageColumns;
  end;

// *********************************************************************//
// DispIntf:  ZoomDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A6-0000-0000-C000-000000000046}
// *********************************************************************//
  ZoomDisp = dispinterface
    ['{000209A6-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Percentage {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 0;
    property PageFit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdPageFit dispid 1;
    property PageRows {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 2;
    property PageColumns {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
  end;

// *********************************************************************//
// Interface: Zooms
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A7-0000-0000-C000-000000000046}
// *********************************************************************//
  Zooms = interface(IDispatch)
    ['{000209A7-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Index: WdViewType): Zoom; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ZoomsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A7-0000-0000-C000-000000000046}
// *********************************************************************//
  ZoomsDisp = dispinterface
    ['{000209A7-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Index: WdViewType): Zoom; dispid 0;
  end;

// *********************************************************************//
// Interface: InlineShape
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A8-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShape = interface(IDispatch)
    ['{000209A8-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Borders; safecall;
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Borders); safecall;
    function  Get_Range {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Range; safecall;
    function  Get_LinkFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LinkFormat; safecall;
    function  Get_Field {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Field; safecall;
    function  Get_OLEFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OLEFormat; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdInlineShapeType; safecall;
    function  Get_Hyperlink {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Hyperlink; safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ScaleHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ScaleHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ScaleWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_ScaleWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_LockAspectRatio {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_LockAspectRatio {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Line {Flags(1), (1/0) CC:0, INV:2, DBG:6}: LineFormat; safecall;
    function  Get_Fill {Flags(1), (1/0) CC:0, INV:2, DBG:6}: FillFormat; safecall;
    function  Get_PictureFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: PictureFormat; safecall;
    procedure Set_PictureFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: PictureFormat); safecall;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  ConvertToShape {Flags(1), (1/0) CC:0, INV:1, DBG:6}: Shape; safecall;
    function  Get_HorizontalLineFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: HorizontalLineFormat; safecall;
    function  Get_Script {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Script; safecall;
    function  Get_OWSAnchor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_TextEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TextEffectFormat; safecall;
    procedure Set_TextEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: TextEffectFormat); safecall;
    function  Get_AlternativeText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_AlternativeText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Range: Range read Get_Range;
    property LinkFormat: LinkFormat read Get_LinkFormat;
    property Field: Field read Get_Field;
    property OLEFormat: OLEFormat read Get_OLEFormat;
    property Type_: WdInlineShapeType read Get_Type_;
    property Hyperlink: Hyperlink read Get_Hyperlink;
    property Height: Single read Get_Height write Set_Height;
    property Width: Single read Get_Width write Set_Width;
    property ScaleHeight: Single read Get_ScaleHeight write Set_ScaleHeight;
    property ScaleWidth: Single read Get_ScaleWidth write Set_ScaleWidth;
    property LockAspectRatio: MsoTriState read Get_LockAspectRatio write Set_LockAspectRatio;
    property Line: LineFormat read Get_Line;
    property Fill: FillFormat read Get_Fill;
    property PictureFormat: PictureFormat read Get_PictureFormat write Set_PictureFormat;
    property HorizontalLineFormat: HorizontalLineFormat read Get_HorizontalLineFormat;
    property Script: Script read Get_Script;
    property OWSAnchor: Integer read Get_OWSAnchor;
    property TextEffect: TextEffectFormat read Get_TextEffect write Set_TextEffect;
    property AlternativeText: WideString read Get_AlternativeText write Set_AlternativeText;
  end;

// *********************************************************************//
// DispIntf:  InlineShapeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A8-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShapeDisp = dispinterface
    ['{000209A8-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Borders dispid 1100;
    property Range {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Range readonly dispid 2;
    property LinkFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LinkFormat readonly dispid 3;
    property Field {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Field readonly dispid 4;
    property OLEFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OLEFormat readonly dispid 5;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdInlineShapeType readonly dispid 6;
    property Hyperlink {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Hyperlink readonly dispid 7;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 8;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 9;
    property ScaleHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 10;
    property ScaleWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 11;
    property LockAspectRatio {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 12;
    property Line {Flags(2), (1/0) CC:0, INV:2, DBG:6}: LineFormat readonly dispid 112;
    property Fill {Flags(2), (1/0) CC:0, INV:2, DBG:6}: FillFormat readonly dispid 107;
    property PictureFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: PictureFormat dispid 118;
    procedure Activate {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 100;
    procedure Reset {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    procedure Select {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 65535;
    function  ConvertToShape {Flags(2), (1/0) CC:0, INV:1, DBG:4}: Shape; dispid 104;
    property HorizontalLineFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: HorizontalLineFormat readonly dispid 119;
    property Script {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Script readonly dispid 122;
    property OWSAnchor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 130;
    property TextEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TextEffectFormat dispid 120;
    property AlternativeText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 131;
  end;

// *********************************************************************//
// Interface: InlineShapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A9-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShapes = interface(IDispatch)
    ['{000209A9-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): InlineShape; safecall;
    function  AddPicture {Flags(1), (5/4) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var LinkToFile: OleVariant; 
                                                              {VT_12:1}var SaveWithDocument: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant): InlineShape; safecall;
    function  AddOLEObject {Flags(1), (9/8) CC:0, INV:1, DBG:6}({VT_12:1}var ClassType: OleVariant; 
                                                                {VT_12:1}var FileName: OleVariant; 
                                                                {VT_12:1}var LinkToFile: OleVariant; 
                                                                {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                {VT_12:1}var IconFileName: OleVariant; 
                                                                {VT_12:1}var IconIndex: OleVariant; 
                                                                {VT_12:1}var IconLabel: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant): InlineShape; safecall;
    function  AddOLEControl {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_12:1}var ClassType: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant): InlineShape; safecall;
    function  New {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:1}const Range: Range): InlineShape; safecall;
    function  AddHorizontalLine {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                                     {VT_12:1}var Range: OleVariant): InlineShape; safecall;
    function  AddHorizontalLineStandard {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Range: OleVariant): InlineShape; safecall;
    function  AddPictureBullet {Flags(1), (3/2) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString; 
                                                                    {VT_12:1}var Range: OleVariant): InlineShape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  InlineShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A9-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShapesDisp = dispinterface
    ['{000209A9-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): InlineShape; dispid 0;
    function  AddPicture {Flags(2), (5/4) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                              {VT_12:1}var LinkToFile: OleVariant; 
                                                              {VT_12:1}var SaveWithDocument: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant): InlineShape; dispid 100;
    function  AddOLEObject {Flags(2), (9/8) CC:0, INV:1, DBG:4}({VT_12:1}var ClassType: OleVariant; 
                                                                {VT_12:1}var FileName: OleVariant; 
                                                                {VT_12:1}var LinkToFile: OleVariant; 
                                                                {VT_12:1}var DisplayAsIcon: OleVariant; 
                                                                {VT_12:1}var IconFileName: OleVariant; 
                                                                {VT_12:1}var IconIndex: OleVariant; 
                                                                {VT_12:1}var IconLabel: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant): InlineShape; dispid 24;
    function  AddOLEControl {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_12:1}var ClassType: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant): InlineShape; dispid 102;
    function  New {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:1}const Range: Range): InlineShape; dispid 200;
    function  AddHorizontalLine {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                                     {VT_12:1}var Range: OleVariant): InlineShape; dispid 104;
    function  AddHorizontalLineStandard {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Range: OleVariant): InlineShape; dispid 105;
    function  AddPictureBullet {Flags(2), (3/2) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString; 
                                                                    {VT_12:1}var Range: OleVariant): InlineShape; dispid 106;
  end;

// *********************************************************************//
// Interface: SpellingSuggestions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AA-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestions = interface(IDispatch)
    ['{000209AA-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_SpellingErrorType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdSpellingErrorType; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): SpellingSuggestion; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property SpellingErrorType: WdSpellingErrorType read Get_SpellingErrorType;
  end;

// *********************************************************************//
// DispIntf:  SpellingSuggestionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AA-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestionsDisp = dispinterface
    ['{000209AA-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property SpellingErrorType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdSpellingErrorType readonly dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): SpellingSuggestion; dispid 0;
  end;

// *********************************************************************//
// Interface: SpellingSuggestion
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AB-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestion = interface(IDispatch)
    ['{000209AB-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  SpellingSuggestionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AB-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestionDisp = dispinterface
    ['{000209AB-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
  end;

// *********************************************************************//
// Interface: Dictionaries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AC-0000-0000-C000-000000000046}
// *********************************************************************//
  Dictionaries = interface(IDispatch)
    ['{000209AC-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Maximum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ActiveCustomDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    procedure Set_ActiveCustomDictionary {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Dictionary); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Dictionary; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString): Dictionary; safecall;
    procedure ClearAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Maximum: Integer read Get_Maximum;
    property ActiveCustomDictionary: Dictionary read Get_ActiveCustomDictionary write Set_ActiveCustomDictionary;
  end;

// *********************************************************************//
// DispIntf:  DictionariesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AC-0000-0000-C000-000000000046}
// *********************************************************************//
  DictionariesDisp = dispinterface
    ['{000209AC-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Maximum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property ActiveCustomDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary dispid 3;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Dictionary; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString): Dictionary; dispid 101;
    procedure ClearAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: HangulHanjaConversionDictionaries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E0-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulHanjaConversionDictionaries = interface(IDispatch)
    ['{000209E0-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Maximum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ActiveCustomDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    procedure Set_ActiveCustomDictionary {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:1}const prop: Dictionary); safecall;
    function  Get_BuiltinDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Dictionary; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): Dictionary; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const FileName: WideString): Dictionary; safecall;
    procedure ClearAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Maximum: Integer read Get_Maximum;
    property ActiveCustomDictionary: Dictionary read Get_ActiveCustomDictionary write Set_ActiveCustomDictionary;
    property BuiltinDictionary: Dictionary read Get_BuiltinDictionary;
  end;

// *********************************************************************//
// DispIntf:  HangulHanjaConversionDictionariesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E0-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulHanjaConversionDictionariesDisp = dispinterface
    ['{000209E0-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Maximum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property ActiveCustomDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary dispid 3;
    property BuiltinDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Dictionary readonly dispid 4;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): Dictionary; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const FileName: WideString): Dictionary; dispid 101;
    procedure ClearAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
  end;

// *********************************************************************//
// Interface: Dictionary
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AD-0000-0000-C000-000000000046}
// *********************************************************************//
  Dictionary = interface(IDispatch)
    ['{000209AD-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_LanguageID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID; safecall;
    procedure Set_LanguageID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLanguageID); safecall;
    function  Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDictionaryType; safecall;
    function  Get_LanguageSpecific {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_LanguageSpecific {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Path: WideString read Get_Path;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property ReadOnly: WordBool read Get_ReadOnly;
    property Type_: WdDictionaryType read Get_Type_;
    property LanguageSpecific: WordBool read Get_LanguageSpecific write Set_LanguageSpecific;
  end;

// *********************************************************************//
// DispIntf:  DictionaryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AD-0000-0000-C000-000000000046}
// *********************************************************************//
  DictionaryDisp = dispinterface
    ['{000209AD-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1;
    property LanguageID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLanguageID dispid 2;
    property ReadOnly {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 3;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDictionaryType readonly dispid 4;
    property LanguageSpecific {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: ReadabilityStatistics
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AE-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatistics = interface(IDispatch)
    ['{000209AE-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): ReadabilityStatistic; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ReadabilityStatisticsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AE-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatisticsDisp = dispinterface
    ['{000209AE-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): ReadabilityStatistic; dispid 0;
  end;

// *********************************************************************//
// Interface: ReadabilityStatistic
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AF-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatistic = interface(IDispatch)
    ['{000209AF-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Value {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Value: Single read Get_Value;
  end;

// *********************************************************************//
// DispIntf:  ReadabilityStatisticDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AF-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatisticDisp = dispinterface
    ['{000209AF-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 0;
    property Value {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single readonly dispid 1;
  end;

// *********************************************************************//
// Interface: Versions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B3-0000-0000-C000-000000000046}
// *********************************************************************//
  Versions = interface(IDispatch)
    ['{000209B3-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_AutoVersion {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdAutoVersions; safecall;
    procedure Set_AutoVersion {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdAutoVersions); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Version; safecall;
    procedure Save {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_12:1}var Comment: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property AutoVersion: WdAutoVersions read Get_AutoVersion write Set_AutoVersion;
  end;

// *********************************************************************//
// DispIntf:  VersionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B3-0000-0000-C000-000000000046}
// *********************************************************************//
  VersionsDisp = dispinterface
    ['{000209B3-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property AutoVersion {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdAutoVersions dispid 3;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Version; dispid 0;
    procedure Save {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_12:1}var Comment: OleVariant); dispid 11;
  end;

// *********************************************************************//
// Interface: Version
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B4-0000-0000-C000-000000000046}
// *********************************************************************//
  Version = interface(IDispatch)
    ['{000209B4-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_SavedBy {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Comment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_Date {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TDateTime; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure OpenOld {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    function  Open {Flags(1), (1/0) CC:0, INV:1, DBG:6}: WordDocument; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property SavedBy: WideString read Get_SavedBy;
    property Comment: WideString read Get_Comment;
    property Date: TDateTime read Get_Date;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  VersionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B4-0000-0000-C000-000000000046}
// *********************************************************************//
  VersionDisp = dispinterface
    ['{000209B4-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property SavedBy {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1003;
    property Comment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 1004;
    property Date {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TDateTime readonly dispid 1005;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    procedure OpenOld {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 102;
    function  Open {Flags(2), (1/0) CC:0, INV:1, DBG:4}: WordDocument; dispid 103;
  end;

// *********************************************************************//
// Interface: Options
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B7-0000-0000-C000-000000000046}
// *********************************************************************//
  Options = interface(IDispatch)
    ['{000209B7-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_AllowAccentedUppercase {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowAccentedUppercase {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_WPHelp {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_WPHelp {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_WPDocNavKeys {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_WPDocNavKeys {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Pagination {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Pagination {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_BlueScreen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_BlueScreen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EnableSound {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnableSound {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ConfirmConversions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ConfirmConversions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UpdateLinksAtOpen {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UpdateLinksAtOpen {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SendMailAttach {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SendMailAttach {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MeasurementUnit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMeasurementUnits; safecall;
    procedure Set_MeasurementUnit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdMeasurementUnits); safecall;
    function  Get_ButtonFieldClicks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_ButtonFieldClicks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ShortMenuNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShortMenuNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RTFInClipboard {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RTFInClipboard {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UpdateFieldsAtPrint {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UpdateFieldsAtPrint {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintProperties {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintProperties {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintFieldCodes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintFieldCodes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintComments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintComments {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintHiddenText {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintHiddenText {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EnvelopeFeederInstalled {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_UpdateLinksAtPrint {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UpdateLinksAtPrint {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintBackground {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintBackground {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintDrawingObjects {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintDrawingObjects {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultTray {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_DefaultTray {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_DefaultTrayID {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_DefaultTrayID {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_CreateBackup {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CreateBackup {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowFastSave {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowFastSave {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SavePropertiesPrompt {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SavePropertiesPrompt {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SaveNormalPrompt {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SaveNormalPrompt {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SaveInterval {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SaveInterval {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_BackgroundSave {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_BackgroundSave {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_InsertedTextMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdInsertedTextMark; safecall;
    procedure Set_InsertedTextMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdInsertedTextMark); safecall;
    function  Get_DeletedTextMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDeletedTextMark; safecall;
    procedure Set_DeletedTextMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdDeletedTextMark); safecall;
    function  Get_RevisedLinesMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRevisedLinesMark; safecall;
    procedure Set_RevisedLinesMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRevisedLinesMark); safecall;
    function  Get_InsertedTextColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_InsertedTextColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_DeletedTextColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_DeletedTextColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_RevisedLinesColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_RevisedLinesColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_DefaultFilePath {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_29:0}Path: WdDefaultFilePath): WideString; safecall;
    procedure Set_DefaultFilePath {Flags(1), (2/2) CC:0, INV:4, DBG:6}({VT_29:0}Path: WdDefaultFilePath; 
                                                                       {VT_8:0}const prop: WideString); safecall;
    function  Get_Overtype {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_Overtype {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ReplaceSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ReplaceSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowDragAndDrop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowDragAndDrop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoWordSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoWordSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_INSKeyForPaste {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_INSKeyForPaste {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SmartCutPaste {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SmartCutPaste {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_TabIndentKey {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_TabIndentKey {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PictureEditor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_PictureEditor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_AnimateScreenMovements {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AnimateScreenMovements {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_VirusProtection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_VirusProtection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RevisedPropertiesMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdRevisedPropertiesMark; safecall;
    procedure Set_RevisedPropertiesMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdRevisedPropertiesMark); safecall;
    function  Get_RevisedPropertiesColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_RevisedPropertiesColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_InlineConversion {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_InlineConversion {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IMEAutomaticControl {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IMEAutomaticControl {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatApplyHeadings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatApplyHeadings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatApplyLists {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatApplyLists {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatApplyBulletedLists {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatApplyBulletedLists {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatApplyOtherParas {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatApplyOtherParas {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplaceQuotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplaceQuotes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplaceSymbols {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplaceSymbols {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplaceOrdinals {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplaceOrdinals {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplaceFractions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplaceFractions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplacePlainTextEmphasis {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplacePlainTextEmphasis {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatPreserveStyles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatPreserveStyles {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyHeadings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyHeadings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyBorders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyBorders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyBulletedLists {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyBulletedLists {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyNumberedLists {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyNumberedLists {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplaceQuotes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceQuotes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplaceSymbols {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceSymbols {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplaceOrdinals {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceOrdinals {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplaceFractions {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceFractions {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplacePlainTextEmphasis {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplacePlainTextEmphasis {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeFormatListItemBeginning {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeFormatListItemBeginning {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeDefineStyles {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeDefineStyles {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatPlainTextWordMail {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatPlainTextWordMail {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplaceHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplaceHyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplaceHyperlinks {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultHighlightColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_DefaultHighlightColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_DefaultBorderLineStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle; safecall;
    procedure Set_DefaultBorderLineStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineStyle); safecall;
    function  Get_CheckSpellingAsYouType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckSpellingAsYouType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CheckGrammarAsYouType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckGrammarAsYouType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IgnoreInternetAndFileAddresses {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IgnoreInternetAndFileAddresses {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowReadabilityStatistics {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IgnoreUppercase {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IgnoreUppercase {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_IgnoreMixedDigits {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_IgnoreMixedDigits {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SuggestFromMainDictionaryOnly {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SuggestFromMainDictionaryOnly {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_SuggestSpellingCorrections {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_SuggestSpellingCorrections {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultBorderLineWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth; safecall;
    procedure Set_DefaultBorderLineWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdLineWidth); safecall;
    function  Get_CheckGrammarWithSpelling {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckGrammarWithSpelling {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultOpenFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdOpenFormat; safecall;
    procedure Set_DefaultOpenFormat {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdOpenFormat); safecall;
    function  Get_PrintDraft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintDraft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintReverse {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintReverse {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MapPaperSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MapPaperSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyTables {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyTables {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatApplyFirstIndents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatApplyFirstIndents {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatMatchParentheses {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatMatchParentheses {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatReplaceFarEastDashes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatReplaceFarEastDashes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatDeleteAutoSpaces {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatDeleteAutoSpaces {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyFirstIndents {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyFirstIndents {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyDates {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyDates {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeApplyClosings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyClosings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeMatchParentheses {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeMatchParentheses {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeReplaceFarEastDashes {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceFarEastDashes {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeDeleteAutoSpaces {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeDeleteAutoSpaces {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeInsertClosings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeInsertClosings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeAutoLetterWizard {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeAutoLetterWizard {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoFormatAsYouTypeInsertOvers {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeInsertOvers {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DisplayGridLines {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_DisplayGridLines {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyCase {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyCase {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyByte {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyByte {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyHiragana {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyHiragana {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzySmallKana {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzySmallKana {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyDash {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyDash {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyIterationMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyIterationMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyKanji {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyKanji {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyOldKana {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyOldKana {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyProlongedSoundMark {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyProlongedSoundMark {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyDZ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyDZ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyBV {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyBV {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyTC {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyTC {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyHF {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyHF {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyZJ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyZJ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyAY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyAY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyKiKu {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyKiKu {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzyPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzyPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MatchFuzzySpace {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MatchFuzzySpace {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ApplyFarEastFontsToAscii {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ApplyFarEastFontsToAscii {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ConvertHighAnsiToFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ConvertHighAnsiToFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintOddPagesInAscendingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintOddPagesInAscendingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_PrintEvenPagesInAscendingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_PrintEvenPagesInAscendingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DefaultBorderColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex; safecall;
    procedure Set_DefaultBorderColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColorIndex); safecall;
    function  Get_EnableMisusedWordsDictionary {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnableMisusedWordsDictionary {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowCombinedAuxiliaryForms {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowCombinedAuxiliaryForms {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HangulHanjaFastConversion {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_HangulHanjaFastConversion {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CheckHangulEndings {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckHangulEndings {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EnableHangulHanjaRecentOrdering {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_EnableHangulHanjaRecentOrdering {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MultipleWordConversionsMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMultipleWordConversionsMode; safecall;
    procedure Set_MultipleWordConversionsMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdMultipleWordConversionsMode); safecall;
    procedure SetWPHelpOptions {Flags(1), (6/6) CC:0, INV:1, DBG:6}({VT_12:1}var CommandKeyHelp: OleVariant; 
                                                                    {VT_12:1}var DocNavigationKeys: OleVariant; 
                                                                    {VT_12:1}var MouseSimulation: OleVariant; 
                                                                    {VT_12:1}var DemoGuidance: OleVariant; 
                                                                    {VT_12:1}var DemoSpeed: OleVariant; 
                                                                    {VT_12:1}var HelpType: OleVariant); safecall;
    function  Get_DefaultBorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_DefaultBorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_AllowPixelUnits {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowPixelUnits {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseCharacterUnit {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseCharacterUnit {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowCompoundNounProcessing {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowCompoundNounProcessing {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AutoKeyboardSwitching {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AutoKeyboardSwitching {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DocumentViewDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdDocumentViewDirection; safecall;
    procedure Set_DocumentViewDirection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdDocumentViewDirection); safecall;
    function  Get_ArabicNumeral {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdArabicNumeral; safecall;
    procedure Set_ArabicNumeral {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdArabicNumeral); safecall;
    function  Get_MonthNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdMonthNames; safecall;
    procedure Set_MonthNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdMonthNames); safecall;
    function  Get_CursorMovement {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdCursorMovement; safecall;
    procedure Set_CursorMovement {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdCursorMovement); safecall;
    function  Get_VisualSelection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdVisualSelection; safecall;
    procedure Set_VisualSelection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdVisualSelection); safecall;
    function  Get_ShowDiacritics {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowDiacritics {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ShowControlCharacters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_ShowControlCharacters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AddControlCharacters {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddControlCharacters {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AddBiDirectionalMarksWhenSavingTextFile {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddBiDirectionalMarksWhenSavingTextFile {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_StrictInitialAlefHamza {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_StrictInitialAlefHamza {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_StrictFinalYaa {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_StrictFinalYaa {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_HebrewMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHebSpellStart; safecall;
    procedure Set_HebrewMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdHebSpellStart); safecall;
    function  Get_ArabicMode {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdAraSpeller; safecall;
    procedure Set_ArabicMode {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdAraSpeller); safecall;
    function  Get_AllowClickAndTypeMouse {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowClickAndTypeMouse {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseGermanSpellingReform {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseGermanSpellingReform {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_InterpretHighAnsi {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHighAnsiText; safecall;
    procedure Set_InterpretHighAnsi {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdHighAnsiText); safecall;
    function  Get_AddHebDoubleQuote {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AddHebDoubleQuote {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseDiffDiacColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseDiffDiacColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_DiacriticColorVal {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_DiacriticColorVal {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_OptimizeForWord97byDefault {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OptimizeForWord97byDefault {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AllowAccentedUppercase: WordBool read Get_AllowAccentedUppercase write Set_AllowAccentedUppercase;
    property WPHelp: WordBool read Get_WPHelp write Set_WPHelp;
    property WPDocNavKeys: WordBool read Get_WPDocNavKeys write Set_WPDocNavKeys;
    property Pagination: WordBool read Get_Pagination write Set_Pagination;
    property BlueScreen: WordBool read Get_BlueScreen write Set_BlueScreen;
    property EnableSound: WordBool read Get_EnableSound write Set_EnableSound;
    property ConfirmConversions: WordBool read Get_ConfirmConversions write Set_ConfirmConversions;
    property UpdateLinksAtOpen: WordBool read Get_UpdateLinksAtOpen write Set_UpdateLinksAtOpen;
    property SendMailAttach: WordBool read Get_SendMailAttach write Set_SendMailAttach;
    property MeasurementUnit: WdMeasurementUnits read Get_MeasurementUnit write Set_MeasurementUnit;
    property ButtonFieldClicks: Integer read Get_ButtonFieldClicks write Set_ButtonFieldClicks;
    property ShortMenuNames: WordBool read Get_ShortMenuNames write Set_ShortMenuNames;
    property RTFInClipboard: WordBool read Get_RTFInClipboard write Set_RTFInClipboard;
    property UpdateFieldsAtPrint: WordBool read Get_UpdateFieldsAtPrint write Set_UpdateFieldsAtPrint;
    property PrintProperties: WordBool read Get_PrintProperties write Set_PrintProperties;
    property PrintFieldCodes: WordBool read Get_PrintFieldCodes write Set_PrintFieldCodes;
    property PrintComments: WordBool read Get_PrintComments write Set_PrintComments;
    property PrintHiddenText: WordBool read Get_PrintHiddenText write Set_PrintHiddenText;
    property EnvelopeFeederInstalled: WordBool read Get_EnvelopeFeederInstalled;
    property UpdateLinksAtPrint: WordBool read Get_UpdateLinksAtPrint write Set_UpdateLinksAtPrint;
    property PrintBackground: WordBool read Get_PrintBackground write Set_PrintBackground;
    property PrintDrawingObjects: WordBool read Get_PrintDrawingObjects write Set_PrintDrawingObjects;
    property DefaultTray: WideString read Get_DefaultTray write Set_DefaultTray;
    property DefaultTrayID: Integer read Get_DefaultTrayID write Set_DefaultTrayID;
    property CreateBackup: WordBool read Get_CreateBackup write Set_CreateBackup;
    property AllowFastSave: WordBool read Get_AllowFastSave write Set_AllowFastSave;
    property SavePropertiesPrompt: WordBool read Get_SavePropertiesPrompt write Set_SavePropertiesPrompt;
    property SaveNormalPrompt: WordBool read Get_SaveNormalPrompt write Set_SaveNormalPrompt;
    property SaveInterval: Integer read Get_SaveInterval write Set_SaveInterval;
    property BackgroundSave: WordBool read Get_BackgroundSave write Set_BackgroundSave;
    property InsertedTextMark: WdInsertedTextMark read Get_InsertedTextMark write Set_InsertedTextMark;
    property DeletedTextMark: WdDeletedTextMark read Get_DeletedTextMark write Set_DeletedTextMark;
    property RevisedLinesMark: WdRevisedLinesMark read Get_RevisedLinesMark write Set_RevisedLinesMark;
    property InsertedTextColor: WdColorIndex read Get_InsertedTextColor write Set_InsertedTextColor;
    property DeletedTextColor: WdColorIndex read Get_DeletedTextColor write Set_DeletedTextColor;
    property RevisedLinesColor: WdColorIndex read Get_RevisedLinesColor write Set_RevisedLinesColor;
    property DefaultFilePath {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_29:0}Path: WdDefaultFilePath]: WideString read Get_DefaultFilePath write Set_DefaultFilePath;
    property Overtype: WordBool read Get_Overtype write Set_Overtype;
    property ReplaceSelection: WordBool read Get_ReplaceSelection write Set_ReplaceSelection;
    property AllowDragAndDrop: WordBool read Get_AllowDragAndDrop write Set_AllowDragAndDrop;
    property AutoWordSelection: WordBool read Get_AutoWordSelection write Set_AutoWordSelection;
    property INSKeyForPaste: WordBool read Get_INSKeyForPaste write Set_INSKeyForPaste;
    property SmartCutPaste: WordBool read Get_SmartCutPaste write Set_SmartCutPaste;
    property TabIndentKey: WordBool read Get_TabIndentKey write Set_TabIndentKey;
    property PictureEditor: WideString read Get_PictureEditor write Set_PictureEditor;
    property AnimateScreenMovements: WordBool read Get_AnimateScreenMovements write Set_AnimateScreenMovements;
    property VirusProtection: WordBool read Get_VirusProtection write Set_VirusProtection;
    property RevisedPropertiesMark: WdRevisedPropertiesMark read Get_RevisedPropertiesMark write Set_RevisedPropertiesMark;
    property RevisedPropertiesColor: WdColorIndex read Get_RevisedPropertiesColor write Set_RevisedPropertiesColor;
    property SnapToGrid: WordBool read Get_SnapToGrid write Set_SnapToGrid;
    property SnapToShapes: WordBool read Get_SnapToShapes write Set_SnapToShapes;
    property GridDistanceHorizontal: Single read Get_GridDistanceHorizontal write Set_GridDistanceHorizontal;
    property GridDistanceVertical: Single read Get_GridDistanceVertical write Set_GridDistanceVertical;
    property GridOriginHorizontal: Single read Get_GridOriginHorizontal write Set_GridOriginHorizontal;
    property GridOriginVertical: Single read Get_GridOriginVertical write Set_GridOriginVertical;
    property InlineConversion: WordBool read Get_InlineConversion write Set_InlineConversion;
    property IMEAutomaticControl: WordBool read Get_IMEAutomaticControl write Set_IMEAutomaticControl;
    property AutoFormatApplyHeadings: WordBool read Get_AutoFormatApplyHeadings write Set_AutoFormatApplyHeadings;
    property AutoFormatApplyLists: WordBool read Get_AutoFormatApplyLists write Set_AutoFormatApplyLists;
    property AutoFormatApplyBulletedLists: WordBool read Get_AutoFormatApplyBulletedLists write Set_AutoFormatApplyBulletedLists;
    property AutoFormatApplyOtherParas: WordBool read Get_AutoFormatApplyOtherParas write Set_AutoFormatApplyOtherParas;
    property AutoFormatReplaceQuotes: WordBool read Get_AutoFormatReplaceQuotes write Set_AutoFormatReplaceQuotes;
    property AutoFormatReplaceSymbols: WordBool read Get_AutoFormatReplaceSymbols write Set_AutoFormatReplaceSymbols;
    property AutoFormatReplaceOrdinals: WordBool read Get_AutoFormatReplaceOrdinals write Set_AutoFormatReplaceOrdinals;
    property AutoFormatReplaceFractions: WordBool read Get_AutoFormatReplaceFractions write Set_AutoFormatReplaceFractions;
    property AutoFormatReplacePlainTextEmphasis: WordBool read Get_AutoFormatReplacePlainTextEmphasis write Set_AutoFormatReplacePlainTextEmphasis;
    property AutoFormatPreserveStyles: WordBool read Get_AutoFormatPreserveStyles write Set_AutoFormatPreserveStyles;
    property AutoFormatAsYouTypeApplyHeadings: WordBool read Get_AutoFormatAsYouTypeApplyHeadings write Set_AutoFormatAsYouTypeApplyHeadings;
    property AutoFormatAsYouTypeApplyBorders: WordBool read Get_AutoFormatAsYouTypeApplyBorders write Set_AutoFormatAsYouTypeApplyBorders;
    property AutoFormatAsYouTypeApplyBulletedLists: WordBool read Get_AutoFormatAsYouTypeApplyBulletedLists write Set_AutoFormatAsYouTypeApplyBulletedLists;
    property AutoFormatAsYouTypeApplyNumberedLists: WordBool read Get_AutoFormatAsYouTypeApplyNumberedLists write Set_AutoFormatAsYouTypeApplyNumberedLists;
    property AutoFormatAsYouTypeReplaceQuotes: WordBool read Get_AutoFormatAsYouTypeReplaceQuotes write Set_AutoFormatAsYouTypeReplaceQuotes;
    property AutoFormatAsYouTypeReplaceSymbols: WordBool read Get_AutoFormatAsYouTypeReplaceSymbols write Set_AutoFormatAsYouTypeReplaceSymbols;
    property AutoFormatAsYouTypeReplaceOrdinals: WordBool read Get_AutoFormatAsYouTypeReplaceOrdinals write Set_AutoFormatAsYouTypeReplaceOrdinals;
    property AutoFormatAsYouTypeReplaceFractions: WordBool read Get_AutoFormatAsYouTypeReplaceFractions write Set_AutoFormatAsYouTypeReplaceFractions;
    property AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool read Get_AutoFormatAsYouTypeReplacePlainTextEmphasis write Set_AutoFormatAsYouTypeReplacePlainTextEmphasis;
    property AutoFormatAsYouTypeFormatListItemBeginning: WordBool read Get_AutoFormatAsYouTypeFormatListItemBeginning write Set_AutoFormatAsYouTypeFormatListItemBeginning;
    property AutoFormatAsYouTypeDefineStyles: WordBool read Get_AutoFormatAsYouTypeDefineStyles write Set_AutoFormatAsYouTypeDefineStyles;
    property AutoFormatPlainTextWordMail: WordBool read Get_AutoFormatPlainTextWordMail write Set_AutoFormatPlainTextWordMail;
    property AutoFormatAsYouTypeReplaceHyperlinks: WordBool read Get_AutoFormatAsYouTypeReplaceHyperlinks write Set_AutoFormatAsYouTypeReplaceHyperlinks;
    property AutoFormatReplaceHyperlinks: WordBool read Get_AutoFormatReplaceHyperlinks write Set_AutoFormatReplaceHyperlinks;
    property DefaultHighlightColorIndex: WdColorIndex read Get_DefaultHighlightColorIndex write Set_DefaultHighlightColorIndex;
    property DefaultBorderLineStyle: WdLineStyle read Get_DefaultBorderLineStyle write Set_DefaultBorderLineStyle;
    property CheckSpellingAsYouType: WordBool read Get_CheckSpellingAsYouType write Set_CheckSpellingAsYouType;
    property CheckGrammarAsYouType: WordBool read Get_CheckGrammarAsYouType write Set_CheckGrammarAsYouType;
    property IgnoreInternetAndFileAddresses: WordBool read Get_IgnoreInternetAndFileAddresses write Set_IgnoreInternetAndFileAddresses;
    property ShowReadabilityStatistics: WordBool read Get_ShowReadabilityStatistics write Set_ShowReadabilityStatistics;
    property IgnoreUppercase: WordBool read Get_IgnoreUppercase write Set_IgnoreUppercase;
    property IgnoreMixedDigits: WordBool read Get_IgnoreMixedDigits write Set_IgnoreMixedDigits;
    property SuggestFromMainDictionaryOnly: WordBool read Get_SuggestFromMainDictionaryOnly write Set_SuggestFromMainDictionaryOnly;
    property SuggestSpellingCorrections: WordBool read Get_SuggestSpellingCorrections write Set_SuggestSpellingCorrections;
    property DefaultBorderLineWidth: WdLineWidth read Get_DefaultBorderLineWidth write Set_DefaultBorderLineWidth;
    property CheckGrammarWithSpelling: WordBool read Get_CheckGrammarWithSpelling write Set_CheckGrammarWithSpelling;
    property DefaultOpenFormat: WdOpenFormat read Get_DefaultOpenFormat write Set_DefaultOpenFormat;
    property PrintDraft: WordBool read Get_PrintDraft write Set_PrintDraft;
    property PrintReverse: WordBool read Get_PrintReverse write Set_PrintReverse;
    property MapPaperSize: WordBool read Get_MapPaperSize write Set_MapPaperSize;
    property AutoFormatAsYouTypeApplyTables: WordBool read Get_AutoFormatAsYouTypeApplyTables write Set_AutoFormatAsYouTypeApplyTables;
    property AutoFormatApplyFirstIndents: WordBool read Get_AutoFormatApplyFirstIndents write Set_AutoFormatApplyFirstIndents;
    property AutoFormatMatchParentheses: WordBool read Get_AutoFormatMatchParentheses write Set_AutoFormatMatchParentheses;
    property AutoFormatReplaceFarEastDashes: WordBool read Get_AutoFormatReplaceFarEastDashes write Set_AutoFormatReplaceFarEastDashes;
    property AutoFormatDeleteAutoSpaces: WordBool read Get_AutoFormatDeleteAutoSpaces write Set_AutoFormatDeleteAutoSpaces;
    property AutoFormatAsYouTypeApplyFirstIndents: WordBool read Get_AutoFormatAsYouTypeApplyFirstIndents write Set_AutoFormatAsYouTypeApplyFirstIndents;
    property AutoFormatAsYouTypeApplyDates: WordBool read Get_AutoFormatAsYouTypeApplyDates write Set_AutoFormatAsYouTypeApplyDates;
    property AutoFormatAsYouTypeApplyClosings: WordBool read Get_AutoFormatAsYouTypeApplyClosings write Set_AutoFormatAsYouTypeApplyClosings;
    property AutoFormatAsYouTypeMatchParentheses: WordBool read Get_AutoFormatAsYouTypeMatchParentheses write Set_AutoFormatAsYouTypeMatchParentheses;
    property AutoFormatAsYouTypeReplaceFarEastDashes: WordBool read Get_AutoFormatAsYouTypeReplaceFarEastDashes write Set_AutoFormatAsYouTypeReplaceFarEastDashes;
    property AutoFormatAsYouTypeDeleteAutoSpaces: WordBool read Get_AutoFormatAsYouTypeDeleteAutoSpaces write Set_AutoFormatAsYouTypeDeleteAutoSpaces;
    property AutoFormatAsYouTypeInsertClosings: WordBool read Get_AutoFormatAsYouTypeInsertClosings write Set_AutoFormatAsYouTypeInsertClosings;
    property AutoFormatAsYouTypeAutoLetterWizard: WordBool read Get_AutoFormatAsYouTypeAutoLetterWizard write Set_AutoFormatAsYouTypeAutoLetterWizard;
    property AutoFormatAsYouTypeInsertOvers: WordBool read Get_AutoFormatAsYouTypeInsertOvers write Set_AutoFormatAsYouTypeInsertOvers;
    property DisplayGridLines: WordBool read Get_DisplayGridLines write Set_DisplayGridLines;
    property MatchFuzzyCase: WordBool read Get_MatchFuzzyCase write Set_MatchFuzzyCase;
    property MatchFuzzyByte: WordBool read Get_MatchFuzzyByte write Set_MatchFuzzyByte;
    property MatchFuzzyHiragana: WordBool read Get_MatchFuzzyHiragana write Set_MatchFuzzyHiragana;
    property MatchFuzzySmallKana: WordBool read Get_MatchFuzzySmallKana write Set_MatchFuzzySmallKana;
    property MatchFuzzyDash: WordBool read Get_MatchFuzzyDash write Set_MatchFuzzyDash;
    property MatchFuzzyIterationMark: WordBool read Get_MatchFuzzyIterationMark write Set_MatchFuzzyIterationMark;
    property MatchFuzzyKanji: WordBool read Get_MatchFuzzyKanji write Set_MatchFuzzyKanji;
    property MatchFuzzyOldKana: WordBool read Get_MatchFuzzyOldKana write Set_MatchFuzzyOldKana;
    property MatchFuzzyProlongedSoundMark: WordBool read Get_MatchFuzzyProlongedSoundMark write Set_MatchFuzzyProlongedSoundMark;
    property MatchFuzzyDZ: WordBool read Get_MatchFuzzyDZ write Set_MatchFuzzyDZ;
    property MatchFuzzyBV: WordBool read Get_MatchFuzzyBV write Set_MatchFuzzyBV;
    property MatchFuzzyTC: WordBool read Get_MatchFuzzyTC write Set_MatchFuzzyTC;
    property MatchFuzzyHF: WordBool read Get_MatchFuzzyHF write Set_MatchFuzzyHF;
    property MatchFuzzyZJ: WordBool read Get_MatchFuzzyZJ write Set_MatchFuzzyZJ;
    property MatchFuzzyAY: WordBool read Get_MatchFuzzyAY write Set_MatchFuzzyAY;
    property MatchFuzzyKiKu: WordBool read Get_MatchFuzzyKiKu write Set_MatchFuzzyKiKu;
    property MatchFuzzyPunctuation: WordBool read Get_MatchFuzzyPunctuation write Set_MatchFuzzyPunctuation;
    property MatchFuzzySpace: WordBool read Get_MatchFuzzySpace write Set_MatchFuzzySpace;
    property ApplyFarEastFontsToAscii: WordBool read Get_ApplyFarEastFontsToAscii write Set_ApplyFarEastFontsToAscii;
    property ConvertHighAnsiToFarEast: WordBool read Get_ConvertHighAnsiToFarEast write Set_ConvertHighAnsiToFarEast;
    property PrintOddPagesInAscendingOrder: WordBool read Get_PrintOddPagesInAscendingOrder write Set_PrintOddPagesInAscendingOrder;
    property PrintEvenPagesInAscendingOrder: WordBool read Get_PrintEvenPagesInAscendingOrder write Set_PrintEvenPagesInAscendingOrder;
    property DefaultBorderColorIndex: WdColorIndex read Get_DefaultBorderColorIndex write Set_DefaultBorderColorIndex;
    property EnableMisusedWordsDictionary: WordBool read Get_EnableMisusedWordsDictionary write Set_EnableMisusedWordsDictionary;
    property AllowCombinedAuxiliaryForms: WordBool read Get_AllowCombinedAuxiliaryForms write Set_AllowCombinedAuxiliaryForms;
    property HangulHanjaFastConversion: WordBool read Get_HangulHanjaFastConversion write Set_HangulHanjaFastConversion;
    property CheckHangulEndings: WordBool read Get_CheckHangulEndings write Set_CheckHangulEndings;
    property EnableHangulHanjaRecentOrdering: WordBool read Get_EnableHangulHanjaRecentOrdering write Set_EnableHangulHanjaRecentOrdering;
    property MultipleWordConversionsMode: WdMultipleWordConversionsMode read Get_MultipleWordConversionsMode write Set_MultipleWordConversionsMode;
    property DefaultBorderColor: WdColor read Get_DefaultBorderColor write Set_DefaultBorderColor;
    property AllowPixelUnits: WordBool read Get_AllowPixelUnits write Set_AllowPixelUnits;
    property UseCharacterUnit: WordBool read Get_UseCharacterUnit write Set_UseCharacterUnit;
    property AllowCompoundNounProcessing: WordBool read Get_AllowCompoundNounProcessing write Set_AllowCompoundNounProcessing;
    property AutoKeyboardSwitching: WordBool read Get_AutoKeyboardSwitching write Set_AutoKeyboardSwitching;
    property DocumentViewDirection: WdDocumentViewDirection read Get_DocumentViewDirection write Set_DocumentViewDirection;
    property ArabicNumeral: WdArabicNumeral read Get_ArabicNumeral write Set_ArabicNumeral;
    property MonthNames: WdMonthNames read Get_MonthNames write Set_MonthNames;
    property CursorMovement: WdCursorMovement read Get_CursorMovement write Set_CursorMovement;
    property VisualSelection: WdVisualSelection read Get_VisualSelection write Set_VisualSelection;
    property ShowDiacritics: WordBool read Get_ShowDiacritics write Set_ShowDiacritics;
    property ShowControlCharacters: WordBool read Get_ShowControlCharacters write Set_ShowControlCharacters;
    property AddControlCharacters: WordBool read Get_AddControlCharacters write Set_AddControlCharacters;
    property AddBiDirectionalMarksWhenSavingTextFile: WordBool read Get_AddBiDirectionalMarksWhenSavingTextFile write Set_AddBiDirectionalMarksWhenSavingTextFile;
    property StrictInitialAlefHamza: WordBool read Get_StrictInitialAlefHamza write Set_StrictInitialAlefHamza;
    property StrictFinalYaa: WordBool read Get_StrictFinalYaa write Set_StrictFinalYaa;
    property HebrewMode: WdHebSpellStart read Get_HebrewMode write Set_HebrewMode;
    property ArabicMode: WdAraSpeller read Get_ArabicMode write Set_ArabicMode;
    property AllowClickAndTypeMouse: WordBool read Get_AllowClickAndTypeMouse write Set_AllowClickAndTypeMouse;
    property UseGermanSpellingReform: WordBool read Get_UseGermanSpellingReform write Set_UseGermanSpellingReform;
    property InterpretHighAnsi: WdHighAnsiText read Get_InterpretHighAnsi write Set_InterpretHighAnsi;
    property AddHebDoubleQuote: WordBool read Get_AddHebDoubleQuote write Set_AddHebDoubleQuote;
    property UseDiffDiacColor: WordBool read Get_UseDiffDiacColor write Set_UseDiffDiacColor;
    property DiacriticColorVal: WdColor read Get_DiacriticColorVal write Set_DiacriticColorVal;
    property OptimizeForWord97byDefault: WordBool read Get_OptimizeForWord97byDefault write Set_OptimizeForWord97byDefault;
  end;

// *********************************************************************//
// DispIntf:  OptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B7-0000-0000-C000-000000000046}
// *********************************************************************//
  OptionsDisp = dispinterface
    ['{000209B7-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property AllowAccentedUppercase {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property WPHelp {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 17;
    property WPDocNavKeys {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 18;
    property Pagination {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 19;
    property BlueScreen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 20;
    property EnableSound {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 21;
    property ConfirmConversions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 22;
    property UpdateLinksAtOpen {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 23;
    property SendMailAttach {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 24;
    property MeasurementUnit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMeasurementUnits dispid 26;
    property ButtonFieldClicks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 27;
    property ShortMenuNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 28;
    property RTFInClipboard {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 29;
    property UpdateFieldsAtPrint {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 30;
    property PrintProperties {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 31;
    property PrintFieldCodes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 32;
    property PrintComments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 33;
    property PrintHiddenText {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 34;
    property EnvelopeFeederInstalled {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 35;
    property UpdateLinksAtPrint {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 36;
    property PrintBackground {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 37;
    property PrintDrawingObjects {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 38;
    property DefaultTray {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 39;
    property DefaultTrayID {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 40;
    property CreateBackup {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 41;
    property AllowFastSave {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 42;
    property SavePropertiesPrompt {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 43;
    property SaveNormalPrompt {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 44;
    property SaveInterval {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 45;
    property BackgroundSave {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 46;
    property InsertedTextMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdInsertedTextMark dispid 57;
    property DeletedTextMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDeletedTextMark dispid 58;
    property RevisedLinesMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRevisedLinesMark dispid 59;
    property InsertedTextColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 60;
    property DeletedTextColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 61;
    property RevisedLinesColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 62;
    property DefaultFilePath {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_29:0}Path: WdDefaultFilePath]: WideString dispid 65;
    property Overtype {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 66;
    property ReplaceSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 67;
    property AllowDragAndDrop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 68;
    property AutoWordSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 69;
    property INSKeyForPaste {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 70;
    property SmartCutPaste {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 71;
    property TabIndentKey {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 72;
    property PictureEditor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 73;
    property AnimateScreenMovements {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 74;
    property VirusProtection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 75;
    property RevisedPropertiesMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdRevisedPropertiesMark dispid 76;
    property RevisedPropertiesColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 77;
    property SnapToGrid {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 79;
    property SnapToShapes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 80;
    property GridDistanceHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 81;
    property GridDistanceVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 82;
    property GridOriginHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 83;
    property GridOriginVertical {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 84;
    property InlineConversion {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 86;
    property IMEAutomaticControl {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 87;
    property AutoFormatApplyHeadings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 250;
    property AutoFormatApplyLists {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 251;
    property AutoFormatApplyBulletedLists {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 252;
    property AutoFormatApplyOtherParas {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 253;
    property AutoFormatReplaceQuotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 254;
    property AutoFormatReplaceSymbols {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 255;
    property AutoFormatReplaceOrdinals {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 256;
    property AutoFormatReplaceFractions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 257;
    property AutoFormatReplacePlainTextEmphasis {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 258;
    property AutoFormatPreserveStyles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 259;
    property AutoFormatAsYouTypeApplyHeadings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 260;
    property AutoFormatAsYouTypeApplyBorders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 261;
    property AutoFormatAsYouTypeApplyBulletedLists {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 262;
    property AutoFormatAsYouTypeApplyNumberedLists {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 263;
    property AutoFormatAsYouTypeReplaceQuotes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 264;
    property AutoFormatAsYouTypeReplaceSymbols {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 265;
    property AutoFormatAsYouTypeReplaceOrdinals {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 266;
    property AutoFormatAsYouTypeReplaceFractions {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 267;
    property AutoFormatAsYouTypeReplacePlainTextEmphasis {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 268;
    property AutoFormatAsYouTypeFormatListItemBeginning {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 269;
    property AutoFormatAsYouTypeDefineStyles {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 270;
    property AutoFormatPlainTextWordMail {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 271;
    property AutoFormatAsYouTypeReplaceHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 272;
    property AutoFormatReplaceHyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 273;
    property DefaultHighlightColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 274;
    property DefaultBorderLineStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineStyle dispid 275;
    property CheckSpellingAsYouType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 276;
    property CheckGrammarAsYouType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 277;
    property IgnoreInternetAndFileAddresses {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 278;
    property ShowReadabilityStatistics {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 279;
    property IgnoreUppercase {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 280;
    property IgnoreMixedDigits {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 281;
    property SuggestFromMainDictionaryOnly {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 282;
    property SuggestSpellingCorrections {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 283;
    property DefaultBorderLineWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdLineWidth dispid 284;
    property CheckGrammarWithSpelling {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 285;
    property DefaultOpenFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdOpenFormat dispid 286;
    property PrintDraft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 287;
    property PrintReverse {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 288;
    property MapPaperSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 289;
    property AutoFormatAsYouTypeApplyTables {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 290;
    property AutoFormatApplyFirstIndents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 291;
    property AutoFormatMatchParentheses {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 294;
    property AutoFormatReplaceFarEastDashes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 295;
    property AutoFormatDeleteAutoSpaces {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 296;
    property AutoFormatAsYouTypeApplyFirstIndents {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 297;
    property AutoFormatAsYouTypeApplyDates {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 298;
    property AutoFormatAsYouTypeApplyClosings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 299;
    property AutoFormatAsYouTypeMatchParentheses {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 300;
    property AutoFormatAsYouTypeReplaceFarEastDashes {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 301;
    property AutoFormatAsYouTypeDeleteAutoSpaces {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 302;
    property AutoFormatAsYouTypeInsertClosings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 303;
    property AutoFormatAsYouTypeAutoLetterWizard {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 304;
    property AutoFormatAsYouTypeInsertOvers {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 305;
    property DisplayGridLines {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 306;
    property MatchFuzzyCase {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 309;
    property MatchFuzzyByte {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 310;
    property MatchFuzzyHiragana {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 311;
    property MatchFuzzySmallKana {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 312;
    property MatchFuzzyDash {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 313;
    property MatchFuzzyIterationMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 314;
    property MatchFuzzyKanji {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 315;
    property MatchFuzzyOldKana {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 316;
    property MatchFuzzyProlongedSoundMark {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 317;
    property MatchFuzzyDZ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 318;
    property MatchFuzzyBV {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 319;
    property MatchFuzzyTC {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 320;
    property MatchFuzzyHF {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 321;
    property MatchFuzzyZJ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 322;
    property MatchFuzzyAY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 323;
    property MatchFuzzyKiKu {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 324;
    property MatchFuzzyPunctuation {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 325;
    property MatchFuzzySpace {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 326;
    property ApplyFarEastFontsToAscii {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 327;
    property ConvertHighAnsiToFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 328;
    property PrintOddPagesInAscendingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 330;
    property PrintEvenPagesInAscendingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 331;
    property DefaultBorderColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColorIndex dispid 337;
    property EnableMisusedWordsDictionary {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 338;
    property AllowCombinedAuxiliaryForms {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 339;
    property HangulHanjaFastConversion {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 340;
    property CheckHangulEndings {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 341;
    property EnableHangulHanjaRecentOrdering {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 342;
    property MultipleWordConversionsMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMultipleWordConversionsMode dispid 343;
    procedure SetWPHelpOptions {Flags(2), (6/6) CC:0, INV:1, DBG:4}({VT_12:1}var CommandKeyHelp: OleVariant; 
                                                                    {VT_12:1}var DocNavigationKeys: OleVariant; 
                                                                    {VT_12:1}var MouseSimulation: OleVariant; 
                                                                    {VT_12:1}var DemoGuidance: OleVariant; 
                                                                    {VT_12:1}var DemoSpeed: OleVariant; 
                                                                    {VT_12:1}var HelpType: OleVariant); dispid 333;
    property DefaultBorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 344;
    property AllowPixelUnits {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 345;
    property UseCharacterUnit {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 346;
    property AllowCompoundNounProcessing {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 347;
    property AutoKeyboardSwitching {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 399;
    property DocumentViewDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdDocumentViewDirection dispid 400;
    property ArabicNumeral {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdArabicNumeral dispid 401;
    property MonthNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdMonthNames dispid 402;
    property CursorMovement {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdCursorMovement dispid 403;
    property VisualSelection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdVisualSelection dispid 404;
    property ShowDiacritics {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 405;
    property ShowControlCharacters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 406;
    property AddControlCharacters {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 407;
    property AddBiDirectionalMarksWhenSavingTextFile {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 408;
    property StrictInitialAlefHamza {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 409;
    property StrictFinalYaa {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 410;
    property HebrewMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHebSpellStart dispid 411;
    property ArabicMode {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdAraSpeller dispid 412;
    property AllowClickAndTypeMouse {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 413;
    property UseGermanSpellingReform {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 415;
    property InterpretHighAnsi {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHighAnsiText dispid 418;
    property AddHebDoubleQuote {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 419;
    property UseDiffDiacColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 420;
    property DiacriticColorVal {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 421;
    property OptimizeForWord97byDefault {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 423;
  end;

// *********************************************************************//
// Interface: MailMessage
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BA-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMessage = interface(IDispatch)
    ['{000209BA-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure CheckName {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DisplayMoveDialog {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DisplayProperties {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DisplaySelectNamesDialog {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Forward {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure GoToNext {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure GoToPrevious {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Reply {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ReplyAll {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure ToggleHeader {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  MailMessageDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BA-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMessageDisp = dispinterface
    ['{000209BA-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    procedure CheckName {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 334;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 335;
    procedure DisplayMoveDialog {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 336;
    procedure DisplayProperties {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 337;
    procedure DisplaySelectNamesDialog {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 338;
    procedure Forward {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 339;
    procedure GoToNext {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 340;
    procedure GoToPrevious {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 341;
    procedure Reply {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 342;
    procedure ReplyAll {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 343;
    procedure ToggleHeader {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 344;
  end;

// *********************************************************************//
// Interface: ProofreadingErrors
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BB-0000-0000-C000-000000000046}
// *********************************************************************//
  ProofreadingErrors = interface(IDispatch)
    ['{000209BB-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdProofreadingErrorType; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer): Range; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Type_: WdProofreadingErrorType read Get_Type_;
  end;

// *********************************************************************//
// DispIntf:  ProofreadingErrorsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BB-0000-0000-C000-000000000046}
// *********************************************************************//
  ProofreadingErrorsDisp = dispinterface
    ['{000209BB-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdProofreadingErrorType readonly dispid 2;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer): Range; dispid 0;
  end;

// *********************************************************************//
// Interface: Mailer
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BD-0000-0000-C000-000000000046}
// *********************************************************************//
  Mailer = interface(IDispatch)
    ['{000209BD-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_BCCRecipients {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_BCCRecipients {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_CCRecipients {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_CCRecipients {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Recipients {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Recipients {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Enclosures {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    procedure Set_Enclosures {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_12:1}var prop: OleVariant); safecall;
    function  Get_Sender {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_SendDateTime {Flags(1), (1/0) CC:0, INV:2, DBG:6}: TDateTime; safecall;
    function  Get_Received {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    function  Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Sender: WideString read Get_Sender;
    property SendDateTime: TDateTime read Get_SendDateTime;
    property Received: WordBool read Get_Received;
    property Subject: WideString read Get_Subject write Set_Subject;
  end;

// *********************************************************************//
// DispIntf:  MailerDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BD-0000-0000-C000-000000000046}
// *********************************************************************//
  MailerDisp = dispinterface
    ['{000209BD-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    function  BCCRecipients {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 100;
    function  CCRecipients {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 101;
    function  Recipients {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 102;
    function  Enclosures {Flags(2), (1/0) CC:0, INV:2, DBG:4}: OleVariant; dispid 103;
    property Sender {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 104;
    property SendDateTime {Flags(2), (1/0) CC:0, INV:2, DBG:6}: TDateTime readonly dispid 105;
    property Received {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool readonly dispid 106;
    property Subject {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 107;
  end;

// *********************************************************************//
// Interface: WrapFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C3-0000-0000-C000-000000000046}
// *********************************************************************//
  WrapFormat = interface(IDispatch)
    ['{000209C3-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWrapType; safecall;
    procedure Set_Type_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdWrapType); safecall;
    function  Get_Side {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdWrapSideType; safecall;
    procedure Set_Side {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdWrapSideType); safecall;
    function  Get_DistanceTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DistanceBottom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceBottom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DistanceLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_DistanceRight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_DistanceRight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_AllowOverlap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_AllowOverlap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Type_: WdWrapType read Get_Type_ write Set_Type_;
    property Side: WdWrapSideType read Get_Side write Set_Side;
    property DistanceTop: Single read Get_DistanceTop write Set_DistanceTop;
    property DistanceBottom: Single read Get_DistanceBottom write Set_DistanceBottom;
    property DistanceLeft: Single read Get_DistanceLeft write Set_DistanceLeft;
    property DistanceRight: Single read Get_DistanceRight write Set_DistanceRight;
    property AllowOverlap: Integer read Get_AllowOverlap write Set_AllowOverlap;
  end;

// *********************************************************************//
// DispIntf:  WrapFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C3-0000-0000-C000-000000000046}
// *********************************************************************//
  WrapFormatDisp = dispinterface
    ['{000209C3-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWrapType dispid 100;
    property Side {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdWrapSideType dispid 101;
    property DistanceTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property DistanceBottom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    property DistanceLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 104;
    property DistanceRight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 105;
    property AllowOverlap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 106;
  end;

// *********************************************************************//
// Interface: HangulAndAlphabetExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D1-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetExceptions = interface(IDispatch)
    ['{000209D1-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): HangulAndAlphabetException; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): HangulAndAlphabetException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  HangulAndAlphabetExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D1-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetExceptionsDisp = dispinterface
    ['{000209D1-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): HangulAndAlphabetException; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): HangulAndAlphabetException; dispid 101;
  end;

// *********************************************************************//
// Interface: HangulAndAlphabetException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D2-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetException = interface(IDispatch)
    ['{000209D2-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  HangulAndAlphabetExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D2-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetExceptionDisp = dispinterface
    ['{000209D2-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: Adjustments
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C4-0000-0000-C000-000000000046}
// *********************************************************************//
  Adjustments = interface(IDispatch)
    ['{000209C4-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Item {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): Single; safecall;
    procedure Set_Item {Flags(1), (2/2) CC:0, INV:4, DBG:6}({VT_3:0}Index: Integer; 
                                                            {VT_4:0}prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: Single read Get_Item write Set_Item; default;
  end;

// *********************************************************************//
// DispIntf:  AdjustmentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C4-0000-0000-C000-000000000046}
// *********************************************************************//
  AdjustmentsDisp = dispinterface
    ['{000209C4-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property Item {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: Single dispid 0; default;
  end;

// *********************************************************************//
// Interface: CalloutFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C5-0000-0000-C000-000000000046}
// *********************************************************************//
  CalloutFormat = interface(IDispatch)
    ['{000209C5-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Accent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Accent {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Angle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoCalloutAngleType; safecall;
    procedure Set_Angle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoCalloutAngleType); safecall;
    function  Get_AutoAttach {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_AutoAttach {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_AutoLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_Border {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Border {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Drop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    function  Get_DropType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoCalloutDropType; safecall;
    function  Get_Gap {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Gap {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Length {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoCalloutType; safecall;
    procedure Set_Type_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoCalloutType); safecall;
    procedure AutomaticLength {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure CustomDrop {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Drop: Single); safecall;
    procedure CustomLength {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Length: Single); safecall;
    procedure PresetDrop {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}DropType: MsoCalloutDropType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Accent: MsoTriState read Get_Accent write Set_Accent;
    property Angle: MsoCalloutAngleType read Get_Angle write Set_Angle;
    property AutoAttach: MsoTriState read Get_AutoAttach write Set_AutoAttach;
    property AutoLength: MsoTriState read Get_AutoLength;
    property Border: MsoTriState read Get_Border write Set_Border;
    property Drop: Single read Get_Drop;
    property DropType: MsoCalloutDropType read Get_DropType;
    property Gap: Single read Get_Gap write Set_Gap;
    property Length: Single read Get_Length;
    property Type_: MsoCalloutType read Get_Type_ write Set_Type_;
  end;

// *********************************************************************//
// DispIntf:  CalloutFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C5-0000-0000-C000-000000000046}
// *********************************************************************//
  CalloutFormatDisp = dispinterface
    ['{000209C5-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Accent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 100;
    property Angle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoCalloutAngleType dispid 101;
    property AutoAttach {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 102;
    property AutoLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 103;
    property Border {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 104;
    property Drop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single readonly dispid 105;
    property DropType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoCalloutDropType readonly dispid 106;
    property Gap {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 107;
    property Length {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single readonly dispid 108;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoCalloutType dispid 109;
    procedure AutomaticLength {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
    procedure CustomDrop {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Drop: Single); dispid 11;
    procedure CustomLength {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Length: Single); dispid 12;
    procedure PresetDrop {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}DropType: MsoCalloutDropType); dispid 13;
  end;

// *********************************************************************//
// Interface: ColorFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C6-0000-0000-C000-000000000046}
// *********************************************************************//
  ColorFormat = interface(IDispatch)
    ['{000209C6-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_RGB {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_RGB {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_SchemeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_SchemeColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoColorType; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RGB: Integer read Get_RGB write Set_RGB;
    property SchemeColor: Integer read Get_SchemeColor write Set_SchemeColor;
    property Type_: MsoColorType read Get_Type_;
  end;

// *********************************************************************//
// DispIntf:  ColorFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C6-0000-0000-C000-000000000046}
// *********************************************************************//
  ColorFormatDisp = dispinterface
    ['{000209C6-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property RGB {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 0;
    property SchemeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 100;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoColorType readonly dispid 101;
  end;

// *********************************************************************//
// Interface: ConnectorFormat
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C7-0000-0000-C000-000000000046}
// *********************************************************************//
  ConnectorFormat = interface(IDispatch)
    ['{000209C7-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_BeginConnected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_BeginConnectedShape {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shape; safecall;
    function  Get_BeginConnectionSite {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_EndConnected {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    function  Get_EndConnectedShape {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Shape; safecall;
    function  Get_EndConnectionSite {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoConnectorType; safecall;
    procedure Set_Type_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoConnectorType); safecall;
    procedure BeginConnect {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:2}out ConnectedShape: Shape; 
                                                                {VT_3:0}ConnectionSite: Integer); safecall;
    procedure BeginDisconnect {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure EndConnect {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:2}out ConnectedShape: Shape; 
                                                              {VT_3:0}ConnectionSite: Integer); safecall;
    procedure EndDisconnect {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property BeginConnected: MsoTriState read Get_BeginConnected;
    property BeginConnectedShape: Shape read Get_BeginConnectedShape;
    property BeginConnectionSite: Integer read Get_BeginConnectionSite;
    property EndConnected: MsoTriState read Get_EndConnected;
    property EndConnectedShape: Shape read Get_EndConnectedShape;
    property EndConnectionSite: Integer read Get_EndConnectionSite;
    property Parent: IDispatch read Get_Parent;
    property Type_: MsoConnectorType read Get_Type_ write Set_Type_;
  end;

// *********************************************************************//
// DispIntf:  ConnectorFormatDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C7-0000-0000-C000-000000000046}
// *********************************************************************//
  ConnectorFormatDisp = dispinterface
    ['{000209C7-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property BeginConnected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 100;
    property BeginConnectedShape {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shape readonly dispid 101;
    property BeginConnectionSite {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 102;
    property EndConnected {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState readonly dispid 103;
    property EndConnectedShape {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Shape readonly dispid 104;
    property EndConnectionSite {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 105;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoConnectorType dispid 106;
    procedure BeginConnect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:2}out ConnectedShape: Shape; 
                                                                {VT_3:0}ConnectionSite: Integer); dispid 10;
    procedure BeginDisconnect {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 11;
    procedure EndConnect {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:2}out ConnectedShape: Shape; 
                                                              {VT_3:0}ConnectionSite: Integer); dispid 12;
    procedure EndDisconnect {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 13;
  end;

// *********************************************************************//
// Interface: FillFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C8-0000-0000-C000-000000000046}
// *********************************************************************//
  FillFormat = interface(IDispatch)
    ['{000209C8-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ColorFormat; safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ColorFormat; safecall;
    function  Get_GradientColorType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoGradientColorType; safecall;
    function  Get_GradientDegree {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    function  Get_GradientStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoGradientStyle; safecall;
    function  Get_GradientVariant {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Pattern {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPatternType; safecall;
    function  Get_PresetGradientType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetGradientType; safecall;
    function  Get_PresetTexture {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetTexture; safecall;
    function  Get_TextureName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    function  Get_TextureType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTextureType; safecall;
    function  Get_Transparency {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Transparency {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoFillType; safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    procedure Background {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure OneColorGradient {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}Style: MsoGradientStyle; 
                                                                    {VT_3:0}Variant: Integer; 
                                                                    {VT_4:0}Degree: Single); safecall;
    procedure Patterned {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}Pattern: MsoPatternType); safecall;
    procedure PresetGradient {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:0}Style: MsoGradientStyle; 
                                                                  {VT_3:0}Variant: Integer; 
                                                                  {VT_29:0}PresetGradientType: MsoPresetGradientType); safecall;
    procedure PresetTextured {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}PresetTexture: MsoPresetTexture); safecall;
    procedure Solid {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure TwoColorGradient {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:0}Style: MsoGradientStyle; 
                                                                    {VT_3:0}Variant: Integer); safecall;
    procedure UserPicture {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const PictureFile: WideString); safecall;
    procedure UserTextured {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_8:0}const TextureFile: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BackColor: ColorFormat read Get_BackColor;
    property ForeColor: ColorFormat read Get_ForeColor;
    property GradientColorType: MsoGradientColorType read Get_GradientColorType;
    property GradientDegree: Single read Get_GradientDegree;
    property GradientStyle: MsoGradientStyle read Get_GradientStyle;
    property GradientVariant: Integer read Get_GradientVariant;
    property Pattern: MsoPatternType read Get_Pattern;
    property PresetGradientType: MsoPresetGradientType read Get_PresetGradientType;
    property PresetTexture: MsoPresetTexture read Get_PresetTexture;
    property TextureName: WideString read Get_TextureName;
    property TextureType: MsoTextureType read Get_TextureType;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property Type_: MsoFillType read Get_Type_;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  FillFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C8-0000-0000-C000-000000000046}
// *********************************************************************//
  FillFormatDisp = dispinterface
    ['{000209C8-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ColorFormat readonly dispid 100;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ColorFormat readonly dispid 101;
    property GradientColorType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoGradientColorType readonly dispid 102;
    property GradientDegree {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single readonly dispid 103;
    property GradientStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoGradientStyle readonly dispid 104;
    property GradientVariant {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 105;
    property Pattern {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPatternType readonly dispid 106;
    property PresetGradientType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetGradientType readonly dispid 107;
    property PresetTexture {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetTexture readonly dispid 108;
    property TextureName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 109;
    property TextureType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTextureType readonly dispid 110;
    property Transparency {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoFillType readonly dispid 112;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 113;
    procedure Background {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
    procedure OneColorGradient {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}Style: MsoGradientStyle; 
                                                                    {VT_3:0}Variant: Integer; 
                                                                    {VT_4:0}Degree: Single); dispid 11;
    procedure Patterned {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}Pattern: MsoPatternType); dispid 12;
    procedure PresetGradient {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:0}Style: MsoGradientStyle; 
                                                                  {VT_3:0}Variant: Integer; 
                                                                  {VT_29:0}PresetGradientType: MsoPresetGradientType); dispid 13;
    procedure PresetTextured {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}PresetTexture: MsoPresetTexture); dispid 14;
    procedure Solid {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 15;
    procedure TwoColorGradient {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:0}Style: MsoGradientStyle; 
                                                                    {VT_3:0}Variant: Integer); dispid 16;
    procedure UserPicture {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const PictureFile: WideString); dispid 17;
    procedure UserTextured {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_8:0}const TextureFile: WideString); dispid 18;
  end;

// *********************************************************************//
// Interface: FreeformBuilder
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C9-0000-0000-C000-000000000046}
// *********************************************************************//
  FreeformBuilder = interface(IDispatch)
    ['{000209C9-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    procedure AddNodes {Flags(1), (8/8) CC:0, INV:1, DBG:6}({VT_29:0}SegmentType: MsoSegmentType; 
                                                            {VT_29:0}EditingType: MsoEditingType; 
                                                            {VT_4:0}X1: Single; {VT_4:0}Y1: Single; 
                                                            {VT_4:0}X2: Single; {VT_4:0}Y2: Single; 
                                                            {VT_4:0}X3: Single; {VT_4:0}Y3: Single); safecall;
    function  ConvertToShape {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Anchor: OleVariant): Shape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  FreeformBuilderDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C9-0000-0000-C000-000000000046}
// *********************************************************************//
  FreeformBuilderDisp = dispinterface
    ['{000209C9-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    procedure AddNodes {Flags(2), (8/8) CC:0, INV:1, DBG:4}({VT_29:0}SegmentType: MsoSegmentType; 
                                                            {VT_29:0}EditingType: MsoEditingType; 
                                                            {VT_4:0}X1: Single; {VT_4:0}Y1: Single; 
                                                            {VT_4:0}X2: Single; {VT_4:0}Y2: Single; 
                                                            {VT_4:0}X3: Single; {VT_4:0}Y3: Single); dispid 10;
    function  ConvertToShape {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Anchor: OleVariant): Shape; dispid 11;
  end;

// *********************************************************************//
// Interface: LineFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CA-0000-0000-C000-000000000046}
// *********************************************************************//
  LineFormat = interface(IDispatch)
    ['{000209CA-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_BackColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ColorFormat; safecall;
    function  Get_BeginArrowheadLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadLength; safecall;
    procedure Set_BeginArrowheadLength {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoArrowheadLength); safecall;
    function  Get_BeginArrowheadStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadStyle; safecall;
    procedure Set_BeginArrowheadStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoArrowheadStyle); safecall;
    function  Get_BeginArrowheadWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadWidth; safecall;
    procedure Set_BeginArrowheadWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoArrowheadWidth); safecall;
    function  Get_DashStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoLineDashStyle; safecall;
    procedure Set_DashStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoLineDashStyle); safecall;
    function  Get_EndArrowheadLength {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadLength; safecall;
    procedure Set_EndArrowheadLength {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoArrowheadLength); safecall;
    function  Get_EndArrowheadStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadStyle; safecall;
    procedure Set_EndArrowheadStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoArrowheadStyle); safecall;
    function  Get_EndArrowheadWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadWidth; safecall;
    procedure Set_EndArrowheadWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoArrowheadWidth); safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ColorFormat; safecall;
    function  Get_Pattern {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPatternType; safecall;
    procedure Set_Pattern {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPatternType); safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoLineStyle; safecall;
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoLineStyle); safecall;
    function  Get_Transparency {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Transparency {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Weight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Weight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BackColor: ColorFormat read Get_BackColor;
    property BeginArrowheadLength: MsoArrowheadLength read Get_BeginArrowheadLength write Set_BeginArrowheadLength;
    property BeginArrowheadStyle: MsoArrowheadStyle read Get_BeginArrowheadStyle write Set_BeginArrowheadStyle;
    property BeginArrowheadWidth: MsoArrowheadWidth read Get_BeginArrowheadWidth write Set_BeginArrowheadWidth;
    property DashStyle: MsoLineDashStyle read Get_DashStyle write Set_DashStyle;
    property EndArrowheadLength: MsoArrowheadLength read Get_EndArrowheadLength write Set_EndArrowheadLength;
    property EndArrowheadStyle: MsoArrowheadStyle read Get_EndArrowheadStyle write Set_EndArrowheadStyle;
    property EndArrowheadWidth: MsoArrowheadWidth read Get_EndArrowheadWidth write Set_EndArrowheadWidth;
    property ForeColor: ColorFormat read Get_ForeColor;
    property Pattern: MsoPatternType read Get_Pattern write Set_Pattern;
    property Style: MsoLineStyle read Get_Style write Set_Style;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Weight: Single read Get_Weight write Set_Weight;
  end;

// *********************************************************************//
// DispIntf:  LineFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CA-0000-0000-C000-000000000046}
// *********************************************************************//
  LineFormatDisp = dispinterface
    ['{000209CA-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property BackColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ColorFormat readonly dispid 100;
    property BeginArrowheadLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadLength dispid 101;
    property BeginArrowheadStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadStyle dispid 102;
    property BeginArrowheadWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadWidth dispid 103;
    property DashStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoLineDashStyle dispid 104;
    property EndArrowheadLength {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadLength dispid 105;
    property EndArrowheadStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadStyle dispid 106;
    property EndArrowheadWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoArrowheadWidth dispid 107;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ColorFormat readonly dispid 108;
    property Pattern {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPatternType dispid 109;
    property Style {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoLineStyle dispid 110;
    property Transparency {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 112;
    property Weight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 113;
  end;

// *********************************************************************//
// Interface: PictureFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CB-0000-0000-C000-000000000046}
// *********************************************************************//
  PictureFormat = interface(IDispatch)
    ['{000209CB-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Brightness {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Brightness {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ColorType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPictureColorType; safecall;
    procedure Set_ColorType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPictureColorType); safecall;
    function  Get_Contrast {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Contrast {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CropBottom {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CropBottom {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CropLeft {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CropLeft {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CropRight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CropRight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_CropTop {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_CropTop {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_TransparencyColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_TransparencyColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_TransparentBackground {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_TransparentBackground {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    procedure IncrementBrightness {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementContrast {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Brightness: Single read Get_Brightness write Set_Brightness;
    property ColorType: MsoPictureColorType read Get_ColorType write Set_ColorType;
    property Contrast: Single read Get_Contrast write Set_Contrast;
    property CropBottom: Single read Get_CropBottom write Set_CropBottom;
    property CropLeft: Single read Get_CropLeft write Set_CropLeft;
    property CropRight: Single read Get_CropRight write Set_CropRight;
    property CropTop: Single read Get_CropTop write Set_CropTop;
    property TransparencyColor: Integer read Get_TransparencyColor write Set_TransparencyColor;
    property TransparentBackground: MsoTriState read Get_TransparentBackground write Set_TransparentBackground;
  end;

// *********************************************************************//
// DispIntf:  PictureFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CB-0000-0000-C000-000000000046}
// *********************************************************************//
  PictureFormatDisp = dispinterface
    ['{000209CB-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Brightness {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 100;
    property ColorType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPictureColorType dispid 101;
    property Contrast {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property CropBottom {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    property CropLeft {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 104;
    property CropRight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 105;
    property CropTop {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 106;
    property TransparencyColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 107;
    property TransparentBackground {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 108;
    procedure IncrementBrightness {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 10;
    procedure IncrementContrast {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 11;
  end;

// *********************************************************************//
// Interface: ShadowFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CC-0000-0000-C000-000000000046}
// *********************************************************************//
  ShadowFormat = interface(IDispatch)
    ['{000209CC-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_ForeColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ColorFormat; safecall;
    function  Get_Obscured {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Obscured {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_OffsetX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_OffsetX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_OffsetY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_OffsetY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Transparency {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Transparency {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoShadowType; safecall;
    procedure Set_Type_ {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoShadowType); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    procedure IncrementOffsetX {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementOffsetY {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ForeColor: ColorFormat read Get_ForeColor;
    property Obscured: MsoTriState read Get_Obscured write Set_Obscured;
    property OffsetX: Single read Get_OffsetX write Set_OffsetX;
    property OffsetY: Single read Get_OffsetY write Set_OffsetY;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property Type_: MsoShadowType read Get_Type_ write Set_Type_;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  ShadowFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CC-0000-0000-C000-000000000046}
// *********************************************************************//
  ShadowFormatDisp = dispinterface
    ['{000209CC-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property ForeColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ColorFormat readonly dispid 100;
    property Obscured {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 101;
    property OffsetX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 102;
    property OffsetY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 103;
    property Transparency {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 104;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoShadowType dispid 105;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 106;
    procedure IncrementOffsetX {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 10;
    procedure IncrementOffsetY {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 11;
  end;

// *********************************************************************//
// Interface: ShapeNode
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CD-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNode = interface(IDispatch)
    ['{000209CD-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_EditingType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEditingType; safecall;
    function  Get_Points {Flags(1), (1/0) CC:0, INV:2, DBG:6}: OleVariant; safecall;
    function  Get_SegmentType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoSegmentType; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property EditingType: MsoEditingType read Get_EditingType;
    property Points: OleVariant read Get_Points;
    property SegmentType: MsoSegmentType read Get_SegmentType;
  end;

// *********************************************************************//
// DispIntf:  ShapeNodeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CD-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNodeDisp = dispinterface
    ['{000209CD-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property EditingType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEditingType readonly dispid 100;
    property Points {Flags(2), (1/0) CC:0, INV:2, DBG:6}: OleVariant readonly dispid 101;
    property SegmentType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoSegmentType readonly dispid 102;
  end;

// *********************************************************************//
// Interface: ShapeNodes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CE-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNodes = interface(IDispatch)
    ['{000209CE-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    procedure Delete {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer); safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): ShapeNode; safecall;
    procedure SetEditingType {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer; 
                                                                  {VT_29:0}EditingType: MsoEditingType); safecall;
    procedure SetPosition {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer; 
                                                               {VT_4:0}X1: Single; 
                                                               {VT_4:0}Y1: Single); safecall;
    procedure SetSegmentType {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer; 
                                                                  {VT_29:0}SegmentType: MsoSegmentType); safecall;
    procedure Insert {Flags(1), (9/9) CC:0, INV:1, DBG:6}({VT_3:0}Index: Integer; 
                                                          {VT_29:0}SegmentType: MsoSegmentType; 
                                                          {VT_29:0}EditingType: MsoEditingType; 
                                                          {VT_4:0}X1: Single; {VT_4:0}Y1: Single; 
                                                          {VT_4:0}X2: Single; {VT_4:0}Y2: Single; 
                                                          {VT_4:0}X3: Single; {VT_4:0}Y3: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  ShapeNodesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CE-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNodesDisp = dispinterface
    ['{000209CE-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 2;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    procedure Delete {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer); dispid 11;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): ShapeNode; dispid 0;
    procedure SetEditingType {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer; 
                                                                  {VT_29:0}EditingType: MsoEditingType); dispid 13;
    procedure SetPosition {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer; 
                                                               {VT_4:0}X1: Single; 
                                                               {VT_4:0}Y1: Single); dispid 14;
    procedure SetSegmentType {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer; 
                                                                  {VT_29:0}SegmentType: MsoSegmentType); dispid 15;
    procedure Insert {Flags(2), (9/9) CC:0, INV:1, DBG:4}({VT_3:0}Index: Integer; 
                                                          {VT_29:0}SegmentType: MsoSegmentType; 
                                                          {VT_29:0}EditingType: MsoEditingType; 
                                                          {VT_4:0}X1: Single; {VT_4:0}Y1: Single; 
                                                          {VT_4:0}X2: Single; {VT_4:0}Y2: Single; 
                                                          {VT_4:0}X3: Single; {VT_4:0}Y3: Single); dispid 12;
  end;

// *********************************************************************//
// Interface: TextEffectFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CF-0000-0000-C000-000000000046}
// *********************************************************************//
  TextEffectFormat = interface(IDispatch)
    ['{000209CF-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTextEffectAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTextEffectAlignment); safecall;
    function  Get_FontBold {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_FontBold {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_FontItalic {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_FontItalic {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_FontName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FontName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_FontSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FontSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_KernedPairs {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_KernedPairs {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_NormalizedHeight {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_NormalizedHeight {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_PresetShape {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetTextEffectShape; safecall;
    procedure Set_PresetShape {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPresetTextEffectShape); safecall;
    function  Get_PresetTextEffect {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetTextEffect; safecall;
    procedure Set_PresetTextEffect {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPresetTextEffect); safecall;
    function  Get_RotatedChars {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_RotatedChars {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_Text {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_Text {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_Tracking {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Tracking {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    procedure ToggleVerticalText {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Alignment: MsoTextEffectAlignment read Get_Alignment write Set_Alignment;
    property FontBold: MsoTriState read Get_FontBold write Set_FontBold;
    property FontItalic: MsoTriState read Get_FontItalic write Set_FontItalic;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Single read Get_FontSize write Set_FontSize;
    property KernedPairs: MsoTriState read Get_KernedPairs write Set_KernedPairs;
    property NormalizedHeight: MsoTriState read Get_NormalizedHeight write Set_NormalizedHeight;
    property PresetShape: MsoPresetTextEffectShape read Get_PresetShape write Set_PresetShape;
    property PresetTextEffect: MsoPresetTextEffect read Get_PresetTextEffect write Set_PresetTextEffect;
    property RotatedChars: MsoTriState read Get_RotatedChars write Set_RotatedChars;
    property Text: WideString read Get_Text write Set_Text;
    property Tracking: Single read Get_Tracking write Set_Tracking;
  end;

// *********************************************************************//
// DispIntf:  TextEffectFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CF-0000-0000-C000-000000000046}
// *********************************************************************//
  TextEffectFormatDisp = dispinterface
    ['{000209CF-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTextEffectAlignment dispid 100;
    property FontBold {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 101;
    property FontItalic {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 102;
    property FontName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 103;
    property FontSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 104;
    property KernedPairs {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 105;
    property NormalizedHeight {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 106;
    property PresetShape {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetTextEffectShape dispid 107;
    property PresetTextEffect {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetTextEffect dispid 108;
    property RotatedChars {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 109;
    property Text {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 110;
    property Tracking {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 111;
    procedure ToggleVerticalText {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 10;
  end;

// *********************************************************************//
// Interface: ThreeDFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D0-0000-0000-C000-000000000046}
// *********************************************************************//
  ThreeDFormat = interface(IDispatch)
    ['{000209D0-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Depth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_Depth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_ExtrusionColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: ColorFormat; safecall;
    function  Get_ExtrusionColorType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoExtrusionColorType; safecall;
    procedure Set_ExtrusionColorType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoExtrusionColorType); safecall;
    function  Get_Perspective {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Perspective {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    function  Get_PresetExtrusionDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetExtrusionDirection; safecall;
    function  Get_PresetLightingDirection {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetLightingDirection; safecall;
    procedure Set_PresetLightingDirection {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPresetLightingDirection); safecall;
    function  Get_PresetLightingSoftness {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetLightingSoftness; safecall;
    procedure Set_PresetLightingSoftness {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPresetLightingSoftness); safecall;
    function  Get_PresetMaterial {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetMaterial; safecall;
    procedure Set_PresetMaterial {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoPresetMaterial); safecall;
    function  Get_PresetThreeDFormat {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoPresetThreeDFormat; safecall;
    function  Get_RotationX {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RotationX {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_RotationY {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_RotationY {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoTriState; safecall;
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoTriState); safecall;
    procedure IncrementRotationX {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure IncrementRotationY {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_4:0}Increment: Single); safecall;
    procedure ResetRotation {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure SetExtrusionDirection {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}PresetExtrusionDirection: MsoPresetExtrusionDirection); safecall;
    procedure SetThreeDFormat {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:0}PresetThreeDFormat: MsoPresetThreeDFormat); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Depth: Single read Get_Depth write Set_Depth;
    property ExtrusionColor: ColorFormat read Get_ExtrusionColor;
    property ExtrusionColorType: MsoExtrusionColorType read Get_ExtrusionColorType write Set_ExtrusionColorType;
    property Perspective: MsoTriState read Get_Perspective write Set_Perspective;
    property PresetExtrusionDirection: MsoPresetExtrusionDirection read Get_PresetExtrusionDirection;
    property PresetLightingDirection: MsoPresetLightingDirection read Get_PresetLightingDirection write Set_PresetLightingDirection;
    property PresetLightingSoftness: MsoPresetLightingSoftness read Get_PresetLightingSoftness write Set_PresetLightingSoftness;
    property PresetMaterial: MsoPresetMaterial read Get_PresetMaterial write Set_PresetMaterial;
    property PresetThreeDFormat: MsoPresetThreeDFormat read Get_PresetThreeDFormat;
    property RotationX: Single read Get_RotationX write Set_RotationX;
    property RotationY: Single read Get_RotationY write Set_RotationY;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  ThreeDFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D0-0000-0000-C000-000000000046}
// *********************************************************************//
  ThreeDFormatDisp = dispinterface
    ['{000209D0-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1;
    property Depth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 100;
    property ExtrusionColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: ColorFormat readonly dispid 101;
    property ExtrusionColorType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoExtrusionColorType dispid 102;
    property Perspective {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 103;
    property PresetExtrusionDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetExtrusionDirection readonly dispid 104;
    property PresetLightingDirection {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetLightingDirection dispid 105;
    property PresetLightingSoftness {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetLightingSoftness dispid 106;
    property PresetMaterial {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetMaterial dispid 107;
    property PresetThreeDFormat {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoPresetThreeDFormat readonly dispid 108;
    property RotationX {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 109;
    property RotationY {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 110;
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoTriState dispid 111;
    procedure IncrementRotationX {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 10;
    procedure IncrementRotationY {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_4:0}Increment: Single); dispid 11;
    procedure ResetRotation {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 12;
    procedure SetExtrusionDirection {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}PresetExtrusionDirection: MsoPresetExtrusionDirection); dispid 14;
    procedure SetThreeDFormat {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:0}PresetThreeDFormat: MsoPresetThreeDFormat); dispid 13;
  end;

// *********************************************************************//
// DispIntf:  ApplicationEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209F7-0000-0000-C000-000000000046}
// *********************************************************************//
  ApplicationEvents = dispinterface
    ['{000209F7-0000-0000-C000-000000000046}']
  end;

// *********************************************************************//
// DispIntf:  ApplicationEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209FE-0000-0000-C000-000000000046}
// *********************************************************************//
  ApplicationEvents2 = dispinterface
    ['{000209FE-0000-0000-C000-000000000046}']
    procedure Startup {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1;
    procedure Quit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2;
    procedure DocumentChange {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 3;
    procedure DocumentOpen {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                       {VT_11:1}var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                       {VT_11:1}var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                      {VT_11:1}var SaveAsUI: WordBool; 
                                                                      {VT_11:1}var Cancel: WordBool); dispid 8;
    procedure NewDocument {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument); dispid 9;
    procedure WindowActivate {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                  {VT_29:1}const Wn: Window); dispid 10;
    procedure WindowDeactivate {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                    {VT_29:1}const Wn: Window); dispid 11;
    procedure WindowSelectionChange {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Sel: Selection); dispid 12;
    procedure WindowBeforeRightClick {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Sel: Selection; 
                                                                          {VT_11:1}var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Sel: Selection; 
                                                                           {VT_11:1}var Cancel: WordBool); dispid 14;
  end;

// *********************************************************************//
// DispIntf:  DocumentEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209F6-0000-0000-C000-000000000046}
// *********************************************************************//
  DocumentEvents = dispinterface
    ['{000209F6-0000-0000-C000-000000000046}']
    procedure New {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 4;
    procedure Open {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 5;
    procedure Close {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 6;
  end;

// *********************************************************************//
// DispIntf:  OCXEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209F3-0000-0000-C000-000000000046}
// *********************************************************************//
  OCXEvents = dispinterface
    ['{000209F3-0000-0000-C000-000000000046}']
    procedure GotFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417888;
    procedure LostFocus {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid -2147417887;
  end;

// *********************************************************************//
// Interface: IApplicationEvents
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209F7-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents = interface(IDispatch)
    ['{000209F7-0001-0000-C000-000000000046}']
    procedure Startup {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Quit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DocumentChange {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
  end;

// *********************************************************************//
// DispIntf:  IApplicationEventsDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209F7-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEventsDisp = dispinterface
    ['{000209F7-0001-0000-C000-000000000046}']
    procedure Startup {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1;
    procedure Quit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2;
    procedure DocumentChange {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 3;
  end;

// *********************************************************************//
// Interface: IApplicationEvents2
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209FE-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents2 = interface(IDispatch)
    ['{000209FE-0001-0000-C000-000000000046}']
    procedure Startup {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure Quit {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DocumentChange {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    procedure DocumentOpen {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument); safecall;
    procedure DocumentBeforeClose {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument; 
                                                                       {VT_11:1}var Cancel: WordBool); safecall;
    procedure DocumentBeforePrint {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument; 
                                                                       {VT_11:1}var Cancel: WordBool); safecall;
    procedure DocumentBeforeSave {Flags(1), (3/3) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument; 
                                                                      {VT_11:1}var SaveAsUI: WordBool; 
                                                                      {VT_11:1}var Cancel: WordBool); safecall;
    procedure NewDocument {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument); safecall;
    procedure WindowActivate {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument; 
                                                                  {VT_29:1}const Wn: Window); safecall;
    procedure WindowDeactivate {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const Doc: WordDocument; 
                                                                    {VT_29:1}const Wn: Window); safecall;
    procedure WindowSelectionChange {Flags(1), (1/1) CC:0, INV:1, DBG:6}({VT_29:1}const Sel: Selection); safecall;
    procedure WindowBeforeRightClick {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const Sel: Selection; 
                                                                          {VT_11:1}var Cancel: WordBool); safecall;
    procedure WindowBeforeDoubleClick {Flags(1), (2/2) CC:0, INV:1, DBG:6}({VT_29:1}const Sel: Selection; 
                                                                           {VT_11:1}var Cancel: WordBool); safecall;
  end;

// *********************************************************************//
// DispIntf:  IApplicationEvents2Disp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209FE-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents2Disp = dispinterface
    ['{000209FE-0001-0000-C000-000000000046}']
    procedure Startup {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 1;
    procedure Quit {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 2;
    procedure DocumentChange {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 3;
    procedure DocumentOpen {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                       {VT_11:1}var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                       {VT_11:1}var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave {Flags(2), (3/3) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                      {VT_11:1}var SaveAsUI: WordBool; 
                                                                      {VT_11:1}var Cancel: WordBool); dispid 8;
    procedure NewDocument {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument); dispid 9;
    procedure WindowActivate {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                  {VT_29:1}const Wn: Window); dispid 10;
    procedure WindowDeactivate {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Doc: WordDocument; 
                                                                    {VT_29:1}const Wn: Window); dispid 11;
    procedure WindowSelectionChange {Flags(2), (1/1) CC:0, INV:1, DBG:4}({VT_29:1}const Sel: Selection); dispid 12;
    procedure WindowBeforeRightClick {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Sel: Selection; 
                                                                          {VT_11:1}var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick {Flags(2), (2/2) CC:0, INV:1, DBG:4}({VT_29:1}const Sel: Selection; 
                                                                           {VT_11:1}var Cancel: WordBool); dispid 14;
  end;

// *********************************************************************//
// Interface: EmailAuthor
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D7-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailAuthor = interface(IDispatch)
    ['{000209D7-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Style; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Style: Style read Get_Style;
  end;

// *********************************************************************//
// DispIntf:  EmailAuthorDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D7-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailAuthorDisp = dispinterface
    ['{000209D7-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Style {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Style readonly dispid 103;
  end;

// *********************************************************************//
// Interface: EmailOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DB-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailOptions = interface(IDispatch)
    ['{000209DB-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_UseThemeStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseThemeStyle {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_MarkCommentsWith {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_MarkCommentsWith {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_MarkComments {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_MarkComments {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_EmailSignature {Flags(1), (1/0) CC:0, INV:2, DBG:6}: EmailSignature; safecall;
    function  Get_ComposeStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Style; safecall;
    function  Get_ReplyStyle {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Style; safecall;
    function  Get_ThemeName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ThemeName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property UseThemeStyle: WordBool read Get_UseThemeStyle write Set_UseThemeStyle;
    property MarkCommentsWith: WideString read Get_MarkCommentsWith write Set_MarkCommentsWith;
    property MarkComments: WordBool read Get_MarkComments write Set_MarkComments;
    property EmailSignature: EmailSignature read Get_EmailSignature;
    property ComposeStyle: Style read Get_ComposeStyle;
    property ReplyStyle: Style read Get_ReplyStyle;
    property ThemeName: WideString read Get_ThemeName write Set_ThemeName;
  end;

// *********************************************************************//
// DispIntf:  EmailOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DB-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailOptionsDisp = dispinterface
    ['{000209DB-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 100;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 101;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 102;
    property UseThemeStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 103;
    property MarkCommentsWith {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 106;
    property MarkComments {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 107;
    property EmailSignature {Flags(2), (1/0) CC:0, INV:2, DBG:6}: EmailSignature readonly dispid 108;
    property ComposeStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Style readonly dispid 109;
    property ReplyStyle {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Style readonly dispid 110;
    property ThemeName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 114;
  end;

// *********************************************************************//
// Interface: EmailSignature
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DC-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignature = interface(IDispatch)
    ['{000209DC-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_NewMessageSignature {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_NewMessageSignature {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_ReplyMessageSignature {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_ReplyMessageSignature {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NewMessageSignature: WideString read Get_NewMessageSignature write Set_NewMessageSignature;
    property ReplyMessageSignature: WideString read Get_ReplyMessageSignature write Set_ReplyMessageSignature;
  end;

// *********************************************************************//
// DispIntf:  EmailSignatureDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DC-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignatureDisp = dispinterface
    ['{000209DC-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 100;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 101;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 102;
    property NewMessageSignature {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 103;
    property ReplyMessageSignature {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 104;
  end;

// *********************************************************************//
// Interface: Email
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DD-0000-0000-C000-000000000046}
// *********************************************************************//
  Email = interface(IDispatch)
    ['{000209DD-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_CurrentEmailAuthor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: EmailAuthor; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property CurrentEmailAuthor: EmailAuthor read Get_CurrentEmailAuthor;
  end;

// *********************************************************************//
// DispIntf:  EmailDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DD-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailDisp = dispinterface
    ['{000209DD-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 100;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 101;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 102;
    property CurrentEmailAuthor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: EmailAuthor readonly dispid 105;
  end;

// *********************************************************************//
// Interface: HorizontalLineFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DE-0000-0000-C000-000000000046}
// *********************************************************************//
  HorizontalLineFormat = interface(IDispatch)
    ['{000209DE-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_PercentWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_PercentWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_NoShade {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_NoShade {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHorizontalLineAlignment; safecall;
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdHorizontalLineAlignment); safecall;
    function  Get_WidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdHorizontalLineWidthType; safecall;
    procedure Set_WidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdHorizontalLineWidthType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property PercentWidth: Single read Get_PercentWidth write Set_PercentWidth;
    property NoShade: WordBool read Get_NoShade write Set_NoShade;
    property Alignment: WdHorizontalLineAlignment read Get_Alignment write Set_Alignment;
    property WidthType: WdHorizontalLineWidthType read Get_WidthType write Set_WidthType;
  end;

// *********************************************************************//
// DispIntf:  HorizontalLineFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DE-0000-0000-C000-000000000046}
// *********************************************************************//
  HorizontalLineFormatDisp = dispinterface
    ['{000209DE-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property PercentWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 2;
    property NoShade {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHorizontalLineAlignment dispid 4;
    property WidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdHorizontalLineWidthType dispid 5;
  end;

// *********************************************************************//
// Interface: Frameset
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E2-0000-0000-C000-000000000046}
// *********************************************************************//
  Frameset = interface(IDispatch)
    ['{000209E2-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_ParentFrameset {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Frameset; safecall;
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFramesetType; safecall;
    function  Get_WidthType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFramesetSizeType; safecall;
    procedure Set_WidthType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFramesetSizeType); safecall;
    function  Get_HeightType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdFramesetSizeType; safecall;
    procedure Set_HeightType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdFramesetSizeType); safecall;
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_ChildFramesetCount {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_ChildFramesetItem {Flags(1), (2/1) CC:0, INV:2, DBG:6}({VT_3:0}Index: Integer): Frameset; safecall;
    function  Get_FramesetBorderWidth {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Single; safecall;
    procedure Set_FramesetBorderWidth {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_4:0}prop: Single); safecall;
    function  Get_FramesetBorderColor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdColor; safecall;
    procedure Set_FramesetBorderColor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdColor); safecall;
    function  Get_FrameScrollbarType {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdScrollbarType; safecall;
    procedure Set_FrameScrollbarType {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdScrollbarType); safecall;
    function  Get_FrameResizable {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FrameResizable {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FrameName {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FrameName {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_FrameDisplayBorders {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FrameDisplayBorders {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_FrameDefaultURL {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Set_FrameDefaultURL {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_8:0}const prop: WideString); safecall;
    function  Get_FrameLinkToFile {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_FrameLinkToFile {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  AddNewFrame {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_29:0}Where: WdFramesetNewFrameLocation): Frameset; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property ParentFrameset: Frameset read Get_ParentFrameset;
    property Type_: WdFramesetType read Get_Type_;
    property WidthType: WdFramesetSizeType read Get_WidthType write Set_WidthType;
    property HeightType: WdFramesetSizeType read Get_HeightType write Set_HeightType;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property ChildFramesetCount: Integer read Get_ChildFramesetCount;
    property ChildFramesetItem {Flags(2), (2/1) CC:0, INV:2, DBG:5}[{VT_3:0}Index: Integer]: Frameset read Get_ChildFramesetItem;
    property FramesetBorderWidth: Single read Get_FramesetBorderWidth write Set_FramesetBorderWidth;
    property FramesetBorderColor: WdColor read Get_FramesetBorderColor write Set_FramesetBorderColor;
    property FrameScrollbarType: WdScrollbarType read Get_FrameScrollbarType write Set_FrameScrollbarType;
    property FrameResizable: WordBool read Get_FrameResizable write Set_FrameResizable;
    property FrameName: WideString read Get_FrameName write Set_FrameName;
    property FrameDisplayBorders: WordBool read Get_FrameDisplayBorders write Set_FrameDisplayBorders;
    property FrameDefaultURL: WideString read Get_FrameDefaultURL write Set_FrameDefaultURL;
    property FrameLinkToFile: WordBool read Get_FrameLinkToFile write Set_FrameLinkToFile;
  end;

// *********************************************************************//
// DispIntf:  FramesetDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E2-0000-0000-C000-000000000046}
// *********************************************************************//
  FramesetDisp = dispinterface
    ['{000209E2-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property ParentFrameset {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Frameset readonly dispid 1003;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFramesetType readonly dispid 0;
    property WidthType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFramesetSizeType dispid 1;
    property HeightType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdFramesetSizeType dispid 2;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 3;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 4;
    property ChildFramesetCount {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 5;
    property ChildFramesetItem {Flags(2), (2/1) CC:0, INV:2, DBG:6}[{VT_3:0}Index: Integer]: Frameset readonly dispid 6;
    property FramesetBorderWidth {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Single dispid 20;
    property FramesetBorderColor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdColor dispid 21;
    property FrameScrollbarType {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdScrollbarType dispid 30;
    property FrameResizable {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 31;
    property FrameName {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 34;
    property FrameDisplayBorders {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 35;
    property FrameDefaultURL {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString dispid 36;
    property FrameLinkToFile {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 37;
    function  AddNewFrame {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_29:0}Where: WdFramesetNewFrameLocation): Frameset; dispid 50;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 51;
  end;

// *********************************************************************//
// Interface: DefaultWebOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E3-0000-0000-C000-000000000046}
// *********************************************************************//
  DefaultWebOptions = interface(IDispatch)
    ['{000209E3-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OptimizeForBrowser {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OptimizeForBrowser {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_BrowserLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBrowserLevel; safecall;
    procedure Set_BrowserLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBrowserLevel); safecall;
    function  Get_RelyOnCSS {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RelyOnCSS {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UpdateLinksOnSave {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UpdateLinksOnSave {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CheckIfOfficeIsHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckIfOfficeIsHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_CheckIfWordIsDefaultHTMLEditor {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_CheckIfWordIsDefaultHTMLEditor {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RelyOnVML {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RelyOnVML {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowPNG {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowPNG {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ScreenSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoScreenSize; safecall;
    procedure Set_ScreenSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoScreenSize); safecall;
    function  Get_PixelsPerInch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PixelsPerInch {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding; safecall;
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoEncoding); safecall;
    function  Get_AlwaysSaveInDefaultEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AlwaysSaveInDefaultEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_Fonts {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WebPageFonts; safecall;
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OptimizeForBrowser: WordBool read Get_OptimizeForBrowser write Set_OptimizeForBrowser;
    property BrowserLevel: WdBrowserLevel read Get_BrowserLevel write Set_BrowserLevel;
    property RelyOnCSS: WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
    property OrganizeInFolder: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UpdateLinksOnSave: WordBool read Get_UpdateLinksOnSave write Set_UpdateLinksOnSave;
    property UseLongFileNames: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property CheckIfOfficeIsHTMLEditor: WordBool read Get_CheckIfOfficeIsHTMLEditor write Set_CheckIfOfficeIsHTMLEditor;
    property CheckIfWordIsDefaultHTMLEditor: WordBool read Get_CheckIfWordIsDefaultHTMLEditor write Set_CheckIfWordIsDefaultHTMLEditor;
    property RelyOnVML: WordBool read Get_RelyOnVML write Set_RelyOnVML;
    property AllowPNG: WordBool read Get_AllowPNG write Set_AllowPNG;
    property ScreenSize: MsoScreenSize read Get_ScreenSize write Set_ScreenSize;
    property PixelsPerInch: Integer read Get_PixelsPerInch write Set_PixelsPerInch;
    property Encoding: MsoEncoding read Get_Encoding write Set_Encoding;
    property AlwaysSaveInDefaultEncoding: WordBool read Get_AlwaysSaveInDefaultEncoding write Set_AlwaysSaveInDefaultEncoding;
    property Fonts: WebPageFonts read Get_Fonts;
    property FolderSuffix: WideString read Get_FolderSuffix;
  end;

// *********************************************************************//
// DispIntf:  DefaultWebOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E3-0000-0000-C000-000000000046}
// *********************************************************************//
  DefaultWebOptionsDisp = dispinterface
    ['{000209E3-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property OptimizeForBrowser {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property BrowserLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBrowserLevel dispid 2;
    property RelyOnCSS {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property UpdateLinksOnSave {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property CheckIfOfficeIsHTMLEditor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property CheckIfWordIsDefaultHTMLEditor {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 8;
    property RelyOnVML {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 9;
    property AllowPNG {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 10;
    property ScreenSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoScreenSize dispid 11;
    property PixelsPerInch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 12;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding dispid 13;
    property AlwaysSaveInDefaultEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 14;
    property Fonts {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WebPageFonts readonly dispid 15;
    property FolderSuffix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 16;
  end;

// *********************************************************************//
// Interface: WebOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E4-0000-0000-C000-000000000046}
// *********************************************************************//
  WebOptions = interface(IDispatch)
    ['{000209E4-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_OptimizeForBrowser {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OptimizeForBrowser {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_BrowserLevel {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WdBrowserLevel; safecall;
    procedure Set_BrowserLevel {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: WdBrowserLevel); safecall;
    function  Get_RelyOnCSS {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RelyOnCSS {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_OrganizeInFolder {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_OrganizeInFolder {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_UseLongFileNames {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_UseLongFileNames {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_RelyOnVML {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_RelyOnVML {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_AllowPNG {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordBool; safecall;
    procedure Set_AllowPNG {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_11:0}prop: WordBool); safecall;
    function  Get_ScreenSize {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoScreenSize; safecall;
    procedure Set_ScreenSize {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoScreenSize); safecall;
    function  Get_PixelsPerInch {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    procedure Set_PixelsPerInch {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_3:0}prop: Integer); safecall;
    function  Get_Encoding {Flags(1), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding; safecall;
    procedure Set_Encoding {Flags(1), (1/1) CC:0, INV:4, DBG:6}({VT_29:0}prop: MsoEncoding); safecall;
    function  Get_FolderSuffix {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure UseDefaultFolderSuffix {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OptimizeForBrowser: WordBool read Get_OptimizeForBrowser write Set_OptimizeForBrowser;
    property BrowserLevel: WdBrowserLevel read Get_BrowserLevel write Set_BrowserLevel;
    property RelyOnCSS: WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
    property OrganizeInFolder: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property RelyOnVML: WordBool read Get_RelyOnVML write Set_RelyOnVML;
    property AllowPNG: WordBool read Get_AllowPNG write Set_AllowPNG;
    property ScreenSize: MsoScreenSize read Get_ScreenSize write Set_ScreenSize;
    property PixelsPerInch: Integer read Get_PixelsPerInch write Set_PixelsPerInch;
    property Encoding: MsoEncoding read Get_Encoding write Set_Encoding;
    property FolderSuffix: WideString read Get_FolderSuffix;
  end;

// *********************************************************************//
// DispIntf:  WebOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E4-0000-0000-C000-000000000046}
// *********************************************************************//
  WebOptionsDisp = dispinterface
    ['{000209E4-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property OptimizeForBrowser {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 1;
    property BrowserLevel {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WdBrowserLevel dispid 2;
    property RelyOnCSS {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 3;
    property OrganizeInFolder {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 4;
    property UseLongFileNames {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 5;
    property RelyOnVML {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 6;
    property AllowPNG {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordBool dispid 7;
    property ScreenSize {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoScreenSize dispid 8;
    property PixelsPerInch {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer dispid 9;
    property Encoding {Flags(2), (1/0) CC:0, INV:2, DBG:6}: MsoEncoding dispid 10;
    property FolderSuffix {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 11;
    procedure UseDefaultFolderSuffix {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// Interface: OtherCorrectionsExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DF-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsExceptions = interface(IDispatch)
    ['{000209DF-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get__NewEnum {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IUnknown; safecall;
    function  Get_Count {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Item {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_12:1}var Index: OleVariant): OtherCorrectionsException; safecall;
    function  Add {Flags(1), (2/1) CC:0, INV:1, DBG:6}({VT_8:0}const Name: WideString): OtherCorrectionsException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OtherCorrectionsExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DF-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsExceptionsDisp = dispinterface
    ['{000209DF-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property _NewEnum {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IUnknown readonly dispid -4;
    property Count {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    function  Item {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_12:1}var Index: OleVariant): OtherCorrectionsException; dispid 0;
    function  Add {Flags(2), (2/1) CC:0, INV:1, DBG:4}({VT_8:0}const Name: WideString): OtherCorrectionsException; dispid 101;
  end;

// *********************************************************************//
// Interface: OtherCorrectionsException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E1-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsException = interface(IDispatch)
    ['{000209E1-0000-0000-C000-000000000046}']
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WordApplication; safecall;
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:6}: IDispatch; safecall;
    function  Get_Index {Flags(1), (1/0) CC:0, INV:2, DBG:6}: Integer; safecall;
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:6}: WideString; safecall;
    procedure Delete {Flags(1), (0/0) CC:0, INV:1, DBG:6}; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  OtherCorrectionsExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E1-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsExceptionDisp = dispinterface
    ['{000209E1-0000-0000-C000-000000000046}']
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WordApplication readonly dispid 1000;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1001;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:6}: IDispatch readonly dispid 1002;
    property Index {Flags(2), (1/0) CC:0, INV:2, DBG:6}: Integer readonly dispid 1;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:6}: WideString readonly dispid 2;
    procedure Delete {Flags(2), (0/0) CC:0, INV:1, DBG:4}; dispid 101;
  end;

// *********************************************************************//
// The Class CoWordGlobal provides a Create and CreateRemote method to          
// create instances of the default interface _Global exposed by              
// the CoClass WordGlobal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordGlobal = class
    class function Create: _Global;
    class function CreateRemote(const MachineName: string): _Global;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TWordGlobal
// Help String      : 
// Default Interface: _Global
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (11) AppObject CanCreate Predeclid
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TWordGlobalProperties= class;
{$ENDIF}
  TWordGlobal = class(TOleServer)
  private
    FIntf:        _Global;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TWordGlobalProperties;
    function      GetServerProperties: TWordGlobalProperties;
{$ENDIF}
    function      GetDefaultInterface: _Global;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
// StdProp:
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
// StdProp:
    function  Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
// StdProp:
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
// StdProp:
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
// StdProp:IDispatch
    function  Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
// StdProp:
    function  Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
// StdProp:
    function  Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
// StdProp:
    function  Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
// StdProp:
    function  Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
// StdProp:
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
// StdProp:
    function  Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
// StdProp:
    function  Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
// StdProp:
    function  Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
// StdProp:
    function  Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
// StdProp:
    function  Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
// StdProp:
    function  Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
// StdProp:IDispatch
    function  Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:
    function  Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
// StdProp:
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
// StdProp:
    function  Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
// StdProp:WideString
    function  Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:
    function  Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
// StdProp:IDispatch
    function  Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    procedure Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
// StdProp:
    function  Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
// StdProp:
    function  Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                   {VT_8:0}const Command: WideString; 
                                                                   {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
// StdProp:
    function  Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                               {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
// StdProp:
    function  Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
// StdProp:
    function  Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
// StdProp:WideString
    procedure Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WordBool
    function  Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
// StdProp:
    function  Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
// StdProp:
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
// StdProp:
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Global);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    function  Repeat_ {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool; overload;
    function  Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool; overload;
    procedure DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Command: WideString);
    function  DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const App: WideString; 
                                                               {VT_8:0}const Topic: WideString): Integer;
    procedure DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString);
    function  DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Item: WideString): WideString;
    procedure DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer);
    procedure DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  BuildKeyCode {Flags(1), (5/1) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey): Integer; overload;
    function  BuildKeyCode {Flags(1), (5/2) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant): Integer; overload;
    function  BuildKeyCode {Flags(1), (5/3) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant): Integer; overload;
    function  BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant; 
                                                                {VT_12:1}var Arg4: OleVariant): Integer; overload;
    function  KeyString {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer): WideString; overload;
    function  KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                             {VT_12:1}var KeyCode2: OleVariant): WideString; overload;
    function  CheckSpelling {Flags(1), (14/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary6: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant): WordBool; overload;
    function  GetSpellingSuggestions {Flags(1), (15/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary5: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; overload;
    procedure Help {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var HelpType: OleVariant);
    function  NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Window;
    function  CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const String_: WideString): WideString;
    procedure ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Path: WideString);
    function  InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Inches: Single): Single;
    function  CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Centimeters: Single): Single;
    function  MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Millimeters: Single): Single;
    function  PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Picas: Single): Single;
    function  LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Lines: Single): Single;
    function  PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToPixels {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single; overload;
    function  PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; overload;
    function  PixelsToPoints {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single): Single; overload;
    function  PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; overload;
    property  DefaultInterface: _Global read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordApplication read Get_Application;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Creator;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property Documents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Documents read Get_Documents;
    property Windows {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Windows read Get_Windows;
    property ActiveDocument {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordDocument read Get_ActiveDocument;
    property ActiveWindow {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Window read Get_ActiveWindow;
    property Selection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Selection read Get_Selection;
    property WordBasic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_WordBasic;
    property RecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:2}: RecentFiles read Get_RecentFiles;
    property NormalTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Template read Get_NormalTemplate;
    property System_ {Flags(2), (1/0) CC:0, INV:2, DBG:2}: System read Get_System_;
    property AutoCorrect {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AutoCorrect read Get_AutoCorrect;
    property FontNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FontNames read Get_FontNames;
    property LandscapeFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FontNames read Get_LandscapeFontNames;
    property PortraitFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FontNames read Get_PortraitFontNames;
    property Languages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Languages read Get_Languages;
    property Assistant {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Assistant read Get_Assistant;
    property FileConverters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FileConverters read Get_FileConverters;
    property Dialogs {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Dialogs read Get_Dialogs;
    property CaptionLabels {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CaptionLabels read Get_CaptionLabels;
    property AutoCaptions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AutoCaptions read Get_AutoCaptions;
    property AddIns {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AddIns read Get_AddIns;
    property Tasks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Tasks read Get_Tasks;
    property MacroContainer {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_MacroContainer;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CommandBars read Get_CommandBars;
    property SynonymInfo {Flags(2), (3/2) CC:0, INV:2, DBG:2}[{VT_8:0}const Word: WideString; 
                                                              {VT_12:1}var LanguageID: OleVariant]: SynonymInfo read Get_SynonymInfo;
    property VBE {Flags(2), (1/0) CC:0, INV:2, DBG:2}: VBE read Get_VBE;
    property ListGalleries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ListGalleries read Get_ListGalleries;
    property Templates {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Templates read Get_Templates;
    property CustomizationContext {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_CustomizationContext write Set_CustomizationContext;
    property KeyBindings {Flags(2), (1/0) CC:0, INV:2, DBG:2}: KeyBindings read Get_KeyBindings;
    property KeysBoundTo {Flags(2), (4/3) CC:0, INV:2, DBG:2}[{VT_29:0}KeyCategory: WdKeyCategory; 
                                                              {VT_8:0}const Command: WideString; 
                                                              {VT_12:1}var CommandParameter: OleVariant]: KeysBoundTo read Get_KeysBoundTo;
    property FindKey {Flags(2), (3/2) CC:0, INV:2, DBG:2}[{VT_3:0}KeyCode: Integer; 
                                                          {VT_12:1}var KeyCode2: OleVariant]: KeyBinding read Get_FindKey;
    property Options {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Options read Get_Options;
    property CustomDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Dictionaries read Get_CustomDictionaries;
    property StatusBar {Flags(2), (1/0) CC:0, INV:4, DBG:2}: WideString write Set_StatusBar;
    property IsObjectValid {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_9:0}const Object_: IDispatch]: WordBool read Get_IsObjectValid;
    property HangulHanjaDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: HangulHanjaConversionDictionaries read Get_HangulHanjaDictionaries;
    property LanguageSettings {Flags(2), (1/0) CC:0, INV:2, DBG:2}: LanguageSettings read Get_LanguageSettings;
    property AnswerWizard {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AnswerWizard read Get_AnswerWizard;
  {CoClassWriteProperties}
    property PrintPreview {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintPreview write Set_PrintPreview;
    property ActivePrinter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property ShowVisualBasicEditor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TWordGlobalProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TWordGlobal
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TWordGlobalProperties = class(TPersistent)
  private
    FServer:    TWordGlobal;
    function    GetDefaultInterface: _Global;
    constructor Create(AServer: TWordGlobal);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
// StdProp:
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
// StdProp:
    function  Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
// StdProp:
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
// StdProp:
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
// StdProp:IDispatch
    function  Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
// StdProp:
    function  Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
// StdProp:
    function  Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
// StdProp:
    function  Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
// StdProp:
    function  Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
// StdProp:
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
// StdProp:
    function  Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
// StdProp:
    function  Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
// StdProp:
    function  Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
// StdProp:
    function  Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
// StdProp:
    function  Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
// StdProp:
    function  Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
// StdProp:IDispatch
    function  Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:
    function  Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
// StdProp:
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
// StdProp:
    function  Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
// StdProp:WideString
    function  Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:
    function  Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
// StdProp:IDispatch
    function  Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    procedure Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
// StdProp:
    function  Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
// StdProp:
    function  Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                   {VT_8:0}const Command: WideString; 
                                                                   {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
// StdProp:
    function  Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                               {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
// StdProp:
    function  Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
// StdProp:
    function  Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
// StdProp:WideString
    procedure Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WordBool
    function  Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
// StdProp:
    function  Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
// StdProp:
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
// StdProp:
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
  public
    property DefaultInterface: _Global read GetDefaultInterface;
  published
    property PrintPreview {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintPreview write Set_PrintPreview;
    property ActivePrinter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property ShowVisualBasicEditor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoWordDocument provides a Create and CreateRemote method to          
// create instances of the default interface _Document exposed by              
// the CoClass WordDocument. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordDocument = class
    class function Create: _Document;
    class function CreateRemote(const MachineName: string): _Document;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TWordDocument
// Help String      : 
// Default Interface: _Document
// Def. Intf. DISP? : No
// Event   Interface: DocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TWordDocumentProperties= class;
{$ENDIF}
  TWordDocument = class(TOleServer)
  private
    FOnNew: TNotifyEvent;
    FOnOpen: TNotifyEvent;
    FOnClose: TNotifyEvent;
    FIntf:        _Document;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TWordDocumentProperties;
    function      GetServerProperties: TWordDocumentProperties;
{$ENDIF}
    function      GetDefaultInterface: _Document;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
  {CoClassWriteArrayPropMethods}
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Bookmarks;
// StdProp:
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tables;
// StdProp:
    function  Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Footnotes;
// StdProp:
    function  Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Endnotes;
// StdProp:
    function  Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Comments;
// StdProp:TOleEnum
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentType;
// StdProp:WordBool
    function  Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:Integer
    function  Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:
    function  Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sections;
// StdProp:
    function  Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Paragraphs;
// StdProp:
    function  Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Words;
// StdProp:
    function  Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sentences;
// StdProp:
    function  Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Characters;
// StdProp:
    function  Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Fields;
// StdProp:
    function  Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FormFields;
// StdProp:
    function  Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Styles;
// StdProp:
    function  Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frames;
// StdProp:
    function  Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfFigures;
// StdProp:
    function  Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Variables;
// StdProp:
    function  Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMerge;
// StdProp:
    function  Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Envelope;
// StdProp:WideString
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Revisions;
// StdProp:
    function  Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfContents;
// StdProp:
    function  Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthorities;
// StdProp:
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:3}: PageSetup;
// StdProp:
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: PageSetup);
// StdProp:
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
// StdProp:WordBool
    function  Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RoutingSlip;
// StdProp:WordBool
    function  Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthoritiesCategories;
// StdProp:
    function  Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Indexes;
// StdProp:WordBool
    function  Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Range;
// StdProp:
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
// StdProp:TOleEnum
    function  Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentKind;
// StdProp:TOleEnum
    procedure Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdDocumentKind);
// StdProp:WordBool
    function  Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Subdocuments;
// StdProp:WordBool
    function  Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:Single
    function  Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WordBool
    function  Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Type_: WdCompatibility): WordBool;
// StdProp:WordBool
    procedure Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_29:0}Type_: WdCompatibility; 
                                                                     {VT_11:0}prop: WordBool);
// StdProp:
    function  Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: StoryRanges;
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:WordBool
    function  Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:Integer
    function  Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:TOleEnum
    function  Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdProtectionType;
// StdProp:
    function  Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Hyperlinks;
// StdProp:
    function  Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shapes;
// StdProp:
    function  Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListTemplates;
// StdProp:
    function  Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Lists;
// StdProp:WordBool
    function  Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:OleVariant
    function  Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
// StdProp:
    function  Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: InlineShapes;
// StdProp:
    function  Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shape;
// StdProp:
    procedure Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Shape);
// StdProp:WordBool
    function  Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Versions;
// StdProp:WordBool
    function  Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSummaryMode;
// StdProp:TOleEnum
    procedure Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSummaryMode);
// StdProp:Integer
    function  Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:WordBool
    function  Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:IDispatch
    function  Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListParagraphs;
// StdProp:WideString
    procedure Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WideString
    procedure Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WordBool
    function  Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:1}var LanguageID: OleVariant): WideString;
// StdProp:WideString
    procedure Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:1}var LanguageID: OleVariant; 
                                                                          {VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Mailer;
// StdProp:
    function  Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ReadabilityStatistics;
// StdProp:
    function  Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
// StdProp:
    function  Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
// StdProp:
    function  Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBProject;
// StdProp:WordBool
    function  Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:Single
    function  Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:WordBool
    function  Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdJustificationMode;
// StdProp:TOleEnum
    procedure Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdJustificationMode);
// StdProp:TOleEnum
    function  Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLevel;
// StdProp:TOleEnum
    procedure Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLevel);
// StdProp:WideString
    function  Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Email;
// StdProp:
    function  Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Scripts;
// StdProp:WordBool
    function  Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLanguageID;
// StdProp:TOleEnum
    procedure Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLanguageID);
// StdProp:
    function  Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frameset;
// StdProp:OleVariant
    function  Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
// StdProp:
    function  Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HTMLProject;
// StdProp:
    function  Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WebOptions;
// StdProp:TOleEnum
    function  Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    function  Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    procedure Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoEncoding);
// StdProp:WordBool
    function  Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Document);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure Close {Flags(1), (3/0) CC:0, INV:1, DBG:3}; overload;
    procedure Close {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant); overload;
    procedure Close {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var OriginalFormat: OleVariant); overload;
    procedure Close {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                         {VT_12:1}var OriginalFormat: OleVariant; 
                                                         {VT_12:1}var RouteDocument: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/0) CC:0, INV:1, DBG:3}; overload;
    procedure SaveAs {Flags(1), (11/1) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/2) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/3) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/4) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/5) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant; 
                                                           {VT_12:1}var AddToRecentFiles: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/6) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant; 
                                                           {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                           {VT_12:1}var WritePassword: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/7) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant; 
                                                           {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                           {VT_12:1}var WritePassword: OleVariant; 
                                                           {VT_12:1}var ReadOnlyRecommended: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/8) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant; 
                                                           {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                           {VT_12:1}var WritePassword: OleVariant; 
                                                           {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                           {VT_12:1}var EmbedTrueTypeFonts: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/9) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                           {VT_12:1}var FileFormat: OleVariant; 
                                                           {VT_12:1}var LockComments: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant; 
                                                           {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                           {VT_12:1}var WritePassword: OleVariant; 
                                                           {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                           {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                           {VT_12:1}var SaveNativePictureFormat: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/10) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                            {VT_12:1}var FileFormat: OleVariant; 
                                                            {VT_12:1}var LockComments: OleVariant; 
                                                            {VT_12:1}var Password: OleVariant; 
                                                            {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                            {VT_12:1}var WritePassword: OleVariant; 
                                                            {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                            {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                            {VT_12:1}var SaveNativePictureFormat: OleVariant; 
                                                            {VT_12:1}var SaveFormsData: OleVariant); overload;
    procedure SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                            {VT_12:1}var FileFormat: OleVariant; 
                                                            {VT_12:1}var LockComments: OleVariant; 
                                                            {VT_12:1}var Password: OleVariant; 
                                                            {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                            {VT_12:1}var WritePassword: OleVariant; 
                                                            {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                            {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                            {VT_12:1}var SaveNativePictureFormat: OleVariant; 
                                                            {VT_12:1}var SaveFormsData: OleVariant; 
                                                            {VT_12:1}var SaveAsAOCELetter: OleVariant); overload;
    procedure Repaginate {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure FitToPages {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ManualHyphenation {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Select {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure DataForm {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Route {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Save {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure PrintOutOld {Flags(1), (14/0) CC:0, INV:1, DBG:3}; overload;
    procedure PrintOutOld {Flags(1), (14/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant; 
                                                                {VT_12:1}var Item: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant; 
                                                                {VT_12:1}var Item: OleVariant; 
                                                                {VT_12:1}var Copies: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant; 
                                                                {VT_12:1}var Item: OleVariant; 
                                                                {VT_12:1}var Copies: OleVariant; 
                                                                {VT_12:1}var Pages: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); overload;
    procedure SendMail {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  Range {Flags(1), (3/0) CC:0, INV:1, DBG:3}: Range; overload;
    function  Range {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var Start: OleVariant): Range; overload;
    function  Range {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var Start: OleVariant; 
                                                         {VT_12:1}var End_: OleVariant): Range; overload;
    procedure RunAutoMacro {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Which: WdAutoMacros);
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure PrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  GoTo_ {Flags(1), (5/0) CC:0, INV:1, DBG:3}: Range; overload;
    function  GoTo_ {Flags(1), (5/1) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant): Range; overload;
    function  GoTo_ {Flags(1), (5/2) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant): Range; overload;
    function  GoTo_ {Flags(1), (5/3) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant): Range; overload;
    function  GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant; 
                                                         {VT_12:1}var Which: OleVariant; 
                                                         {VT_12:1}var Count: OleVariant; 
                                                         {VT_12:1}var Name: OleVariant): Range; overload;
    function  Undo {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool; overload;
    function  Undo {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool; overload;
    function  Redo {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool; overload;
    function  Redo {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool; overload;
    function  ComputeStatistics {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_29:0}Statistic: WdStatistic): Integer; overload;
    function  ComputeStatistics {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_29:0}Statistic: WdStatistic; 
                                                                     {VT_12:1}var IncludeFootnotesAndEndnotes: OleVariant): Integer; overload;
    procedure MakeCompatibilityDefault {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Protect {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdProtectionType); overload;
    procedure Protect {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdProtectionType; 
                                                           {VT_12:1}var NoReset: OleVariant); overload;
    procedure Protect {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdProtectionType; 
                                                           {VT_12:1}var NoReset: OleVariant; 
                                                           {VT_12:1}var Password: OleVariant); overload;
    procedure Unprotect {Flags(1), (1/0) CC:0, INV:1, DBG:3}; overload;
    procedure Unprotect {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var Password: OleVariant); overload;
    procedure EditionOptions {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdEditionType; 
                                                                  {VT_29:0}Option: WdEditionOption; 
                                                                  {VT_8:0}const Name: WideString); overload;
    procedure EditionOptions {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdEditionType; 
                                                                  {VT_29:0}Option: WdEditionOption; 
                                                                  {VT_8:0}const Name: WideString; 
                                                                  {VT_12:1}var Format: OleVariant); overload;
    procedure RunLetterWizard {Flags(1), (2/0) CC:0, INV:1, DBG:3}; overload;
    procedure RunLetterWizard {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var LetterContent: OleVariant); overload;
    procedure RunLetterWizard {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_12:1}var LetterContent: OleVariant; 
                                                                   {VT_12:1}var WizardMode: OleVariant); overload;
    function  GetLetterContent {Flags(1), (1/0) CC:0, INV:1, DBG:3}: WordLetterContent;
    procedure SetLetterContent {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var LetterContent: OleVariant);
    procedure CopyStylesFromTemplate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Template: WideString);
    procedure UpdateStyles {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure CheckGrammar {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure CheckSpelling {Flags(1), (12/0) CC:0, INV:1, DBG:3}; overload;
    procedure CheckSpelling {Flags(1), (12/1) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/2) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/3) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/4) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/5) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/6) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/7) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/8) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary6: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/9) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary7: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/10) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/11) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant); overload;
    procedure CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/0) CC:0, INV:1, DBG:3}; overload;
    procedure FollowHyperlink {Flags(1), (7/1) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/2) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/3) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/4) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant; 
                                                                   {VT_12:1}var AddHistory: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/5) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant; 
                                                                   {VT_12:1}var AddHistory: OleVariant; 
                                                                   {VT_12:1}var ExtraInfo: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/6) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant; 
                                                                   {VT_12:1}var AddHistory: OleVariant; 
                                                                   {VT_12:1}var ExtraInfo: OleVariant; 
                                                                   {VT_12:1}var Method: OleVariant); overload;
    procedure FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                   {VT_12:1}var SubAddress: OleVariant; 
                                                                   {VT_12:1}var NewWindow: OleVariant; 
                                                                   {VT_12:1}var AddHistory: OleVariant; 
                                                                   {VT_12:1}var ExtraInfo: OleVariant; 
                                                                   {VT_12:1}var Method: OleVariant; 
                                                                   {VT_12:1}var HeaderInfo: OleVariant); overload;
    procedure AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Reload {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  AutoSummarize {Flags(1), (4/0) CC:0, INV:1, DBG:3}: Range; overload;
    function  AutoSummarize {Flags(1), (4/1) CC:0, INV:1, DBG:3}({VT_12:1}var Length: OleVariant): Range; overload;
    function  AutoSummarize {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_12:1}var Length: OleVariant; 
                                                                 {VT_12:1}var Mode: OleVariant): Range; overload;
    function  AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_12:1}var Length: OleVariant; 
                                                                 {VT_12:1}var Mode: OleVariant; 
                                                                 {VT_12:1}var UpdateProperties: OleVariant): Range; overload;
    procedure RemoveNumbers {Flags(1), (1/0) CC:0, INV:1, DBG:3}; overload;
    procedure RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant); overload;
    procedure ConvertNumbersToText {Flags(1), (1/0) CC:0, INV:1, DBG:3}; overload;
    procedure ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant); overload;
    function  CountNumberedItems {Flags(1), (3/0) CC:0, INV:1, DBG:3}: Integer; overload;
    function  CountNumberedItems {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant): Integer; overload;
    function  CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant; 
                                                                      {VT_12:1}var Level: OleVariant): Integer; overload;
    procedure Post {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ToggleFormsDesign {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Compare {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString);
    procedure UpdateSummaryProperties {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  GetCrossReferenceItems {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var ReferenceType: OleVariant): OleVariant;
    procedure AutoFormat {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ViewCode {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ViewPropertyBrowser {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ForwardMailer {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Reply {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ReplyAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure SendMailer {Flags(1), (2/0) CC:0, INV:1, DBG:3}; overload;
    procedure SendMailer {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var FileFormat: OleVariant); overload;
    procedure SendMailer {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_12:1}var FileFormat: OleVariant; 
                                                              {VT_12:1}var Priority: OleVariant); overload;
    procedure UndoClear {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure PresentIt {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure SendFax {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const Address: WideString); overload;
    procedure SendFax {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const Address: WideString; 
                                                           {VT_12:1}var Subject: OleVariant); overload;
    procedure Merge {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString);
    procedure ClosePrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure CheckConsistency {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  CreateLetterContent {Flags(1), (32/23) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/24) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/25) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/26) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/27) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/28) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                         {VT_12:1}var SenderCity: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/29) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                         {VT_12:1}var SenderCity: OleVariant; 
                                                                         {VT_12:1}var SenderCode: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/30) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                         {VT_12:1}var SenderCity: OleVariant; 
                                                                         {VT_12:1}var SenderCode: OleVariant; 
                                                                         {VT_12:1}var SenderGender: OleVariant): WordLetterContent; overload;
    function  CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                         {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                         {VT_8:0}const PageDesign: WideString; 
                                                                         {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                         {VT_11:0}Letterhead: WordBool; 
                                                                         {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                         {VT_4:0}LetterheadSize: Single; 
                                                                         {VT_8:0}const RecipientName: WideString; 
                                                                         {VT_8:0}const RecipientAddress: WideString; 
                                                                         {VT_8:0}const Salutation: WideString; 
                                                                         {VT_29:0}SalutationType: WdSalutationType; 
                                                                         {VT_8:0}const RecipientReference: WideString; 
                                                                         {VT_8:0}const MailingInstructions: WideString; 
                                                                         {VT_8:0}const AttentionLine: WideString; 
                                                                         {VT_8:0}const Subject: WideString; 
                                                                         {VT_8:0}const CCList: WideString; 
                                                                         {VT_8:0}const ReturnAddress: WideString; 
                                                                         {VT_8:0}const SenderName: WideString; 
                                                                         {VT_8:0}const Closing: WideString; 
                                                                         {VT_8:0}const SenderCompany: WideString; 
                                                                         {VT_8:0}const SenderJobTitle: WideString; 
                                                                         {VT_8:0}const SenderInitials: WideString; 
                                                                         {VT_3:0}EnclosureNumber: Integer; 
                                                                         {VT_12:1}var InfoBlock: OleVariant; 
                                                                         {VT_12:1}var RecipientCode: OleVariant; 
                                                                         {VT_12:1}var RecipientGender: OleVariant; 
                                                                         {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                         {VT_12:1}var SenderCity: OleVariant; 
                                                                         {VT_12:1}var SenderCode: OleVariant; 
                                                                         {VT_12:1}var SenderGender: OleVariant; 
                                                                         {VT_12:1}var SenderReference: OleVariant): WordLetterContent; overload;
    procedure AcceptAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure RejectAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure DetectLanguage {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString);
    procedure RemoveTheme {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure WebPagePreview {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ReloadAs {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Encoding: MsoEncoding);
    procedure PrintOut {Flags(1), (18/0) CC:0, INV:1, DBG:3}; overload;
    procedure PrintOut {Flags(1), (18/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant; 
                                                             {VT_12:1}var Item: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant; 
                                                             {VT_12:1}var Item: OleVariant; 
                                                             {VT_12:1}var Copies: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant; 
                                                             {VT_12:1}var Item: OleVariant; 
                                                             {VT_12:1}var Copies: OleVariant; 
                                                             {VT_12:1}var Pages: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/15) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/16) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/17) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant); overload;
    procedure PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); overload;
    procedure sblt {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const s: WideString);
    property  DefaultInterface: _Document read GetDefaultInterface;
  {CoClassWriteProperties}
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordApplication read Get_Application;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Creator;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property BuiltInDocumentProperties {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_BuiltInDocumentProperties;
    property CustomDocumentProperties {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_CustomDocumentProperties;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Path;
    property Bookmarks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Bookmarks read Get_Bookmarks;
    property Tables {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Tables read Get_Tables;
    property Footnotes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Footnotes read Get_Footnotes;
    property Endnotes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Endnotes read Get_Endnotes;
    property Comments {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Comments read Get_Comments;
    property Type_ {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdDocumentType read Get_Type_;
    property Sections {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Sections read Get_Sections;
    property Paragraphs {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Paragraphs read Get_Paragraphs;
    property Words {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Words read Get_Words;
    property Sentences {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Sentences read Get_Sentences;
    property Characters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Characters read Get_Characters;
    property Fields {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Fields read Get_Fields;
    property FormFields {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FormFields read Get_FormFields;
    property Styles {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Styles read Get_Styles;
    property Frames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Frames read Get_Frames;
    property TablesOfFigures {Flags(2), (1/0) CC:0, INV:2, DBG:2}: TablesOfFigures read Get_TablesOfFigures;
    property Variables {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Variables read Get_Variables;
    property MailMerge {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MailMerge read Get_MailMerge;
    property Envelope {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Envelope read Get_Envelope;
    property FullName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_FullName;
    property Revisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Revisions read Get_Revisions;
    property TablesOfContents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: TablesOfContents read Get_TablesOfContents;
    property TablesOfAuthorities {Flags(2), (1/0) CC:0, INV:2, DBG:2}: TablesOfAuthorities read Get_TablesOfAuthorities;
    property Windows {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Windows read Get_Windows;
    property RoutingSlip {Flags(2), (1/0) CC:0, INV:2, DBG:2}: RoutingSlip read Get_RoutingSlip;
    property Routed {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Routed;
    property TablesOfAuthoritiesCategories {Flags(2), (1/0) CC:0, INV:2, DBG:2}: TablesOfAuthoritiesCategories read Get_TablesOfAuthoritiesCategories;
    property Indexes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Indexes read Get_Indexes;
    property Content {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Range read Get_Content;
    property ActiveWindow {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Window read Get_ActiveWindow;
    property ReadOnly {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ReadOnly;
    property Subdocuments {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Subdocuments read Get_Subdocuments;
    property IsMasterDocument {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IsMasterDocument;
    property Compatibility {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_29:0}Type_: WdCompatibility]: WordBool read Get_Compatibility write Set_Compatibility;
    property StoryRanges {Flags(2), (1/0) CC:0, INV:2, DBG:2}: StoryRanges read Get_StoryRanges;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CommandBars read Get_CommandBars;
    property IsSubdocument {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IsSubdocument;
    property SaveFormat {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SaveFormat;
    property ProtectionType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdProtectionType read Get_ProtectionType;
    property Hyperlinks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Hyperlinks read Get_Hyperlinks;
    property Shapes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Shapes read Get_Shapes;
    property ListTemplates {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ListTemplates read Get_ListTemplates;
    property Lists {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Lists read Get_Lists;
    property InlineShapes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: InlineShapes read Get_InlineShapes;
    property Versions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Versions read Get_Versions;
    property Container {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Container;
    property ListParagraphs {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ListParagraphs read Get_ListParagraphs;
    property Password {Flags(2), (1/0) CC:0, INV:4, DBG:2}: WideString write Set_Password;
    property WritePassword {Flags(2), (1/0) CC:0, INV:4, DBG:2}: WideString write Set_WritePassword;
    property HasPassword {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasPassword;
    property WriteReserved {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_WriteReserved;
    property ActiveWritingStyle {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_12:1}var LanguageID: OleVariant]: WideString read Get_ActiveWritingStyle write Set_ActiveWritingStyle;
    property Mailer {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Mailer read Get_Mailer;
    property ReadabilityStatistics {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ReadabilityStatistics read Get_ReadabilityStatistics;
    property GrammaticalErrors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ProofreadingErrors read Get_GrammaticalErrors;
    property SpellingErrors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ProofreadingErrors read Get_SpellingErrors;
    property VBProject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: VBProject read Get_VBProject;
    property FormsDesign {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FormsDesign;
    property CodeName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_CodeName;
    property ActiveTheme {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ActiveTheme;
    property ActiveThemeDisplayName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ActiveThemeDisplayName;
    property Email {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Email read Get_Email;
    property Scripts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Scripts read Get_Scripts;
    property Frameset {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Frameset read Get_Frameset;
    property HTMLProject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: HTMLProject read Get_HTMLProject;
    property WebOptions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WebOptions read Get_WebOptions;
    property OpenEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_OpenEncoding;
    property VBASigned {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_VBASigned;
  {CoClassWriteProperties}
    property AutoHyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AutoHyphenation write Set_AutoHyphenation;
    property HyphenateCaps {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HyphenateCaps write Set_HyphenateCaps;
    property HyphenationZone {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HyphenationZone write Set_HyphenationZone;
    property ConsecutiveHyphensLimit {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ConsecutiveHyphensLimit write Set_ConsecutiveHyphensLimit;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:2}: PageSetup read Get_PageSetup write Set_PageSetup;
    property HasRoutingSlip {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasRoutingSlip write Set_HasRoutingSlip;
    property Saved {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Saved write Set_Saved;
    property Kind {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdDocumentKind read Get_Kind write Set_Kind;
    property DefaultTabStop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_DefaultTabStop write Set_DefaultTabStop;
    property EmbedTrueTypeFonts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_EmbedTrueTypeFonts write Set_EmbedTrueTypeFonts;
    property SaveFormsData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SaveFormsData write Set_SaveFormsData;
    property ReadOnlyRecommended {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ReadOnlyRecommended write Set_ReadOnlyRecommended;
    property SaveSubsetFonts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SaveSubsetFonts write Set_SaveSubsetFonts;
    property UpdateStylesOnOpen {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UpdateStylesOnOpen write Set_UpdateStylesOnOpen;
    property Background {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Shape read Get_Background write Set_Background;
    property GrammarChecked {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_GrammarChecked write Set_GrammarChecked;
    property SpellingChecked {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SpellingChecked write Set_SpellingChecked;
    property ShowGrammaticalErrors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowGrammaticalErrors write Set_ShowGrammaticalErrors;
    property ShowSpellingErrors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowSpellingErrors write Set_ShowSpellingErrors;
    property ShowSummary {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowSummary write Set_ShowSummary;
    property SummaryViewMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSummaryMode read Get_SummaryViewMode write Set_SummaryViewMode;
    property SummaryLength {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SummaryLength write Set_SummaryLength;
    property PrintFractionalWidths {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintFractionalWidths write Set_PrintFractionalWidths;
    property PrintPostScriptOverText {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintPostScriptOverText write Set_PrintPostScriptOverText;
    property PrintFormsData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintFormsData write Set_PrintFormsData;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UserControl write Set_UserControl;
    property HasMailer {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasMailer write Set_HasMailer;
    property _CodeName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get__CodeName write Set__CodeName;
    property SnapToGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SnapToGrid write Set_SnapToGrid;
    property SnapToShapes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SnapToShapes write Set_SnapToShapes;
    property GridDistanceHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridDistanceHorizontal write Set_GridDistanceHorizontal;
    property GridDistanceVertical {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridDistanceVertical write Set_GridDistanceVertical;
    property GridOriginHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridOriginHorizontal write Set_GridOriginHorizontal;
    property GridOriginVertical {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridOriginVertical write Set_GridOriginVertical;
    property GridSpaceBetweenHorizontalLines {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_GridSpaceBetweenHorizontalLines write Set_GridSpaceBetweenHorizontalLines;
    property GridSpaceBetweenVerticalLines {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_GridSpaceBetweenVerticalLines write Set_GridSpaceBetweenVerticalLines;
    property GridOriginFromMargin {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_GridOriginFromMargin write Set_GridOriginFromMargin;
    property KerningByAlgorithm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_KerningByAlgorithm write Set_KerningByAlgorithm;
    property JustificationMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdJustificationMode read Get_JustificationMode write Set_JustificationMode;
    property FarEastLineBreakLevel {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdFarEastLineBreakLevel read Get_FarEastLineBreakLevel write Set_FarEastLineBreakLevel;
    property NoLineBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NoLineBreakBefore write Set_NoLineBreakBefore;
    property NoLineBreakAfter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NoLineBreakAfter write Set_NoLineBreakAfter;
    property TrackRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_TrackRevisions write Set_TrackRevisions;
    property PrintRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintRevisions write Set_PrintRevisions;
    property ShowRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowRevisions write Set_ShowRevisions;
    property LanguageDetected {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FarEastLineBreakLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdFarEastLineBreakLanguageID read Get_FarEastLineBreakLanguage write Set_FarEastLineBreakLanguage;
    property SaveEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_SaveEncoding write Set_SaveEncoding;
    property OptimizeForWord97 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OptimizeForWord97 write Set_OptimizeForWord97;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TWordDocumentProperties read GetServerProperties;
{$ENDIF}
  {CoClassWriteEventDecls}
    property OnNew: TNotifyEvent read FOnNew write FOnNew;
    property OnOpen: TNotifyEvent read FOnOpen write FOnOpen;
    property OnClose: TNotifyEvent read FOnClose write FOnClose;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TWordDocument
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TWordDocumentProperties = class(TPersistent)
  private
    FServer:    TWordDocument;
    function    GetDefaultInterface: _Document;
    constructor Create(AServer: TWordDocument);
  protected
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    function  Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Bookmarks;
// StdProp:
    function  Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tables;
// StdProp:
    function  Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Footnotes;
// StdProp:
    function  Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Endnotes;
// StdProp:
    function  Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Comments;
// StdProp:TOleEnum
    function  Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentType;
// StdProp:WordBool
    function  Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:Integer
    function  Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:
    function  Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sections;
// StdProp:
    function  Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Paragraphs;
// StdProp:
    function  Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Words;
// StdProp:
    function  Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sentences;
// StdProp:
    function  Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Characters;
// StdProp:
    function  Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Fields;
// StdProp:
    function  Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FormFields;
// StdProp:
    function  Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Styles;
// StdProp:
    function  Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frames;
// StdProp:
    function  Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfFigures;
// StdProp:
    function  Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Variables;
// StdProp:
    function  Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMerge;
// StdProp:
    function  Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Envelope;
// StdProp:WideString
    function  Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Revisions;
// StdProp:
    function  Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfContents;
// StdProp:
    function  Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthorities;
// StdProp:
    function  Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:3}: PageSetup;
// StdProp:
    procedure Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: PageSetup);
// StdProp:
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
// StdProp:WordBool
    function  Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RoutingSlip;
// StdProp:WordBool
    function  Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthoritiesCategories;
// StdProp:
    function  Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Indexes;
// StdProp:WordBool
    function  Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Range;
// StdProp:
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
// StdProp:TOleEnum
    function  Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentKind;
// StdProp:TOleEnum
    procedure Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdDocumentKind);
// StdProp:WordBool
    function  Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Subdocuments;
// StdProp:WordBool
    function  Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:Single
    function  Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WordBool
    function  Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Type_: WdCompatibility): WordBool;
// StdProp:WordBool
    procedure Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_29:0}Type_: WdCompatibility; 
                                                                     {VT_11:0}prop: WordBool);
// StdProp:
    function  Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: StoryRanges;
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:WordBool
    function  Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:Integer
    function  Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:TOleEnum
    function  Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdProtectionType;
// StdProp:
    function  Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Hyperlinks;
// StdProp:
    function  Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shapes;
// StdProp:
    function  Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListTemplates;
// StdProp:
    function  Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Lists;
// StdProp:WordBool
    function  Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:OleVariant
    function  Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
// StdProp:
    function  Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: InlineShapes;
// StdProp:
    function  Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shape;
// StdProp:
    procedure Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Shape);
// StdProp:WordBool
    function  Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Versions;
// StdProp:WordBool
    function  Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSummaryMode;
// StdProp:TOleEnum
    procedure Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSummaryMode);
// StdProp:Integer
    function  Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:WordBool
    function  Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:IDispatch
    function  Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListParagraphs;
// StdProp:WideString
    procedure Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WideString
    procedure Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WordBool
    function  Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:1}var LanguageID: OleVariant): WideString;
// StdProp:WideString
    procedure Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:1}var LanguageID: OleVariant; 
                                                                          {VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Mailer;
// StdProp:
    function  Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ReadabilityStatistics;
// StdProp:
    function  Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
// StdProp:
    function  Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
// StdProp:
    function  Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBProject;
// StdProp:WordBool
    function  Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:Single
    function  Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:WordBool
    function  Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdJustificationMode;
// StdProp:TOleEnum
    procedure Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdJustificationMode);
// StdProp:TOleEnum
    function  Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLevel;
// StdProp:TOleEnum
    procedure Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLevel);
// StdProp:WideString
    function  Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    function  Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Email;
// StdProp:
    function  Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Scripts;
// StdProp:WordBool
    function  Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLanguageID;
// StdProp:TOleEnum
    procedure Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLanguageID);
// StdProp:
    function  Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frameset;
// StdProp:OleVariant
    function  Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
// StdProp:
    function  Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HTMLProject;
// StdProp:
    function  Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WebOptions;
// StdProp:TOleEnum
    function  Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    function  Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
// StdProp:TOleEnum
    procedure Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoEncoding);
// StdProp:WordBool
    function  Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
  public
    property DefaultInterface: _Document read GetDefaultInterface;
  published
    property AutoHyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_AutoHyphenation write Set_AutoHyphenation;
    property HyphenateCaps {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HyphenateCaps write Set_HyphenateCaps;
    property HyphenationZone {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HyphenationZone write Set_HyphenationZone;
    property ConsecutiveHyphensLimit {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ConsecutiveHyphensLimit write Set_ConsecutiveHyphensLimit;
    property PageSetup {Flags(2), (1/0) CC:0, INV:2, DBG:2}: PageSetup read Get_PageSetup write Set_PageSetup;
    property HasRoutingSlip {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasRoutingSlip write Set_HasRoutingSlip;
    property Saved {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Saved write Set_Saved;
    property Kind {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdDocumentKind read Get_Kind write Set_Kind;
    property DefaultTabStop {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_DefaultTabStop write Set_DefaultTabStop;
    property EmbedTrueTypeFonts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_EmbedTrueTypeFonts write Set_EmbedTrueTypeFonts;
    property SaveFormsData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SaveFormsData write Set_SaveFormsData;
    property ReadOnlyRecommended {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ReadOnlyRecommended write Set_ReadOnlyRecommended;
    property SaveSubsetFonts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SaveSubsetFonts write Set_SaveSubsetFonts;
    property UpdateStylesOnOpen {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UpdateStylesOnOpen write Set_UpdateStylesOnOpen;
    property Background {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Shape read Get_Background write Set_Background;
    property GrammarChecked {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_GrammarChecked write Set_GrammarChecked;
    property SpellingChecked {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SpellingChecked write Set_SpellingChecked;
    property ShowGrammaticalErrors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowGrammaticalErrors write Set_ShowGrammaticalErrors;
    property ShowSpellingErrors {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowSpellingErrors write Set_ShowSpellingErrors;
    property ShowSummary {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowSummary write Set_ShowSummary;
    property SummaryViewMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSummaryMode read Get_SummaryViewMode write Set_SummaryViewMode;
    property SummaryLength {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SummaryLength write Set_SummaryLength;
    property PrintFractionalWidths {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintFractionalWidths write Set_PrintFractionalWidths;
    property PrintPostScriptOverText {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintPostScriptOverText write Set_PrintPostScriptOverText;
    property PrintFormsData {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintFormsData write Set_PrintFormsData;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UserControl write Set_UserControl;
    property HasMailer {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_HasMailer write Set_HasMailer;
    property _CodeName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get__CodeName write Set__CodeName;
    property SnapToGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SnapToGrid write Set_SnapToGrid;
    property SnapToShapes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SnapToShapes write Set_SnapToShapes;
    property GridDistanceHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridDistanceHorizontal write Set_GridDistanceHorizontal;
    property GridDistanceVertical {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridDistanceVertical write Set_GridDistanceVertical;
    property GridOriginHorizontal {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridOriginHorizontal write Set_GridOriginHorizontal;
    property GridOriginVertical {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_GridOriginVertical write Set_GridOriginVertical;
    property GridSpaceBetweenHorizontalLines {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_GridSpaceBetweenHorizontalLines write Set_GridSpaceBetweenHorizontalLines;
    property GridSpaceBetweenVerticalLines {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_GridSpaceBetweenVerticalLines write Set_GridSpaceBetweenVerticalLines;
    property GridOriginFromMargin {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_GridOriginFromMargin write Set_GridOriginFromMargin;
    property KerningByAlgorithm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_KerningByAlgorithm write Set_KerningByAlgorithm;
    property JustificationMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdJustificationMode read Get_JustificationMode write Set_JustificationMode;
    property FarEastLineBreakLevel {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdFarEastLineBreakLevel read Get_FarEastLineBreakLevel write Set_FarEastLineBreakLevel;
    property NoLineBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NoLineBreakBefore write Set_NoLineBreakBefore;
    property NoLineBreakAfter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NoLineBreakAfter write Set_NoLineBreakAfter;
    property TrackRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_TrackRevisions write Set_TrackRevisions;
    property PrintRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintRevisions write Set_PrintRevisions;
    property ShowRevisions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowRevisions write Set_ShowRevisions;
    property LanguageDetected {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FarEastLineBreakLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdFarEastLineBreakLanguageID read Get_FarEastLineBreakLanguage write Set_FarEastLineBreakLanguage;
    property SaveEncoding {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoEncoding read Get_SaveEncoding write Set_SaveEncoding;
    property OptimizeForWord97 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_OptimizeForWord97 write Set_OptimizeForWord97;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoWordFont provides a Create and CreateRemote method to          
// create instances of the default interface _Font exposed by              
// the CoClass WordFont. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordFont = class
    class function Create: _Font;
    class function CreateRemote(const MachineName: string): _Font;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TWordFont
// Help String      : 
// Default Interface: _Font
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TWordFontProperties= class;
{$ENDIF}
  TWordFont = class(TOleServer)
  private
    FIntf:        _Font;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TWordFontProperties;
    function      GetServerProperties: TWordFontProperties;
{$ENDIF}
    function      GetDefaultInterface: _Font;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordFont;
// StdProp:Integer
    function  Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
// StdProp:TOleEnum
    procedure Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
// StdProp:Integer
    function  Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdUnderline;
// StdProp:TOleEnum
    procedure Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdUnderline);
// StdProp:Single
    function  Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:Integer
    function  Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAnimation;
// StdProp:TOleEnum
    procedure Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAnimation);
// StdProp:
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
// StdProp:
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
// StdProp:
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
// StdProp:TOleEnum
    function  Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEmphasisMark;
// StdProp:TOleEnum
    procedure Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEmphasisMark);
// StdProp:WordBool
    function  Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
// StdProp:TOleEnum
    procedure Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
// StdProp:Integer
    function  Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WideString
    function  Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
// StdProp:TOleEnum
    procedure Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
// StdProp:TOleEnum
    function  Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
// StdProp:TOleEnum
    procedure Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
// StdProp:TOleEnum
    function  Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
// StdProp:TOleEnum
    procedure Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Font);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure Grow {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Shrink {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure SetAsTemplateDefault {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    property  DefaultInterface: _Font read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordApplication read Get_Application;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Creator;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordFont read Get_Duplicate;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Shading read Get_Shading;
  {CoClassWriteProperties}
    property Bold {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Bold write Set_Bold;
    property Italic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Italic write Set_Italic;
    property Hidden {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hidden write Set_Hidden;
    property SmallCaps {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SmallCaps write Set_SmallCaps;
    property AllCaps {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AllCaps write Set_AllCaps;
    property StrikeThrough {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_StrikeThrough write Set_StrikeThrough;
    property DoubleStrikeThrough {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DoubleStrikeThrough write Set_DoubleStrikeThrough;
    property ColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColorIndex read Get_ColorIndex write Set_ColorIndex;
    property Subscript {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Subscript write Set_Subscript;
    property Superscript {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Superscript write Set_Superscript;
    property Underline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdUnderline read Get_Underline write Set_Underline;
    property Size {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_Size write Set_Size;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name write Set_Name;
    property Position {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Position write Set_Position;
    property Spacing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_Spacing write Set_Spacing;
    property Scaling {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Scaling write Set_Scaling;
    property Shadow {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Shadow write Set_Shadow;
    property Outline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Outline write Set_Outline;
    property Emboss {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Emboss write Set_Emboss;
    property Kerning {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_Kerning write Set_Kerning;
    property Engrave {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Engrave write Set_Engrave;
    property Animation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdAnimation read Get_Animation write Set_Animation;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Borders read Get_Borders write Set_Borders;
    property EmphasisMark {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdEmphasisMark read Get_EmphasisMark write Set_EmphasisMark;
    property DisableCharacterSpaceGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisableCharacterSpaceGrid write Set_DisableCharacterSpaceGrid;
    property NameFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameFarEast write Set_NameFarEast;
    property NameAscii {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameAscii write Set_NameAscii;
    property NameOther {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameOther write Set_NameOther;
    property Color {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColor read Get_Color write Set_Color;
    property BoldBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_BoldBi write Set_BoldBi;
    property ItalicBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ItalicBi write Set_ItalicBi;
    property SizeBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_SizeBi write Set_SizeBi;
    property NameBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameBi write Set_NameBi;
    property ColorIndexBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColorIndex read Get_ColorIndexBi write Set_ColorIndexBi;
    property DiacriticColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColor read Get_DiacriticColor write Set_DiacriticColor;
    property UnderlineColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColor read Get_UnderlineColor write Set_UnderlineColor;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TWordFontProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TWordFont
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TWordFontProperties = class(TPersistent)
  private
    FServer:    TWordFont;
    function    GetDefaultInterface: _Font;
    constructor Create(AServer: TWordFont);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordFont;
// StdProp:Integer
    function  Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
// StdProp:TOleEnum
    procedure Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
// StdProp:Integer
    function  Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdUnderline;
// StdProp:TOleEnum
    procedure Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdUnderline);
// StdProp:Single
    function  Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:Integer
    function  Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAnimation;
// StdProp:TOleEnum
    procedure Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAnimation);
// StdProp:
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
// StdProp:
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
// StdProp:
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
// StdProp:TOleEnum
    function  Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEmphasisMark;
// StdProp:TOleEnum
    procedure Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEmphasisMark);
// StdProp:WordBool
    function  Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
// StdProp:TOleEnum
    procedure Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
// StdProp:Integer
    function  Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WideString
    function  Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
// StdProp:TOleEnum
    procedure Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
// StdProp:TOleEnum
    function  Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
// StdProp:TOleEnum
    procedure Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
// StdProp:TOleEnum
    function  Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
// StdProp:TOleEnum
    procedure Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
  public
    property DefaultInterface: _Font read GetDefaultInterface;
  published
    property Bold {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Bold write Set_Bold;
    property Italic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Italic write Set_Italic;
    property Hidden {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hidden write Set_Hidden;
    property SmallCaps {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SmallCaps write Set_SmallCaps;
    property AllCaps {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AllCaps write Set_AllCaps;
    property StrikeThrough {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_StrikeThrough write Set_StrikeThrough;
    property DoubleStrikeThrough {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DoubleStrikeThrough write Set_DoubleStrikeThrough;
    property ColorIndex {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColorIndex read Get_ColorIndex write Set_ColorIndex;
    property Subscript {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Subscript write Set_Subscript;
    property Superscript {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Superscript write Set_Superscript;
    property Underline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdUnderline read Get_Underline write Set_Underline;
    property Size {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_Size write Set_Size;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name write Set_Name;
    property Position {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Position write Set_Position;
    property Spacing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_Spacing write Set_Spacing;
    property Scaling {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Scaling write Set_Scaling;
    property Shadow {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Shadow write Set_Shadow;
    property Outline {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Outline write Set_Outline;
    property Emboss {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Emboss write Set_Emboss;
    property Kerning {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_Kerning write Set_Kerning;
    property Engrave {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Engrave write Set_Engrave;
    property Animation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdAnimation read Get_Animation write Set_Animation;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Borders read Get_Borders write Set_Borders;
    property EmphasisMark {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdEmphasisMark read Get_EmphasisMark write Set_EmphasisMark;
    property DisableCharacterSpaceGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisableCharacterSpaceGrid write Set_DisableCharacterSpaceGrid;
    property NameFarEast {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameFarEast write Set_NameFarEast;
    property NameAscii {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameAscii write Set_NameAscii;
    property NameOther {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameOther write Set_NameOther;
    property Color {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColor read Get_Color write Set_Color;
    property BoldBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_BoldBi write Set_BoldBi;
    property ItalicBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_ItalicBi write Set_ItalicBi;
    property SizeBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_SizeBi write Set_SizeBi;
    property NameBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_NameBi write Set_NameBi;
    property ColorIndexBi {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColorIndex read Get_ColorIndexBi write Set_ColorIndexBi;
    property DiacriticColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColor read Get_DiacriticColor write Set_DiacriticColor;
    property UnderlineColor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdColor read Get_UnderlineColor write Set_UnderlineColor;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoWordParagraphFormat provides a Create and CreateRemote method to          
// create instances of the default interface _ParagraphFormat exposed by              
// the CoClass WordParagraphFormat. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordParagraphFormat = class
    class function Create: _ParagraphFormat;
    class function CreateRemote(const MachineName: string): _ParagraphFormat;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TWordParagraphFormat
// Help String      : 
// Default Interface: _ParagraphFormat
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TWordParagraphFormatProperties= class;
{$ENDIF}
  TWordParagraphFormat = class(TOleServer)
  private
    FIntf:        _ParagraphFormat;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TWordParagraphFormatProperties;
    function      GetServerProperties: TWordParagraphFormatProperties;
{$ENDIF}
    function      GetDefaultInterface: _ParagraphFormat;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordParagraphFormat;
// StdProp:OleVariant
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
// StdProp:TOleEnum
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdParagraphAlignment;
// StdProp:TOleEnum
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdParagraphAlignment);
// StdProp:Integer
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:TOleEnum
    function  Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLineSpacing;
// StdProp:TOleEnum
    procedure Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLineSpacing);
// StdProp:Single
    function  Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdBaselineAlignment;
// StdProp:TOleEnum
    procedure Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdBaselineAlignment);
// StdProp:Integer
    function  Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:
    function  Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TabStops;
// StdProp:
    procedure Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: TabStops);
// StdProp:
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
// StdProp:
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
// StdProp:
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
// StdProp:TOleEnum
    function  Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdOutlineLevel;
// StdProp:TOleEnum
    procedure Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdOutlineLevel);
// StdProp:Single
    function  Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:TOleEnum
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdReadingOrder;
// StdProp:TOleEnum
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdReadingOrder);
// StdProp:Integer
    function  Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _ParagraphFormat);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure CloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure OpenUp {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure OpenOrCloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure TabHangingIndent {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
    procedure TabIndent {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
    procedure Reset {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Space1 {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Space15 {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Space2 {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure IndentCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
    procedure IndentFirstLineCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
    property  DefaultInterface: _ParagraphFormat read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordApplication read Get_Application;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Creator;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordParagraphFormat read Get_Duplicate;
    property Shading {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Shading read Get_Shading;
  {CoClassWriteProperties}
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_WidowControl write Set_WidowControl;
    property FarEastLineBreakControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property TabStops {Flags(2), (1/0) CC:0, INV:2, DBG:2}: TabStops read Get_TabStops write Set_TabStops;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Borders read Get_Borders write Set_Borders;
    property OutlineLevel {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property SpaceBeforeAuto {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TWordParagraphFormatProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TWordParagraphFormat
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TWordParagraphFormatProperties = class(TPersistent)
  private
    FServer:    TWordParagraphFormat;
    function    GetDefaultInterface: _ParagraphFormat;
    constructor Create(AServer: TWordParagraphFormat);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordParagraphFormat;
// StdProp:OleVariant
    function  Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
// StdProp:OleVariant
    procedure Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
// StdProp:TOleEnum
    function  Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdParagraphAlignment;
// StdProp:TOleEnum
    procedure Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdParagraphAlignment);
// StdProp:Integer
    function  Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Single
    function  Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:TOleEnum
    function  Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLineSpacing;
// StdProp:TOleEnum
    procedure Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLineSpacing);
// StdProp:Single
    function  Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Integer
    function  Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdBaselineAlignment;
// StdProp:TOleEnum
    procedure Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdBaselineAlignment);
// StdProp:Integer
    function  Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:
    function  Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TabStops;
// StdProp:
    procedure Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: TabStops);
// StdProp:
    function  Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
// StdProp:
    procedure Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
// StdProp:
    function  Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
// StdProp:TOleEnum
    function  Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdOutlineLevel;
// StdProp:TOleEnum
    procedure Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdOutlineLevel);
// StdProp:Single
    function  Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:Single
    function  Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:TOleEnum
    function  Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdReadingOrder;
// StdProp:TOleEnum
    procedure Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdReadingOrder);
// StdProp:Integer
    function  Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
  public
    property DefaultInterface: _ParagraphFormat read GetDefaultInterface;
  published
    property Alignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_WidowControl write Set_WidowControl;
    property FarEastLineBreakControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property TabStops {Flags(2), (1/0) CC:0, INV:2, DBG:2}: TabStops read Get_TabStops write Set_TabStops;
    property Borders {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Borders read Get_Borders write Set_Borders;
    property OutlineLevel {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property SpaceBeforeAuto {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoWordOLEControl provides a Create and CreateRemote method to          
// create instances of the default interface _OLEControl exposed by              
// the CoClass WordOLEControl. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordOLEControl = class
    class function Create: _OLEControl;
    class function CreateRemote(const MachineName: string): _OLEControl;
  end;

// *********************************************************************//
// The Class CoWordLetterContent provides a Create and CreateRemote method to          
// create instances of the default interface _LetterContent exposed by              
// the CoClass WordLetterContent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordLetterContent = class
    class function Create: _LetterContent;
    class function CreateRemote(const MachineName: string): _LetterContent;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TWordLetterContent
// Help String      : 
// Default Interface: _LetterContent
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TWordLetterContentProperties= class;
{$ENDIF}
  TWordLetterContent = class(TOleServer)
  private
    FIntf:        _LetterContent;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TWordLetterContentProperties;
    function      GetServerProperties: TWordLetterContentProperties;
{$ENDIF}
    function      GetDefaultInterface: _LetterContent;
  protected
    procedure InitServerData; override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordLetterContent;
// StdProp:WideString
    function  Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterStyle;
// StdProp:TOleEnum
    procedure Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterStyle);
// StdProp:WordBool
    function  Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterheadLocation;
// StdProp:TOleEnum
    procedure Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterheadLocation);
// StdProp:Single
    function  Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WideString
    function  Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationType;
// StdProp:TOleEnum
    procedure Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationType);
// StdProp:WideString
    function  Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:Integer
    function  Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:WideString
    function  Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
// StdProp:TOleEnum
    procedure Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
// StdProp:WideString
    function  Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
// StdProp:TOleEnum
    procedure Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
// StdProp:WideString
    function  Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _LetterContent);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    property  DefaultInterface: _LetterContent read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordApplication read Get_Application;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Creator;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Duplicate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordLetterContent read Get_Duplicate;
  {CoClassWriteProperties}
    property DateFormat {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DateFormat write Set_DateFormat;
    property IncludeHeaderFooter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IncludeHeaderFooter write Set_IncludeHeaderFooter;
    property PageDesign {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PageDesign write Set_PageDesign;
    property LetterStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdLetterStyle read Get_LetterStyle write Set_LetterStyle;
    property Letterhead {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Letterhead write Set_Letterhead;
    property LetterheadLocation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdLetterheadLocation read Get_LetterheadLocation write Set_LetterheadLocation;
    property LetterheadSize {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LetterheadSize write Set_LetterheadSize;
    property RecipientName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientName write Set_RecipientName;
    property RecipientAddress {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientAddress write Set_RecipientAddress;
    property Salutation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Salutation write Set_Salutation;
    property SalutationType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSalutationType read Get_SalutationType write Set_SalutationType;
    property RecipientReference {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientReference write Set_RecipientReference;
    property MailingInstructions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MailingInstructions write Set_MailingInstructions;
    property AttentionLine {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AttentionLine write Set_AttentionLine;
    property Subject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Subject write Set_Subject;
    property EnclosureNumber {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_EnclosureNumber write Set_EnclosureNumber;
    property CCList {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_CCList write Set_CCList;
    property ReturnAddress {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ReturnAddress write Set_ReturnAddress;
    property SenderName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderName write Set_SenderName;
    property Closing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Closing write Set_Closing;
    property SenderCompany {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderCompany write Set_SenderCompany;
    property SenderJobTitle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderJobTitle write Set_SenderJobTitle;
    property SenderInitials {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderInitials write Set_SenderInitials;
    property InfoBlock {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_InfoBlock write Set_InfoBlock;
    property RecipientCode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientCode write Set_RecipientCode;
    property RecipientGender {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSalutationGender read Get_RecipientGender write Set_RecipientGender;
    property ReturnAddressShortForm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ReturnAddressShortForm write Set_ReturnAddressShortForm;
    property SenderCity {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderCity write Set_SenderCity;
    property SenderCode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderCode write Set_SenderCode;
    property SenderGender {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSalutationGender read Get_SenderGender write Set_SenderGender;
    property SenderReference {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderReference write Set_SenderReference;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TWordLetterContentProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TWordLetterContent
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TWordLetterContentProperties = class(TPersistent)
  private
    FServer:    TWordLetterContent;
    function    GetDefaultInterface: _LetterContent;
    constructor Create(AServer: TWordLetterContent);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordLetterContent;
// StdProp:WideString
    function  Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterStyle;
// StdProp:TOleEnum
    procedure Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterStyle);
// StdProp:WordBool
    function  Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterheadLocation;
// StdProp:TOleEnum
    procedure Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterheadLocation);
// StdProp:Single
    function  Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
// StdProp:Single
    procedure Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
// StdProp:WideString
    function  Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationType;
// StdProp:TOleEnum
    procedure Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationType);
// StdProp:WideString
    function  Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:Integer
    function  Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:WideString
    function  Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
// StdProp:TOleEnum
    procedure Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
// StdProp:WideString
    function  Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:TOleEnum
    function  Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
// StdProp:TOleEnum
    procedure Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
// StdProp:WideString
    function  Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
  public
    property DefaultInterface: _LetterContent read GetDefaultInterface;
  published
    property DateFormat {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DateFormat write Set_DateFormat;
    property IncludeHeaderFooter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_IncludeHeaderFooter write Set_IncludeHeaderFooter;
    property PageDesign {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PageDesign write Set_PageDesign;
    property LetterStyle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdLetterStyle read Get_LetterStyle write Set_LetterStyle;
    property Letterhead {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Letterhead write Set_Letterhead;
    property LetterheadLocation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdLetterheadLocation read Get_LetterheadLocation write Set_LetterheadLocation;
    property LetterheadSize {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Single read Get_LetterheadSize write Set_LetterheadSize;
    property RecipientName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientName write Set_RecipientName;
    property RecipientAddress {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientAddress write Set_RecipientAddress;
    property Salutation {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Salutation write Set_Salutation;
    property SalutationType {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSalutationType read Get_SalutationType write Set_SalutationType;
    property RecipientReference {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientReference write Set_RecipientReference;
    property MailingInstructions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_MailingInstructions write Set_MailingInstructions;
    property AttentionLine {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_AttentionLine write Set_AttentionLine;
    property Subject {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Subject write Set_Subject;
    property EnclosureNumber {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_EnclosureNumber write Set_EnclosureNumber;
    property CCList {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_CCList write Set_CCList;
    property ReturnAddress {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ReturnAddress write Set_ReturnAddress;
    property SenderName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderName write Set_SenderName;
    property Closing {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Closing write Set_Closing;
    property SenderCompany {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderCompany write Set_SenderCompany;
    property SenderJobTitle {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderJobTitle write Set_SenderJobTitle;
    property SenderInitials {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderInitials write Set_SenderInitials;
    property InfoBlock {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_InfoBlock write Set_InfoBlock;
    property RecipientCode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_RecipientCode write Set_RecipientCode;
    property RecipientGender {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSalutationGender read Get_RecipientGender write Set_RecipientGender;
    property ReturnAddressShortForm {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ReturnAddressShortForm write Set_ReturnAddressShortForm;
    property SenderCity {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderCity write Set_SenderCity;
    property SenderCode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderCode write Set_SenderCode;
    property SenderGender {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdSalutationGender read Get_SenderGender write Set_SenderGender;
    property SenderReference {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_SenderReference write Set_SenderReference;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoWordApplication provides a Create and CreateRemote method to          
// create instances of the default interface _Application exposed by              
// the CoClass WordApplication. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordApplication = class
    class function Create: _Application;
    class function CreateRemote(const MachineName: string): _Application;
  end;

  TWordApplicationDocumentOpen = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant) of object;
  TWordApplicationDocumentBeforeClose = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant;
                                                                                                        var {VT_11:1}Cancel: OleVariant) of object;
  TWordApplicationDocumentBeforePrint = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant;
                                                                                                        var {VT_11:1}Cancel: OleVariant) of object;
  TWordApplicationDocumentBeforeSave = procedure(Sender: TObject;  {Flags(3), (3/3) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant;
                                                                                                       var {VT_11:1}SaveAsUI: OleVariant;
                                                                                                       var {VT_11:1}Cancel: OleVariant) of object;
  TWordApplicationNewDocument = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant) of object;
  TWordApplicationWindowActivate = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant;
                                                                                                   var {VT_29:1}Wn: OleVariant) of object;
  TWordApplicationWindowDeactivate = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_29:1}Doc: OleVariant;
                                                                                                     var {VT_29:1}Wn: OleVariant) of object;
  TWordApplicationWindowSelectionChange = procedure(Sender: TObject;  {Flags(3), (1/1) CC:4, INV:1, DBG:9}var {VT_29:1}Sel: OleVariant) of object;
  TWordApplicationWindowBeforeRightClick = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_29:1}Sel: OleVariant;
                                                                                                           var {VT_11:1}Cancel: OleVariant) of object;
  TWordApplicationWindowBeforeDoubleClick = procedure(Sender: TObject;  {Flags(3), (2/2) CC:4, INV:1, DBG:9}var {VT_29:1}Sel: OleVariant;
                                                                                                            var {VT_11:1}Cancel: OleVariant) of object;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TWordApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. DISP? : No
// Event   Interface: ApplicationEvents2
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TWordApplicationProperties= class;
{$ENDIF}
  TWordApplication = class(TOleServer)
  private
    FOnStartup: TNotifyEvent;
    FOnQuit: TNotifyEvent;
    FOnDocumentChange: TNotifyEvent;
    FOnDocumentOpen: TWordApplicationDocumentOpen;
    FOnDocumentBeforeClose: TWordApplicationDocumentBeforeClose;
    FOnDocumentBeforePrint: TWordApplicationDocumentBeforePrint;
    FOnDocumentBeforeSave: TWordApplicationDocumentBeforeSave;
    FOnNewDocument: TWordApplicationNewDocument;
    FOnWindowActivate: TWordApplicationWindowActivate;
    FOnWindowDeactivate: TWordApplicationWindowDeactivate;
    FOnWindowSelectionChange: TWordApplicationWindowSelectionChange;
    FOnWindowBeforeRightClick: TWordApplicationWindowBeforeRightClick;
    FOnWindowBeforeDoubleClick: TWordApplicationWindowBeforeDoubleClick;
    FAutoQuit:    Boolean;
    FIntf:        _Application;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TWordApplicationProperties;
    function      GetServerProperties: TWordApplicationProperties;
{$ENDIF}
    function      GetDefaultInterface: _Application;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
  {CoClassWriteArrayPropMethods}
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
// StdProp:
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
// StdProp:
    function  Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
// StdProp:
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
// StdProp:
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
// StdProp:IDispatch
    function  Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
// StdProp:
    function  Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
// StdProp:
    function  Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
// StdProp:
    function  Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
// StdProp:
    function  Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
// StdProp:
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
// StdProp:
    function  Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Browser;
// StdProp:
    function  Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
// StdProp:
    function  Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailingLabel;
// StdProp:
    function  Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
// StdProp:
    function  Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
// StdProp:
    function  Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
// StdProp:
    function  Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
// StdProp:WordBool
    function  Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:Integer
    function  Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:WordBool
    function  Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:OleVariant
    function  Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Index: WdInternationalIndex): OleVariant;
// StdProp:WideString
    function  Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:IDispatch
    function  Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:
    function  Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
// StdProp:
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
// StdProp:WideString
    function  Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:
    function  Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
// StdProp:WideString
    function  Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:
    function  Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
// StdProp:IDispatch
    function  Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    procedure Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
// StdProp:
    function  Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
// StdProp:
    function  Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                   {VT_8:0}const Command: WideString; 
                                                                   {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
// StdProp:
    function  Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                               {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
// StdProp:WideString
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:Integer
    function  Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdWindowState;
// StdProp:TOleEnum
    procedure Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdWindowState);
// StdProp:WordBool
    function  Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
// StdProp:TOleEnum
    function  Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAlertLevel;
// StdProp:TOleEnum
    procedure Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAlertLevel);
// StdProp:
    function  Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
// StdProp:WideString
    function  Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WordBool
    function  Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEnableCancelKey;
// StdProp:TOleEnum
    procedure Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEnableCancelKey);
// StdProp:WordBool
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
// StdProp:TOleEnum
    function  Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdMailSystem;
// StdProp:WideString
    function  Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
// StdProp:
    function  Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
// StdProp:
    function  Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMessage;
// StdProp:WordBool
    function  Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: EmailOptions;
// StdProp:TOleEnum
    function  Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoLanguageID;
// StdProp:
    function  Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
// StdProp:WordBool
    function  Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
// StdProp:WordBool
    function  Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
// StdProp:TOleEnum
    function  Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
// StdProp:TOleEnum
    procedure Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoFeatureInstall);
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Application);
    procedure Disconnect; override;
  {CoClassWriteMethods}
    procedure Quit {Flags(1), (3/0) CC:0, INV:1, DBG:3}; overload;
    procedure Quit {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant); overload;
    procedure Quit {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                        {VT_12:1}var OriginalFormat: OleVariant); overload;
    procedure Quit {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                        {VT_12:1}var OriginalFormat: OleVariant; 
                                                        {VT_12:1}var RouteDocument: OleVariant); overload;
    procedure ScreenRefresh {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure PrintOutOld {Flags(1), (15/0) CC:0, INV:1, DBG:3}; overload;
    procedure PrintOutOld {Flags(1), (15/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant; 
                                                                {VT_12:1}var Item: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant; 
                                                                {VT_12:1}var Item: OleVariant; 
                                                                {VT_12:1}var Copies: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                {VT_12:1}var Append: OleVariant; 
                                                                {VT_12:1}var Range: OleVariant; 
                                                                {VT_12:1}var OutputFileName: OleVariant; 
                                                                {VT_12:1}var From: OleVariant; 
                                                                {VT_12:1}var To_: OleVariant; 
                                                                {VT_12:1}var Item: OleVariant; 
                                                                {VT_12:1}var Copies: OleVariant; 
                                                                {VT_12:1}var Pages: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var FileName: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var FileName: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant); overload;
    procedure PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                 {VT_12:1}var Append: OleVariant; 
                                                                 {VT_12:1}var Range: OleVariant; 
                                                                 {VT_12:1}var OutputFileName: OleVariant; 
                                                                 {VT_12:1}var From: OleVariant; 
                                                                 {VT_12:1}var To_: OleVariant; 
                                                                 {VT_12:1}var Item: OleVariant; 
                                                                 {VT_12:1}var Copies: OleVariant; 
                                                                 {VT_12:1}var Pages: OleVariant; 
                                                                 {VT_12:1}var PageType: OleVariant; 
                                                                 {VT_12:1}var PrintToFile: OleVariant; 
                                                                 {VT_12:1}var Collate: OleVariant; 
                                                                 {VT_12:1}var FileName: OleVariant; 
                                                                 {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                 {VT_12:1}var ManualDuplexPrint: OleVariant); overload;
    procedure LookupNameProperties {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString);
    procedure SubstituteFont {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const UnavailableFont: WideString; 
                                                                  {VT_8:0}const SubstituteFont: WideString);
    function  Repeat_ {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool; overload;
    function  Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool; overload;
    procedure DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Command: WideString);
    function  DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const App: WideString; 
                                                               {VT_8:0}const Topic: WideString): Integer;
    procedure DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                           {VT_8:0}const Item: WideString; 
                                                           {VT_8:0}const Data: WideString);
    function  DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                              {VT_8:0}const Item: WideString): WideString;
    procedure DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer);
    procedure DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  BuildKeyCode {Flags(1), (5/1) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey): Integer; overload;
    function  BuildKeyCode {Flags(1), (5/2) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant): Integer; overload;
    function  BuildKeyCode {Flags(1), (5/3) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant): Integer; overload;
    function  BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                {VT_12:1}var Arg2: OleVariant; 
                                                                {VT_12:1}var Arg3: OleVariant; 
                                                                {VT_12:1}var Arg4: OleVariant): Integer; overload;
    function  KeyString {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer): WideString; overload;
    function  KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                             {VT_12:1}var KeyCode2: OleVariant): WideString; overload;
    procedure OrganizerCopy {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_8:0}const Source: WideString; 
                                                                 {VT_8:0}const Destination: WideString; 
                                                                 {VT_8:0}const Name: WideString; 
                                                                 {VT_29:0}Object_: WdOrganizerObject);
    procedure OrganizerDelete {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_8:0}const Source: WideString; 
                                                                   {VT_8:0}const Name: WideString; 
                                                                   {VT_29:0}Object_: WdOrganizerObject);
    procedure OrganizerRename {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_8:0}const Source: WideString; 
                                                                   {VT_8:0}const Name: WideString; 
                                                                   {VT_8:0}const NewName: WideString; 
                                                                   {VT_29:0}Object_: WdOrganizerObject);
    procedure AddAddress {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_27:1}var TagID: PSafeArray; 
                                                              {VT_27:1}var Value: PSafeArray);
    function  GetAddress {Flags(1), (9/0) CC:0, INV:1, DBG:3}: WideString; overload;
    function  GetAddress {Flags(1), (9/1) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/2) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/3) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/4) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/5) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                              {VT_12:1}var SelectDialog: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/6) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                              {VT_12:1}var SelectDialog: OleVariant; 
                                                              {VT_12:1}var CheckNamesDialog: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/7) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                              {VT_12:1}var SelectDialog: OleVariant; 
                                                              {VT_12:1}var CheckNamesDialog: OleVariant; 
                                                              {VT_12:1}var RecentAddressesChoice: OleVariant): WideString; overload;
    function  GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                              {VT_12:1}var AddressProperties: OleVariant; 
                                                              {VT_12:1}var UseAutoText: OleVariant; 
                                                              {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                              {VT_12:1}var SelectDialog: OleVariant; 
                                                              {VT_12:1}var CheckNamesDialog: OleVariant; 
                                                              {VT_12:1}var RecentAddressesChoice: OleVariant; 
                                                              {VT_12:1}var UpdateRecentAddresses: OleVariant): WideString; overload;
    function  CheckGrammar {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const String_: WideString): WordBool;
    function  CheckSpelling {Flags(1), (14/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                  {VT_12:1}var CustomDictionary: OleVariant; 
                                                                  {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                  {VT_12:1}var MainDictionary: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                  {VT_12:1}var CustomDictionary6: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant): WordBool; overload;
    function  CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                   {VT_12:1}var CustomDictionary10: OleVariant): WordBool; overload;
    procedure ResetIgnoreAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  GetSpellingSuggestions {Flags(1), (15/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var SuggestionMode: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary5: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant): SpellingSuggestions; overload;
    function  GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                            {VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var MainDictionary: OleVariant; 
                                                                            {VT_12:1}var SuggestionMode: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions; overload;
    procedure GoBack {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Help {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var HelpType: OleVariant);
    procedure AutomaticChange {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ShowMe {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure HelpTool {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Window;
    procedure ListCommands {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_11:0}ListAllCommands: WordBool);
    procedure ShowClipboard {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure OnTime {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var When: OleVariant; 
                                                          {VT_8:0}const Name: WideString); overload;
    procedure OnTime {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var When: OleVariant; 
                                                          {VT_8:0}const Name: WideString; 
                                                          {VT_12:1}var Tolerance: OleVariant); overload;
    procedure NextLetter {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  MountVolume {Flags(1), (7/3) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                               {VT_8:0}const Server: WideString; 
                                                               {VT_8:0}const Volume: WideString): Smallint; overload;
    function  MountVolume {Flags(1), (7/4) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                               {VT_8:0}const Server: WideString; 
                                                               {VT_8:0}const Volume: WideString; 
                                                               {VT_12:1}var User: OleVariant): Smallint; overload;
    function  MountVolume {Flags(1), (7/5) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                               {VT_8:0}const Server: WideString; 
                                                               {VT_8:0}const Volume: WideString; 
                                                               {VT_12:1}var User: OleVariant; 
                                                               {VT_12:1}var UserPassword: OleVariant): Smallint; overload;
    function  MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                               {VT_8:0}const Server: WideString; 
                                                               {VT_8:0}const Volume: WideString; 
                                                               {VT_12:1}var User: OleVariant; 
                                                               {VT_12:1}var UserPassword: OleVariant; 
                                                               {VT_12:1}var VolumePassword: OleVariant): Smallint; overload;
    function  CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const String_: WideString): WideString;
    procedure SendFax {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Path: WideString);
    procedure RunOld {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString);
    procedure GoForward {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure Move {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Left: Integer; {VT_3:0}Top: Integer);
    procedure Resize {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Width: Integer; 
                                                          {VT_3:0}Height: Integer);
    function  InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Inches: Single): Single;
    function  CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Centimeters: Single): Single;
    function  MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Millimeters: Single): Single;
    function  PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Picas: Single): Single;
    function  LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Lines: Single): Single;
    function  PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    function  PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
    procedure Activate {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  PointsToPixels {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single; overload;
    function  PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; overload;
    function  PixelsToPoints {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single): Single; overload;
    function  PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single; 
                                                                  {VT_12:1}var fVertical: OleVariant): Single; overload;
    procedure KeyboardLatin {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure KeyboardBidi {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    procedure ToggleKeyboard {Flags(1), (0/0) CC:0, INV:1, DBG:3};
    function  Keyboard {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_3:0}LangId: Integer): Integer;
    function  ProductCode {Flags(1), (1/0) CC:0, INV:1, DBG:3}: WideString;
    function  DefaultWebOptions {Flags(1), (1/0) CC:0, INV:1, DBG:3}: DefaultWebOptions;
    procedure DiscussionSupport {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var Range: OleVariant; 
                                                                     {VT_12:1}var cid: OleVariant; 
                                                                     {VT_12:1}var piCSE: OleVariant);
    procedure SetDefaultTheme {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString; 
                                                                   {VT_29:0}DocumentType: WdDocumentMedium);
    function  GetDefaultTheme {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_29:0}DocumentType: WdDocumentMedium): WideString;
    procedure PrintOut {Flags(1), (19/0) CC:0, INV:1, DBG:3}; overload;
    procedure PrintOut {Flags(1), (19/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant; 
                                                             {VT_12:1}var Item: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant; 
                                                             {VT_12:1}var Item: OleVariant; 
                                                             {VT_12:1}var Copies: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                             {VT_12:1}var Append: OleVariant; 
                                                             {VT_12:1}var Range: OleVariant; 
                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                             {VT_12:1}var From: OleVariant; 
                                                             {VT_12:1}var To_: OleVariant; 
                                                             {VT_12:1}var Item: OleVariant; 
                                                             {VT_12:1}var Copies: OleVariant; 
                                                             {VT_12:1}var Pages: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/15) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/16) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/17) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/18) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant); overload;
    procedure PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                              {VT_12:1}var Append: OleVariant; 
                                                              {VT_12:1}var Range: OleVariant; 
                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                              {VT_12:1}var From: OleVariant; 
                                                              {VT_12:1}var To_: OleVariant; 
                                                              {VT_12:1}var Item: OleVariant; 
                                                              {VT_12:1}var Copies: OleVariant; 
                                                              {VT_12:1}var Pages: OleVariant; 
                                                              {VT_12:1}var PageType: OleVariant; 
                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                              {VT_12:1}var Collate: OleVariant; 
                                                              {VT_12:1}var FileName: OleVariant; 
                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                              {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                              {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                              {VT_12:1}var PrintZoomRow: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                              {VT_12:1}var PrintZoomPaperHeight: OleVariant); overload;
    function  Run {Flags(1), (32/1) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString): OleVariant; overload;
    function  Run {Flags(1), (32/2) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/3) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/4) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant; 
                                                        {VT_12:1}var varg3: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/5) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant; 
                                                        {VT_12:1}var varg3: OleVariant; 
                                                        {VT_12:1}var varg4: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/6) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant; 
                                                        {VT_12:1}var varg3: OleVariant; 
                                                        {VT_12:1}var varg4: OleVariant; 
                                                        {VT_12:1}var varg5: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/7) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant; 
                                                        {VT_12:1}var varg3: OleVariant; 
                                                        {VT_12:1}var varg4: OleVariant; 
                                                        {VT_12:1}var varg5: OleVariant; 
                                                        {VT_12:1}var varg6: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/8) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant; 
                                                        {VT_12:1}var varg3: OleVariant; 
                                                        {VT_12:1}var varg4: OleVariant; 
                                                        {VT_12:1}var varg5: OleVariant; 
                                                        {VT_12:1}var varg6: OleVariant; 
                                                        {VT_12:1}var varg7: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/9) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                        {VT_12:1}var varg1: OleVariant; 
                                                        {VT_12:1}var varg2: OleVariant; 
                                                        {VT_12:1}var varg3: OleVariant; 
                                                        {VT_12:1}var varg4: OleVariant; 
                                                        {VT_12:1}var varg5: OleVariant; 
                                                        {VT_12:1}var varg6: OleVariant; 
                                                        {VT_12:1}var varg7: OleVariant; 
                                                        {VT_12:1}var varg8: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/10) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/11) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/12) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/13) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/14) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/15) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/16) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/17) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/18) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/19) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/20) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/21) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/22) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/23) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/24) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/25) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/26) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/27) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/28) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant; 
                                                         {VT_12:1}var varg27: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/29) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant; 
                                                         {VT_12:1}var varg27: OleVariant; 
                                                         {VT_12:1}var varg28: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/30) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant; 
                                                         {VT_12:1}var varg27: OleVariant; 
                                                         {VT_12:1}var varg28: OleVariant; 
                                                         {VT_12:1}var varg29: OleVariant): OleVariant; overload;
    function  Run {Flags(1), (32/31) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                         {VT_12:1}var varg1: OleVariant; 
                                                         {VT_12:1}var varg2: OleVariant; 
                                                         {VT_12:1}var varg3: OleVariant; 
                                                         {VT_12:1}var varg4: OleVariant; 
                                                         {VT_12:1}var varg5: OleVariant; 
                                                         {VT_12:1}var varg6: OleVariant; 
                                                         {VT_12:1}var varg7: OleVariant; 
                                                         {VT_12:1}var varg8: OleVariant; 
                                                         {VT_12:1}var varg9: OleVariant; 
                                                         {VT_12:1}var varg10: OleVariant; 
                                                         {VT_12:1}var varg11: OleVariant; 
                                                         {VT_12:1}var varg12: OleVariant; 
                                                         {VT_12:1}var varg13: OleVariant; 
                                                         {VT_12:1}var varg14: OleVariant; 
                                                         {VT_12:1}var varg15: OleVariant; 
                                                         {VT_12:1}var varg16: OleVariant; 
                                                         {VT_12:1}var varg17: OleVariant; 
                                                         {VT_12:1}var varg18: OleVariant; 
                                                         {VT_12:1}var varg19: OleVariant; 
                                                         {VT_12:1}var varg20: OleVariant; 
                                                         {VT_12:1}var varg21: OleVariant; 
                                                         {VT_12:1}var varg22: OleVariant; 
                                                         {VT_12:1}var varg23: OleVariant; 
                                                         {VT_12:1}var varg24: OleVariant; 
                                                         {VT_12:1}var varg25: OleVariant; 
                                                         {VT_12:1}var varg26: OleVariant; 
                                                         {VT_12:1}var varg27: OleVariant; 
                                                         {VT_12:1}var varg28: OleVariant; 
                                                         {VT_12:1}var varg29: OleVariant; 
                                                         {VT_12:1}var varg30: OleVariant): OleVariant; overload;
    property  DefaultInterface: _Application read GetDefaultInterface;
  {CoClassWriteProperties}
    property Application {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordApplication read Get_Application;
    property Creator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Creator;
    property Parent {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_Parent;
    property Name {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Name;
    property Documents {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Documents read Get_Documents;
    property Windows {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Windows read Get_Windows;
    property ActiveDocument {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordDocument read Get_ActiveDocument;
    property ActiveWindow {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Window read Get_ActiveWindow;
    property Selection {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Selection read Get_Selection;
    property WordBasic {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_WordBasic;
    property RecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:2}: RecentFiles read Get_RecentFiles;
    property NormalTemplate {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Template read Get_NormalTemplate;
    property System_ {Flags(2), (1/0) CC:0, INV:2, DBG:2}: System read Get_System_;
    property AutoCorrect {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AutoCorrect read Get_AutoCorrect;
    property FontNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FontNames read Get_FontNames;
    property LandscapeFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FontNames read Get_LandscapeFontNames;
    property PortraitFontNames {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FontNames read Get_PortraitFontNames;
    property Languages {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Languages read Get_Languages;
    property Assistant {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Assistant read Get_Assistant;
    property Browser {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Browser read Get_Browser;
    property FileConverters {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FileConverters read Get_FileConverters;
    property MailingLabel {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MailingLabel read Get_MailingLabel;
    property Dialogs {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Dialogs read Get_Dialogs;
    property CaptionLabels {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CaptionLabels read Get_CaptionLabels;
    property AutoCaptions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AutoCaptions read Get_AutoCaptions;
    property AddIns {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AddIns read Get_AddIns;
    property Version {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Version;
    property Tasks {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Tasks read Get_Tasks;
    property SpecialMode {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_SpecialMode;
    property UsableWidth {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_UsableWidth;
    property UsableHeight {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_UsableHeight;
    property MathCoprocessorAvailable {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MathCoprocessorAvailable;
    property MouseAvailable {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MouseAvailable;
    property International {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_29:0}Index: WdInternationalIndex]: OleVariant read Get_International;
    property Build {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Build;
    property CapsLock {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CapsLock;
    property NumLock {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_NumLock;
    property MacroContainer {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_MacroContainer;
    property CommandBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: CommandBars read Get_CommandBars;
    property SynonymInfo {Flags(2), (3/2) CC:0, INV:2, DBG:2}[{VT_8:0}const Word: WideString; 
                                                              {VT_12:1}var LanguageID: OleVariant]: SynonymInfo read Get_SynonymInfo;
    property VBE {Flags(2), (1/0) CC:0, INV:2, DBG:2}: VBE read Get_VBE;
    property ListGalleries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: ListGalleries read Get_ListGalleries;
    property Templates {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Templates read Get_Templates;
    property CustomizationContext {Flags(2), (1/0) CC:0, INV:2, DBG:2}: IDispatch read Get_CustomizationContext write Set_CustomizationContext;
    property KeyBindings {Flags(2), (1/0) CC:0, INV:2, DBG:2}: KeyBindings read Get_KeyBindings;
    property KeysBoundTo {Flags(2), (4/3) CC:0, INV:2, DBG:2}[{VT_29:0}KeyCategory: WdKeyCategory; 
                                                              {VT_8:0}const Command: WideString; 
                                                              {VT_12:1}var CommandParameter: OleVariant]: KeysBoundTo read Get_KeysBoundTo;
    property FindKey {Flags(2), (3/2) CC:0, INV:2, DBG:2}[{VT_3:0}KeyCode: Integer; 
                                                          {VT_12:1}var KeyCode2: OleVariant]: KeyBinding read Get_FindKey;
    property Path {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Path;
    property BackgroundSavingStatus {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_BackgroundSavingStatus;
    property BackgroundPrintingStatus {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_BackgroundPrintingStatus;
    property Options {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Options read Get_Options;
    property CustomDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Dictionaries read Get_CustomDictionaries;
    property PathSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_PathSeparator;
    property StatusBar {Flags(2), (1/0) CC:0, INV:4, DBG:2}: WideString write Set_StatusBar;
    property MAPIAvailable {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_MAPIAvailable;
    property UserControl {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_UserControl;
    property FileSearch {Flags(2), (1/0) CC:0, INV:2, DBG:2}: FileSearch read Get_FileSearch;
    property MailSystem {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdMailSystem read Get_MailSystem;
    property IsObjectValid {Flags(2), (2/1) CC:0, INV:2, DBG:2}[{VT_9:0}const Object_: IDispatch]: WordBool read Get_IsObjectValid;
    property HangulHanjaDictionaries {Flags(2), (1/0) CC:0, INV:2, DBG:2}: HangulHanjaConversionDictionaries read Get_HangulHanjaDictionaries;
    property MailMessage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MailMessage read Get_MailMessage;
    property FocusInMailHeader {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_FocusInMailHeader;
    property EmailOptions {Flags(2), (1/0) CC:0, INV:2, DBG:2}: EmailOptions read Get_EmailOptions;
    property Language {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoLanguageID read Get_Language;
    property COMAddIns {Flags(2), (1/0) CC:0, INV:2, DBG:2}: COMAddIns read Get_COMAddIns;
    property LanguageSettings {Flags(2), (1/0) CC:0, INV:2, DBG:2}: LanguageSettings read Get_LanguageSettings;
    property Dummy1 {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Dummy1;
    property AnswerWizard {Flags(2), (1/0) CC:0, INV:2, DBG:2}: AnswerWizard read Get_AnswerWizard;
  {CoClassWriteProperties}
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property ScreenUpdating {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ScreenUpdating write Set_ScreenUpdating;
    property PrintPreview {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintPreview write Set_PrintPreview;
    property DisplayStatusBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property UserName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UserName write Set_UserName;
    property UserInitials {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UserInitials write Set_UserInitials;
    property UserAddress {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UserAddress write Set_UserAddress;
    property DisplayRecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property DefaultSaveFormat {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DefaultSaveFormat write Set_DefaultSaveFormat;
    property ActivePrinter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Caption write Set_Caption;
    property DisplayScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property StartupPath {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_StartupPath write Set_StartupPath;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Left write Set_Left;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Top write Set_Top;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Width write Set_Width;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Height write Set_Height;
    property WindowState {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdWindowState read Get_WindowState write Set_WindowState;
    property DisplayAutoCompleteTips {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayAutoCompleteTips write Set_DisplayAutoCompleteTips;
    property DisplayAlerts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdAlertLevel read Get_DisplayAlerts write Set_DisplayAlerts;
    property DisplayScreenTips {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayScreenTips write Set_DisplayScreenTips;
    property EnableCancelKey {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property DefaultTableSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DefaultTableSeparator write Set_DefaultTableSeparator;
    property ShowVisualBasicEditor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
    property BrowseExtraFileTypes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BrowseExtraFileTypes write Set_BrowseExtraFileTypes;
    property CheckLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CheckLanguage write Set_CheckLanguage;
    property FeatureInstall {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
  published
    property AutoQuit: Boolean read FAutoQuit write FAutoQuit; 
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TWordApplicationProperties read GetServerProperties;
{$ENDIF}
  {CoClassWriteEventDecls}
    property OnStartup: TNotifyEvent read FOnStartup write FOnStartup;
    property OnQuit: TNotifyEvent read FOnQuit write FOnQuit;
    property OnDocumentChange: TNotifyEvent read FOnDocumentChange write FOnDocumentChange;
    property OnDocumentOpen: TWordApplicationDocumentOpen read FOnDocumentOpen write FOnDocumentOpen;
    property OnDocumentBeforeClose: TWordApplicationDocumentBeforeClose read FOnDocumentBeforeClose write FOnDocumentBeforeClose;
    property OnDocumentBeforePrint: TWordApplicationDocumentBeforePrint read FOnDocumentBeforePrint write FOnDocumentBeforePrint;
    property OnDocumentBeforeSave: TWordApplicationDocumentBeforeSave read FOnDocumentBeforeSave write FOnDocumentBeforeSave;
    property OnNewDocument: TWordApplicationNewDocument read FOnNewDocument write FOnNewDocument;
    property OnWindowActivate: TWordApplicationWindowActivate read FOnWindowActivate write FOnWindowActivate;
    property OnWindowDeactivate: TWordApplicationWindowDeactivate read FOnWindowDeactivate write FOnWindowDeactivate;
    property OnWindowSelectionChange: TWordApplicationWindowSelectionChange read FOnWindowSelectionChange write FOnWindowSelectionChange;
    property OnWindowBeforeRightClick: TWordApplicationWindowBeforeRightClick read FOnWindowBeforeRightClick write FOnWindowBeforeRightClick;
    property OnWindowBeforeDoubleClick: TWordApplicationWindowBeforeDoubleClick read FOnWindowBeforeDoubleClick write FOnWindowBeforeDoubleClick;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TWordApplication
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TWordApplicationProperties = class(TPersistent)
  private
    FServer:    TWordApplication;
    function    GetDefaultInterface: _Application;
    constructor Create(AServer: TWordApplication);
  protected
// StdProp:
    function  Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
// StdProp:Integer
    function  Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:IDispatch
    function  Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WideString
    function  Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:
    function  Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
// StdProp:
    function  Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
// StdProp:
    function  Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
// StdProp:
    function  Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
// StdProp:
    function  Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
// StdProp:IDispatch
    function  Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:
    function  Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
// StdProp:
    function  Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
// StdProp:
    function  Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
// StdProp:
    function  Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
// StdProp:
    function  Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
// StdProp:
    function  Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
// StdProp:
    function  Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
// StdProp:
    function  Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Browser;
// StdProp:
    function  Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
// StdProp:
    function  Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailingLabel;
// StdProp:
    function  Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
// StdProp:
    function  Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
// StdProp:
    function  Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
// StdProp:
    function  Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
// StdProp:WordBool
    function  Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
// StdProp:WordBool
    function  Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WordBool
    function  Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:Integer
    function  Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:WordBool
    function  Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:OleVariant
    function  Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Index: WdInternationalIndex): OleVariant;
// StdProp:WideString
    function  Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WideString
    function  Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:IDispatch
    function  Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:WordBool
    function  Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
// StdProp:
    function  Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                   {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
// StdProp:
    function  Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
// StdProp:WideString
    function  Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:
    function  Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
// StdProp:WideString
    function  Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:
    function  Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
// StdProp:IDispatch
    function  Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
// StdProp:IDispatch
    procedure Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
// StdProp:
    function  Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
// StdProp:
    function  Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                   {VT_8:0}const Command: WideString; 
                                                                   {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
// StdProp:
    function  Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                               {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
// StdProp:WideString
    function  Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WideString
    function  Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WordBool
    function  Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:Integer
    function  Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    function  Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:Integer
    function  Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
// StdProp:Integer
    procedure Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
// StdProp:TOleEnum
    function  Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdWindowState;
// StdProp:TOleEnum
    procedure Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdWindowState);
// StdProp:WordBool
    function  Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
// StdProp:TOleEnum
    function  Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAlertLevel;
// StdProp:TOleEnum
    procedure Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAlertLevel);
// StdProp:
    function  Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
// StdProp:WideString
    function  Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
// StdProp:WordBool
    function  Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    function  Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:TOleEnum
    function  Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEnableCancelKey;
// StdProp:TOleEnum
    procedure Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEnableCancelKey);
// StdProp:WordBool
    function  Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
// StdProp:TOleEnum
    function  Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdMailSystem;
// StdProp:WideString
    function  Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:WideString
    function  Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
// StdProp:WideString
    procedure Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
// StdProp:WordBool
    function  Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
// StdProp:
    function  Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
// StdProp:
    function  Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMessage;
// StdProp:WordBool
    function  Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: EmailOptions;
// StdProp:TOleEnum
    function  Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoLanguageID;
// StdProp:
    function  Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
// StdProp:WordBool
    function  Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:WordBool
    procedure Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
// StdProp:
    function  Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
// StdProp:WordBool
    function  Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
// StdProp:
    function  Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
// StdProp:TOleEnum
    function  Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
// StdProp:TOleEnum
    procedure Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoFeatureInstall);
  public
    property DefaultInterface: _Application read GetDefaultInterface;
  published
    property Visible {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_Visible write Set_Visible;
    property ScreenUpdating {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ScreenUpdating write Set_ScreenUpdating;
    property PrintPreview {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_PrintPreview write Set_PrintPreview;
    property DisplayStatusBar {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property UserName {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UserName write Set_UserName;
    property UserInitials {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UserInitials write Set_UserInitials;
    property UserAddress {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_UserAddress write Set_UserAddress;
    property DisplayRecentFiles {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property DefaultSaveFormat {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DefaultSaveFormat write Set_DefaultSaveFormat;
    property ActivePrinter {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property Caption {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_Caption write Set_Caption;
    property DisplayScrollBars {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property StartupPath {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_StartupPath write Set_StartupPath;
    property Left {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Left write Set_Left;
    property Top {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Top write Set_Top;
    property Width {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Width write Set_Width;
    property Height {Flags(2), (1/0) CC:0, INV:2, DBG:2}: Integer read Get_Height write Set_Height;
    property WindowState {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdWindowState read Get_WindowState write Set_WindowState;
    property DisplayAutoCompleteTips {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayAutoCompleteTips write Set_DisplayAutoCompleteTips;
    property DisplayAlerts {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdAlertLevel read Get_DisplayAlerts write Set_DisplayAlerts;
    property DisplayScreenTips {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_DisplayScreenTips write Set_DisplayScreenTips;
    property EnableCancelKey {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WdEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property DefaultTableSeparator {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_DefaultTableSeparator write Set_DefaultTableSeparator;
    property ShowVisualBasicEditor {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
    property BrowseExtraFileTypes {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WideString read Get_BrowseExtraFileTypes write Set_BrowseExtraFileTypes;
    property CheckLanguage {Flags(2), (1/0) CC:0, INV:2, DBG:2}: WordBool read Get_CheckLanguage write Set_CheckLanguage;
    property FeatureInstall {Flags(2), (1/0) CC:0, INV:2, DBG:2}: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
  end;
{$ENDIF}


procedure Register;

implementation

uses ComObj;

class function CoWordGlobal.Create: _Global;
begin
  Result := CreateComObject(CLASS_WordGlobal) as _Global;
end;

class function CoWordGlobal.CreateRemote(const MachineName: string): _Global;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordGlobal) as _Global;
end;

procedure TWordGlobal.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{000209F0-0000-0000-C000-000000000046}';
    IntfIID:   '{000209B9-0000-0000-C000-000000000046}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TWordGlobal.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _Global;
  end;
end;

procedure TWordGlobal.ConnectTo(svrIntf: _Global);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TWordGlobal.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TWordGlobal.GetDefaultInterface: _Global;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TWordGlobal.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TWordGlobalProperties.Create(Self);
{$ENDIF}
end;

destructor TWordGlobal.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TWordGlobal.GetServerProperties: TWordGlobalProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TWordGlobal.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordGlobal.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobal.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordGlobal.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
begin
  Result := DefaultInterface.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
begin
  Result := DefaultInterface.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
begin
  Result := DefaultInterface.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
begin
  Result := DefaultInterface.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
begin
  Result := DefaultInterface.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobal.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordGlobal.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordGlobal.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordGlobal.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
begin
  Result := DefaultInterface.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
begin
  Result := DefaultInterface.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
begin
  Result := DefaultInterface.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
begin
  Result := DefaultInterface.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
begin
  Result := DefaultInterface.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
begin
  Result := DefaultInterface.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
begin
  Result := DefaultInterface.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
begin
  Result := DefaultInterface.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
begin
  Result := DefaultInterface.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
begin
  Result := DefaultInterface.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
begin
  Result := DefaultInterface.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
begin
  Result := DefaultInterface.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobal.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
begin
  Result := DefaultInterface.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}LanguageID);
end;

// StdProp:
function  TWordGlobal.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
begin
  Result := DefaultInterface.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
begin
  Result := DefaultInterface.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordGlobal.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordGlobal.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:
function  TWordGlobal.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
begin
  Result := DefaultInterface.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobal.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
procedure TWordGlobal.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
begin
  DefaultInterface.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_9:0}prop);
end;

// StdProp:
function  TWordGlobal.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
begin
  Result := DefaultInterface.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                           {VT_8:0}const Command: WideString; 
                                                                           {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
begin
  Result := DefaultInterface.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:7}({VT_29:0}KeyCategory, 
                                                                                  {VT_8:0}Command, 
                                                                                  {VT_12:1}CommandParameter);
end;

// StdProp:
function  TWordGlobal.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                                       {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
begin
  Result := DefaultInterface.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_3:0}KeyCode, 
                                                                              {VT_12:1}KeyCode2);
end;

// StdProp:
function  TWordGlobal.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
begin
  Result := DefaultInterface.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
begin
  Result := DefaultInterface.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordGlobal.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WordBool
function  TWordGlobal.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordGlobal.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordGlobal.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
begin
  Result := DefaultInterface.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_9:0}Object_);
end;

// StdProp:
function  TWordGlobal.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
begin
  Result := DefaultInterface.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
begin
  Result := DefaultInterface.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobal.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
begin
  Result := DefaultInterface.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

function  TWordGlobal.Repeat_ {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

function  TWordGlobal.Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool;
begin
  Result := DefaultInterface.Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:1}Times);
end;

procedure TWordGlobal.DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                                      {VT_8:0}const Command: WideString);
begin
  DefaultInterface.DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_3:0}Channel, {VT_8:0}Command);
end;

function  TWordGlobal.DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const App: WideString; 
                                                                       {VT_8:0}const Topic: WideString): Integer;
begin
  Result := DefaultInterface.DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_8:0}App, 
                                                                              {VT_8:0}Topic);
end;

procedure TWordGlobal.DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                                   {VT_8:0}const Item: WideString; 
                                                                   {VT_8:0}const Data: WideString);
begin
  DefaultInterface.DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_3:0}Channel, {VT_8:0}Item, 
                                                                {VT_8:0}Data);
end;

function  TWordGlobal.DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                                      {VT_8:0}const Item: WideString): WideString;
begin
  Result := DefaultInterface.DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}Channel, 
                                                                             {VT_8:0}Item);
end;

procedure TWordGlobal.DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer);
begin
  DefaultInterface.DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_3:0}Channel);
end;

procedure TWordGlobal.DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordGlobal.BuildKeyCode {Flags(1), (5/1) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               EmptyParam, 
                                                                               EmptyParam, 
                                                                               EmptyParam);
end;

function  TWordGlobal.BuildKeyCode {Flags(1), (5/2) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                        {VT_12:1}var Arg2: OleVariant): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               {VT_12:1}Arg2, 
                                                                               EmptyParam, 
                                                                               EmptyParam);
end;

function  TWordGlobal.BuildKeyCode {Flags(1), (5/3) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               {VT_12:1}Arg2, 
                                                                               {VT_12:1}Arg3, 
                                                                               EmptyParam);
end;

function  TWordGlobal.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                        {VT_12:1}var Arg2: OleVariant; 
                                                                        {VT_12:1}var Arg3: OleVariant; 
                                                                        {VT_12:1}var Arg4: OleVariant): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               {VT_12:1}Arg2, 
                                                                               {VT_12:1}Arg3, 
                                                                               {VT_12:1}Arg4);
end;

function  TWordGlobal.KeyString {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer): WideString;
begin
  Result := DefaultInterface.KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}KeyCode, 
                                                                            EmptyParam);
end;

function  TWordGlobal.KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                                     {VT_12:1}var KeyCode2: OleVariant): WideString;
begin
  Result := DefaultInterface.KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}KeyCode, 
                                                                            {VT_12:1}KeyCode2);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                          {VT_12:1}var MainDictionary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                          {VT_12:1}var MainDictionary: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary2: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                          {VT_12:1}var MainDictionary: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary3: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                          {VT_12:1}var MainDictionary: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary4: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                          {VT_12:1}var MainDictionary: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary5: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                          {VT_12:1}var CustomDictionary: OleVariant; 
                                                                          {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                          {VT_12:1}var MainDictionary: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                          {VT_12:1}var CustomDictionary6: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary7: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary8: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  {VT_12:1}CustomDictionary8, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary9: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  {VT_12:1}CustomDictionary8, 
                                                                                  {VT_12:1}CustomDictionary9, 
                                                                                  EmptyParam);
end;

function  TWordGlobal.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                           {VT_12:1}var CustomDictionary: OleVariant; 
                                                                           {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                           {VT_12:1}var MainDictionary: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                           {VT_12:1}var CustomDictionary10: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  {VT_12:1}CustomDictionary8, 
                                                                                  {VT_12:1}CustomDictionary9, 
                                                                                  {VT_12:1}CustomDictionary10);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                   {VT_12:1}var MainDictionary: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                                   {VT_12:1}var SuggestionMode: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                                   {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary2: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                                   {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary3: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                                   {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary4: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                   {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                   {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                   {VT_12:1}var MainDictionary: OleVariant; 
                                                                                   {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                   {VT_12:1}var CustomDictionary5: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                    {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                    {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                    {VT_12:1}var MainDictionary: OleVariant; 
                                                                                    {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary6: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                    {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                    {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                    {VT_12:1}var MainDictionary: OleVariant; 
                                                                                    {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary7: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                    {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                    {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                    {VT_12:1}var MainDictionary: OleVariant; 
                                                                                    {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary8: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           {VT_12:1}CustomDictionary8, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                    {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                    {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                    {VT_12:1}var MainDictionary: OleVariant; 
                                                                                    {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary9: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           {VT_12:1}CustomDictionary8, 
                                                                                           {VT_12:1}CustomDictionary9, 
                                                                                           EmptyParam);
end;

function  TWordGlobal.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                    {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                    {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                    {VT_12:1}var MainDictionary: OleVariant; 
                                                                                    {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                                    {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           {VT_12:1}CustomDictionary8, 
                                                                                           {VT_12:1}CustomDictionary9, 
                                                                                           {VT_12:1}CustomDictionary10);
end;

procedure TWordGlobal.Help {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var HelpType: OleVariant);
begin
  DefaultInterface.Help {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:1}HelpType);
end;

function  TWordGlobal.NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Window;
begin
  Result := DefaultInterface.NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TWordGlobal.CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const String_: WideString): WideString;
begin
  Result := DefaultInterface.CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}String_);
end;

procedure TWordGlobal.ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Path: WideString);
begin
  DefaultInterface.ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Path);
end;

function  TWordGlobal.InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Inches: Single): Single;
begin
  Result := DefaultInterface.InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Inches);
end;

function  TWordGlobal.CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Centimeters: Single): Single;
begin
  Result := DefaultInterface.CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Centimeters);
end;

function  TWordGlobal.MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Millimeters: Single): Single;
begin
  Result := DefaultInterface.MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Millimeters);
end;

function  TWordGlobal.PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Picas: Single): Single;
begin
  Result := DefaultInterface.PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Picas);
end;

function  TWordGlobal.LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Lines: Single): Single;
begin
  Result := DefaultInterface.LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Lines);
end;

function  TWordGlobal.PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordGlobal.PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordGlobal.PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordGlobal.PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordGlobal.PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordGlobal.PointsToPixels {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Points, 
                                                                                 EmptyParam);
end;

function  TWordGlobal.PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single; 
                                                                          {VT_12:1}var fVertical: OleVariant): Single;
begin
  Result := DefaultInterface.PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Points, 
                                                                                 {VT_12:1}fVertical);
end;

function  TWordGlobal.PixelsToPoints {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single): Single;
begin
  Result := DefaultInterface.PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Pixels, 
                                                                                 EmptyParam);
end;

function  TWordGlobal.PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single; 
                                                                          {VT_12:1}var fVertical: OleVariant): Single;
begin
  Result := DefaultInterface.PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Pixels, 
                                                                                 {VT_12:1}fVertical);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TWordGlobalProperties.Create(AServer: TWordGlobal);
begin
  inherited Create;
  FServer := AServer;
end;

function TWordGlobalProperties.GetDefaultInterface: _Global;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TWordGlobalProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordGlobalProperties.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobalProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordGlobalProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
begin
  Result := DefaultInterface.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
begin
  Result := DefaultInterface.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
begin
  Result := DefaultInterface.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
begin
  Result := DefaultInterface.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
begin
  Result := DefaultInterface.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobalProperties.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordGlobalProperties.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordGlobalProperties.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordGlobalProperties.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
begin
  Result := DefaultInterface.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
begin
  Result := DefaultInterface.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
begin
  Result := DefaultInterface.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
begin
  Result := DefaultInterface.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
begin
  Result := DefaultInterface.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
begin
  Result := DefaultInterface.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
begin
  Result := DefaultInterface.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
begin
  Result := DefaultInterface.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
begin
  Result := DefaultInterface.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
begin
  Result := DefaultInterface.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
begin
  Result := DefaultInterface.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
begin
  Result := DefaultInterface.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobalProperties.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                     {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
begin
  Result := DefaultInterface.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}LanguageID);
end;

// StdProp:
function  TWordGlobalProperties.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
begin
  Result := DefaultInterface.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
begin
  Result := DefaultInterface.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordGlobalProperties.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordGlobalProperties.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:
function  TWordGlobalProperties.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
begin
  Result := DefaultInterface.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordGlobalProperties.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
procedure TWordGlobalProperties.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
begin
  DefaultInterface.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_9:0}prop);
end;

// StdProp:
function  TWordGlobalProperties.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
begin
  Result := DefaultInterface.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                                     {VT_8:0}const Command: WideString; 
                                                                                     {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
begin
  Result := DefaultInterface.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:7}({VT_29:0}KeyCategory, 
                                                                                  {VT_8:0}Command, 
                                                                                  {VT_12:1}CommandParameter);
end;

// StdProp:
function  TWordGlobalProperties.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                                                 {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
begin
  Result := DefaultInterface.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_3:0}KeyCode, 
                                                                              {VT_12:1}KeyCode2);
end;

// StdProp:
function  TWordGlobalProperties.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
begin
  Result := DefaultInterface.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
begin
  Result := DefaultInterface.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordGlobalProperties.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WordBool
function  TWordGlobalProperties.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordGlobalProperties.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordGlobalProperties.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
begin
  Result := DefaultInterface.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_9:0}Object_);
end;

// StdProp:
function  TWordGlobalProperties.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
begin
  Result := DefaultInterface.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
begin
  Result := DefaultInterface.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordGlobalProperties.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
begin
  Result := DefaultInterface.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoWordDocument.Create: _Document;
begin
  Result := CreateComObject(CLASS_WordDocument) as _Document;
end;

class function CoWordDocument.CreateRemote(const MachineName: string): _Document;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordDocument) as _Document;
end;

procedure TWordDocument.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{00020906-0000-0000-C000-000000000046}';
    IntfIID:   '{0002096B-0000-0000-C000-000000000046}';
    EventIID:  '{000209F6-0000-0000-C000-000000000046}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TWordDocument.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _Document;
  end;
end;

procedure TWordDocument.ConnectTo(svrIntf: _Document);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TWordDocument.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    FIntf := nil;
  end;
end;

function TWordDocument.GetDefaultInterface: _Document;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TWordDocument.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TWordDocumentProperties.Create(Self);
{$ENDIF}
end;

destructor TWordDocument.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TWordDocument.GetServerProperties: TWordDocumentProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TWordDocument.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   4: if Assigned(FOnNew) then
            FOnNew(Self);
   5: if Assigned(FOnOpen) then
            FOnOpen(Self);
   6: if Assigned(FOnClose) then
            FOnClose(Self);
  end; {case DispID}
end;

// StdProp:WideString
function  TWordDocument.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordDocument.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordDocument.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordDocument.Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordDocument.Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocument.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Bookmarks;
begin
  Result := DefaultInterface.Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tables;
begin
  Result := DefaultInterface.Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Footnotes;
begin
  Result := DefaultInterface.Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Endnotes;
begin
  Result := DefaultInterface.Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Comments;
begin
  Result := DefaultInterface.Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocument.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentType;
begin
  Result := DefaultInterface.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:Integer
function  TWordDocument.Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocument.Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordDocument.Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocument.Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:
function  TWordDocument.Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sections;
begin
  Result := DefaultInterface.Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Paragraphs;
begin
  Result := DefaultInterface.Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Words;
begin
  Result := DefaultInterface.Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sentences;
begin
  Result := DefaultInterface.Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Characters;
begin
  Result := DefaultInterface.Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Fields;
begin
  Result := DefaultInterface.Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FormFields;
begin
  Result := DefaultInterface.Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Styles;
begin
  Result := DefaultInterface.Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frames;
begin
  Result := DefaultInterface.Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfFigures;
begin
  Result := DefaultInterface.Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Variables;
begin
  Result := DefaultInterface.Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMerge;
begin
  Result := DefaultInterface.Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Envelope;
begin
  Result := DefaultInterface.Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocument.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Revisions;
begin
  Result := DefaultInterface.Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfContents;
begin
  Result := DefaultInterface.Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthorities;
begin
  Result := DefaultInterface.Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:3}: PageSetup;
begin
  Result := DefaultInterface.Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordDocument.Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: PageSetup);
begin
  DefaultInterface.Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordDocument.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
begin
  Result := DefaultInterface.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocument.Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RoutingSlip;
begin
  Result := DefaultInterface.Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthoritiesCategories;
begin
  Result := DefaultInterface.Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Indexes;
begin
  Result := DefaultInterface.Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocument.Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Range;
begin
  Result := DefaultInterface.Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
begin
  Result := DefaultInterface.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocument.Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentKind;
begin
  Result := DefaultInterface.Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocument.Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdDocumentKind);
begin
  DefaultInterface.Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Subdocuments;
begin
  Result := DefaultInterface.Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
function  TWordDocument.Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocument.Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Type_: WdCompatibility): WordBool;
begin
  Result := DefaultInterface.Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_29:0}Type_);
end;

// StdProp:WordBool
procedure TWordDocument.Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_29:0}Type_: WdCompatibility; 
                                                                               {VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_29:0}Type_, 
                                                                          {VT_11:0}prop);
end;

// StdProp:
function  TWordDocument.Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: StoryRanges;
begin
  Result := DefaultInterface.Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordDocument.Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocument.Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdProtectionType;
begin
  Result := DefaultInterface.Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Hyperlinks;
begin
  Result := DefaultInterface.Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shapes;
begin
  Result := DefaultInterface.Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListTemplates;
begin
  Result := DefaultInterface.Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Lists;
begin
  Result := DefaultInterface.Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:OleVariant
function  TWordDocument.Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TWordDocument.Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
begin
  DefaultInterface.Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:1}prop);
end;

// StdProp:
function  TWordDocument.Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: InlineShapes;
begin
  Result := DefaultInterface.Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shape;
begin
  Result := DefaultInterface.Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordDocument.Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Shape);
begin
  DefaultInterface.Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocument.Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Versions;
begin
  Result := DefaultInterface.Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocument.Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSummaryMode;
begin
  Result := DefaultInterface.Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocument.Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSummaryMode);
begin
  DefaultInterface.Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordDocument.Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocument.Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:IDispatch
function  TWordDocument.Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocument.Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListParagraphs;
begin
  Result := DefaultInterface.Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocument.Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WideString
procedure TWordDocument.Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WordBool
function  TWordDocument.Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocument.Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:1}var LanguageID: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:1}LanguageID);
end;

// StdProp:WideString
procedure TWordDocument.Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:1}var LanguageID: OleVariant; 
                                                                                    {VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_12:1}LanguageID, 
                                                                               {VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocument.Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Mailer;
begin
  Result := DefaultInterface.Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ReadabilityStatistics;
begin
  Result := DefaultInterface.Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
begin
  Result := DefaultInterface.Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
begin
  Result := DefaultInterface.Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBProject;
begin
  Result := DefaultInterface.Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocument.Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocument.Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordDocument.Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:Single
function  TWordDocument.Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocument.Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordDocument.Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocument.Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordDocument.Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocument.Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordDocument.Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocument.Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordDocument.Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocument.Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordDocument.Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocument.Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocument.Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdJustificationMode;
begin
  Result := DefaultInterface.Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocument.Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdJustificationMode);
begin
  DefaultInterface.Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocument.Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLevel;
begin
  Result := DefaultInterface.Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocument.Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLevel);
begin
  DefaultInterface.Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordDocument.Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocument.Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordDocument.Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocument.Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordDocument.Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocument.Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Email;
begin
  Result := DefaultInterface.Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Scripts;
begin
  Result := DefaultInterface.Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocument.Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocument.Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLanguageID;
begin
  Result := DefaultInterface.Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocument.Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLanguageID);
begin
  DefaultInterface.Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:
function  TWordDocument.Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frameset;
begin
  Result := DefaultInterface.Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TWordDocument.Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TWordDocument.Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
begin
  DefaultInterface.Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:1}prop);
end;

// StdProp:
function  TWordDocument.Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HTMLProject;
begin
  Result := DefaultInterface.Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocument.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WebOptions;
begin
  Result := DefaultInterface.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocument.Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocument.Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocument.Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoEncoding);
begin
  DefaultInterface.Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocument.Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocument.Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

procedure TWordDocument.Close {Flags(1), (3/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Close {Flags(1), (3/3) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordDocument.Close {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant);
begin
  DefaultInterface.Close {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}SaveChanges, EmptyParam, 
                                                              EmptyParam);
end;

procedure TWordDocument.Close {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                                   {VT_12:1}var OriginalFormat: OleVariant);
begin
  DefaultInterface.Close {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}SaveChanges, 
                                                              {VT_12:1}OriginalFormat, EmptyParam);
end;

procedure TWordDocument.Close {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                                   {VT_12:1}var OriginalFormat: OleVariant; 
                                                                   {VT_12:1}var RouteDocument: OleVariant);
begin
  DefaultInterface.Close {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}SaveChanges, 
                                                              {VT_12:1}OriginalFormat, 
                                                              {VT_12:1}RouteDocument);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/1) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/2) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/3) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/4) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/5) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant; 
                                                                     {VT_12:1}var AddToRecentFiles: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/6) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant; 
                                                                     {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                     {VT_12:1}var WritePassword: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 {VT_12:1}WritePassword, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/7) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant; 
                                                                     {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                     {VT_12:1}var WritePassword: OleVariant; 
                                                                     {VT_12:1}var ReadOnlyRecommended: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 {VT_12:1}WritePassword, 
                                                                 {VT_12:1}ReadOnlyRecommended, 
                                                                 EmptyParam, EmptyParam, 
                                                                 EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/8) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant; 
                                                                     {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                     {VT_12:1}var WritePassword: OleVariant; 
                                                                     {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                                     {VT_12:1}var EmbedTrueTypeFonts: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 {VT_12:1}WritePassword, 
                                                                 {VT_12:1}ReadOnlyRecommended, 
                                                                 {VT_12:1}EmbedTrueTypeFonts, 
                                                                 EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/9) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                     {VT_12:1}var FileFormat: OleVariant; 
                                                                     {VT_12:1}var LockComments: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant; 
                                                                     {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                     {VT_12:1}var WritePassword: OleVariant; 
                                                                     {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                                     {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                                     {VT_12:1}var SaveNativePictureFormat: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 {VT_12:1}WritePassword, 
                                                                 {VT_12:1}ReadOnlyRecommended, 
                                                                 {VT_12:1}EmbedTrueTypeFonts, 
                                                                 {VT_12:1}SaveNativePictureFormat, 
                                                                 EmptyParam, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/10) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                      {VT_12:1}var FileFormat: OleVariant; 
                                                                      {VT_12:1}var LockComments: OleVariant; 
                                                                      {VT_12:1}var Password: OleVariant; 
                                                                      {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                      {VT_12:1}var WritePassword: OleVariant; 
                                                                      {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                                      {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                                      {VT_12:1}var SaveNativePictureFormat: OleVariant; 
                                                                      {VT_12:1}var SaveFormsData: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 {VT_12:1}WritePassword, 
                                                                 {VT_12:1}ReadOnlyRecommended, 
                                                                 {VT_12:1}EmbedTrueTypeFonts, 
                                                                 {VT_12:1}SaveNativePictureFormat, 
                                                                 {VT_12:1}SaveFormsData, EmptyParam);
end;

procedure TWordDocument.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:3}({VT_12:1}var FileName: OleVariant; 
                                                                      {VT_12:1}var FileFormat: OleVariant; 
                                                                      {VT_12:1}var LockComments: OleVariant; 
                                                                      {VT_12:1}var Password: OleVariant; 
                                                                      {VT_12:1}var AddToRecentFiles: OleVariant; 
                                                                      {VT_12:1}var WritePassword: OleVariant; 
                                                                      {VT_12:1}var ReadOnlyRecommended: OleVariant; 
                                                                      {VT_12:1}var EmbedTrueTypeFonts: OleVariant; 
                                                                      {VT_12:1}var SaveNativePictureFormat: OleVariant; 
                                                                      {VT_12:1}var SaveFormsData: OleVariant; 
                                                                      {VT_12:1}var SaveAsAOCELetter: OleVariant);
begin
  DefaultInterface.SaveAs {Flags(1), (11/11) CC:0, INV:1, DBG:7}({VT_12:1}FileName, 
                                                                 {VT_12:1}FileFormat, 
                                                                 {VT_12:1}LockComments, 
                                                                 {VT_12:1}Password, 
                                                                 {VT_12:1}AddToRecentFiles, 
                                                                 {VT_12:1}WritePassword, 
                                                                 {VT_12:1}ReadOnlyRecommended, 
                                                                 {VT_12:1}EmbedTrueTypeFonts, 
                                                                 {VT_12:1}SaveNativePictureFormat, 
                                                                 {VT_12:1}SaveFormsData, 
                                                                 {VT_12:1}SaveAsAOCELetter);
end;

procedure TWordDocument.Repaginate {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Repaginate {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.FitToPages {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.FitToPages {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ManualHyphenation {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ManualHyphenation {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Select {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Select {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.DataForm {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.DataForm {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Route {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Route {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Save {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Save {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant; 
                                                                          {VT_12:1}var Item: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant; 
                                                                          {VT_12:1}var Item: OleVariant; 
                                                                          {VT_12:1}var Copies: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant; 
                                                                          {VT_12:1}var Item: OleVariant; 
                                                                          {VT_12:1}var Copies: OleVariant; 
                                                                          {VT_12:1}var Pages: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, 
                                                                      {VT_12:1}ActivePrinterMacGX, 
                                                                      EmptyParam);
end;

procedure TWordDocument.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                           {VT_12:1}var ManualDuplexPrint: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (14/14) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, 
                                                                      {VT_12:1}ActivePrinterMacGX, 
                                                                      {VT_12:1}ManualDuplexPrint);
end;

procedure TWordDocument.SendMail {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.SendMail {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordDocument.Range {Flags(1), (3/0) CC:0, INV:1, DBG:3}: Range;
begin
  Result := DefaultInterface.Range {Flags(1), (3/2) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam);
end;

function  TWordDocument.Range {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var Start: OleVariant): Range;
begin
  Result := DefaultInterface.Range {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:1}Start, EmptyParam);
end;

function  TWordDocument.Range {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var Start: OleVariant; 
                                                                   {VT_12:1}var End_: OleVariant): Range;
begin
  Result := DefaultInterface.Range {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:1}Start, 
                                                                        {VT_12:1}End_);
end;

procedure TWordDocument.RunAutoMacro {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Which: WdAutoMacros);
begin
  DefaultInterface.RunAutoMacro {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_29:0}Which);
end;

procedure TWordDocument.Activate {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Activate {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.PrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.PrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordDocument.GoTo_ {Flags(1), (5/0) CC:0, INV:1, DBG:3}: Range;
begin
  Result := DefaultInterface.GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordDocument.GoTo_ {Flags(1), (5/1) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant): Range;
begin
  Result := DefaultInterface.GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_12:1}What, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordDocument.GoTo_ {Flags(1), (5/2) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant; 
                                                                   {VT_12:1}var Which: OleVariant): Range;
begin
  Result := DefaultInterface.GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_12:1}What, 
                                                                        {VT_12:1}Which, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordDocument.GoTo_ {Flags(1), (5/3) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant; 
                                                                   {VT_12:1}var Which: OleVariant; 
                                                                   {VT_12:1}var Count: OleVariant): Range;
begin
  Result := DefaultInterface.GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_12:1}What, 
                                                                        {VT_12:1}Which, 
                                                                        {VT_12:1}Count, EmptyParam);
end;

function  TWordDocument.GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_12:1}var What: OleVariant; 
                                                                   {VT_12:1}var Which: OleVariant; 
                                                                   {VT_12:1}var Count: OleVariant; 
                                                                   {VT_12:1}var Name: OleVariant): Range;
begin
  Result := DefaultInterface.GoTo_ {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_12:1}What, 
                                                                        {VT_12:1}Which, 
                                                                        {VT_12:1}Count, 
                                                                        {VT_12:1}Name);
end;

function  TWordDocument.Undo {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Undo {Flags(1), (2/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

function  TWordDocument.Undo {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool;
begin
  Result := DefaultInterface.Undo {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:1}Times);
end;

function  TWordDocument.Redo {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Redo {Flags(1), (2/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

function  TWordDocument.Redo {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool;
begin
  Result := DefaultInterface.Redo {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:1}Times);
end;

function  TWordDocument.ComputeStatistics {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_29:0}Statistic: WdStatistic): Integer;
begin
  Result := DefaultInterface.ComputeStatistics {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_29:0}Statistic, 
                                                                                    EmptyParam);
end;

function  TWordDocument.ComputeStatistics {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_29:0}Statistic: WdStatistic; 
                                                                               {VT_12:1}var IncludeFootnotesAndEndnotes: OleVariant): Integer;
begin
  Result := DefaultInterface.ComputeStatistics {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_29:0}Statistic, 
                                                                                    {VT_12:1}IncludeFootnotesAndEndnotes);
end;

procedure TWordDocument.MakeCompatibilityDefault {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.MakeCompatibilityDefault {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Protect {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdProtectionType);
begin
  DefaultInterface.Protect {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_29:0}Type_, EmptyParam, 
                                                                EmptyParam);
end;

procedure TWordDocument.Protect {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdProtectionType; 
                                                                     {VT_12:1}var NoReset: OleVariant);
begin
  DefaultInterface.Protect {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_29:0}Type_, {VT_12:1}NoReset, 
                                                                EmptyParam);
end;

procedure TWordDocument.Protect {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdProtectionType; 
                                                                     {VT_12:1}var NoReset: OleVariant; 
                                                                     {VT_12:1}var Password: OleVariant);
begin
  DefaultInterface.Protect {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_29:0}Type_, {VT_12:1}NoReset, 
                                                                {VT_12:1}Password);
end;

procedure TWordDocument.Unprotect {Flags(1), (1/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Unprotect {Flags(1), (1/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

procedure TWordDocument.Unprotect {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var Password: OleVariant);
begin
  DefaultInterface.Unprotect {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:1}Password);
end;

procedure TWordDocument.EditionOptions {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdEditionType; 
                                                                            {VT_29:0}Option: WdEditionOption; 
                                                                            {VT_8:0}const Name: WideString);
begin
  DefaultInterface.EditionOptions {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_29:0}Type_, 
                                                                       {VT_29:0}Option, 
                                                                       {VT_8:0}Name, EmptyParam);
end;

procedure TWordDocument.EditionOptions {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_29:0}Type_: WdEditionType; 
                                                                            {VT_29:0}Option: WdEditionOption; 
                                                                            {VT_8:0}const Name: WideString; 
                                                                            {VT_12:1}var Format: OleVariant);
begin
  DefaultInterface.EditionOptions {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_29:0}Type_, 
                                                                       {VT_29:0}Option, 
                                                                       {VT_8:0}Name, {VT_12:1}Format);
end;

procedure TWordDocument.RunLetterWizard {Flags(1), (2/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.RunLetterWizard {Flags(1), (2/2) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam);
end;

procedure TWordDocument.RunLetterWizard {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var LetterContent: OleVariant);
begin
  DefaultInterface.RunLetterWizard {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_12:1}LetterContent, 
                                                                        EmptyParam);
end;

procedure TWordDocument.RunLetterWizard {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_12:1}var LetterContent: OleVariant; 
                                                                             {VT_12:1}var WizardMode: OleVariant);
begin
  DefaultInterface.RunLetterWizard {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_12:1}LetterContent, 
                                                                        {VT_12:1}WizardMode);
end;

function  TWordDocument.GetLetterContent {Flags(1), (1/0) CC:0, INV:1, DBG:3}: WordLetterContent;
begin
  Result := DefaultInterface.GetLetterContent {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.SetLetterContent {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var LetterContent: OleVariant);
begin
  DefaultInterface.SetLetterContent {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:1}LetterContent);
end;

procedure TWordDocument.CopyStylesFromTemplate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Template: WideString);
begin
  DefaultInterface.CopyStylesFromTemplate {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Template);
end;

procedure TWordDocument.UpdateStyles {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.UpdateStyles {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.CheckGrammar {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CheckGrammar {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/1) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/2) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/3) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/4) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/5) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/6) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/7) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        {VT_12:1}CustomDictionary5, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/8) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        {VT_12:1}CustomDictionary5, 
                                                                        {VT_12:1}CustomDictionary6, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/9) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                            {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                            {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                            {VT_12:1}var CustomDictionary7: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        {VT_12:1}CustomDictionary5, 
                                                                        {VT_12:1}CustomDictionary6, 
                                                                        {VT_12:1}CustomDictionary7, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/10) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                             {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                             {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary8: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        {VT_12:1}CustomDictionary5, 
                                                                        {VT_12:1}CustomDictionary6, 
                                                                        {VT_12:1}CustomDictionary7, 
                                                                        {VT_12:1}CustomDictionary8, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/11) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                             {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                             {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary9: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        {VT_12:1}CustomDictionary5, 
                                                                        {VT_12:1}CustomDictionary6, 
                                                                        {VT_12:1}CustomDictionary7, 
                                                                        {VT_12:1}CustomDictionary8, 
                                                                        {VT_12:1}CustomDictionary9, 
                                                                        EmptyParam);
end;

procedure TWordDocument.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:3}({VT_12:1}var CustomDictionary: OleVariant; 
                                                                             {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                             {VT_12:1}var AlwaysSuggest: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                             {VT_12:1}var CustomDictionary10: OleVariant);
begin
  DefaultInterface.CheckSpelling {Flags(1), (12/12) CC:0, INV:1, DBG:7}({VT_12:1}CustomDictionary, 
                                                                        {VT_12:1}IgnoreUppercase, 
                                                                        {VT_12:1}AlwaysSuggest, 
                                                                        {VT_12:1}CustomDictionary2, 
                                                                        {VT_12:1}CustomDictionary3, 
                                                                        {VT_12:1}CustomDictionary4, 
                                                                        {VT_12:1}CustomDictionary5, 
                                                                        {VT_12:1}CustomDictionary6, 
                                                                        {VT_12:1}CustomDictionary7, 
                                                                        {VT_12:1}CustomDictionary8, 
                                                                        {VT_12:1}CustomDictionary9, 
                                                                        {VT_12:1}CustomDictionary10);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/1) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/2) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                             {VT_12:1}var SubAddress: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        {VT_12:1}SubAddress, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/3) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                             {VT_12:1}var SubAddress: OleVariant; 
                                                                             {VT_12:1}var NewWindow: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        {VT_12:1}SubAddress, 
                                                                        {VT_12:1}NewWindow, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/4) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                             {VT_12:1}var SubAddress: OleVariant; 
                                                                             {VT_12:1}var NewWindow: OleVariant; 
                                                                             {VT_12:1}var AddHistory: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        {VT_12:1}SubAddress, 
                                                                        {VT_12:1}NewWindow, 
                                                                        {VT_12:1}AddHistory, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/5) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                             {VT_12:1}var SubAddress: OleVariant; 
                                                                             {VT_12:1}var NewWindow: OleVariant; 
                                                                             {VT_12:1}var AddHistory: OleVariant; 
                                                                             {VT_12:1}var ExtraInfo: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        {VT_12:1}SubAddress, 
                                                                        {VT_12:1}NewWindow, 
                                                                        {VT_12:1}AddHistory, 
                                                                        {VT_12:1}ExtraInfo, 
                                                                        EmptyParam, EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/6) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                             {VT_12:1}var SubAddress: OleVariant; 
                                                                             {VT_12:1}var NewWindow: OleVariant; 
                                                                             {VT_12:1}var AddHistory: OleVariant; 
                                                                             {VT_12:1}var ExtraInfo: OleVariant; 
                                                                             {VT_12:1}var Method: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        {VT_12:1}SubAddress, 
                                                                        {VT_12:1}NewWindow, 
                                                                        {VT_12:1}AddHistory, 
                                                                        {VT_12:1}ExtraInfo, 
                                                                        {VT_12:1}Method, EmptyParam);
end;

procedure TWordDocument.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:3}({VT_12:1}var Address: OleVariant; 
                                                                             {VT_12:1}var SubAddress: OleVariant; 
                                                                             {VT_12:1}var NewWindow: OleVariant; 
                                                                             {VT_12:1}var AddHistory: OleVariant; 
                                                                             {VT_12:1}var ExtraInfo: OleVariant; 
                                                                             {VT_12:1}var Method: OleVariant; 
                                                                             {VT_12:1}var HeaderInfo: OleVariant);
begin
  DefaultInterface.FollowHyperlink {Flags(1), (7/7) CC:0, INV:1, DBG:7}({VT_12:1}Address, 
                                                                        {VT_12:1}SubAddress, 
                                                                        {VT_12:1}NewWindow, 
                                                                        {VT_12:1}AddHistory, 
                                                                        {VT_12:1}ExtraInfo, 
                                                                        {VT_12:1}Method, 
                                                                        {VT_12:1}HeaderInfo);
end;

procedure TWordDocument.AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.AddToFavorites {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Reload {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Reload {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordDocument.AutoSummarize {Flags(1), (4/0) CC:0, INV:1, DBG:3}: Range;
begin
  Result := DefaultInterface.AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:7}(EmptyParam, 
                                                                                EmptyParam, 
                                                                                EmptyParam);
end;

function  TWordDocument.AutoSummarize {Flags(1), (4/1) CC:0, INV:1, DBG:3}({VT_12:1}var Length: OleVariant): Range;
begin
  Result := DefaultInterface.AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_12:1}Length, 
                                                                                EmptyParam, 
                                                                                EmptyParam);
end;

function  TWordDocument.AutoSummarize {Flags(1), (4/2) CC:0, INV:1, DBG:3}({VT_12:1}var Length: OleVariant; 
                                                                           {VT_12:1}var Mode: OleVariant): Range;
begin
  Result := DefaultInterface.AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_12:1}Length, 
                                                                                {VT_12:1}Mode, 
                                                                                EmptyParam);
end;

function  TWordDocument.AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:3}({VT_12:1}var Length: OleVariant; 
                                                                           {VT_12:1}var Mode: OleVariant; 
                                                                           {VT_12:1}var UpdateProperties: OleVariant): Range;
begin
  Result := DefaultInterface.AutoSummarize {Flags(1), (4/3) CC:0, INV:1, DBG:7}({VT_12:1}Length, 
                                                                                {VT_12:1}Mode, 
                                                                                {VT_12:1}UpdateProperties);
end;

procedure TWordDocument.RemoveNumbers {Flags(1), (1/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

procedure TWordDocument.RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant);
begin
  DefaultInterface.RemoveNumbers {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:1}NumberType);
end;

procedure TWordDocument.ConvertNumbersToText {Flags(1), (1/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

procedure TWordDocument.ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant);
begin
  DefaultInterface.ConvertNumbersToText {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:1}NumberType);
end;

function  TWordDocument.CountNumberedItems {Flags(1), (3/0) CC:0, INV:1, DBG:3}: Integer;
begin
  Result := DefaultInterface.CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:7}(EmptyParam, 
                                                                                     EmptyParam);
end;

function  TWordDocument.CountNumberedItems {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant): Integer;
begin
  Result := DefaultInterface.CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:1}NumberType, 
                                                                                     EmptyParam);
end;

function  TWordDocument.CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var NumberType: OleVariant; 
                                                                                {VT_12:1}var Level: OleVariant): Integer;
begin
  Result := DefaultInterface.CountNumberedItems {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_12:1}NumberType, 
                                                                                     {VT_12:1}Level);
end;

procedure TWordDocument.Post {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Post {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ToggleFormsDesign {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ToggleFormsDesign {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Compare {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString);
begin
  DefaultInterface.Compare {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Name);
end;

procedure TWordDocument.UpdateSummaryProperties {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.UpdateSummaryProperties {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordDocument.GetCrossReferenceItems {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var ReferenceType: OleVariant): OleVariant;
begin
  Result := DefaultInterface.GetCrossReferenceItems {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:1}ReferenceType);
end;

procedure TWordDocument.AutoFormat {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.AutoFormat {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ViewCode {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ViewCode {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ViewPropertyBrowser {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ViewPropertyBrowser {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ForwardMailer {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ForwardMailer {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.Reply {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Reply {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ReplyAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ReplyAll {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.SendMailer {Flags(1), (2/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.SendMailer {Flags(1), (2/2) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam);
end;

procedure TWordDocument.SendMailer {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var FileFormat: OleVariant);
begin
  DefaultInterface.SendMailer {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_12:1}FileFormat, EmptyParam);
end;

procedure TWordDocument.SendMailer {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_12:1}var FileFormat: OleVariant; 
                                                                        {VT_12:1}var Priority: OleVariant);
begin
  DefaultInterface.SendMailer {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_12:1}FileFormat, 
                                                                   {VT_12:1}Priority);
end;

procedure TWordDocument.UndoClear {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.UndoClear {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.PresentIt {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.PresentIt {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.SendFax {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const Address: WideString);
begin
  DefaultInterface.SendFax {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}Address, EmptyParam);
end;

procedure TWordDocument.SendFax {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const Address: WideString; 
                                                                     {VT_12:1}var Subject: OleVariant);
begin
  DefaultInterface.SendFax {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}Address, {VT_12:1}Subject);
end;

procedure TWordDocument.Merge {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const FileName: WideString);
begin
  DefaultInterface.Merge {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}FileName);
end;

procedure TWordDocument.ClosePrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ClosePrintPreview {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.CheckConsistency {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CheckConsistency {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/23) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/24) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/25) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/26) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant; 
                                                                                   {VT_12:1}var RecipientGender: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        {VT_12:1}RecipientGender, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/27) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant; 
                                                                                   {VT_12:1}var RecipientGender: OleVariant; 
                                                                                   {VT_12:1}var ReturnAddressShortForm: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        {VT_12:1}RecipientGender, 
                                                                                        {VT_12:1}ReturnAddressShortForm, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/28) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant; 
                                                                                   {VT_12:1}var RecipientGender: OleVariant; 
                                                                                   {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                                   {VT_12:1}var SenderCity: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        {VT_12:1}RecipientGender, 
                                                                                        {VT_12:1}ReturnAddressShortForm, 
                                                                                        {VT_12:1}SenderCity, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/29) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant; 
                                                                                   {VT_12:1}var RecipientGender: OleVariant; 
                                                                                   {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                                   {VT_12:1}var SenderCity: OleVariant; 
                                                                                   {VT_12:1}var SenderCode: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        {VT_12:1}RecipientGender, 
                                                                                        {VT_12:1}ReturnAddressShortForm, 
                                                                                        {VT_12:1}SenderCity, 
                                                                                        {VT_12:1}SenderCode, 
                                                                                        EmptyParam, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/30) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant; 
                                                                                   {VT_12:1}var RecipientGender: OleVariant; 
                                                                                   {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                                   {VT_12:1}var SenderCity: OleVariant; 
                                                                                   {VT_12:1}var SenderCode: OleVariant; 
                                                                                   {VT_12:1}var SenderGender: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        {VT_12:1}RecipientGender, 
                                                                                        {VT_12:1}ReturnAddressShortForm, 
                                                                                        {VT_12:1}SenderCity, 
                                                                                        {VT_12:1}SenderCode, 
                                                                                        {VT_12:1}SenderGender, 
                                                                                        EmptyParam);
end;

function  TWordDocument.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:3}({VT_8:0}const DateFormat: WideString; 
                                                                                   {VT_11:0}IncludeHeaderFooter: WordBool; 
                                                                                   {VT_8:0}const PageDesign: WideString; 
                                                                                   {VT_29:0}LetterStyle: WdLetterStyle; 
                                                                                   {VT_11:0}Letterhead: WordBool; 
                                                                                   {VT_29:0}LetterheadLocation: WdLetterheadLocation; 
                                                                                   {VT_4:0}LetterheadSize: Single; 
                                                                                   {VT_8:0}const RecipientName: WideString; 
                                                                                   {VT_8:0}const RecipientAddress: WideString; 
                                                                                   {VT_8:0}const Salutation: WideString; 
                                                                                   {VT_29:0}SalutationType: WdSalutationType; 
                                                                                   {VT_8:0}const RecipientReference: WideString; 
                                                                                   {VT_8:0}const MailingInstructions: WideString; 
                                                                                   {VT_8:0}const AttentionLine: WideString; 
                                                                                   {VT_8:0}const Subject: WideString; 
                                                                                   {VT_8:0}const CCList: WideString; 
                                                                                   {VT_8:0}const ReturnAddress: WideString; 
                                                                                   {VT_8:0}const SenderName: WideString; 
                                                                                   {VT_8:0}const Closing: WideString; 
                                                                                   {VT_8:0}const SenderCompany: WideString; 
                                                                                   {VT_8:0}const SenderJobTitle: WideString; 
                                                                                   {VT_8:0}const SenderInitials: WideString; 
                                                                                   {VT_3:0}EnclosureNumber: Integer; 
                                                                                   {VT_12:1}var InfoBlock: OleVariant; 
                                                                                   {VT_12:1}var RecipientCode: OleVariant; 
                                                                                   {VT_12:1}var RecipientGender: OleVariant; 
                                                                                   {VT_12:1}var ReturnAddressShortForm: OleVariant; 
                                                                                   {VT_12:1}var SenderCity: OleVariant; 
                                                                                   {VT_12:1}var SenderCode: OleVariant; 
                                                                                   {VT_12:1}var SenderGender: OleVariant; 
                                                                                   {VT_12:1}var SenderReference: OleVariant): WordLetterContent;
begin
  Result := DefaultInterface.CreateLetterContent {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}DateFormat, 
                                                                                        {VT_11:0}IncludeHeaderFooter, 
                                                                                        {VT_8:0}PageDesign, 
                                                                                        {VT_29:0}LetterStyle, 
                                                                                        {VT_11:0}Letterhead, 
                                                                                        {VT_29:0}LetterheadLocation, 
                                                                                        {VT_4:0}LetterheadSize, 
                                                                                        {VT_8:0}RecipientName, 
                                                                                        {VT_8:0}RecipientAddress, 
                                                                                        {VT_8:0}Salutation, 
                                                                                        {VT_29:0}SalutationType, 
                                                                                        {VT_8:0}RecipientReference, 
                                                                                        {VT_8:0}MailingInstructions, 
                                                                                        {VT_8:0}AttentionLine, 
                                                                                        {VT_8:0}Subject, 
                                                                                        {VT_8:0}CCList, 
                                                                                        {VT_8:0}ReturnAddress, 
                                                                                        {VT_8:0}SenderName, 
                                                                                        {VT_8:0}Closing, 
                                                                                        {VT_8:0}SenderCompany, 
                                                                                        {VT_8:0}SenderJobTitle, 
                                                                                        {VT_8:0}SenderInitials, 
                                                                                        {VT_3:0}EnclosureNumber, 
                                                                                        {VT_12:1}InfoBlock, 
                                                                                        {VT_12:1}RecipientCode, 
                                                                                        {VT_12:1}RecipientGender, 
                                                                                        {VT_12:1}ReturnAddressShortForm, 
                                                                                        {VT_12:1}SenderCity, 
                                                                                        {VT_12:1}SenderCode, 
                                                                                        {VT_12:1}SenderGender, 
                                                                                        {VT_12:1}SenderReference);
end;

procedure TWordDocument.AcceptAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.AcceptAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.RejectAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.RejectAllRevisions {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.DetectLanguage {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.DetectLanguage {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString);
begin
  DefaultInterface.ApplyTheme {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Name);
end;

procedure TWordDocument.RemoveTheme {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.RemoveTheme {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.WebPagePreview {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.WebPagePreview {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordDocument.ReloadAs {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_29:0}Encoding: MsoEncoding);
begin
  DefaultInterface.ReloadAs {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_29:0}Encoding);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant; 
                                                                       {VT_12:1}var OutputFileName: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant; 
                                                                       {VT_12:1}var OutputFileName: OleVariant; 
                                                                       {VT_12:1}var From: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant; 
                                                                       {VT_12:1}var OutputFileName: OleVariant; 
                                                                       {VT_12:1}var From: OleVariant; 
                                                                       {VT_12:1}var To_: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant; 
                                                                       {VT_12:1}var OutputFileName: OleVariant; 
                                                                       {VT_12:1}var From: OleVariant; 
                                                                       {VT_12:1}var To_: OleVariant; 
                                                                       {VT_12:1}var Item: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant; 
                                                                       {VT_12:1}var OutputFileName: OleVariant; 
                                                                       {VT_12:1}var From: OleVariant; 
                                                                       {VT_12:1}var To_: OleVariant; 
                                                                       {VT_12:1}var Item: OleVariant; 
                                                                       {VT_12:1}var Copies: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                       {VT_12:1}var Append: OleVariant; 
                                                                       {VT_12:1}var Range: OleVariant; 
                                                                       {VT_12:1}var OutputFileName: OleVariant; 
                                                                       {VT_12:1}var From: OleVariant; 
                                                                       {VT_12:1}var To_: OleVariant; 
                                                                       {VT_12:1}var Item: OleVariant; 
                                                                       {VT_12:1}var Copies: OleVariant; 
                                                                       {VT_12:1}var Pages: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant; 
                                                                        {VT_12:1}var ActivePrinterMacGX: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant; 
                                                                        {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                        {VT_12:1}var ManualDuplexPrint: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/15) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant; 
                                                                        {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                        {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                        {VT_12:1}var PrintZoomColumn: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/16) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant; 
                                                                        {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                        {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                        {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                                        {VT_12:1}var PrintZoomRow: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   {VT_12:1}PrintZoomRow, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/17) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant; 
                                                                        {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                        {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                        {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                                        {VT_12:1}var PrintZoomRow: OleVariant; 
                                                                        {VT_12:1}var PrintZoomPaperWidth: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   {VT_12:1}PrintZoomRow, 
                                                                   {VT_12:1}PrintZoomPaperWidth, 
                                                                   EmptyParam);
end;

procedure TWordDocument.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                        {VT_12:1}var Append: OleVariant; 
                                                                        {VT_12:1}var Range: OleVariant; 
                                                                        {VT_12:1}var OutputFileName: OleVariant; 
                                                                        {VT_12:1}var From: OleVariant; 
                                                                        {VT_12:1}var To_: OleVariant; 
                                                                        {VT_12:1}var Item: OleVariant; 
                                                                        {VT_12:1}var Copies: OleVariant; 
                                                                        {VT_12:1}var Pages: OleVariant; 
                                                                        {VT_12:1}var PageType: OleVariant; 
                                                                        {VT_12:1}var PrintToFile: OleVariant; 
                                                                        {VT_12:1}var Collate: OleVariant; 
                                                                        {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                        {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                        {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                                        {VT_12:1}var PrintZoomRow: OleVariant; 
                                                                        {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                                        {VT_12:1}var PrintZoomPaperHeight: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (18/18) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   {VT_12:1}PrintZoomRow, 
                                                                   {VT_12:1}PrintZoomPaperWidth, 
                                                                   {VT_12:1}PrintZoomPaperHeight);
end;

procedure TWordDocument.sblt {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const s: WideString);
begin
  DefaultInterface.sblt {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}s);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TWordDocumentProperties.Create(AServer: TWordDocument);
begin
  inherited Create;
  FServer := AServer;
end;

function TWordDocumentProperties.GetDefaultInterface: _Document;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordDocumentProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordDocumentProperties.Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_BuiltInDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordDocumentProperties.Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CustomDocumentProperties {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Bookmarks;
begin
  Result := DefaultInterface.Get_Bookmarks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tables;
begin
  Result := DefaultInterface.Get_Tables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Footnotes;
begin
  Result := DefaultInterface.Get_Footnotes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Endnotes;
begin
  Result := DefaultInterface.Get_Endnotes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Comments;
begin
  Result := DefaultInterface.Get_Comments {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentType;
begin
  Result := DefaultInterface.Get_Type_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_AutoHyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_AutoHyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HyphenateCaps {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_HyphenateCaps {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HyphenationZone {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocumentProperties.Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_HyphenationZone {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ConsecutiveHyphensLimit {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocumentProperties.Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_ConsecutiveHyphensLimit {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sections;
begin
  Result := DefaultInterface.Get_Sections {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Paragraphs;
begin
  Result := DefaultInterface.Get_Paragraphs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Words;
begin
  Result := DefaultInterface.Get_Words {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Sentences;
begin
  Result := DefaultInterface.Get_Sentences {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Characters;
begin
  Result := DefaultInterface.Get_Characters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Fields;
begin
  Result := DefaultInterface.Get_Fields {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FormFields;
begin
  Result := DefaultInterface.Get_FormFields {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Styles;
begin
  Result := DefaultInterface.Get_Styles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frames;
begin
  Result := DefaultInterface.Get_Frames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfFigures;
begin
  Result := DefaultInterface.Get_TablesOfFigures {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Variables;
begin
  Result := DefaultInterface.Get_Variables {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMerge;
begin
  Result := DefaultInterface.Get_MailMerge {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Envelope;
begin
  Result := DefaultInterface.Get_Envelope {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_FullName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Revisions;
begin
  Result := DefaultInterface.Get_Revisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfContents;
begin
  Result := DefaultInterface.Get_TablesOfContents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthorities;
begin
  Result := DefaultInterface.Get_TablesOfAuthorities {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:3}: PageSetup;
begin
  Result := DefaultInterface.Get_PageSetup {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordDocumentProperties.Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: PageSetup);
begin
  DefaultInterface.Set_PageSetup {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
begin
  Result := DefaultInterface.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasRoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_HasRoutingSlip {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RoutingSlip;
begin
  Result := DefaultInterface.Get_RoutingSlip {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Routed {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TablesOfAuthoritiesCategories;
begin
  Result := DefaultInterface.Get_TablesOfAuthoritiesCategories {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Indexes;
begin
  Result := DefaultInterface.Get_Indexes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Saved {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Saved {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Range;
begin
  Result := DefaultInterface.Get_Content {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
begin
  Result := DefaultInterface.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdDocumentKind;
begin
  Result := DefaultInterface.Get_Kind {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocumentProperties.Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdDocumentKind);
begin
  DefaultInterface.Set_Kind {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ReadOnly {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Subdocuments;
begin
  Result := DefaultInterface.Get_Subdocuments {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsMasterDocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
function  TWordDocumentProperties.Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_DefaultTabStop {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocumentProperties.Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_DefaultTabStop {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_EmbedTrueTypeFonts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_EmbedTrueTypeFonts {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SaveFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SaveFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ReadOnlyRecommended {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ReadOnlyRecommended {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SaveSubsetFonts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SaveSubsetFonts {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Type_: WdCompatibility): WordBool;
begin
  Result := DefaultInterface.Get_Compatibility {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_29:0}Type_);
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_29:0}Type_: WdCompatibility; 
                                                                                         {VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Compatibility {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_29:0}Type_, 
                                                                          {VT_11:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:3}: StoryRanges;
begin
  Result := DefaultInterface.Get_StoryRanges {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IsSubdocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdProtectionType;
begin
  Result := DefaultInterface.Get_ProtectionType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Hyperlinks;
begin
  Result := DefaultInterface.Get_Hyperlinks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shapes;
begin
  Result := DefaultInterface.Get_Shapes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListTemplates;
begin
  Result := DefaultInterface.Get_ListTemplates {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Lists;
begin
  Result := DefaultInterface.Get_Lists {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UpdateStylesOnOpen {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_UpdateStylesOnOpen {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:OleVariant
function  TWordDocumentProperties.Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_AttachedTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TWordDocumentProperties.Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
begin
  DefaultInterface.Set_AttachedTemplate {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:1}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: InlineShapes;
begin
  Result := DefaultInterface.Get_InlineShapes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shape;
begin
  Result := DefaultInterface.Get_Background {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordDocumentProperties.Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Shape);
begin
  DefaultInterface.Set_Background {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_GrammarChecked {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_GrammarChecked {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SpellingChecked {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SpellingChecked {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowGrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowGrammaticalErrors {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowSpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowSpellingErrors {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Versions;
begin
  Result := DefaultInterface.Get_Versions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowSummary {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowSummary {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSummaryMode;
begin
  Result := DefaultInterface.Get_SummaryViewMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocumentProperties.Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSummaryMode);
begin
  DefaultInterface.Set_SummaryViewMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SummaryLength {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocumentProperties.Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SummaryLength {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintFractionalWidths {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintFractionalWidths {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintPostScriptOverText {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintPostScriptOverText {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:IDispatch
function  TWordDocumentProperties.Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Container {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintFormsData {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintFormsData {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListParagraphs;
begin
  Result := DefaultInterface.Get_ListParagraphs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocumentProperties.Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_Password {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WideString
procedure TWordDocumentProperties.Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_WritePassword {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasPassword {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_WriteReserved {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_12:1}var LanguageID: OleVariant): WideString;
begin
  Result := DefaultInterface.Get_ActiveWritingStyle {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_12:1}LanguageID);
end;

// StdProp:WideString
procedure TWordDocumentProperties.Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:3}({VT_12:1}var LanguageID: OleVariant; 
                                                                                              {VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ActiveWritingStyle {Flags(1), (2/2) CC:0, INV:4, DBG:7}({VT_12:1}LanguageID, 
                                                                               {VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_UserControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_HasMailer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_HasMailer {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Mailer;
begin
  Result := DefaultInterface.Get_Mailer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ReadabilityStatistics;
begin
  Result := DefaultInterface.Get_ReadabilityStatistics {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
begin
  Result := DefaultInterface.Get_GrammaticalErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ProofreadingErrors;
begin
  Result := DefaultInterface.Get_SpellingErrors {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBProject;
begin
  Result := DefaultInterface.Get_VBProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FormsDesign {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocumentProperties.Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get__CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocumentProperties.Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set__CodeName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_CodeName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SnapToGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SnapToGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SnapToShapes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_SnapToShapes {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:Single
function  TWordDocumentProperties.Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridDistanceHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocumentProperties.Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridDistanceHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordDocumentProperties.Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridDistanceVertical {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocumentProperties.Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridDistanceVertical {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordDocumentProperties.Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridOriginHorizontal {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocumentProperties.Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridOriginHorizontal {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordDocumentProperties.Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_GridOriginVertical {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordDocumentProperties.Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_GridOriginVertical {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_GridSpaceBetweenHorizontalLines {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocumentProperties.Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_GridSpaceBetweenHorizontalLines {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordDocumentProperties.Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_GridSpaceBetweenVerticalLines {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordDocumentProperties.Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_GridSpaceBetweenVerticalLines {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_GridOriginFromMargin {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_GridOriginFromMargin {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_KerningByAlgorithm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_KerningByAlgorithm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdJustificationMode;
begin
  Result := DefaultInterface.Get_JustificationMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocumentProperties.Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdJustificationMode);
begin
  DefaultInterface.Set_JustificationMode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLevel;
begin
  Result := DefaultInterface.Get_FarEastLineBreakLevel {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocumentProperties.Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLevel);
begin
  DefaultInterface.Set_FarEastLineBreakLevel {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NoLineBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocumentProperties.Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NoLineBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NoLineBreakAfter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordDocumentProperties.Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NoLineBreakAfter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_TrackRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_TrackRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowRevisions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowRevisions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActiveTheme {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordDocumentProperties.Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActiveThemeDisplayName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Email;
begin
  Result := DefaultInterface.Get_Email {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Scripts;
begin
  Result := DefaultInterface.Get_Scripts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_LanguageDetected {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_LanguageDetected {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdFarEastLineBreakLanguageID;
begin
  Result := DefaultInterface.Get_FarEastLineBreakLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocumentProperties.Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdFarEastLineBreakLanguageID);
begin
  DefaultInterface.Set_FarEastLineBreakLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Frameset;
begin
  Result := DefaultInterface.Get_Frameset {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TWordDocumentProperties.Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_ClickAndTypeParagraphStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TWordDocumentProperties.Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
begin
  DefaultInterface.Set_ClickAndTypeParagraphStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:1}prop);
end;

// StdProp:
function  TWordDocumentProperties.Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HTMLProject;
begin
  Result := DefaultInterface.Get_HTMLProject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordDocumentProperties.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WebOptions;
begin
  Result := DefaultInterface.Get_WebOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_OpenEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordDocumentProperties.Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoEncoding;
begin
  Result := DefaultInterface.Get_SaveEncoding {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordDocumentProperties.Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoEncoding);
begin
  DefaultInterface.Set_SaveEncoding {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_OptimizeForWord97 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordDocumentProperties.Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_OptimizeForWord97 {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordDocumentProperties.Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_VBASigned {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

{$ENDIF}

class function CoWordFont.Create: _Font;
begin
  Result := CreateComObject(CLASS_WordFont) as _Font;
end;

class function CoWordFont.CreateRemote(const MachineName: string): _Font;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordFont) as _Font;
end;

procedure TWordFont.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{000209F5-0000-0000-C000-000000000046}';
    IntfIID:   '{00020952-0000-0000-C000-000000000046}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TWordFont.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _Font;
  end;
end;

procedure TWordFont.ConnectTo(svrIntf: _Font);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TWordFont.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TWordFont.GetDefaultInterface: _Font;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TWordFont.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TWordFontProperties.Create(Self);
{$ENDIF}
end;

destructor TWordFont.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TWordFont.GetServerProperties: TWordFontProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TWordFont.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordFont.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordFont.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordFont.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordFont;
begin
  Result := DefaultInterface.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordFont.Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
begin
  Result := DefaultInterface.Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
begin
  DefaultInterface.Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdUnderline;
begin
  Result := DefaultInterface.Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdUnderline);
begin
  DefaultInterface.Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordFont.Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFont.Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WideString
function  TWordFont.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFont.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordFont.Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFont.Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordFont.Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFont.Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAnimation;
begin
  Result := DefaultInterface.Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAnimation);
begin
  DefaultInterface.Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:
function  TWordFont.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
begin
  Result := DefaultInterface.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordFont.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
begin
  DefaultInterface.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordFont.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
begin
  Result := DefaultInterface.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordFont.Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEmphasisMark;
begin
  Result := DefaultInterface.Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEmphasisMark);
begin
  DefaultInterface.Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordFont.Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordFont.Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordFont.Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFont.Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordFont.Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFont.Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordFont.Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFont.Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
begin
  Result := DefaultInterface.Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
begin
  DefaultInterface.Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFont.Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFont.Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordFont.Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFont.Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WideString
function  TWordFont.Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFont.Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
begin
  Result := DefaultInterface.Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
begin
  DefaultInterface.Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
begin
  Result := DefaultInterface.Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
begin
  DefaultInterface.Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:TOleEnum
function  TWordFont.Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
begin
  Result := DefaultInterface.Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFont.Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
begin
  DefaultInterface.Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

procedure TWordFont.Grow {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Grow {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordFont.Shrink {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Shrink {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordFont.Reset {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Reset {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordFont.SetAsTemplateDefault {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.SetAsTemplateDefault {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TWordFontProperties.Create(AServer: TWordFont);
begin
  inherited Create;
  FServer := AServer;
end;

function TWordFontProperties.GetDefaultInterface: _Font;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TWordFontProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordFontProperties.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordFontProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordFontProperties.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordFont;
begin
  Result := DefaultInterface.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordFontProperties.Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Bold {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Bold {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Italic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Italic {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hidden {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Hidden {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SmallCaps {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SmallCaps {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AllCaps {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AllCaps {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_StrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_StrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DoubleStrikeThrough {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_DoubleStrikeThrough {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
begin
  Result := DefaultInterface.Get_ColorIndex {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
begin
  DefaultInterface.Set_ColorIndex {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Subscript {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Subscript {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Superscript {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Superscript {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdUnderline;
begin
  Result := DefaultInterface.Get_Underline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdUnderline);
begin
  DefaultInterface.Set_Underline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordFontProperties.Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_Size {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFontProperties.Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_Size {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WideString
function  TWordFontProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFontProperties.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Name {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Position {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Position {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordFontProperties.Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_Spacing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFontProperties.Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_Spacing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Scaling {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Scaling {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Shadow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Shadow {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Outline {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Outline {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Emboss {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Emboss {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordFontProperties.Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_Kerning {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFontProperties.Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_Kerning {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Engrave {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Engrave {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAnimation;
begin
  Result := DefaultInterface.Get_Animation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAnimation);
begin
  DefaultInterface.Set_Animation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:
function  TWordFontProperties.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
begin
  Result := DefaultInterface.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordFontProperties.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
begin
  DefaultInterface.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordFontProperties.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
begin
  Result := DefaultInterface.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEmphasisMark;
begin
  Result := DefaultInterface.Get_EmphasisMark {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEmphasisMark);
begin
  DefaultInterface.Set_EmphasisMark {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordFontProperties.Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisableCharacterSpaceGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordFontProperties.Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisableCharacterSpaceGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordFontProperties.Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameFarEast {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFontProperties.Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameFarEast {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordFontProperties.Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameAscii {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFontProperties.Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameAscii {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordFontProperties.Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameOther {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFontProperties.Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameOther {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
begin
  Result := DefaultInterface.Get_Color {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
begin
  DefaultInterface.Set_Color {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BoldBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_BoldBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordFontProperties.Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_ItalicBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordFontProperties.Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_ItalicBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordFontProperties.Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_SizeBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordFontProperties.Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_SizeBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WideString
function  TWordFontProperties.Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_NameBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordFontProperties.Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_NameBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColorIndex;
begin
  Result := DefaultInterface.Get_ColorIndexBi {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColorIndex);
begin
  DefaultInterface.Set_ColorIndexBi {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
begin
  Result := DefaultInterface.Get_DiacriticColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
begin
  DefaultInterface.Set_DiacriticColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:TOleEnum
function  TWordFontProperties.Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdColor;
begin
  Result := DefaultInterface.Get_UnderlineColor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordFontProperties.Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdColor);
begin
  DefaultInterface.Set_UnderlineColor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

{$ENDIF}

class function CoWordParagraphFormat.Create: _ParagraphFormat;
begin
  Result := CreateComObject(CLASS_WordParagraphFormat) as _ParagraphFormat;
end;

class function CoWordParagraphFormat.CreateRemote(const MachineName: string): _ParagraphFormat;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordParagraphFormat) as _ParagraphFormat;
end;

procedure TWordParagraphFormat.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{000209F4-0000-0000-C000-000000000046}';
    IntfIID:   '{00020953-0000-0000-C000-000000000046}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TWordParagraphFormat.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _ParagraphFormat;
  end;
end;

procedure TWordParagraphFormat.ConnectTo(svrIntf: _ParagraphFormat);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TWordParagraphFormat.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TWordParagraphFormat.GetDefaultInterface: _ParagraphFormat;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TWordParagraphFormat.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TWordParagraphFormatProperties.Create(Self);
{$ENDIF}
end;

destructor TWordParagraphFormat.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TWordParagraphFormat.GetServerProperties: TWordParagraphFormatProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TWordParagraphFormat.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordParagraphFormat.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordParagraphFormat.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordParagraphFormat;
begin
  Result := DefaultInterface.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TWordParagraphFormat.Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TWordParagraphFormat.Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
begin
  DefaultInterface.Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:1}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormat.Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdParagraphAlignment;
begin
  Result := DefaultInterface.Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormat.Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdParagraphAlignment);
begin
  DefaultInterface.Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormat.Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLineSpacing;
begin
  Result := DefaultInterface.Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormat.Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLineSpacing);
begin
  DefaultInterface.Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormat.Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdBaselineAlignment;
begin
  Result := DefaultInterface.Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormat.Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdBaselineAlignment);
begin
  DefaultInterface.Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:
function  TWordParagraphFormat.Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TabStops;
begin
  Result := DefaultInterface.Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordParagraphFormat.Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: TabStops);
begin
  DefaultInterface.Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordParagraphFormat.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
begin
  Result := DefaultInterface.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordParagraphFormat.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
begin
  DefaultInterface.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordParagraphFormat.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
begin
  Result := DefaultInterface.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordParagraphFormat.Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdOutlineLevel;
begin
  Result := DefaultInterface.Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormat.Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdOutlineLevel);
begin
  DefaultInterface.Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormat.Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormat.Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormat.Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdReadingOrder;
begin
  Result := DefaultInterface.Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormat.Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdReadingOrder);
begin
  DefaultInterface.Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormat.Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormat.Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

procedure TWordParagraphFormat.CloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.CloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.OpenUp {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.OpenUp {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.OpenOrCloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.OpenOrCloseUp {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.TabHangingIndent {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
begin
  DefaultInterface.TabHangingIndent {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_2:0}Count);
end;

procedure TWordParagraphFormat.TabIndent {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
begin
  DefaultInterface.TabIndent {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_2:0}Count);
end;

procedure TWordParagraphFormat.Reset {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Reset {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.Space1 {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Space1 {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.Space15 {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Space15 {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.Space2 {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Space2 {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordParagraphFormat.IndentCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
begin
  DefaultInterface.IndentCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_2:0}Count);
end;

procedure TWordParagraphFormat.IndentFirstLineCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_2:0}Count: Smallint);
begin
  DefaultInterface.IndentFirstLineCharWidth {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_2:0}Count);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TWordParagraphFormatProperties.Create(AServer: TWordParagraphFormat);
begin
  inherited Create;
  FServer := AServer;
end;

function TWordParagraphFormatProperties.GetDefaultInterface: _ParagraphFormat;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TWordParagraphFormatProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordParagraphFormatProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordParagraphFormatProperties.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordParagraphFormat;
begin
  Result := DefaultInterface.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TWordParagraphFormatProperties.Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:3}: OleVariant;
begin
  Result := DefaultInterface.Get_Style {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
procedure TWordParagraphFormatProperties.Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_12:1}var prop: OleVariant);
begin
  DefaultInterface.Set_Style {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_12:1}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormatProperties.Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdParagraphAlignment;
begin
  Result := DefaultInterface.Get_Alignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormatProperties.Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdParagraphAlignment);
begin
  DefaultInterface.Set_Alignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_KeepTogether {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_KeepTogether {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_KeepWithNext {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_KeepWithNext {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_PageBreakBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_PageBreakBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_NoLineNumber {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_NoLineNumber {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_RightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_RightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_FirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_FirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LineSpacing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LineSpacing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormatProperties.Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLineSpacing;
begin
  Result := DefaultInterface.Get_LineSpacingRule {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormatProperties.Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLineSpacing);
begin
  DefaultInterface.Set_LineSpacingRule {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_SpaceBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_SpaceBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_SpaceAfter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_SpaceAfter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Hyphenation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Hyphenation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WidowControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_WidowControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_FarEastLineBreakControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_FarEastLineBreakControl {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_WordWrap {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_WordWrap {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HangingPunctuation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_HangingPunctuation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_HalfWidthPunctuationOnTopOfLine {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AddSpaceBetweenFarEastAndAlpha {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AddSpaceBetweenFarEastAndDigit {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormatProperties.Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdBaselineAlignment;
begin
  Result := DefaultInterface.Get_BaseLineAlignment {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormatProperties.Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdBaselineAlignment);
begin
  DefaultInterface.Set_BaseLineAlignment {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_AutoAdjustRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_AutoAdjustRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_DisableLineHeightGrid {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_DisableLineHeightGrid {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:
function  TWordParagraphFormatProperties.Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:3}: TabStops;
begin
  Result := DefaultInterface.Get_TabStops {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordParagraphFormatProperties.Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: TabStops);
begin
  DefaultInterface.Set_TabStops {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordParagraphFormatProperties.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Borders;
begin
  Result := DefaultInterface.Get_Borders {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
procedure TWordParagraphFormatProperties.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:1}const prop: Borders);
begin
  DefaultInterface.Set_Borders {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:1}prop);
end;

// StdProp:
function  TWordParagraphFormatProperties.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Shading;
begin
  Result := DefaultInterface.Get_Shading {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordParagraphFormatProperties.Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdOutlineLevel;
begin
  Result := DefaultInterface.Get_OutlineLevel {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormatProperties.Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdOutlineLevel);
begin
  DefaultInterface.Set_OutlineLevel {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CharacterUnitRightIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_CharacterUnitRightIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CharacterUnitLeftIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_CharacterUnitLeftIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_CharacterUnitFirstLineIndent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_CharacterUnitFirstLineIndent {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LineUnitBefore {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LineUnitBefore {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:Single
function  TWordParagraphFormatProperties.Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LineUnitAfter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordParagraphFormatProperties.Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LineUnitAfter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:TOleEnum
function  TWordParagraphFormatProperties.Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdReadingOrder;
begin
  Result := DefaultInterface.Get_ReadingOrder {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordParagraphFormatProperties.Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdReadingOrder);
begin
  DefaultInterface.Set_ReadingOrder {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SpaceBeforeAuto {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SpaceBeforeAuto {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordParagraphFormatProperties.Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_SpaceAfterAuto {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordParagraphFormatProperties.Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_SpaceAfterAuto {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

{$ENDIF}

class function CoWordOLEControl.Create: _OLEControl;
begin
  Result := CreateComObject(CLASS_WordOLEControl) as _OLEControl;
end;

class function CoWordOLEControl.CreateRemote(const MachineName: string): _OLEControl;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordOLEControl) as _OLEControl;
end;

class function CoWordLetterContent.Create: _LetterContent;
begin
  Result := CreateComObject(CLASS_WordLetterContent) as _LetterContent;
end;

class function CoWordLetterContent.CreateRemote(const MachineName: string): _LetterContent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordLetterContent) as _LetterContent;
end;

procedure TWordLetterContent.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{000209F1-0000-0000-C000-000000000046}';
    IntfIID:   '{000209A1-0000-0000-C000-000000000046}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TWordLetterContent.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _LetterContent;
  end;
end;

procedure TWordLetterContent.ConnectTo(svrIntf: _LetterContent);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TWordLetterContent.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TWordLetterContent.GetDefaultInterface: _LetterContent;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TWordLetterContent.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TWordLetterContentProperties.Create(Self);
{$ENDIF}
end;

destructor TWordLetterContent.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TWordLetterContent.GetServerProperties: TWordLetterContentProperties;
begin
  Result := FProps;
end;
{$ENDIF}

// StdProp:
function  TWordLetterContent.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordLetterContent.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordLetterContent.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordLetterContent.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordLetterContent;
begin
  Result := DefaultInterface.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordLetterContent.Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordLetterContent.Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordLetterContent.Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContent.Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterStyle;
begin
  Result := DefaultInterface.Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContent.Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterStyle);
begin
  DefaultInterface.Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordLetterContent.Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordLetterContent.Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContent.Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterheadLocation;
begin
  Result := DefaultInterface.Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContent.Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterheadLocation);
begin
  DefaultInterface.Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordLetterContent.Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordLetterContent.Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContent.Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationType;
begin
  Result := DefaultInterface.Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContent.Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationType);
begin
  DefaultInterface.Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:Integer
function  TWordLetterContent.Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordLetterContent.Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordLetterContent.Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordLetterContent.Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContent.Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
begin
  Result := DefaultInterface.Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContent.Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
begin
  DefaultInterface.Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContent.Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
begin
  Result := DefaultInterface.Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContent.Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
begin
  DefaultInterface.Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordLetterContent.Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContent.Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TWordLetterContentProperties.Create(AServer: TWordLetterContent);
begin
  inherited Create;
  FServer := AServer;
end;

function TWordLetterContentProperties.GetDefaultInterface: _LetterContent;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TWordLetterContentProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordLetterContentProperties.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordLetterContentProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordLetterContentProperties.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordLetterContent;
begin
  Result := DefaultInterface.Get_Duplicate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DateFormat {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_DateFormat {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordLetterContentProperties.Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_IncludeHeaderFooter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordLetterContentProperties.Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_IncludeHeaderFooter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PageDesign {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_PageDesign {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContentProperties.Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterStyle;
begin
  Result := DefaultInterface.Get_LetterStyle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContentProperties.Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterStyle);
begin
  DefaultInterface.Set_LetterStyle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordLetterContentProperties.Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Letterhead {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordLetterContentProperties.Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Letterhead {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContentProperties.Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdLetterheadLocation;
begin
  Result := DefaultInterface.Get_LetterheadLocation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContentProperties.Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdLetterheadLocation);
begin
  DefaultInterface.Set_LetterheadLocation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:Single
function  TWordLetterContentProperties.Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Single;
begin
  Result := DefaultInterface.Get_LetterheadSize {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Single
procedure TWordLetterContentProperties.Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_4:0}prop: Single);
begin
  DefaultInterface.Set_LetterheadSize {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_4:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Salutation {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Salutation {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContentProperties.Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationType;
begin
  Result := DefaultInterface.Get_SalutationType {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContentProperties.Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationType);
begin
  DefaultInterface.Set_SalutationType {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientReference {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientReference {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_MailingInstructions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_MailingInstructions {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_AttentionLine {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_AttentionLine {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Subject {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Subject {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:Integer
function  TWordLetterContentProperties.Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_EnclosureNumber {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordLetterContentProperties.Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_EnclosureNumber {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_CCList {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_CCList {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ReturnAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ReturnAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Closing {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Closing {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderCompany {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderCompany {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderJobTitle {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderJobTitle {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderInitials {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderInitials {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordLetterContentProperties.Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_InfoBlock {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordLetterContentProperties.Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_InfoBlock {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_RecipientCode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_RecipientCode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContentProperties.Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
begin
  Result := DefaultInterface.Get_RecipientGender {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContentProperties.Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
begin
  DefaultInterface.Set_RecipientGender {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ReturnAddressShortForm {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ReturnAddressShortForm {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderCity {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderCity {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderCode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderCode {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:TOleEnum
function  TWordLetterContentProperties.Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdSalutationGender;
begin
  Result := DefaultInterface.Get_SenderGender {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordLetterContentProperties.Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdSalutationGender);
begin
  DefaultInterface.Set_SenderGender {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WideString
function  TWordLetterContentProperties.Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_SenderReference {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordLetterContentProperties.Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_SenderReference {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

{$ENDIF}

class function CoWordApplication.Create: _Application;
begin
  Result := CreateComObject(CLASS_WordApplication) as _Application;
end;

class function CoWordApplication.CreateRemote(const MachineName: string): _Application;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordApplication) as _Application;
end;

procedure TWordApplication.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{000209FF-0000-0000-C000-000000000046}';
    IntfIID:   '{00020970-0000-0000-C000-000000000046}';
    EventIID:  '{000209FE-0000-0000-C000-000000000046}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TWordApplication.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _Application;
  end;
end;

procedure TWordApplication.ConnectTo(svrIntf: _Application);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TWordApplication.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    if FAutoQuit then
      Quit();
    FIntf := nil;
  end;
end;

function TWordApplication.GetDefaultInterface: _Application;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TWordApplication.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TWordApplicationProperties.Create(Self);
{$ENDIF}
end;

destructor TWordApplication.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TWordApplication.GetServerProperties: TWordApplicationProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TWordApplication.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   1: if Assigned(FOnStartup) then
            FOnStartup(Self);
   2: if Assigned(FOnQuit) then
            FOnQuit(Self);
   3: if Assigned(FOnDocumentChange) then
            FOnDocumentChange(Self);
   4: if Assigned(FOnDocumentOpen) then
            FOnDocumentOpen(Self, Params[0] {VT_29:1}{const WordDocument});
   6: if Assigned(FOnDocumentBeforeClose) then
            FOnDocumentBeforeClose(Self, Params[0] {VT_29:1}{const WordDocument}, Params[1] {VT_11:1}{var WordBool});
   7: if Assigned(FOnDocumentBeforePrint) then
            FOnDocumentBeforePrint(Self, Params[0] {VT_29:1}{const WordDocument}, Params[1] {VT_11:1}{var WordBool});
   8: if Assigned(FOnDocumentBeforeSave) then
            FOnDocumentBeforeSave(Self, Params[0] {VT_29:1}{const WordDocument}, Params[1] {VT_11:1}{var WordBool}, Params[2] {VT_11:1}{var WordBool});
   9: if Assigned(FOnNewDocument) then
            FOnNewDocument(Self, Params[0] {VT_29:1}{const WordDocument});
   10: if Assigned(FOnWindowActivate) then
            FOnWindowActivate(Self, Params[0] {VT_29:1}{const WordDocument}, Params[1] {VT_29:1}{const Window});
   11: if Assigned(FOnWindowDeactivate) then
            FOnWindowDeactivate(Self, Params[0] {VT_29:1}{const WordDocument}, Params[1] {VT_29:1}{const Window});
   12: if Assigned(FOnWindowSelectionChange) then
            FOnWindowSelectionChange(Self, Params[0] {VT_29:1}{const Selection});
   13: if Assigned(FOnWindowBeforeRightClick) then
            FOnWindowBeforeRightClick(Self, Params[0] {VT_29:1}{const Selection}, Params[1] {VT_11:1}{var WordBool});
   14: if Assigned(FOnWindowBeforeDoubleClick) then
            FOnWindowBeforeDoubleClick(Self, Params[0] {VT_29:1}{const Selection}, Params[1] {VT_11:1}{var WordBool});
  end; {case DispID}
end;

// StdProp:
function  TWordApplication.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplication.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordApplication.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplication.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
begin
  Result := DefaultInterface.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
begin
  Result := DefaultInterface.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
begin
  Result := DefaultInterface.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
begin
  Result := DefaultInterface.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
begin
  Result := DefaultInterface.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordApplication.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
begin
  Result := DefaultInterface.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
begin
  Result := DefaultInterface.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
begin
  Result := DefaultInterface.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
begin
  Result := DefaultInterface.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
begin
  Result := DefaultInterface.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
begin
  Result := DefaultInterface.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Browser;
begin
  Result := DefaultInterface.Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
begin
  Result := DefaultInterface.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailingLabel;
begin
  Result := DefaultInterface.Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
begin
  Result := DefaultInterface.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
begin
  Result := DefaultInterface.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
begin
  Result := DefaultInterface.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
begin
  Result := DefaultInterface.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordApplication.Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordApplication.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplication.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
begin
  Result := DefaultInterface.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordApplication.Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplication.Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplication.Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TWordApplication.Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Index: WdInternationalIndex): OleVariant;
begin
  Result := DefaultInterface.Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_29:0}Index);
end;

// StdProp:WideString
function  TWordApplication.Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplication.Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordApplication.Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordApplication.Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:IDispatch
function  TWordApplication.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplication.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
begin
  Result := DefaultInterface.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}LanguageID);
end;

// StdProp:
function  TWordApplication.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
begin
  Result := DefaultInterface.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplication.Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:
function  TWordApplication.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
begin
  Result := DefaultInterface.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplication.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:
function  TWordApplication.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
begin
  Result := DefaultInterface.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordApplication.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
procedure TWordApplication.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
begin
  DefaultInterface.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_9:0}prop);
end;

// StdProp:
function  TWordApplication.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
begin
  Result := DefaultInterface.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                                {VT_8:0}const Command: WideString; 
                                                                                {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
begin
  Result := DefaultInterface.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:7}({VT_29:0}KeyCategory, 
                                                                                  {VT_8:0}Command, 
                                                                                  {VT_12:1}CommandParameter);
end;

// StdProp:
function  TWordApplication.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                                            {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
begin
  Result := DefaultInterface.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_3:0}KeyCode, 
                                                                              {VT_12:1}KeyCode2);
end;

// StdProp:WideString
function  TWordApplication.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordApplication.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordApplication.Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:Integer
function  TWordApplication.Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplication.Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplication.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplication.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordApplication.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplication.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordApplication.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplication.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordApplication.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplication.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordApplication.Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdWindowState;
begin
  Result := DefaultInterface.Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplication.Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdWindowState);
begin
  DefaultInterface.Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordApplication.Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplication.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
begin
  Result := DefaultInterface.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplication.Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAlertLevel;
begin
  Result := DefaultInterface.Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplication.Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAlertLevel);
begin
  DefaultInterface.Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:
function  TWordApplication.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
begin
  Result := DefaultInterface.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplication.Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WordBool
function  TWordApplication.Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordApplication.Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEnableCancelKey;
begin
  Result := DefaultInterface.Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplication.Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEnableCancelKey);
begin
  DefaultInterface.Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordApplication.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
begin
  Result := DefaultInterface.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplication.Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdMailSystem;
begin
  Result := DefaultInterface.Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplication.Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordApplication.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordApplication.Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplication.Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordApplication.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
begin
  Result := DefaultInterface.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_9:0}Object_);
end;

// StdProp:
function  TWordApplication.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
begin
  Result := DefaultInterface.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMessage;
begin
  Result := DefaultInterface.Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: EmailOptions;
begin
  Result := DefaultInterface.Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplication.Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoLanguageID;
begin
  Result := DefaultInterface.Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
begin
  Result := DefaultInterface.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplication.Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplication.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
begin
  Result := DefaultInterface.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplication.Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplication.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
begin
  Result := DefaultInterface.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplication.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
begin
  Result := DefaultInterface.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplication.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoFeatureInstall);
begin
  DefaultInterface.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

procedure TWordApplication.Quit {Flags(1), (3/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Quit {Flags(1), (3/3) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, EmptyParam);
end;

procedure TWordApplication.Quit {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant);
begin
  DefaultInterface.Quit {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}SaveChanges, EmptyParam, 
                                                             EmptyParam);
end;

procedure TWordApplication.Quit {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                                     {VT_12:1}var OriginalFormat: OleVariant);
begin
  DefaultInterface.Quit {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}SaveChanges, 
                                                             {VT_12:1}OriginalFormat, EmptyParam);
end;

procedure TWordApplication.Quit {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var SaveChanges: OleVariant; 
                                                                     {VT_12:1}var OriginalFormat: OleVariant; 
                                                                     {VT_12:1}var RouteDocument: OleVariant);
begin
  DefaultInterface.Quit {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}SaveChanges, 
                                                             {VT_12:1}OriginalFormat, 
                                                             {VT_12:1}RouteDocument);
end;

procedure TWordApplication.ScreenRefresh {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ScreenRefresh {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant; 
                                                                             {VT_12:1}var OutputFileName: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant; 
                                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                                             {VT_12:1}var From: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant; 
                                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                                             {VT_12:1}var From: OleVariant; 
                                                                             {VT_12:1}var To_: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant; 
                                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                                             {VT_12:1}var From: OleVariant; 
                                                                             {VT_12:1}var To_: OleVariant; 
                                                                             {VT_12:1}var Item: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant; 
                                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                                             {VT_12:1}var From: OleVariant; 
                                                                             {VT_12:1}var To_: OleVariant; 
                                                                             {VT_12:1}var Item: OleVariant; 
                                                                             {VT_12:1}var Copies: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                             {VT_12:1}var Append: OleVariant; 
                                                                             {VT_12:1}var Range: OleVariant; 
                                                                             {VT_12:1}var OutputFileName: OleVariant; 
                                                                             {VT_12:1}var From: OleVariant; 
                                                                             {VT_12:1}var To_: OleVariant; 
                                                                             {VT_12:1}var Item: OleVariant; 
                                                                             {VT_12:1}var Copies: OleVariant; 
                                                                             {VT_12:1}var Pages: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                              {VT_12:1}var Append: OleVariant; 
                                                                              {VT_12:1}var Range: OleVariant; 
                                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                                              {VT_12:1}var From: OleVariant; 
                                                                              {VT_12:1}var To_: OleVariant; 
                                                                              {VT_12:1}var Item: OleVariant; 
                                                                              {VT_12:1}var Copies: OleVariant; 
                                                                              {VT_12:1}var Pages: OleVariant; 
                                                                              {VT_12:1}var PageType: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                              {VT_12:1}var Append: OleVariant; 
                                                                              {VT_12:1}var Range: OleVariant; 
                                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                                              {VT_12:1}var From: OleVariant; 
                                                                              {VT_12:1}var To_: OleVariant; 
                                                                              {VT_12:1}var Item: OleVariant; 
                                                                              {VT_12:1}var Copies: OleVariant; 
                                                                              {VT_12:1}var Pages: OleVariant; 
                                                                              {VT_12:1}var PageType: OleVariant; 
                                                                              {VT_12:1}var PrintToFile: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      EmptyParam, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                              {VT_12:1}var Append: OleVariant; 
                                                                              {VT_12:1}var Range: OleVariant; 
                                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                                              {VT_12:1}var From: OleVariant; 
                                                                              {VT_12:1}var To_: OleVariant; 
                                                                              {VT_12:1}var Item: OleVariant; 
                                                                              {VT_12:1}var Copies: OleVariant; 
                                                                              {VT_12:1}var Pages: OleVariant; 
                                                                              {VT_12:1}var PageType: OleVariant; 
                                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                                              {VT_12:1}var Collate: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, EmptyParam, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                              {VT_12:1}var Append: OleVariant; 
                                                                              {VT_12:1}var Range: OleVariant; 
                                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                                              {VT_12:1}var From: OleVariant; 
                                                                              {VT_12:1}var To_: OleVariant; 
                                                                              {VT_12:1}var Item: OleVariant; 
                                                                              {VT_12:1}var Copies: OleVariant; 
                                                                              {VT_12:1}var Pages: OleVariant; 
                                                                              {VT_12:1}var PageType: OleVariant; 
                                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                                              {VT_12:1}var Collate: OleVariant; 
                                                                              {VT_12:1}var FileName: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, 
                                                                      {VT_12:1}FileName, 
                                                                      EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                              {VT_12:1}var Append: OleVariant; 
                                                                              {VT_12:1}var Range: OleVariant; 
                                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                                              {VT_12:1}var From: OleVariant; 
                                                                              {VT_12:1}var To_: OleVariant; 
                                                                              {VT_12:1}var Item: OleVariant; 
                                                                              {VT_12:1}var Copies: OleVariant; 
                                                                              {VT_12:1}var Pages: OleVariant; 
                                                                              {VT_12:1}var PageType: OleVariant; 
                                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                                              {VT_12:1}var Collate: OleVariant; 
                                                                              {VT_12:1}var FileName: OleVariant; 
                                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, 
                                                                      {VT_12:1}FileName, 
                                                                      {VT_12:1}ActivePrinterMacGX, 
                                                                      EmptyParam);
end;

procedure TWordApplication.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                              {VT_12:1}var Append: OleVariant; 
                                                                              {VT_12:1}var Range: OleVariant; 
                                                                              {VT_12:1}var OutputFileName: OleVariant; 
                                                                              {VT_12:1}var From: OleVariant; 
                                                                              {VT_12:1}var To_: OleVariant; 
                                                                              {VT_12:1}var Item: OleVariant; 
                                                                              {VT_12:1}var Copies: OleVariant; 
                                                                              {VT_12:1}var Pages: OleVariant; 
                                                                              {VT_12:1}var PageType: OleVariant; 
                                                                              {VT_12:1}var PrintToFile: OleVariant; 
                                                                              {VT_12:1}var Collate: OleVariant; 
                                                                              {VT_12:1}var FileName: OleVariant; 
                                                                              {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                              {VT_12:1}var ManualDuplexPrint: OleVariant);
begin
  DefaultInterface.PrintOutOld {Flags(1), (15/15) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                      {VT_12:1}Append, 
                                                                      {VT_12:1}Range, 
                                                                      {VT_12:1}OutputFileName, 
                                                                      {VT_12:1}From, {VT_12:1}To_, 
                                                                      {VT_12:1}Item, 
                                                                      {VT_12:1}Copies, 
                                                                      {VT_12:1}Pages, 
                                                                      {VT_12:1}PageType, 
                                                                      {VT_12:1}PrintToFile, 
                                                                      {VT_12:1}Collate, 
                                                                      {VT_12:1}FileName, 
                                                                      {VT_12:1}ActivePrinterMacGX, 
                                                                      {VT_12:1}ManualDuplexPrint);
end;

procedure TWordApplication.LookupNameProperties {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString);
begin
  DefaultInterface.LookupNameProperties {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Name);
end;

procedure TWordApplication.SubstituteFont {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const UnavailableFont: WideString; 
                                                                               {VT_8:0}const SubstituteFont: WideString);
begin
  DefaultInterface.SubstituteFont {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}UnavailableFont, 
                                                                       {VT_8:0}SubstituteFont);
end;

function  TWordApplication.Repeat_ {Flags(1), (2/0) CC:0, INV:1, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:7}(EmptyParam);
end;

function  TWordApplication.Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_12:1}var Times: OleVariant): WordBool;
begin
  Result := DefaultInterface.Repeat_ {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_12:1}Times);
end;

procedure TWordApplication.DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                                           {VT_8:0}const Command: WideString);
begin
  DefaultInterface.DDEExecute {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_3:0}Channel, {VT_8:0}Command);
end;

function  TWordApplication.DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_8:0}const App: WideString; 
                                                                            {VT_8:0}const Topic: WideString): Integer;
begin
  Result := DefaultInterface.DDEInitiate {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_8:0}App, 
                                                                              {VT_8:0}Topic);
end;

procedure TWordApplication.DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                                        {VT_8:0}const Item: WideString; 
                                                                        {VT_8:0}const Data: WideString);
begin
  DefaultInterface.DDEPoke {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_3:0}Channel, {VT_8:0}Item, 
                                                                {VT_8:0}Data);
end;

function  TWordApplication.DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer; 
                                                                           {VT_8:0}const Item: WideString): WideString;
begin
  Result := DefaultInterface.DDERequest {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}Channel, 
                                                                             {VT_8:0}Item);
end;

procedure TWordApplication.DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_3:0}Channel: Integer);
begin
  DefaultInterface.DDETerminate {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_3:0}Channel);
end;

procedure TWordApplication.DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.DDETerminateAll {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.BuildKeyCode {Flags(1), (5/1) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               EmptyParam, 
                                                                               EmptyParam, 
                                                                               EmptyParam);
end;

function  TWordApplication.BuildKeyCode {Flags(1), (5/2) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                             {VT_12:1}var Arg2: OleVariant): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               {VT_12:1}Arg2, 
                                                                               EmptyParam, 
                                                                               EmptyParam);
end;

function  TWordApplication.BuildKeyCode {Flags(1), (5/3) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                             {VT_12:1}var Arg2: OleVariant; 
                                                                             {VT_12:1}var Arg3: OleVariant): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               {VT_12:1}Arg2, 
                                                                               {VT_12:1}Arg3, 
                                                                               EmptyParam);
end;

function  TWordApplication.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:3}({VT_29:0}Arg1: WdKey; 
                                                                             {VT_12:1}var Arg2: OleVariant; 
                                                                             {VT_12:1}var Arg3: OleVariant; 
                                                                             {VT_12:1}var Arg4: OleVariant): Integer;
begin
  Result := DefaultInterface.BuildKeyCode {Flags(1), (5/4) CC:0, INV:1, DBG:7}({VT_29:0}Arg1, 
                                                                               {VT_12:1}Arg2, 
                                                                               {VT_12:1}Arg3, 
                                                                               {VT_12:1}Arg4);
end;

function  TWordApplication.KeyString {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer): WideString;
begin
  Result := DefaultInterface.KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}KeyCode, 
                                                                            EmptyParam);
end;

function  TWordApplication.KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                                          {VT_12:1}var KeyCode2: OleVariant): WideString;
begin
  Result := DefaultInterface.KeyString {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_3:0}KeyCode, 
                                                                            {VT_12:1}KeyCode2);
end;

procedure TWordApplication.OrganizerCopy {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_8:0}const Source: WideString; 
                                                                              {VT_8:0}const Destination: WideString; 
                                                                              {VT_8:0}const Name: WideString; 
                                                                              {VT_29:0}Object_: WdOrganizerObject);
begin
  DefaultInterface.OrganizerCopy {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_8:0}Source, 
                                                                      {VT_8:0}Destination, 
                                                                      {VT_8:0}Name, {VT_29:0}Object_);
end;

procedure TWordApplication.OrganizerDelete {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_8:0}const Source: WideString; 
                                                                                {VT_8:0}const Name: WideString; 
                                                                                {VT_29:0}Object_: WdOrganizerObject);
begin
  DefaultInterface.OrganizerDelete {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_8:0}Source, 
                                                                        {VT_8:0}Name, 
                                                                        {VT_29:0}Object_);
end;

procedure TWordApplication.OrganizerRename {Flags(1), (4/4) CC:0, INV:1, DBG:3}({VT_8:0}const Source: WideString; 
                                                                                {VT_8:0}const Name: WideString; 
                                                                                {VT_8:0}const NewName: WideString; 
                                                                                {VT_29:0}Object_: WdOrganizerObject);
begin
  DefaultInterface.OrganizerRename {Flags(1), (4/4) CC:0, INV:1, DBG:7}({VT_8:0}Source, 
                                                                        {VT_8:0}Name, 
                                                                        {VT_8:0}NewName, 
                                                                        {VT_29:0}Object_);
end;

procedure TWordApplication.AddAddress {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_27:1}var TagID: PSafeArray; 
                                                                           {VT_27:1}var Value: PSafeArray);
begin
  DefaultInterface.AddAddress {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_27:1}TagID, {VT_27:1}Value);
end;

function  TWordApplication.GetAddress {Flags(1), (9/0) CC:0, INV:1, DBG:3}: WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}(EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/1) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/2) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/3) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant; 
                                                                           {VT_12:1}var UseAutoText: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             {VT_12:1}UseAutoText, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/4) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant; 
                                                                           {VT_12:1}var UseAutoText: OleVariant; 
                                                                           {VT_12:1}var DisplaySelectDialog: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             {VT_12:1}UseAutoText, 
                                                                             {VT_12:1}DisplaySelectDialog, 
                                                                             EmptyParam, 
                                                                             EmptyParam, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/5) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant; 
                                                                           {VT_12:1}var UseAutoText: OleVariant; 
                                                                           {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                                           {VT_12:1}var SelectDialog: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             {VT_12:1}UseAutoText, 
                                                                             {VT_12:1}DisplaySelectDialog, 
                                                                             {VT_12:1}SelectDialog, 
                                                                             EmptyParam, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/6) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant; 
                                                                           {VT_12:1}var UseAutoText: OleVariant; 
                                                                           {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                                           {VT_12:1}var SelectDialog: OleVariant; 
                                                                           {VT_12:1}var CheckNamesDialog: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             {VT_12:1}UseAutoText, 
                                                                             {VT_12:1}DisplaySelectDialog, 
                                                                             {VT_12:1}SelectDialog, 
                                                                             {VT_12:1}CheckNamesDialog, 
                                                                             EmptyParam, EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/7) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant; 
                                                                           {VT_12:1}var UseAutoText: OleVariant; 
                                                                           {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                                           {VT_12:1}var SelectDialog: OleVariant; 
                                                                           {VT_12:1}var CheckNamesDialog: OleVariant; 
                                                                           {VT_12:1}var RecentAddressesChoice: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             {VT_12:1}UseAutoText, 
                                                                             {VT_12:1}DisplaySelectDialog, 
                                                                             {VT_12:1}SelectDialog, 
                                                                             {VT_12:1}CheckNamesDialog, 
                                                                             {VT_12:1}RecentAddressesChoice, 
                                                                             EmptyParam);
end;

function  TWordApplication.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:3}({VT_12:1}var Name: OleVariant; 
                                                                           {VT_12:1}var AddressProperties: OleVariant; 
                                                                           {VT_12:1}var UseAutoText: OleVariant; 
                                                                           {VT_12:1}var DisplaySelectDialog: OleVariant; 
                                                                           {VT_12:1}var SelectDialog: OleVariant; 
                                                                           {VT_12:1}var CheckNamesDialog: OleVariant; 
                                                                           {VT_12:1}var RecentAddressesChoice: OleVariant; 
                                                                           {VT_12:1}var UpdateRecentAddresses: OleVariant): WideString;
begin
  Result := DefaultInterface.GetAddress {Flags(1), (9/8) CC:0, INV:1, DBG:7}({VT_12:1}Name, 
                                                                             {VT_12:1}AddressProperties, 
                                                                             {VT_12:1}UseAutoText, 
                                                                             {VT_12:1}DisplaySelectDialog, 
                                                                             {VT_12:1}SelectDialog, 
                                                                             {VT_12:1}CheckNamesDialog, 
                                                                             {VT_12:1}RecentAddressesChoice, 
                                                                             {VT_12:1}UpdateRecentAddresses);
end;

function  TWordApplication.CheckGrammar {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const String_: WideString): WordBool;
begin
  Result := DefaultInterface.CheckGrammar {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}String_);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                               {VT_12:1}var MainDictionary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                               {VT_12:1}var MainDictionary: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary2: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                               {VT_12:1}var MainDictionary: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary3: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                               {VT_12:1}var MainDictionary: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary4: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                               {VT_12:1}var MainDictionary: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary5: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                               {VT_12:1}var CustomDictionary: OleVariant; 
                                                                               {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                               {VT_12:1}var MainDictionary: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                               {VT_12:1}var CustomDictionary6: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                {VT_12:1}var MainDictionary: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary7: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                {VT_12:1}var MainDictionary: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary8: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  {VT_12:1}CustomDictionary8, 
                                                                                  EmptyParam, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                {VT_12:1}var MainDictionary: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary9: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  {VT_12:1}CustomDictionary8, 
                                                                                  {VT_12:1}CustomDictionary9, 
                                                                                  EmptyParam);
end;

function  TWordApplication.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                {VT_12:1}var MainDictionary: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                                {VT_12:1}var CustomDictionary10: OleVariant): WordBool;
begin
  Result := DefaultInterface.CheckSpelling {Flags(1), (14/13) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}CustomDictionary, 
                                                                                  {VT_12:1}IgnoreUppercase, 
                                                                                  {VT_12:1}MainDictionary, 
                                                                                  {VT_12:1}CustomDictionary2, 
                                                                                  {VT_12:1}CustomDictionary3, 
                                                                                  {VT_12:1}CustomDictionary4, 
                                                                                  {VT_12:1}CustomDictionary5, 
                                                                                  {VT_12:1}CustomDictionary6, 
                                                                                  {VT_12:1}CustomDictionary7, 
                                                                                  {VT_12:1}CustomDictionary8, 
                                                                                  {VT_12:1}CustomDictionary9, 
                                                                                  {VT_12:1}CustomDictionary10);
end;

procedure TWordApplication.ResetIgnoreAll {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ResetIgnoreAll {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/1) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/2) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/3) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/4) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                        {VT_12:1}var MainDictionary: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/5) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                        {VT_12:1}var MainDictionary: OleVariant; 
                                                                                        {VT_12:1}var SuggestionMode: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/6) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                        {VT_12:1}var MainDictionary: OleVariant; 
                                                                                        {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary2: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/7) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                        {VT_12:1}var MainDictionary: OleVariant; 
                                                                                        {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary3: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/8) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                        {VT_12:1}var MainDictionary: OleVariant; 
                                                                                        {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary4: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/9) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                        {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                        {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                        {VT_12:1}var MainDictionary: OleVariant; 
                                                                                        {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                        {VT_12:1}var CustomDictionary5: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/10) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                         {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                         {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                         {VT_12:1}var MainDictionary: OleVariant; 
                                                                                         {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary6: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/11) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                         {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                         {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                         {VT_12:1}var MainDictionary: OleVariant; 
                                                                                         {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary7: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/12) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                         {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                         {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                         {VT_12:1}var MainDictionary: OleVariant; 
                                                                                         {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary8: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           {VT_12:1}CustomDictionary8, 
                                                                                           EmptyParam, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/13) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                         {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                         {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                         {VT_12:1}var MainDictionary: OleVariant; 
                                                                                         {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary9: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           {VT_12:1}CustomDictionary8, 
                                                                                           {VT_12:1}CustomDictionary9, 
                                                                                           EmptyParam);
end;

function  TWordApplication.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                         {VT_12:1}var CustomDictionary: OleVariant; 
                                                                                         {VT_12:1}var IgnoreUppercase: OleVariant; 
                                                                                         {VT_12:1}var MainDictionary: OleVariant; 
                                                                                         {VT_12:1}var SuggestionMode: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary2: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary3: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary4: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary5: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary6: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary7: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary8: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary9: OleVariant; 
                                                                                         {VT_12:1}var CustomDictionary10: OleVariant): SpellingSuggestions;
begin
  Result := DefaultInterface.GetSpellingSuggestions {Flags(1), (15/14) CC:0, INV:1, DBG:7}({VT_8:0}Word, 
                                                                                           {VT_12:1}CustomDictionary, 
                                                                                           {VT_12:1}IgnoreUppercase, 
                                                                                           {VT_12:1}MainDictionary, 
                                                                                           {VT_12:1}SuggestionMode, 
                                                                                           {VT_12:1}CustomDictionary2, 
                                                                                           {VT_12:1}CustomDictionary3, 
                                                                                           {VT_12:1}CustomDictionary4, 
                                                                                           {VT_12:1}CustomDictionary5, 
                                                                                           {VT_12:1}CustomDictionary6, 
                                                                                           {VT_12:1}CustomDictionary7, 
                                                                                           {VT_12:1}CustomDictionary8, 
                                                                                           {VT_12:1}CustomDictionary9, 
                                                                                           {VT_12:1}CustomDictionary10);
end;

procedure TWordApplication.GoBack {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.GoBack {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.Help {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_12:1}var HelpType: OleVariant);
begin
  DefaultInterface.Help {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_12:1}HelpType);
end;

procedure TWordApplication.AutomaticChange {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.AutomaticChange {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.ShowMe {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ShowMe {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.HelpTool {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.HelpTool {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:3}: Window;
begin
  Result := DefaultInterface.NewWindow {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.ListCommands {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_11:0}ListAllCommands: WordBool);
begin
  DefaultInterface.ListCommands {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_11:0}ListAllCommands);
end;

procedure TWordApplication.ShowClipboard {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ShowClipboard {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.OnTime {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_12:1}var When: OleVariant; 
                                                                       {VT_8:0}const Name: WideString);
begin
  DefaultInterface.OnTime {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}When, {VT_8:0}Name, 
                                                               EmptyParam);
end;

procedure TWordApplication.OnTime {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var When: OleVariant; 
                                                                       {VT_8:0}const Name: WideString; 
                                                                       {VT_12:1}var Tolerance: OleVariant);
begin
  DefaultInterface.OnTime {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}When, {VT_8:0}Name, 
                                                               {VT_12:1}Tolerance);
end;

procedure TWordApplication.NextLetter {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.NextLetter {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.MountVolume {Flags(1), (7/3) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                                            {VT_8:0}const Server: WideString; 
                                                                            {VT_8:0}const Volume: WideString): Smallint;
begin
  Result := DefaultInterface.MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:7}({VT_8:0}Zone, 
                                                                              {VT_8:0}Server, 
                                                                              {VT_8:0}Volume, 
                                                                              EmptyParam, 
                                                                              EmptyParam, EmptyParam);
end;

function  TWordApplication.MountVolume {Flags(1), (7/4) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                                            {VT_8:0}const Server: WideString; 
                                                                            {VT_8:0}const Volume: WideString; 
                                                                            {VT_12:1}var User: OleVariant): Smallint;
begin
  Result := DefaultInterface.MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:7}({VT_8:0}Zone, 
                                                                              {VT_8:0}Server, 
                                                                              {VT_8:0}Volume, 
                                                                              {VT_12:1}User, 
                                                                              EmptyParam, EmptyParam);
end;

function  TWordApplication.MountVolume {Flags(1), (7/5) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                                            {VT_8:0}const Server: WideString; 
                                                                            {VT_8:0}const Volume: WideString; 
                                                                            {VT_12:1}var User: OleVariant; 
                                                                            {VT_12:1}var UserPassword: OleVariant): Smallint;
begin
  Result := DefaultInterface.MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:7}({VT_8:0}Zone, 
                                                                              {VT_8:0}Server, 
                                                                              {VT_8:0}Volume, 
                                                                              {VT_12:1}User, 
                                                                              {VT_12:1}UserPassword, 
                                                                              EmptyParam);
end;

function  TWordApplication.MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:3}({VT_8:0}const Zone: WideString; 
                                                                            {VT_8:0}const Server: WideString; 
                                                                            {VT_8:0}const Volume: WideString; 
                                                                            {VT_12:1}var User: OleVariant; 
                                                                            {VT_12:1}var UserPassword: OleVariant; 
                                                                            {VT_12:1}var VolumePassword: OleVariant): Smallint;
begin
  Result := DefaultInterface.MountVolume {Flags(1), (7/6) CC:0, INV:1, DBG:7}({VT_8:0}Zone, 
                                                                              {VT_8:0}Server, 
                                                                              {VT_8:0}Volume, 
                                                                              {VT_12:1}User, 
                                                                              {VT_12:1}UserPassword, 
                                                                              {VT_12:1}VolumePassword);
end;

function  TWordApplication.CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_8:0}const String_: WideString): WideString;
begin
  Result := DefaultInterface.CleanString {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_8:0}String_);
end;

procedure TWordApplication.SendFax {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.SendFax {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const Path: WideString);
begin
  DefaultInterface.ChangeFileOpenDirectory {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}Path);
end;

procedure TWordApplication.RunOld {Flags(1), (1/1) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString);
begin
  DefaultInterface.RunOld {Flags(1), (1/1) CC:0, INV:1, DBG:7}({VT_8:0}MacroName);
end;

procedure TWordApplication.GoForward {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.GoForward {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.Move {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Left: Integer; 
                                                                     {VT_3:0}Top: Integer);
begin
  DefaultInterface.Move {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_3:0}Left, {VT_3:0}Top);
end;

procedure TWordApplication.Resize {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_3:0}Width: Integer; 
                                                                       {VT_3:0}Height: Integer);
begin
  DefaultInterface.Resize {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_3:0}Width, {VT_3:0}Height);
end;

function  TWordApplication.InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Inches: Single): Single;
begin
  Result := DefaultInterface.InchesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Inches);
end;

function  TWordApplication.CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Centimeters: Single): Single;
begin
  Result := DefaultInterface.CentimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Centimeters);
end;

function  TWordApplication.MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Millimeters: Single): Single;
begin
  Result := DefaultInterface.MillimetersToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Millimeters);
end;

function  TWordApplication.PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Picas: Single): Single;
begin
  Result := DefaultInterface.PicasToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Picas);
end;

function  TWordApplication.LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Lines: Single): Single;
begin
  Result := DefaultInterface.LinesToPoints {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Lines);
end;

function  TWordApplication.PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToInches {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordApplication.PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToCentimeters {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordApplication.PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToMillimeters {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordApplication.PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToPicas {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

function  TWordApplication.PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToLines {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_4:0}Points);
end;

procedure TWordApplication.Activate {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.Activate {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.PointsToPixels {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single): Single;
begin
  Result := DefaultInterface.PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Points, 
                                                                                 EmptyParam);
end;

function  TWordApplication.PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Points: Single; 
                                                                               {VT_12:1}var fVertical: OleVariant): Single;
begin
  Result := DefaultInterface.PointsToPixels {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Points, 
                                                                                 {VT_12:1}fVertical);
end;

function  TWordApplication.PixelsToPoints {Flags(1), (3/1) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single): Single;
begin
  Result := DefaultInterface.PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Pixels, 
                                                                                 EmptyParam);
end;

function  TWordApplication.PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:3}({VT_4:0}Pixels: Single; 
                                                                               {VT_12:1}var fVertical: OleVariant): Single;
begin
  Result := DefaultInterface.PixelsToPoints {Flags(1), (3/2) CC:0, INV:1, DBG:7}({VT_4:0}Pixels, 
                                                                                 {VT_12:1}fVertical);
end;

procedure TWordApplication.KeyboardLatin {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.KeyboardLatin {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.KeyboardBidi {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.KeyboardBidi {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.ToggleKeyboard {Flags(1), (0/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.ToggleKeyboard {Flags(1), (0/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.Keyboard {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_3:0}LangId: Integer): Integer;
begin
  Result := DefaultInterface.Keyboard {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_3:0}LangId);
end;

function  TWordApplication.ProductCode {Flags(1), (1/0) CC:0, INV:1, DBG:3}: WideString;
begin
  Result := DefaultInterface.ProductCode {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

function  TWordApplication.DefaultWebOptions {Flags(1), (1/0) CC:0, INV:1, DBG:3}: DefaultWebOptions;
begin
  Result := DefaultInterface.DefaultWebOptions {Flags(1), (1/0) CC:0, INV:1, DBG:7};
end;

procedure TWordApplication.DiscussionSupport {Flags(1), (3/3) CC:0, INV:1, DBG:3}({VT_12:1}var Range: OleVariant; 
                                                                                  {VT_12:1}var cid: OleVariant; 
                                                                                  {VT_12:1}var piCSE: OleVariant);
begin
  DefaultInterface.DiscussionSupport {Flags(1), (3/3) CC:0, INV:1, DBG:7}({VT_12:1}Range, 
                                                                          {VT_12:1}cid, 
                                                                          {VT_12:1}piCSE);
end;

procedure TWordApplication.SetDefaultTheme {Flags(1), (2/2) CC:0, INV:1, DBG:3}({VT_8:0}const Name: WideString; 
                                                                                {VT_29:0}DocumentType: WdDocumentMedium);
begin
  DefaultInterface.SetDefaultTheme {Flags(1), (2/2) CC:0, INV:1, DBG:7}({VT_8:0}Name, 
                                                                        {VT_29:0}DocumentType);
end;

function  TWordApplication.GetDefaultTheme {Flags(1), (2/1) CC:0, INV:1, DBG:3}({VT_29:0}DocumentType: WdDocumentMedium): WideString;
begin
  Result := DefaultInterface.GetDefaultTheme {Flags(1), (2/1) CC:0, INV:1, DBG:7}({VT_29:0}DocumentType);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/0) CC:0, INV:1, DBG:3};
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}(EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/1) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/2) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/3) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/4) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/5) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/6) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/7) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant; 
                                                                          {VT_12:1}var Item: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/8) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant; 
                                                                          {VT_12:1}var Item: OleVariant; 
                                                                          {VT_12:1}var Copies: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/9) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                          {VT_12:1}var Append: OleVariant; 
                                                                          {VT_12:1}var Range: OleVariant; 
                                                                          {VT_12:1}var OutputFileName: OleVariant; 
                                                                          {VT_12:1}var From: OleVariant; 
                                                                          {VT_12:1}var To_: OleVariant; 
                                                                          {VT_12:1}var Item: OleVariant; 
                                                                          {VT_12:1}var Copies: OleVariant; 
                                                                          {VT_12:1}var Pages: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/10) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/11) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/12) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/13) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/14) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/15) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                           {VT_12:1}var ManualDuplexPrint: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/16) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                           {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                           {VT_12:1}var PrintZoomColumn: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   EmptyParam, EmptyParam, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/17) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                           {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                           {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                                           {VT_12:1}var PrintZoomRow: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   {VT_12:1}PrintZoomRow, 
                                                                   EmptyParam, EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/18) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                           {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                           {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                                           {VT_12:1}var PrintZoomRow: OleVariant; 
                                                                           {VT_12:1}var PrintZoomPaperWidth: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   {VT_12:1}PrintZoomRow, 
                                                                   {VT_12:1}PrintZoomPaperWidth, 
                                                                   EmptyParam);
end;

procedure TWordApplication.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:3}({VT_12:1}var Background: OleVariant; 
                                                                           {VT_12:1}var Append: OleVariant; 
                                                                           {VT_12:1}var Range: OleVariant; 
                                                                           {VT_12:1}var OutputFileName: OleVariant; 
                                                                           {VT_12:1}var From: OleVariant; 
                                                                           {VT_12:1}var To_: OleVariant; 
                                                                           {VT_12:1}var Item: OleVariant; 
                                                                           {VT_12:1}var Copies: OleVariant; 
                                                                           {VT_12:1}var Pages: OleVariant; 
                                                                           {VT_12:1}var PageType: OleVariant; 
                                                                           {VT_12:1}var PrintToFile: OleVariant; 
                                                                           {VT_12:1}var Collate: OleVariant; 
                                                                           {VT_12:1}var FileName: OleVariant; 
                                                                           {VT_12:1}var ActivePrinterMacGX: OleVariant; 
                                                                           {VT_12:1}var ManualDuplexPrint: OleVariant; 
                                                                           {VT_12:1}var PrintZoomColumn: OleVariant; 
                                                                           {VT_12:1}var PrintZoomRow: OleVariant; 
                                                                           {VT_12:1}var PrintZoomPaperWidth: OleVariant; 
                                                                           {VT_12:1}var PrintZoomPaperHeight: OleVariant);
begin
  DefaultInterface.PrintOut {Flags(1), (19/19) CC:0, INV:1, DBG:7}({VT_12:1}Background, 
                                                                   {VT_12:1}Append, {VT_12:1}Range, 
                                                                   {VT_12:1}OutputFileName, 
                                                                   {VT_12:1}From, {VT_12:1}To_, 
                                                                   {VT_12:1}Item, {VT_12:1}Copies, 
                                                                   {VT_12:1}Pages, 
                                                                   {VT_12:1}PageType, 
                                                                   {VT_12:1}PrintToFile, 
                                                                   {VT_12:1}Collate, 
                                                                   {VT_12:1}FileName, 
                                                                   {VT_12:1}ActivePrinterMacGX, 
                                                                   {VT_12:1}ManualDuplexPrint, 
                                                                   {VT_12:1}PrintZoomColumn, 
                                                                   {VT_12:1}PrintZoomRow, 
                                                                   {VT_12:1}PrintZoomPaperWidth, 
                                                                   {VT_12:1}PrintZoomPaperHeight);
end;

function  TWordApplication.Run {Flags(1), (32/1) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/2) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/3) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/4) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant; 
                                                                     {VT_12:1}var varg3: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/5) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant; 
                                                                     {VT_12:1}var varg3: OleVariant; 
                                                                     {VT_12:1}var varg4: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/6) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant; 
                                                                     {VT_12:1}var varg3: OleVariant; 
                                                                     {VT_12:1}var varg4: OleVariant; 
                                                                     {VT_12:1}var varg5: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/7) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant; 
                                                                     {VT_12:1}var varg3: OleVariant; 
                                                                     {VT_12:1}var varg4: OleVariant; 
                                                                     {VT_12:1}var varg5: OleVariant; 
                                                                     {VT_12:1}var varg6: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/8) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant; 
                                                                     {VT_12:1}var varg3: OleVariant; 
                                                                     {VT_12:1}var varg4: OleVariant; 
                                                                     {VT_12:1}var varg5: OleVariant; 
                                                                     {VT_12:1}var varg6: OleVariant; 
                                                                     {VT_12:1}var varg7: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/9) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                     {VT_12:1}var varg1: OleVariant; 
                                                                     {VT_12:1}var varg2: OleVariant; 
                                                                     {VT_12:1}var varg3: OleVariant; 
                                                                     {VT_12:1}var varg4: OleVariant; 
                                                                     {VT_12:1}var varg5: OleVariant; 
                                                                     {VT_12:1}var varg6: OleVariant; 
                                                                     {VT_12:1}var varg7: OleVariant; 
                                                                     {VT_12:1}var varg8: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/10) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/11) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/12) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/13) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/14) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/15) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/16) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/17) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/18) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/19) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/20) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/21) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/22) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/23) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/24) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/25) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/26) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant; 
                                                                      {VT_12:1}var varg25: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        {VT_12:1}varg25, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/27) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant; 
                                                                      {VT_12:1}var varg25: OleVariant; 
                                                                      {VT_12:1}var varg26: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        {VT_12:1}varg25, 
                                                                        {VT_12:1}varg26, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/28) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant; 
                                                                      {VT_12:1}var varg25: OleVariant; 
                                                                      {VT_12:1}var varg26: OleVariant; 
                                                                      {VT_12:1}var varg27: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        {VT_12:1}varg25, 
                                                                        {VT_12:1}varg26, 
                                                                        {VT_12:1}varg27, 
                                                                        EmptyParam, EmptyParam, 
                                                                        EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/29) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant; 
                                                                      {VT_12:1}var varg25: OleVariant; 
                                                                      {VT_12:1}var varg26: OleVariant; 
                                                                      {VT_12:1}var varg27: OleVariant; 
                                                                      {VT_12:1}var varg28: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        {VT_12:1}varg25, 
                                                                        {VT_12:1}varg26, 
                                                                        {VT_12:1}varg27, 
                                                                        {VT_12:1}varg28, 
                                                                        EmptyParam, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/30) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant; 
                                                                      {VT_12:1}var varg25: OleVariant; 
                                                                      {VT_12:1}var varg26: OleVariant; 
                                                                      {VT_12:1}var varg27: OleVariant; 
                                                                      {VT_12:1}var varg28: OleVariant; 
                                                                      {VT_12:1}var varg29: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        {VT_12:1}varg25, 
                                                                        {VT_12:1}varg26, 
                                                                        {VT_12:1}varg27, 
                                                                        {VT_12:1}varg28, 
                                                                        {VT_12:1}varg29, EmptyParam);
end;

function  TWordApplication.Run {Flags(1), (32/31) CC:0, INV:1, DBG:3}({VT_8:0}const MacroName: WideString; 
                                                                      {VT_12:1}var varg1: OleVariant; 
                                                                      {VT_12:1}var varg2: OleVariant; 
                                                                      {VT_12:1}var varg3: OleVariant; 
                                                                      {VT_12:1}var varg4: OleVariant; 
                                                                      {VT_12:1}var varg5: OleVariant; 
                                                                      {VT_12:1}var varg6: OleVariant; 
                                                                      {VT_12:1}var varg7: OleVariant; 
                                                                      {VT_12:1}var varg8: OleVariant; 
                                                                      {VT_12:1}var varg9: OleVariant; 
                                                                      {VT_12:1}var varg10: OleVariant; 
                                                                      {VT_12:1}var varg11: OleVariant; 
                                                                      {VT_12:1}var varg12: OleVariant; 
                                                                      {VT_12:1}var varg13: OleVariant; 
                                                                      {VT_12:1}var varg14: OleVariant; 
                                                                      {VT_12:1}var varg15: OleVariant; 
                                                                      {VT_12:1}var varg16: OleVariant; 
                                                                      {VT_12:1}var varg17: OleVariant; 
                                                                      {VT_12:1}var varg18: OleVariant; 
                                                                      {VT_12:1}var varg19: OleVariant; 
                                                                      {VT_12:1}var varg20: OleVariant; 
                                                                      {VT_12:1}var varg21: OleVariant; 
                                                                      {VT_12:1}var varg22: OleVariant; 
                                                                      {VT_12:1}var varg23: OleVariant; 
                                                                      {VT_12:1}var varg24: OleVariant; 
                                                                      {VT_12:1}var varg25: OleVariant; 
                                                                      {VT_12:1}var varg26: OleVariant; 
                                                                      {VT_12:1}var varg27: OleVariant; 
                                                                      {VT_12:1}var varg28: OleVariant; 
                                                                      {VT_12:1}var varg29: OleVariant; 
                                                                      {VT_12:1}var varg30: OleVariant): OleVariant;
begin
  Result := DefaultInterface.Run {Flags(1), (32/31) CC:0, INV:1, DBG:7}({VT_8:0}MacroName, 
                                                                        {VT_12:1}varg1, 
                                                                        {VT_12:1}varg2, 
                                                                        {VT_12:1}varg3, 
                                                                        {VT_12:1}varg4, 
                                                                        {VT_12:1}varg5, 
                                                                        {VT_12:1}varg6, 
                                                                        {VT_12:1}varg7, 
                                                                        {VT_12:1}varg8, 
                                                                        {VT_12:1}varg9, 
                                                                        {VT_12:1}varg10, 
                                                                        {VT_12:1}varg11, 
                                                                        {VT_12:1}varg12, 
                                                                        {VT_12:1}varg13, 
                                                                        {VT_12:1}varg14, 
                                                                        {VT_12:1}varg15, 
                                                                        {VT_12:1}varg16, 
                                                                        {VT_12:1}varg17, 
                                                                        {VT_12:1}varg18, 
                                                                        {VT_12:1}varg19, 
                                                                        {VT_12:1}varg20, 
                                                                        {VT_12:1}varg21, 
                                                                        {VT_12:1}varg22, 
                                                                        {VT_12:1}varg23, 
                                                                        {VT_12:1}varg24, 
                                                                        {VT_12:1}varg25, 
                                                                        {VT_12:1}varg26, 
                                                                        {VT_12:1}varg27, 
                                                                        {VT_12:1}varg28, 
                                                                        {VT_12:1}varg29, 
                                                                        {VT_12:1}varg30);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TWordApplicationProperties.Create(AServer: TWordApplication);
begin
  inherited Create;
  FServer := AServer;
end;

function TWordApplicationProperties.GetDefaultInterface: _Application;
begin
  Result := FServer.DefaultInterface;
end;

// StdProp:
function  TWordApplicationProperties.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordApplication;
begin
  Result := DefaultInterface.Get_Application {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Creator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordApplicationProperties.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_Parent {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Name {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Documents;
begin
  Result := DefaultInterface.Get_Documents {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Windows;
begin
  Result := DefaultInterface.Get_Windows {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordDocument;
begin
  Result := DefaultInterface.Get_ActiveDocument {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Window;
begin
  Result := DefaultInterface.Get_ActiveWindow {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Selection;
begin
  Result := DefaultInterface.Get_Selection {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordApplicationProperties.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_WordBasic {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: RecentFiles;
begin
  Result := DefaultInterface.Get_RecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Template;
begin
  Result := DefaultInterface.Get_NormalTemplate {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:3}: System;
begin
  Result := DefaultInterface.Get_System_ {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCorrect;
begin
  Result := DefaultInterface.Get_AutoCorrect {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_FontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_LandscapeFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FontNames;
begin
  Result := DefaultInterface.Get_PortraitFontNames {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Languages;
begin
  Result := DefaultInterface.Get_Languages {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Assistant;
begin
  Result := DefaultInterface.Get_Assistant {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Browser;
begin
  Result := DefaultInterface.Get_Browser {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileConverters;
begin
  Result := DefaultInterface.Get_FileConverters {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailingLabel;
begin
  Result := DefaultInterface.Get_MailingLabel {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dialogs;
begin
  Result := DefaultInterface.Get_Dialogs {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CaptionLabels;
begin
  Result := DefaultInterface.Get_CaptionLabels {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AutoCaptions;
begin
  Result := DefaultInterface.Get_AutoCaptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AddIns;
begin
  Result := DefaultInterface.Get_AddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Visible {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_Visible {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Version {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ScreenUpdating {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ScreenUpdating {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_PrintPreview {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_PrintPreview {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Tasks;
begin
  Result := DefaultInterface.Get_Tasks {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayStatusBar {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayStatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_SpecialMode {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_UsableWidth {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_UsableHeight {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MathCoprocessorAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MouseAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:OleVariant
function  TWordApplicationProperties.Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_29:0}Index: WdInternationalIndex): OleVariant;
begin
  Result := DefaultInterface.Get_International {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_29:0}Index);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Build {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CapsLock {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_NumLock {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UserName {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_UserName {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UserInitials {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_UserInitials {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_UserAddress {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_UserAddress {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:IDispatch
function  TWordApplicationProperties.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_MacroContainer {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayRecentFiles {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayRecentFiles {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: CommandBars;
begin
  Result := DefaultInterface.Get_CommandBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_8:0}const Word: WideString; 
                                                                                          {VT_12:1}var LanguageID: OleVariant): SynonymInfo;
begin
  Result := DefaultInterface.Get_SynonymInfo {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_8:0}Word, 
                                                                                  {VT_12:1}LanguageID);
end;

// StdProp:
function  TWordApplicationProperties.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:3}: VBE;
begin
  Result := DefaultInterface.Get_VBE {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DefaultSaveFormat {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_DefaultSaveFormat {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: ListGalleries;
begin
  Result := DefaultInterface.Get_ListGalleries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_ActivePrinter {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_ActivePrinter {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Templates;
begin
  Result := DefaultInterface.Get_Templates {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
function  TWordApplicationProperties.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:3}: IDispatch;
begin
  Result := DefaultInterface.Get_CustomizationContext {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:IDispatch
procedure TWordApplicationProperties.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_9:0}const prop: IDispatch);
begin
  DefaultInterface.Set_CustomizationContext {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_9:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: KeyBindings;
begin
  Result := DefaultInterface.Get_KeyBindings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:3}({VT_29:0}KeyCategory: WdKeyCategory; 
                                                                                          {VT_8:0}const Command: WideString; 
                                                                                          {VT_12:1}var CommandParameter: OleVariant): KeysBoundTo;
begin
  Result := DefaultInterface.Get_KeysBoundTo {Flags(1), (4/3) CC:0, INV:2, DBG:7}({VT_29:0}KeyCategory, 
                                                                                  {VT_8:0}Command, 
                                                                                  {VT_12:1}CommandParameter);
end;

// StdProp:
function  TWordApplicationProperties.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:3}({VT_3:0}KeyCode: Integer; 
                                                                                      {VT_12:1}var KeyCode2: OleVariant): KeyBinding;
begin
  Result := DefaultInterface.Get_FindKey {Flags(1), (3/2) CC:0, INV:2, DBG:7}({VT_3:0}KeyCode, 
                                                                              {VT_12:1}KeyCode2);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Caption {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_Caption {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_Path {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayScrollBars {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayScrollBars {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_StartupPath {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_StartupPath {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BackgroundSavingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_BackgroundPrintingStatus {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Left {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplicationProperties.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Left {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Top {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplicationProperties.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Top {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Width {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplicationProperties.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Width {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:Integer
function  TWordApplicationProperties.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Integer;
begin
  Result := DefaultInterface.Get_Height {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:Integer
procedure TWordApplicationProperties.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_3:0}prop: Integer);
begin
  DefaultInterface.Set_Height {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_3:0}prop);
end;

// StdProp:TOleEnum
function  TWordApplicationProperties.Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdWindowState;
begin
  Result := DefaultInterface.Get_WindowState {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplicationProperties.Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdWindowState);
begin
  DefaultInterface.Set_WindowState {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayAutoCompleteTips {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayAutoCompleteTips {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Options;
begin
  Result := DefaultInterface.Get_Options {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplicationProperties.Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdAlertLevel;
begin
  Result := DefaultInterface.Get_DisplayAlerts {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplicationProperties.Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdAlertLevel);
begin
  DefaultInterface.Set_DisplayAlerts {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: Dictionaries;
begin
  Result := DefaultInterface.Get_CustomDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_PathSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const Param1: WideString);
begin
  DefaultInterface.Set_StatusBar {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}Param1);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_MAPIAvailable {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_DisplayScreenTips {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_DisplayScreenTips {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:TOleEnum
function  TWordApplicationProperties.Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdEnableCancelKey;
begin
  Result := DefaultInterface.Get_EnableCancelKey {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplicationProperties.Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: WdEnableCancelKey);
begin
  DefaultInterface.Set_EnableCancelKey {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_UserControl {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:3}: FileSearch;
begin
  Result := DefaultInterface.Get_FileSearch {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplicationProperties.Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WdMailSystem;
begin
  Result := DefaultInterface.Get_MailSystem {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_DefaultTableSeparator {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_DefaultTableSeparator {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_ShowVisualBasicEditor {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_ShowVisualBasicEditor {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:WideString
function  TWordApplicationProperties.Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WideString;
begin
  Result := DefaultInterface.Get_BrowseExtraFileTypes {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WideString
procedure TWordApplicationProperties.Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_8:0}const prop: WideString);
begin
  DefaultInterface.Set_BrowseExtraFileTypes {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_8:0}prop);
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:3}({VT_9:0}const Object_: IDispatch): WordBool;
begin
  Result := DefaultInterface.Get_IsObjectValid {Flags(1), (2/1) CC:0, INV:2, DBG:7}({VT_9:0}Object_);
end;

// StdProp:
function  TWordApplicationProperties.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:3}: HangulHanjaConversionDictionaries;
begin
  Result := DefaultInterface.Get_HangulHanjaDictionaries {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MailMessage;
begin
  Result := DefaultInterface.Get_MailMessage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_FocusInMailHeader {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:3}: EmailOptions;
begin
  Result := DefaultInterface.Get_EmailOptions {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplicationProperties.Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoLanguageID;
begin
  Result := DefaultInterface.Get_Language {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:3}: COMAddIns;
begin
  Result := DefaultInterface.Get_COMAddIns {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_CheckLanguage {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
procedure TWordApplicationProperties.Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_11:0}prop: WordBool);
begin
  DefaultInterface.Set_CheckLanguage {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_11:0}prop);
end;

// StdProp:
function  TWordApplicationProperties.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:3}: LanguageSettings;
begin
  Result := DefaultInterface.Get_LanguageSettings {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:WordBool
function  TWordApplicationProperties.Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:3}: WordBool;
begin
  Result := DefaultInterface.Get_Dummy1 {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:
function  TWordApplicationProperties.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:3}: AnswerWizard;
begin
  Result := DefaultInterface.Get_AnswerWizard {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
function  TWordApplicationProperties.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:3}: MsoFeatureInstall;
begin
  Result := DefaultInterface.Get_FeatureInstall {Flags(1), (1/0) CC:0, INV:2, DBG:7};
end;

// StdProp:TOleEnum
procedure TWordApplicationProperties.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:3}({VT_29:0}prop: MsoFeatureInstall);
begin
  DefaultInterface.Set_FeatureInstall {Flags(1), (1/1) CC:0, INV:4, DBG:7}({VT_29:0}prop);
end;

{$ENDIF}

procedure Register;
begin
  RegisterComponents('Servers',[TWordGlobal, TWordDocument, TWordFont, TWordParagraphFormat, 
    TWordLetterContent, TWordApplication]);
end;

end.
